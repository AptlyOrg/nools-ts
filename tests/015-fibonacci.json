{"name":"e93f5af6-705f-4b94-bc04-ccc9bebaffb4","root":{"nodes":[{"type":"terminal","out_nodes":[],"__id":0,"parentNodes":[1],"index":0,"rule":{"name":"Calculate","pattern":{"type":"composite","id":7,"leftPattern":{"type":"composite","id":6,"leftPattern":{"type":"composite","id":5,"leftPattern":{"type":"object","id":1,"cls":"Fibonacci","alias":"f1"},"rightPattern":{"type":"object","id":2,"cls":"Fibonacci","alias":"f2"}},"rightPattern":{"type":"object","id":3,"cls":"Fibonacci","alias":"f3"}},"rightPattern":{"type":"object","id":4,"cls":"Result","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate"},{"type":"beta","out_nodes":[[0,-1]],"__id":1,"parentNodes":[5,6]},{"type":"type","out_nodes":[[3,0]],"__id":2,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result"}},{"type":"alias","out_nodes":[[4,0]],"__id":3,"parentNodes":[2],"alias":"r","constraint":{"type":"object","id":4,"cls":"Result","alias":"r"}},{"type":"equality","out_nodes":[[5,0]],"__id":4,"parentNodes":[3],"constraint":{"type":"true","alias":"r"}},{"type":"rightadapter","out_nodes":[[1,0]],"__id":5,"parentNodes":[4]},{"type":"join","out_nodes":[[7,-1]],"__id":6,"parentNodes":[11,12],"constraint":{"type":"join-reference","out_nodes":[],"__id":7,"parentNodes":[],"constraint":{"options":{"alias":"f3","pattern":"f3.value == -1 && f3.sequence == s2 + 1","scope2":{}},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1,-1]],"__id":8,"parentNodes":[]},{"type":"type","out_nodes":[[9,1],[14,2],[20,3],[30,5],[20,7],[30,8]],"__id":9,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci"}},{"type":"alias","out_nodes":[[10,1]],"__id":10,"parentNodes":[8],"alias":"f3","constraint":{"type":"object","id":3,"cls":"Fibonacci","alias":"f3"}},{"type":"equality","out_nodes":[[11,1]],"__id":11,"parentNodes":[9],"constraint":{"options":{"alias":"f3","pattern":"f3.value == -1 && f3.sequence == s2 + 1","scope2":{}},"pattern":"f3.value == -1 && f3.sequence == s2 + 1","type":"equality","alias":"f3","constraint":[[["f3",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"eq"]}},{"type":"rightadapter","out_nodes":[[6,1]],"__id":12,"parentNodes":[10]},{"type":"join","out_nodes":[[13,-1]],"__id":13,"parentNodes":[17,18],"constraint":{"type":"join-reference","out_nodes":[],"__id":14,"parentNodes":[],"constraint":{"options":{"alias":"f2","pattern":"f2.value != -1 && f2.sequence == s1 + 1","scope2":{}},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6,-1]],"__id":15,"parentNodes":[]},{"type":"alias","out_nodes":[[15,2]],"__id":17,"parentNodes":[8],"alias":"f2","constraint":{"type":"object","id":2,"cls":"Fibonacci","alias":"f2"}},{"type":"equality","out_nodes":[[16,2]],"__id":18,"parentNodes":[14],"constraint":{"options":{"alias":"f2","pattern":"f2.value != -1 && f2.sequence == s1 + 1","scope2":{}},"pattern":"f2.value != -1 && f2.sequence == s1 + 1","type":"inequality","alias":"f2","constraint":[[["f2",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"neq"]}},{"type":"property","out_nodes":[[17,2]],"__id":19,"parentNodes":[15],"constraint":{"type":"hash","alias":"f2","constraint":{"sequence":"s2"}},"alias":"f2","constiables":{"sequence":"s2"}},{"type":"rightadapter","out_nodes":[[12,2]],"__id":20,"parentNodes":[16]},{"type":"beta","out_nodes":[[19,-1]],"__id":21,"parentNodes":[23,27]},{"type":"leftadapter","out_nodes":[[12,-1]],"__id":22,"parentNodes":[]},{"type":"alias","out_nodes":[[21,3],[37,7]],"__id":24,"parentNodes":[8],"alias":"f1","constraint":{"type":"object","id":1,"cls":"Fibonacci","alias":"f1"}},{"type":"equality","out_nodes":[[22,3]],"__id":25,"parentNodes":[20],"constraint":{"options":{"alias":"f1","pattern":"f1.value != -1","scope2":{}},"pattern":"f1.value != -1","type":"inequality","alias":"f1","constraint":[[["f1",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"neq"]}},{"type":"property","out_nodes":[[23,3]],"__id":26,"parentNodes":[21],"constraint":{"type":"hash","alias":"f1","constraint":{"sequence":"s1"}},"alias":"f1","constiables":{"sequence":"s1"}},{"type":"rightadapter","out_nodes":[[18,3]],"__id":27,"parentNodes":[22]},{"type":"type","out_nodes":[[25,4],[25,6],[25,9]],"__id":28,"parentNodes":[],"constraint":{"type":"object","alias":"__i__","cls":"InitialFact"}},{"type":"alias","out_nodes":[[26,4],[26,6],[26,9]],"__id":29,"parentNodes":[24],"alias":"__i__","constraint":{"type":"initial_fact","id":12,"cls":"InitialFact","alias":"__i__"}},{"type":"equality","out_nodes":[[27,4],[34,6],[43,9]],"__id":30,"parentNodes":[25],"constraint":{"type":"true","alias":"__i__"}},{"type":"leftadapter","out_nodes":[[18,4]],"__id":31,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":32,"parentNodes":[29],"index":1,"rule":{"name":"Bootstrap","pattern":{"type":"object","id":8,"cls":"Fibonacci","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap"},{"type":"beta","out_nodes":[[28,-1]],"__id":33,"parentNodes":[33,34]},{"type":"alias","out_nodes":[[31,5],[41,8]],"__id":35,"parentNodes":[8],"alias":"f","constraint":{"type":"object","id":8,"cls":"Fibonacci","alias":"f"}},{"type":"equality","out_nodes":[[32,5]],"__id":36,"parentNodes":[30],"constraint":{"options":{"alias":"f","pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","scope2":{}},"pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","type":"equality","alias":"f","constraint":[[["f",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"eq"]}},{"type":"equality","out_nodes":[[33,5]],"__id":37,"parentNodes":[31],"constraint":{"options":{"alias":"f","pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","scope2":{}},"pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","type":"comparison","alias":"f","constraint":[[[[["f",null,"identifier"],["sequence",null,"identifier"],"prop"],[1,null,"number"],"eq"],[[["f",null,"identifier"],["sequence",null,"identifier"],"prop"],[2,null,"number"],"eq"],"or"],null,"composite"]}},{"type":"rightadapter","out_nodes":[[29,5]],"__id":38,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[29,6]],"__id":42,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":43,"parentNodes":[36],"index":2,"rule":{"name":"Recurse","pattern":{"type":"composite","id":11,"leftPattern":{"type":"not","id":9,"cls":"Fibonacci","alias":"f"},"rightPattern":{"type":"object","id":10,"cls":"Fibonacci","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci = defined.get('Fibonacci');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse"},{"type":"beta","out_nodes":[[35,-1]],"__id":44,"parentNodes":[38,39]},{"type":"equality","out_nodes":[[38,7]],"__id":47,"parentNodes":[20],"constraint":{"options":{"alias":"f1","pattern":"f1.sequence != 1","scope2":{}},"pattern":"f1.sequence != 1","type":"inequality","alias":"f1","constraint":[[["f1",null,"identifier"],["sequence",null,"identifier"],"prop"],[1,null,"number"],"neq"]}},{"type":"rightadapter","out_nodes":[[36,7]],"__id":48,"parentNodes":[37]},{"type":"not","out_nodes":[[40,-1]],"__id":49,"parentNodes":[42,43],"constraint":{"type":"join-reference","out_nodes":[],"__id":50,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[36,-1]],"__id":51,"parentNodes":[]},{"type":"equality","out_nodes":[[42,8]],"__id":54,"parentNodes":[30],"constraint":{"options":{"alias":"f","pattern":"f.sequence == 1","scope2":{}},"pattern":"f.sequence == 1","type":"equality","alias":"f","constraint":[[["f",null,"identifier"],["sequence",null,"identifier"],"prop"],[1,null,"number"],"eq"]}},{"type":"rightadapter","out_nodes":[[39,8]],"__id":55,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[39,9]],"__id":59,"parentNodes":[26]}],"patterns":[{"type":"object","id":4,"cls":"Result","alias":"r"},{"type":"object","id":3,"cls":"Fibonacci","alias":"f3"},{"type":"object","id":2,"cls":"Fibonacci","alias":"f2"},{"type":"object","id":1,"cls":"Fibonacci","alias":"f1"},{"type":"initial_fact","id":12,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":8,"cls":"Fibonacci","alias":"f"},{"type":"initial_fact","id":14,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":10,"cls":"Fibonacci","alias":"f1"},{"type":"not","id":9,"cls":"Fibonacci","alias":"f"},{"type":"initial_fact","id":16,"cls":"InitialFact","alias":"__i__"}],"terminalNodes":[0,28,35],"joinNodes":[1,6,12,18,29,36],"alphaNodes":[3,4,9,10,14,15,16,20,21,22,25,26,30,31,32,37,41],"typeNodes":[2,8,24],"bucket":{"counter":0,"recency":0}}}