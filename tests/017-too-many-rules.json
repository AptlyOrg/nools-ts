{"name":"c1669126-2969-4231-a0d7-9799f80b37e9","root":{"nodes":[{"type":"terminal","out_nodes":[],"__id":0,"parentNodes":[1],"index":0,"rule":{"name":"Calculate499","pattern":{"type":"composite","id":7,"leftPattern":{"type":"composite","id":6,"leftPattern":{"type":"composite","id":5,"leftPattern":{"type":"object","id":1,"cls":"Fibonacci499","alias":"f1"},"rightPattern":{"type":"object","id":2,"cls":"Fibonacci499","alias":"f2"}},"rightPattern":{"type":"object","id":3,"cls":"Fibonacci499","alias":"f3"}},"rightPattern":{"type":"object","id":4,"cls":"Result499","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate499"},{"type":"beta","out_nodes":[[0,-1]],"__id":1,"parentNodes":[5,6]},{"type":"type","out_nodes":[[3,0]],"__id":2,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result499"}},{"type":"alias","out_nodes":[[4,0],[4,10],[4,20],[4,30],[4,40],[4,50],[4,60],[4,70],[4,80],[4,90],[4,100],[4,110],[4,120],[4,130],[4,140],[4,150],[4,160],[4,170],[4,180],[4,190],[4,200],[4,210],[4,220],[4,230],[4,240],[4,250],[4,260],[4,270],[4,280],[4,290],[4,300],[4,310],[4,320],[4,330],[4,340],[4,350],[4,360],[4,370],[4,380],[4,390],[4,400],[4,410],[4,420],[4,430],[4,440],[4,450],[4,460],[4,470],[4,480],[4,490],[4,500],[4,510],[4,520],[4,530],[4,540],[4,550],[4,560],[4,570],[4,580],[4,590],[4,600],[4,610],[4,620],[4,630],[4,640],[4,650],[4,660],[4,670],[4,680],[4,690],[4,700],[4,710],[4,720],[4,730],[4,740],[4,750],[4,760],[4,770],[4,780],[4,790],[4,800],[4,810],[4,820],[4,830],[4,840],[4,850],[4,860],[4,870],[4,880],[4,890],[4,900],[4,910],[4,920],[4,930],[4,940],[4,950],[4,960],[4,970],[4,980],[4,990],[4,1000],[4,1010],[4,1020],[4,1030],[4,1040],[4,1050],[4,1060],[4,1070],[4,1080],[4,1090],[4,1100],[4,1110],[4,1120],[4,1130],[4,1140],[4,1150],[4,1160],[4,1170],[4,1180],[4,1190],[4,1200],[4,1210],[4,1220],[4,1230],[4,1240],[4,1250],[4,1260],[4,1270],[4,1280],[4,1290],[4,1300],[4,1310],[4,1320],[4,1330],[4,1340],[4,1350],[4,1360],[4,1370],[4,1380],[4,1390],[4,1400],[4,1410],[4,1420],[4,1430],[4,1440],[4,1450],[4,1460],[4,1470],[4,1480],[4,1490],[4,1500],[4,1510],[4,1520],[4,1530],[4,1540],[4,1550],[4,1560],[4,1570],[4,1580],[4,1590],[4,1600],[4,1610],[4,1620],[4,1630],[4,1640],[4,1650],[4,1660],[4,1670],[4,1680],[4,1690],[4,1700],[4,1710],[4,1720],[4,1730],[4,1740],[4,1750],[4,1760],[4,1770],[4,1780],[4,1790],[4,1800],[4,1810],[4,1820],[4,1830],[4,1840],[4,1850],[4,1860],[4,1870],[4,1880],[4,1890],[4,1900],[4,1910],[4,1920],[4,1930],[4,1940],[4,1950],[4,1960],[4,1970],[4,1980],[4,1990],[4,2000],[4,2010],[4,2020],[4,2030],[4,2040],[4,2050],[4,2060],[4,2070],[4,2080],[4,2090],[4,2100],[4,2110],[4,2120],[4,2130],[4,2140],[4,2150],[4,2160],[4,2170],[4,2180],[4,2190],[4,2200],[4,2210],[4,2220],[4,2230],[4,2240],[4,2250],[4,2260],[4,2270],[4,2280],[4,2290],[4,2300],[4,2310],[4,2320],[4,2330],[4,2340],[4,2350],[4,2360],[4,2370],[4,2380],[4,2390],[4,2400],[4,2410],[4,2420],[4,2430],[4,2440],[4,2450],[4,2460],[4,2470],[4,2480],[4,2490],[4,2500],[4,2510],[4,2520],[4,2530],[4,2540],[4,2550],[4,2560],[4,2570],[4,2580],[4,2590],[4,2600],[4,2610],[4,2620],[4,2630],[4,2640],[4,2650],[4,2660],[4,2670],[4,2680],[4,2690],[4,2700],[4,2710],[4,2720],[4,2730],[4,2740],[4,2750],[4,2760],[4,2770],[4,2780],[4,2790],[4,2800],[4,2810],[4,2820],[4,2830],[4,2840],[4,2850],[4,2860],[4,2870],[4,2880],[4,2890],[4,2900],[4,2910],[4,2920],[4,2930],[4,2940],[4,2950],[4,2960],[4,2970],[4,2980],[4,2990],[4,3000],[4,3010],[4,3020],[4,3030],[4,3040],[4,3050],[4,3060],[4,3070],[4,3080],[4,3090],[4,3100],[4,3110],[4,3120],[4,3130],[4,3140],[4,3150],[4,3160],[4,3170],[4,3180],[4,3190],[4,3200],[4,3210],[4,3220],[4,3230],[4,3240],[4,3250],[4,3260],[4,3270],[4,3280],[4,3290],[4,3300],[4,3310],[4,3320],[4,3330],[4,3340],[4,3350],[4,3360],[4,3370],[4,3380],[4,3390],[4,3400],[4,3410],[4,3420],[4,3430],[4,3440],[4,3450],[4,3460],[4,3470],[4,3480],[4,3490],[4,3500],[4,3510],[4,3520],[4,3530],[4,3540],[4,3550],[4,3560],[4,3570],[4,3580],[4,3590],[4,3600],[4,3610],[4,3620],[4,3630],[4,3640],[4,3650],[4,3660],[4,3670],[4,3680],[4,3690],[4,3700],[4,3710],[4,3720],[4,3730],[4,3740],[4,3750],[4,3760],[4,3770],[4,3780],[4,3790],[4,3800],[4,3810],[4,3820],[4,3830],[4,3840],[4,3850],[4,3860],[4,3870],[4,3880],[4,3890],[4,3900],[4,3910],[4,3920],[4,3930],[4,3940],[4,3950],[4,3960],[4,3970],[4,3980],[4,3990],[4,4000],[4,4010],[4,4020],[4,4030],[4,4040],[4,4050],[4,4060],[4,4070],[4,4080],[4,4090],[4,4100],[4,4110],[4,4120],[4,4130],[4,4140],[4,4150],[4,4160],[4,4170],[4,4180],[4,4190],[4,4200],[4,4210],[4,4220],[4,4230],[4,4240],[4,4250],[4,4260],[4,4270],[4,4280],[4,4290],[4,4300],[4,4310],[4,4320],[4,4330],[4,4340],[4,4350],[4,4360],[4,4370],[4,4380],[4,4390],[4,4400],[4,4410],[4,4420],[4,4430],[4,4440],[4,4450],[4,4460],[4,4470],[4,4480],[4,4490],[4,4500],[4,4510],[4,4520],[4,4530],[4,4540],[4,4550],[4,4560],[4,4570],[4,4580],[4,4590],[4,4600],[4,4610],[4,4620],[4,4630],[4,4640],[4,4650],[4,4660],[4,4670],[4,4680],[4,4690],[4,4700],[4,4710],[4,4720],[4,4730],[4,4740],[4,4750],[4,4760],[4,4770],[4,4780],[4,4790],[4,4800],[4,4810],[4,4820],[4,4830],[4,4840],[4,4850],[4,4860],[4,4870],[4,4880],[4,4890],[4,4900],[4,4910],[4,4920],[4,4930],[4,4940],[4,4950],[4,4960],[4,4970],[4,4980],[4,4990]],"__id":3,"parentNodes":[2,46,72,98,124,150,176,202,228,254,280,306,332,358,384,410,436,462,488,514,540,566,592,618,644,670,696,722,748,774,800,826,852,878,904,930,956,982,1008,1034,1060,1086,1112,1138,1164,1190,1216,1242,1268,1294,1320,1346,1372,1398,1424,1450,1476,1502,1528,1554,1580,1606,1632,1658,1684,1710,1736,1762,1788,1814,1840,1866,1892,1918,1944,1970,1996,2022,2048,2074,2100,2126,2152,2178,2204,2230,2256,2282,2308,2334,2360,2386,2412,2438,2464,2490,2516,2542,2568,2594,2620,2646,2672,2698,2724,2750,2776,2802,2828,2854,2880,2906,2932,2958,2984,3010,3036,3062,3088,3114,3140,3166,3192,3218,3244,3270,3296,3322,3348,3374,3400,3426,3452,3478,3504,3530,3556,3582,3608,3634,3660,3686,3712,3738,3764,3790,3816,3842,3868,3894,3920,3946,3972,3998,4024,4050,4076,4102,4128,4154,4180,4206,4232,4258,4284,4310,4336,4362,4388,4414,4440,4466,4492,4518,4544,4570,4596,4622,4648,4674,4700,4726,4752,4778,4804,4830,4856,4882,4908,4934,4960,4986,5012,5038,5064,5090,5116,5142,5168,5194,5220,5246,5272,5298,5324,5350,5376,5402,5428,5454,5480,5506,5532,5558,5584,5610,5636,5662,5688,5714,5740,5766,5792,5818,5844,5870,5896,5922,5948,5974,6000,6026,6052,6078,6104,6130,6156,6182,6208,6234,6260,6286,6312,6338,6364,6390,6416,6442,6468,6494,6520,6546,6572,6598,6624,6650,6676,6702,6728,6754,6780,6806,6832,6858,6884,6910,6936,6962,6988,7014,7040,7066,7092,7118,7144,7170,7196,7222,7248,7274,7300,7326,7352,7378,7404,7430,7456,7482,7508,7534,7560,7586,7612,7638,7664,7690,7716,7742,7768,7794,7820,7846,7872,7898,7924,7950,7976,8002,8028,8054,8080,8106,8132,8158,8184,8210,8236,8262,8288,8314,8340,8366,8392,8418,8444,8470,8496,8522,8548,8574,8600,8626,8652,8678,8704,8730,8756,8782,8808,8834,8860,8886,8912,8938,8964,8990,9016,9042,9068,9094,9120,9146,9172,9198,9224,9250,9276,9302,9328,9354,9380,9406,9432,9458,9484,9510,9536,9562,9588,9614,9640,9666,9692,9718,9744,9770,9796,9822,9848,9874,9900,9926,9952,9978,10004,10030,10056,10082,10108,10134,10160,10186,10212,10238,10264,10290,10316,10342,10368,10394,10420,10446,10472,10498,10524,10550,10576,10602,10628,10654,10680,10706,10732,10758,10784,10810,10836,10862,10888,10914,10940,10966,10992,11018,11044,11070,11096,11122,11148,11174,11200,11226,11252,11278,11304,11330,11356,11382,11408,11434,11460,11486,11512,11538,11564,11590,11616,11642,11668,11694,11720,11746,11772,11798,11824,11850,11876,11902,11928,11954,11980,12006,12032,12058,12084,12110,12136,12162,12188,12214,12240,12266,12292,12318,12344,12370,12396,12422,12448,12474,12500,12526,12552,12578,12604,12630,12656,12682,12708,12734,12760,12786,12812,12838,12864,12890,12916,12942,12968,12994],"alias":"r","constraint":{"type":"object","id":4,"cls":"Result499","alias":"r"}},{"type":"equality","out_nodes":[[5,0],[47,10],[73,20],[99,30],[125,40],[151,50],[177,60],[203,70],[229,80],[255,90],[281,100],[307,110],[333,120],[359,130],[385,140],[411,150],[437,160],[463,170],[489,180],[515,190],[541,200],[567,210],[593,220],[619,230],[645,240],[671,250],[697,260],[723,270],[749,280],[775,290],[801,300],[827,310],[853,320],[879,330],[905,340],[931,350],[957,360],[983,370],[1009,380],[1035,390],[1061,400],[1087,410],[1113,420],[1139,430],[1165,440],[1191,450],[1217,460],[1243,470],[1269,480],[1295,490],[1321,500],[1347,510],[1373,520],[1399,530],[1425,540],[1451,550],[1477,560],[1503,570],[1529,580],[1555,590],[1581,600],[1607,610],[1633,620],[1659,630],[1685,640],[1711,650],[1737,660],[1763,670],[1789,680],[1815,690],[1841,700],[1867,710],[1893,720],[1919,730],[1945,740],[1971,750],[1997,760],[2023,770],[2049,780],[2075,790],[2101,800],[2127,810],[2153,820],[2179,830],[2205,840],[2231,850],[2257,860],[2283,870],[2309,880],[2335,890],[2361,900],[2387,910],[2413,920],[2439,930],[2465,940],[2491,950],[2517,960],[2543,970],[2569,980],[2595,990],[2621,1000],[2647,1010],[2673,1020],[2699,1030],[2725,1040],[2751,1050],[2777,1060],[2803,1070],[2829,1080],[2855,1090],[2881,1100],[2907,1110],[2933,1120],[2959,1130],[2985,1140],[3011,1150],[3037,1160],[3063,1170],[3089,1180],[3115,1190],[3141,1200],[3167,1210],[3193,1220],[3219,1230],[3245,1240],[3271,1250],[3297,1260],[3323,1270],[3349,1280],[3375,1290],[3401,1300],[3427,1310],[3453,1320],[3479,1330],[3505,1340],[3531,1350],[3557,1360],[3583,1370],[3609,1380],[3635,1390],[3661,1400],[3687,1410],[3713,1420],[3739,1430],[3765,1440],[3791,1450],[3817,1460],[3843,1470],[3869,1480],[3895,1490],[3921,1500],[3947,1510],[3973,1520],[3999,1530],[4025,1540],[4051,1550],[4077,1560],[4103,1570],[4129,1580],[4155,1590],[4181,1600],[4207,1610],[4233,1620],[4259,1630],[4285,1640],[4311,1650],[4337,1660],[4363,1670],[4389,1680],[4415,1690],[4441,1700],[4467,1710],[4493,1720],[4519,1730],[4545,1740],[4571,1750],[4597,1760],[4623,1770],[4649,1780],[4675,1790],[4701,1800],[4727,1810],[4753,1820],[4779,1830],[4805,1840],[4831,1850],[4857,1860],[4883,1870],[4909,1880],[4935,1890],[4961,1900],[4987,1910],[5013,1920],[5039,1930],[5065,1940],[5091,1950],[5117,1960],[5143,1970],[5169,1980],[5195,1990],[5221,2000],[5247,2010],[5273,2020],[5299,2030],[5325,2040],[5351,2050],[5377,2060],[5403,2070],[5429,2080],[5455,2090],[5481,2100],[5507,2110],[5533,2120],[5559,2130],[5585,2140],[5611,2150],[5637,2160],[5663,2170],[5689,2180],[5715,2190],[5741,2200],[5767,2210],[5793,2220],[5819,2230],[5845,2240],[5871,2250],[5897,2260],[5923,2270],[5949,2280],[5975,2290],[6001,2300],[6027,2310],[6053,2320],[6079,2330],[6105,2340],[6131,2350],[6157,2360],[6183,2370],[6209,2380],[6235,2390],[6261,2400],[6287,2410],[6313,2420],[6339,2430],[6365,2440],[6391,2450],[6417,2460],[6443,2470],[6469,2480],[6495,2490],[6521,2500],[6547,2510],[6573,2520],[6599,2530],[6625,2540],[6651,2550],[6677,2560],[6703,2570],[6729,2580],[6755,2590],[6781,2600],[6807,2610],[6833,2620],[6859,2630],[6885,2640],[6911,2650],[6937,2660],[6963,2670],[6989,2680],[7015,2690],[7041,2700],[7067,2710],[7093,2720],[7119,2730],[7145,2740],[7171,2750],[7197,2760],[7223,2770],[7249,2780],[7275,2790],[7301,2800],[7327,2810],[7353,2820],[7379,2830],[7405,2840],[7431,2850],[7457,2860],[7483,2870],[7509,2880],[7535,2890],[7561,2900],[7587,2910],[7613,2920],[7639,2930],[7665,2940],[7691,2950],[7717,2960],[7743,2970],[7769,2980],[7795,2990],[7821,3000],[7847,3010],[7873,3020],[7899,3030],[7925,3040],[7951,3050],[7977,3060],[8003,3070],[8029,3080],[8055,3090],[8081,3100],[8107,3110],[8133,3120],[8159,3130],[8185,3140],[8211,3150],[8237,3160],[8263,3170],[8289,3180],[8315,3190],[8341,3200],[8367,3210],[8393,3220],[8419,3230],[8445,3240],[8471,3250],[8497,3260],[8523,3270],[8549,3280],[8575,3290],[8601,3300],[8627,3310],[8653,3320],[8679,3330],[8705,3340],[8731,3350],[8757,3360],[8783,3370],[8809,3380],[8835,3390],[8861,3400],[8887,3410],[8913,3420],[8939,3430],[8965,3440],[8991,3450],[9017,3460],[9043,3470],[9069,3480],[9095,3490],[9121,3500],[9147,3510],[9173,3520],[9199,3530],[9225,3540],[9251,3550],[9277,3560],[9303,3570],[9329,3580],[9355,3590],[9381,3600],[9407,3610],[9433,3620],[9459,3630],[9485,3640],[9511,3650],[9537,3660],[9563,3670],[9589,3680],[9615,3690],[9641,3700],[9667,3710],[9693,3720],[9719,3730],[9745,3740],[9771,3750],[9797,3760],[9823,3770],[9849,3780],[9875,3790],[9901,3800],[9927,3810],[9953,3820],[9979,3830],[10005,3840],[10031,3850],[10057,3860],[10083,3870],[10109,3880],[10135,3890],[10161,3900],[10187,3910],[10213,3920],[10239,3930],[10265,3940],[10291,3950],[10317,3960],[10343,3970],[10369,3980],[10395,3990],[10421,4000],[10447,4010],[10473,4020],[10499,4030],[10525,4040],[10551,4050],[10577,4060],[10603,4070],[10629,4080],[10655,4090],[10681,4100],[10707,4110],[10733,4120],[10759,4130],[10785,4140],[10811,4150],[10837,4160],[10863,4170],[10889,4180],[10915,4190],[10941,4200],[10967,4210],[10993,4220],[11019,4230],[11045,4240],[11071,4250],[11097,4260],[11123,4270],[11149,4280],[11175,4290],[11201,4300],[11227,4310],[11253,4320],[11279,4330],[11305,4340],[11331,4350],[11357,4360],[11383,4370],[11409,4380],[11435,4390],[11461,4400],[11487,4410],[11513,4420],[11539,4430],[11565,4440],[11591,4450],[11617,4460],[11643,4470],[11669,4480],[11695,4490],[11721,4500],[11747,4510],[11773,4520],[11799,4530],[11825,4540],[11851,4550],[11877,4560],[11903,4570],[11929,4580],[11955,4590],[11981,4600],[12007,4610],[12033,4620],[12059,4630],[12085,4640],[12111,4650],[12137,4660],[12163,4670],[12189,4680],[12215,4690],[12241,4700],[12267,4710],[12293,4720],[12319,4730],[12345,4740],[12371,4750],[12397,4760],[12423,4770],[12449,4780],[12475,4790],[12501,4800],[12527,4810],[12553,4820],[12579,4830],[12605,4840],[12631,4850],[12657,4860],[12683,4870],[12709,4880],[12735,4890],[12761,4900],[12787,4910],[12813,4920],[12839,4930],[12865,4940],[12891,4950],[12917,4960],[12943,4970],[12969,4980],[12995,4990]],"__id":4,"parentNodes":[3],"constraint":{"type":"true","alias":"r"}},{"type":"rightadapter","out_nodes":[[1,0]],"__id":5,"parentNodes":[4]},{"type":"join","out_nodes":[[7,-1]],"__id":6,"parentNodes":[11,12],"constraint":{"type":"join-reference","out_nodes":[],"__id":7,"parentNodes":[],"constraint":{"options":{"alias":"f3","pattern":"f3.value == -1 && f3.sequence == s2 + 1","scope2":{}},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1,-1]],"__id":8,"parentNodes":[]},{"type":"type","out_nodes":[[9,1],[14,2],[20,3],[30,5],[20,7],[30,8]],"__id":9,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci499"}},{"type":"alias","out_nodes":[[10,1],[10,11],[10,21],[10,31],[10,41],[10,51],[10,61],[10,71],[10,81],[10,91],[10,101],[10,111],[10,121],[10,131],[10,141],[10,151],[10,161],[10,171],[10,181],[10,191],[10,201],[10,211],[10,221],[10,231],[10,241],[10,251],[10,261],[10,271],[10,281],[10,291],[10,301],[10,311],[10,321],[10,331],[10,341],[10,351],[10,361],[10,371],[10,381],[10,391],[10,401],[10,411],[10,421],[10,431],[10,441],[10,451],[10,461],[10,471],[10,481],[10,491],[10,501],[10,511],[10,521],[10,531],[10,541],[10,551],[10,561],[10,571],[10,581],[10,591],[10,601],[10,611],[10,621],[10,631],[10,641],[10,651],[10,661],[10,671],[10,681],[10,691],[10,701],[10,711],[10,721],[10,731],[10,741],[10,751],[10,761],[10,771],[10,781],[10,791],[10,801],[10,811],[10,821],[10,831],[10,841],[10,851],[10,861],[10,871],[10,881],[10,891],[10,901],[10,911],[10,921],[10,931],[10,941],[10,951],[10,961],[10,971],[10,981],[10,991],[10,1001],[10,1011],[10,1021],[10,1031],[10,1041],[10,1051],[10,1061],[10,1071],[10,1081],[10,1091],[10,1101],[10,1111],[10,1121],[10,1131],[10,1141],[10,1151],[10,1161],[10,1171],[10,1181],[10,1191],[10,1201],[10,1211],[10,1221],[10,1231],[10,1241],[10,1251],[10,1261],[10,1271],[10,1281],[10,1291],[10,1301],[10,1311],[10,1321],[10,1331],[10,1341],[10,1351],[10,1361],[10,1371],[10,1381],[10,1391],[10,1401],[10,1411],[10,1421],[10,1431],[10,1441],[10,1451],[10,1461],[10,1471],[10,1481],[10,1491],[10,1501],[10,1511],[10,1521],[10,1531],[10,1541],[10,1551],[10,1561],[10,1571],[10,1581],[10,1591],[10,1601],[10,1611],[10,1621],[10,1631],[10,1641],[10,1651],[10,1661],[10,1671],[10,1681],[10,1691],[10,1701],[10,1711],[10,1721],[10,1731],[10,1741],[10,1751],[10,1761],[10,1771],[10,1781],[10,1791],[10,1801],[10,1811],[10,1821],[10,1831],[10,1841],[10,1851],[10,1861],[10,1871],[10,1881],[10,1891],[10,1901],[10,1911],[10,1921],[10,1931],[10,1941],[10,1951],[10,1961],[10,1971],[10,1981],[10,1991],[10,2001],[10,2011],[10,2021],[10,2031],[10,2041],[10,2051],[10,2061],[10,2071],[10,2081],[10,2091],[10,2101],[10,2111],[10,2121],[10,2131],[10,2141],[10,2151],[10,2161],[10,2171],[10,2181],[10,2191],[10,2201],[10,2211],[10,2221],[10,2231],[10,2241],[10,2251],[10,2261],[10,2271],[10,2281],[10,2291],[10,2301],[10,2311],[10,2321],[10,2331],[10,2341],[10,2351],[10,2361],[10,2371],[10,2381],[10,2391],[10,2401],[10,2411],[10,2421],[10,2431],[10,2441],[10,2451],[10,2461],[10,2471],[10,2481],[10,2491],[10,2501],[10,2511],[10,2521],[10,2531],[10,2541],[10,2551],[10,2561],[10,2571],[10,2581],[10,2591],[10,2601],[10,2611],[10,2621],[10,2631],[10,2641],[10,2651],[10,2661],[10,2671],[10,2681],[10,2691],[10,2701],[10,2711],[10,2721],[10,2731],[10,2741],[10,2751],[10,2761],[10,2771],[10,2781],[10,2791],[10,2801],[10,2811],[10,2821],[10,2831],[10,2841],[10,2851],[10,2861],[10,2871],[10,2881],[10,2891],[10,2901],[10,2911],[10,2921],[10,2931],[10,2941],[10,2951],[10,2961],[10,2971],[10,2981],[10,2991],[10,3001],[10,3011],[10,3021],[10,3031],[10,3041],[10,3051],[10,3061],[10,3071],[10,3081],[10,3091],[10,3101],[10,3111],[10,3121],[10,3131],[10,3141],[10,3151],[10,3161],[10,3171],[10,3181],[10,3191],[10,3201],[10,3211],[10,3221],[10,3231],[10,3241],[10,3251],[10,3261],[10,3271],[10,3281],[10,3291],[10,3301],[10,3311],[10,3321],[10,3331],[10,3341],[10,3351],[10,3361],[10,3371],[10,3381],[10,3391],[10,3401],[10,3411],[10,3421],[10,3431],[10,3441],[10,3451],[10,3461],[10,3471],[10,3481],[10,3491],[10,3501],[10,3511],[10,3521],[10,3531],[10,3541],[10,3551],[10,3561],[10,3571],[10,3581],[10,3591],[10,3601],[10,3611],[10,3621],[10,3631],[10,3641],[10,3651],[10,3661],[10,3671],[10,3681],[10,3691],[10,3701],[10,3711],[10,3721],[10,3731],[10,3741],[10,3751],[10,3761],[10,3771],[10,3781],[10,3791],[10,3801],[10,3811],[10,3821],[10,3831],[10,3841],[10,3851],[10,3861],[10,3871],[10,3881],[10,3891],[10,3901],[10,3911],[10,3921],[10,3931],[10,3941],[10,3951],[10,3961],[10,3971],[10,3981],[10,3991],[10,4001],[10,4011],[10,4021],[10,4031],[10,4041],[10,4051],[10,4061],[10,4071],[10,4081],[10,4091],[10,4101],[10,4111],[10,4121],[10,4131],[10,4141],[10,4151],[10,4161],[10,4171],[10,4181],[10,4191],[10,4201],[10,4211],[10,4221],[10,4231],[10,4241],[10,4251],[10,4261],[10,4271],[10,4281],[10,4291],[10,4301],[10,4311],[10,4321],[10,4331],[10,4341],[10,4351],[10,4361],[10,4371],[10,4381],[10,4391],[10,4401],[10,4411],[10,4421],[10,4431],[10,4441],[10,4451],[10,4461],[10,4471],[10,4481],[10,4491],[10,4501],[10,4511],[10,4521],[10,4531],[10,4541],[10,4551],[10,4561],[10,4571],[10,4581],[10,4591],[10,4601],[10,4611],[10,4621],[10,4631],[10,4641],[10,4651],[10,4661],[10,4671],[10,4681],[10,4691],[10,4701],[10,4711],[10,4721],[10,4731],[10,4741],[10,4751],[10,4761],[10,4771],[10,4781],[10,4791],[10,4801],[10,4811],[10,4821],[10,4831],[10,4841],[10,4851],[10,4861],[10,4871],[10,4881],[10,4891],[10,4901],[10,4911],[10,4921],[10,4931],[10,4941],[10,4951],[10,4961],[10,4971],[10,4981],[10,4991]],"__id":10,"parentNodes":[8,50,76,102,128,154,180,206,232,258,284,310,336,362,388,414,440,466,492,518,544,570,596,622,648,674,700,726,752,778,804,830,856,882,908,934,960,986,1012,1038,1064,1090,1116,1142,1168,1194,1220,1246,1272,1298,1324,1350,1376,1402,1428,1454,1480,1506,1532,1558,1584,1610,1636,1662,1688,1714,1740,1766,1792,1818,1844,1870,1896,1922,1948,1974,2000,2026,2052,2078,2104,2130,2156,2182,2208,2234,2260,2286,2312,2338,2364,2390,2416,2442,2468,2494,2520,2546,2572,2598,2624,2650,2676,2702,2728,2754,2780,2806,2832,2858,2884,2910,2936,2962,2988,3014,3040,3066,3092,3118,3144,3170,3196,3222,3248,3274,3300,3326,3352,3378,3404,3430,3456,3482,3508,3534,3560,3586,3612,3638,3664,3690,3716,3742,3768,3794,3820,3846,3872,3898,3924,3950,3976,4002,4028,4054,4080,4106,4132,4158,4184,4210,4236,4262,4288,4314,4340,4366,4392,4418,4444,4470,4496,4522,4548,4574,4600,4626,4652,4678,4704,4730,4756,4782,4808,4834,4860,4886,4912,4938,4964,4990,5016,5042,5068,5094,5120,5146,5172,5198,5224,5250,5276,5302,5328,5354,5380,5406,5432,5458,5484,5510,5536,5562,5588,5614,5640,5666,5692,5718,5744,5770,5796,5822,5848,5874,5900,5926,5952,5978,6004,6030,6056,6082,6108,6134,6160,6186,6212,6238,6264,6290,6316,6342,6368,6394,6420,6446,6472,6498,6524,6550,6576,6602,6628,6654,6680,6706,6732,6758,6784,6810,6836,6862,6888,6914,6940,6966,6992,7018,7044,7070,7096,7122,7148,7174,7200,7226,7252,7278,7304,7330,7356,7382,7408,7434,7460,7486,7512,7538,7564,7590,7616,7642,7668,7694,7720,7746,7772,7798,7824,7850,7876,7902,7928,7954,7980,8006,8032,8058,8084,8110,8136,8162,8188,8214,8240,8266,8292,8318,8344,8370,8396,8422,8448,8474,8500,8526,8552,8578,8604,8630,8656,8682,8708,8734,8760,8786,8812,8838,8864,8890,8916,8942,8968,8994,9020,9046,9072,9098,9124,9150,9176,9202,9228,9254,9280,9306,9332,9358,9384,9410,9436,9462,9488,9514,9540,9566,9592,9618,9644,9670,9696,9722,9748,9774,9800,9826,9852,9878,9904,9930,9956,9982,10008,10034,10060,10086,10112,10138,10164,10190,10216,10242,10268,10294,10320,10346,10372,10398,10424,10450,10476,10502,10528,10554,10580,10606,10632,10658,10684,10710,10736,10762,10788,10814,10840,10866,10892,10918,10944,10970,10996,11022,11048,11074,11100,11126,11152,11178,11204,11230,11256,11282,11308,11334,11360,11386,11412,11438,11464,11490,11516,11542,11568,11594,11620,11646,11672,11698,11724,11750,11776,11802,11828,11854,11880,11906,11932,11958,11984,12010,12036,12062,12088,12114,12140,12166,12192,12218,12244,12270,12296,12322,12348,12374,12400,12426,12452,12478,12504,12530,12556,12582,12608,12634,12660,12686,12712,12738,12764,12790,12816,12842,12868,12894,12920,12946,12972,12998],"alias":"f3","constraint":{"type":"object","id":3,"cls":"Fibonacci499","alias":"f3"}},{"type":"equality","out_nodes":[[11,1],[51,11],[77,21],[103,31],[129,41],[155,51],[181,61],[207,71],[233,81],[259,91],[285,101],[311,111],[337,121],[363,131],[389,141],[415,151],[441,161],[467,171],[493,181],[519,191],[545,201],[571,211],[597,221],[623,231],[649,241],[675,251],[701,261],[727,271],[753,281],[779,291],[805,301],[831,311],[857,321],[883,331],[909,341],[935,351],[961,361],[987,371],[1013,381],[1039,391],[1065,401],[1091,411],[1117,421],[1143,431],[1169,441],[1195,451],[1221,461],[1247,471],[1273,481],[1299,491],[1325,501],[1351,511],[1377,521],[1403,531],[1429,541],[1455,551],[1481,561],[1507,571],[1533,581],[1559,591],[1585,601],[1611,611],[1637,621],[1663,631],[1689,641],[1715,651],[1741,661],[1767,671],[1793,681],[1819,691],[1845,701],[1871,711],[1897,721],[1923,731],[1949,741],[1975,751],[2001,761],[2027,771],[2053,781],[2079,791],[2105,801],[2131,811],[2157,821],[2183,831],[2209,841],[2235,851],[2261,861],[2287,871],[2313,881],[2339,891],[2365,901],[2391,911],[2417,921],[2443,931],[2469,941],[2495,951],[2521,961],[2547,971],[2573,981],[2599,991],[2625,1001],[2651,1011],[2677,1021],[2703,1031],[2729,1041],[2755,1051],[2781,1061],[2807,1071],[2833,1081],[2859,1091],[2885,1101],[2911,1111],[2937,1121],[2963,1131],[2989,1141],[3015,1151],[3041,1161],[3067,1171],[3093,1181],[3119,1191],[3145,1201],[3171,1211],[3197,1221],[3223,1231],[3249,1241],[3275,1251],[3301,1261],[3327,1271],[3353,1281],[3379,1291],[3405,1301],[3431,1311],[3457,1321],[3483,1331],[3509,1341],[3535,1351],[3561,1361],[3587,1371],[3613,1381],[3639,1391],[3665,1401],[3691,1411],[3717,1421],[3743,1431],[3769,1441],[3795,1451],[3821,1461],[3847,1471],[3873,1481],[3899,1491],[3925,1501],[3951,1511],[3977,1521],[4003,1531],[4029,1541],[4055,1551],[4081,1561],[4107,1571],[4133,1581],[4159,1591],[4185,1601],[4211,1611],[4237,1621],[4263,1631],[4289,1641],[4315,1651],[4341,1661],[4367,1671],[4393,1681],[4419,1691],[4445,1701],[4471,1711],[4497,1721],[4523,1731],[4549,1741],[4575,1751],[4601,1761],[4627,1771],[4653,1781],[4679,1791],[4705,1801],[4731,1811],[4757,1821],[4783,1831],[4809,1841],[4835,1851],[4861,1861],[4887,1871],[4913,1881],[4939,1891],[4965,1901],[4991,1911],[5017,1921],[5043,1931],[5069,1941],[5095,1951],[5121,1961],[5147,1971],[5173,1981],[5199,1991],[5225,2001],[5251,2011],[5277,2021],[5303,2031],[5329,2041],[5355,2051],[5381,2061],[5407,2071],[5433,2081],[5459,2091],[5485,2101],[5511,2111],[5537,2121],[5563,2131],[5589,2141],[5615,2151],[5641,2161],[5667,2171],[5693,2181],[5719,2191],[5745,2201],[5771,2211],[5797,2221],[5823,2231],[5849,2241],[5875,2251],[5901,2261],[5927,2271],[5953,2281],[5979,2291],[6005,2301],[6031,2311],[6057,2321],[6083,2331],[6109,2341],[6135,2351],[6161,2361],[6187,2371],[6213,2381],[6239,2391],[6265,2401],[6291,2411],[6317,2421],[6343,2431],[6369,2441],[6395,2451],[6421,2461],[6447,2471],[6473,2481],[6499,2491],[6525,2501],[6551,2511],[6577,2521],[6603,2531],[6629,2541],[6655,2551],[6681,2561],[6707,2571],[6733,2581],[6759,2591],[6785,2601],[6811,2611],[6837,2621],[6863,2631],[6889,2641],[6915,2651],[6941,2661],[6967,2671],[6993,2681],[7019,2691],[7045,2701],[7071,2711],[7097,2721],[7123,2731],[7149,2741],[7175,2751],[7201,2761],[7227,2771],[7253,2781],[7279,2791],[7305,2801],[7331,2811],[7357,2821],[7383,2831],[7409,2841],[7435,2851],[7461,2861],[7487,2871],[7513,2881],[7539,2891],[7565,2901],[7591,2911],[7617,2921],[7643,2931],[7669,2941],[7695,2951],[7721,2961],[7747,2971],[7773,2981],[7799,2991],[7825,3001],[7851,3011],[7877,3021],[7903,3031],[7929,3041],[7955,3051],[7981,3061],[8007,3071],[8033,3081],[8059,3091],[8085,3101],[8111,3111],[8137,3121],[8163,3131],[8189,3141],[8215,3151],[8241,3161],[8267,3171],[8293,3181],[8319,3191],[8345,3201],[8371,3211],[8397,3221],[8423,3231],[8449,3241],[8475,3251],[8501,3261],[8527,3271],[8553,3281],[8579,3291],[8605,3301],[8631,3311],[8657,3321],[8683,3331],[8709,3341],[8735,3351],[8761,3361],[8787,3371],[8813,3381],[8839,3391],[8865,3401],[8891,3411],[8917,3421],[8943,3431],[8969,3441],[8995,3451],[9021,3461],[9047,3471],[9073,3481],[9099,3491],[9125,3501],[9151,3511],[9177,3521],[9203,3531],[9229,3541],[9255,3551],[9281,3561],[9307,3571],[9333,3581],[9359,3591],[9385,3601],[9411,3611],[9437,3621],[9463,3631],[9489,3641],[9515,3651],[9541,3661],[9567,3671],[9593,3681],[9619,3691],[9645,3701],[9671,3711],[9697,3721],[9723,3731],[9749,3741],[9775,3751],[9801,3761],[9827,3771],[9853,3781],[9879,3791],[9905,3801],[9931,3811],[9957,3821],[9983,3831],[10009,3841],[10035,3851],[10061,3861],[10087,3871],[10113,3881],[10139,3891],[10165,3901],[10191,3911],[10217,3921],[10243,3931],[10269,3941],[10295,3951],[10321,3961],[10347,3971],[10373,3981],[10399,3991],[10425,4001],[10451,4011],[10477,4021],[10503,4031],[10529,4041],[10555,4051],[10581,4061],[10607,4071],[10633,4081],[10659,4091],[10685,4101],[10711,4111],[10737,4121],[10763,4131],[10789,4141],[10815,4151],[10841,4161],[10867,4171],[10893,4181],[10919,4191],[10945,4201],[10971,4211],[10997,4221],[11023,4231],[11049,4241],[11075,4251],[11101,4261],[11127,4271],[11153,4281],[11179,4291],[11205,4301],[11231,4311],[11257,4321],[11283,4331],[11309,4341],[11335,4351],[11361,4361],[11387,4371],[11413,4381],[11439,4391],[11465,4401],[11491,4411],[11517,4421],[11543,4431],[11569,4441],[11595,4451],[11621,4461],[11647,4471],[11673,4481],[11699,4491],[11725,4501],[11751,4511],[11777,4521],[11803,4531],[11829,4541],[11855,4551],[11881,4561],[11907,4571],[11933,4581],[11959,4591],[11985,4601],[12011,4611],[12037,4621],[12063,4631],[12089,4641],[12115,4651],[12141,4661],[12167,4671],[12193,4681],[12219,4691],[12245,4701],[12271,4711],[12297,4721],[12323,4731],[12349,4741],[12375,4751],[12401,4761],[12427,4771],[12453,4781],[12479,4791],[12505,4801],[12531,4811],[12557,4821],[12583,4831],[12609,4841],[12635,4851],[12661,4861],[12687,4871],[12713,4881],[12739,4891],[12765,4901],[12791,4911],[12817,4921],[12843,4931],[12869,4941],[12895,4951],[12921,4961],[12947,4971],[12973,4981],[12999,4991]],"__id":11,"parentNodes":[9],"constraint":{"options":{"alias":"f3","pattern":"f3.value == -1 && f3.sequence == s2 + 1","scope2":{}},"pattern":"f3.value == -1 && f3.sequence == s2 + 1","type":"equality","alias":"f3","constraint":[[["f3",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"eq"]}},{"type":"rightadapter","out_nodes":[[6,1]],"__id":12,"parentNodes":[10]},{"type":"join","out_nodes":[[13,-1]],"__id":13,"parentNodes":[17,18],"constraint":{"type":"join-reference","out_nodes":[],"__id":14,"parentNodes":[],"constraint":{"options":{"alias":"f2","pattern":"f2.value != -1 && f2.sequence == s1 + 1","scope2":{}},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6,-1]],"__id":15,"parentNodes":[]},{"type":"alias","out_nodes":[[15,2],[15,12],[15,22],[15,32],[15,42],[15,52],[15,62],[15,72],[15,82],[15,92],[15,102],[15,112],[15,122],[15,132],[15,142],[15,152],[15,162],[15,172],[15,182],[15,192],[15,202],[15,212],[15,222],[15,232],[15,242],[15,252],[15,262],[15,272],[15,282],[15,292],[15,302],[15,312],[15,322],[15,332],[15,342],[15,352],[15,362],[15,372],[15,382],[15,392],[15,402],[15,412],[15,422],[15,432],[15,442],[15,452],[15,462],[15,472],[15,482],[15,492],[15,502],[15,512],[15,522],[15,532],[15,542],[15,552],[15,562],[15,572],[15,582],[15,592],[15,602],[15,612],[15,622],[15,632],[15,642],[15,652],[15,662],[15,672],[15,682],[15,692],[15,702],[15,712],[15,722],[15,732],[15,742],[15,752],[15,762],[15,772],[15,782],[15,792],[15,802],[15,812],[15,822],[15,832],[15,842],[15,852],[15,862],[15,872],[15,882],[15,892],[15,902],[15,912],[15,922],[15,932],[15,942],[15,952],[15,962],[15,972],[15,982],[15,992],[15,1002],[15,1012],[15,1022],[15,1032],[15,1042],[15,1052],[15,1062],[15,1072],[15,1082],[15,1092],[15,1102],[15,1112],[15,1122],[15,1132],[15,1142],[15,1152],[15,1162],[15,1172],[15,1182],[15,1192],[15,1202],[15,1212],[15,1222],[15,1232],[15,1242],[15,1252],[15,1262],[15,1272],[15,1282],[15,1292],[15,1302],[15,1312],[15,1322],[15,1332],[15,1342],[15,1352],[15,1362],[15,1372],[15,1382],[15,1392],[15,1402],[15,1412],[15,1422],[15,1432],[15,1442],[15,1452],[15,1462],[15,1472],[15,1482],[15,1492],[15,1502],[15,1512],[15,1522],[15,1532],[15,1542],[15,1552],[15,1562],[15,1572],[15,1582],[15,1592],[15,1602],[15,1612],[15,1622],[15,1632],[15,1642],[15,1652],[15,1662],[15,1672],[15,1682],[15,1692],[15,1702],[15,1712],[15,1722],[15,1732],[15,1742],[15,1752],[15,1762],[15,1772],[15,1782],[15,1792],[15,1802],[15,1812],[15,1822],[15,1832],[15,1842],[15,1852],[15,1862],[15,1872],[15,1882],[15,1892],[15,1902],[15,1912],[15,1922],[15,1932],[15,1942],[15,1952],[15,1962],[15,1972],[15,1982],[15,1992],[15,2002],[15,2012],[15,2022],[15,2032],[15,2042],[15,2052],[15,2062],[15,2072],[15,2082],[15,2092],[15,2102],[15,2112],[15,2122],[15,2132],[15,2142],[15,2152],[15,2162],[15,2172],[15,2182],[15,2192],[15,2202],[15,2212],[15,2222],[15,2232],[15,2242],[15,2252],[15,2262],[15,2272],[15,2282],[15,2292],[15,2302],[15,2312],[15,2322],[15,2332],[15,2342],[15,2352],[15,2362],[15,2372],[15,2382],[15,2392],[15,2402],[15,2412],[15,2422],[15,2432],[15,2442],[15,2452],[15,2462],[15,2472],[15,2482],[15,2492],[15,2502],[15,2512],[15,2522],[15,2532],[15,2542],[15,2552],[15,2562],[15,2572],[15,2582],[15,2592],[15,2602],[15,2612],[15,2622],[15,2632],[15,2642],[15,2652],[15,2662],[15,2672],[15,2682],[15,2692],[15,2702],[15,2712],[15,2722],[15,2732],[15,2742],[15,2752],[15,2762],[15,2772],[15,2782],[15,2792],[15,2802],[15,2812],[15,2822],[15,2832],[15,2842],[15,2852],[15,2862],[15,2872],[15,2882],[15,2892],[15,2902],[15,2912],[15,2922],[15,2932],[15,2942],[15,2952],[15,2962],[15,2972],[15,2982],[15,2992],[15,3002],[15,3012],[15,3022],[15,3032],[15,3042],[15,3052],[15,3062],[15,3072],[15,3082],[15,3092],[15,3102],[15,3112],[15,3122],[15,3132],[15,3142],[15,3152],[15,3162],[15,3172],[15,3182],[15,3192],[15,3202],[15,3212],[15,3222],[15,3232],[15,3242],[15,3252],[15,3262],[15,3272],[15,3282],[15,3292],[15,3302],[15,3312],[15,3322],[15,3332],[15,3342],[15,3352],[15,3362],[15,3372],[15,3382],[15,3392],[15,3402],[15,3412],[15,3422],[15,3432],[15,3442],[15,3452],[15,3462],[15,3472],[15,3482],[15,3492],[15,3502],[15,3512],[15,3522],[15,3532],[15,3542],[15,3552],[15,3562],[15,3572],[15,3582],[15,3592],[15,3602],[15,3612],[15,3622],[15,3632],[15,3642],[15,3652],[15,3662],[15,3672],[15,3682],[15,3692],[15,3702],[15,3712],[15,3722],[15,3732],[15,3742],[15,3752],[15,3762],[15,3772],[15,3782],[15,3792],[15,3802],[15,3812],[15,3822],[15,3832],[15,3842],[15,3852],[15,3862],[15,3872],[15,3882],[15,3892],[15,3902],[15,3912],[15,3922],[15,3932],[15,3942],[15,3952],[15,3962],[15,3972],[15,3982],[15,3992],[15,4002],[15,4012],[15,4022],[15,4032],[15,4042],[15,4052],[15,4062],[15,4072],[15,4082],[15,4092],[15,4102],[15,4112],[15,4122],[15,4132],[15,4142],[15,4152],[15,4162],[15,4172],[15,4182],[15,4192],[15,4202],[15,4212],[15,4222],[15,4232],[15,4242],[15,4252],[15,4262],[15,4272],[15,4282],[15,4292],[15,4302],[15,4312],[15,4322],[15,4332],[15,4342],[15,4352],[15,4362],[15,4372],[15,4382],[15,4392],[15,4402],[15,4412],[15,4422],[15,4432],[15,4442],[15,4452],[15,4462],[15,4472],[15,4482],[15,4492],[15,4502],[15,4512],[15,4522],[15,4532],[15,4542],[15,4552],[15,4562],[15,4572],[15,4582],[15,4592],[15,4602],[15,4612],[15,4622],[15,4632],[15,4642],[15,4652],[15,4662],[15,4672],[15,4682],[15,4692],[15,4702],[15,4712],[15,4722],[15,4732],[15,4742],[15,4752],[15,4762],[15,4772],[15,4782],[15,4792],[15,4802],[15,4812],[15,4822],[15,4832],[15,4842],[15,4852],[15,4862],[15,4872],[15,4882],[15,4892],[15,4902],[15,4912],[15,4922],[15,4932],[15,4942],[15,4952],[15,4962],[15,4972],[15,4982],[15,4992]],"__id":17,"parentNodes":[8,50,76,102,128,154,180,206,232,258,284,310,336,362,388,414,440,466,492,518,544,570,596,622,648,674,700,726,752,778,804,830,856,882,908,934,960,986,1012,1038,1064,1090,1116,1142,1168,1194,1220,1246,1272,1298,1324,1350,1376,1402,1428,1454,1480,1506,1532,1558,1584,1610,1636,1662,1688,1714,1740,1766,1792,1818,1844,1870,1896,1922,1948,1974,2000,2026,2052,2078,2104,2130,2156,2182,2208,2234,2260,2286,2312,2338,2364,2390,2416,2442,2468,2494,2520,2546,2572,2598,2624,2650,2676,2702,2728,2754,2780,2806,2832,2858,2884,2910,2936,2962,2988,3014,3040,3066,3092,3118,3144,3170,3196,3222,3248,3274,3300,3326,3352,3378,3404,3430,3456,3482,3508,3534,3560,3586,3612,3638,3664,3690,3716,3742,3768,3794,3820,3846,3872,3898,3924,3950,3976,4002,4028,4054,4080,4106,4132,4158,4184,4210,4236,4262,4288,4314,4340,4366,4392,4418,4444,4470,4496,4522,4548,4574,4600,4626,4652,4678,4704,4730,4756,4782,4808,4834,4860,4886,4912,4938,4964,4990,5016,5042,5068,5094,5120,5146,5172,5198,5224,5250,5276,5302,5328,5354,5380,5406,5432,5458,5484,5510,5536,5562,5588,5614,5640,5666,5692,5718,5744,5770,5796,5822,5848,5874,5900,5926,5952,5978,6004,6030,6056,6082,6108,6134,6160,6186,6212,6238,6264,6290,6316,6342,6368,6394,6420,6446,6472,6498,6524,6550,6576,6602,6628,6654,6680,6706,6732,6758,6784,6810,6836,6862,6888,6914,6940,6966,6992,7018,7044,7070,7096,7122,7148,7174,7200,7226,7252,7278,7304,7330,7356,7382,7408,7434,7460,7486,7512,7538,7564,7590,7616,7642,7668,7694,7720,7746,7772,7798,7824,7850,7876,7902,7928,7954,7980,8006,8032,8058,8084,8110,8136,8162,8188,8214,8240,8266,8292,8318,8344,8370,8396,8422,8448,8474,8500,8526,8552,8578,8604,8630,8656,8682,8708,8734,8760,8786,8812,8838,8864,8890,8916,8942,8968,8994,9020,9046,9072,9098,9124,9150,9176,9202,9228,9254,9280,9306,9332,9358,9384,9410,9436,9462,9488,9514,9540,9566,9592,9618,9644,9670,9696,9722,9748,9774,9800,9826,9852,9878,9904,9930,9956,9982,10008,10034,10060,10086,10112,10138,10164,10190,10216,10242,10268,10294,10320,10346,10372,10398,10424,10450,10476,10502,10528,10554,10580,10606,10632,10658,10684,10710,10736,10762,10788,10814,10840,10866,10892,10918,10944,10970,10996,11022,11048,11074,11100,11126,11152,11178,11204,11230,11256,11282,11308,11334,11360,11386,11412,11438,11464,11490,11516,11542,11568,11594,11620,11646,11672,11698,11724,11750,11776,11802,11828,11854,11880,11906,11932,11958,11984,12010,12036,12062,12088,12114,12140,12166,12192,12218,12244,12270,12296,12322,12348,12374,12400,12426,12452,12478,12504,12530,12556,12582,12608,12634,12660,12686,12712,12738,12764,12790,12816,12842,12868,12894,12920,12946,12972,12998],"alias":"f2","constraint":{"type":"object","id":2,"cls":"Fibonacci499","alias":"f2"}},{"type":"equality","out_nodes":[[16,2],[16,12],[16,22],[16,32],[16,42],[16,52],[16,62],[16,72],[16,82],[16,92],[16,102],[16,112],[16,122],[16,132],[16,142],[16,152],[16,162],[16,172],[16,182],[16,192],[16,202],[16,212],[16,222],[16,232],[16,242],[16,252],[16,262],[16,272],[16,282],[16,292],[16,302],[16,312],[16,322],[16,332],[16,342],[16,352],[16,362],[16,372],[16,382],[16,392],[16,402],[16,412],[16,422],[16,432],[16,442],[16,452],[16,462],[16,472],[16,482],[16,492],[16,502],[16,512],[16,522],[16,532],[16,542],[16,552],[16,562],[16,572],[16,582],[16,592],[16,602],[16,612],[16,622],[16,632],[16,642],[16,652],[16,662],[16,672],[16,682],[16,692],[16,702],[16,712],[16,722],[16,732],[16,742],[16,752],[16,762],[16,772],[16,782],[16,792],[16,802],[16,812],[16,822],[16,832],[16,842],[16,852],[16,862],[16,872],[16,882],[16,892],[16,902],[16,912],[16,922],[16,932],[16,942],[16,952],[16,962],[16,972],[16,982],[16,992],[16,1002],[16,1012],[16,1022],[16,1032],[16,1042],[16,1052],[16,1062],[16,1072],[16,1082],[16,1092],[16,1102],[16,1112],[16,1122],[16,1132],[16,1142],[16,1152],[16,1162],[16,1172],[16,1182],[16,1192],[16,1202],[16,1212],[16,1222],[16,1232],[16,1242],[16,1252],[16,1262],[16,1272],[16,1282],[16,1292],[16,1302],[16,1312],[16,1322],[16,1332],[16,1342],[16,1352],[16,1362],[16,1372],[16,1382],[16,1392],[16,1402],[16,1412],[16,1422],[16,1432],[16,1442],[16,1452],[16,1462],[16,1472],[16,1482],[16,1492],[16,1502],[16,1512],[16,1522],[16,1532],[16,1542],[16,1552],[16,1562],[16,1572],[16,1582],[16,1592],[16,1602],[16,1612],[16,1622],[16,1632],[16,1642],[16,1652],[16,1662],[16,1672],[16,1682],[16,1692],[16,1702],[16,1712],[16,1722],[16,1732],[16,1742],[16,1752],[16,1762],[16,1772],[16,1782],[16,1792],[16,1802],[16,1812],[16,1822],[16,1832],[16,1842],[16,1852],[16,1862],[16,1872],[16,1882],[16,1892],[16,1902],[16,1912],[16,1922],[16,1932],[16,1942],[16,1952],[16,1962],[16,1972],[16,1982],[16,1992],[16,2002],[16,2012],[16,2022],[16,2032],[16,2042],[16,2052],[16,2062],[16,2072],[16,2082],[16,2092],[16,2102],[16,2112],[16,2122],[16,2132],[16,2142],[16,2152],[16,2162],[16,2172],[16,2182],[16,2192],[16,2202],[16,2212],[16,2222],[16,2232],[16,2242],[16,2252],[16,2262],[16,2272],[16,2282],[16,2292],[16,2302],[16,2312],[16,2322],[16,2332],[16,2342],[16,2352],[16,2362],[16,2372],[16,2382],[16,2392],[16,2402],[16,2412],[16,2422],[16,2432],[16,2442],[16,2452],[16,2462],[16,2472],[16,2482],[16,2492],[16,2502],[16,2512],[16,2522],[16,2532],[16,2542],[16,2552],[16,2562],[16,2572],[16,2582],[16,2592],[16,2602],[16,2612],[16,2622],[16,2632],[16,2642],[16,2652],[16,2662],[16,2672],[16,2682],[16,2692],[16,2702],[16,2712],[16,2722],[16,2732],[16,2742],[16,2752],[16,2762],[16,2772],[16,2782],[16,2792],[16,2802],[16,2812],[16,2822],[16,2832],[16,2842],[16,2852],[16,2862],[16,2872],[16,2882],[16,2892],[16,2902],[16,2912],[16,2922],[16,2932],[16,2942],[16,2952],[16,2962],[16,2972],[16,2982],[16,2992],[16,3002],[16,3012],[16,3022],[16,3032],[16,3042],[16,3052],[16,3062],[16,3072],[16,3082],[16,3092],[16,3102],[16,3112],[16,3122],[16,3132],[16,3142],[16,3152],[16,3162],[16,3172],[16,3182],[16,3192],[16,3202],[16,3212],[16,3222],[16,3232],[16,3242],[16,3252],[16,3262],[16,3272],[16,3282],[16,3292],[16,3302],[16,3312],[16,3322],[16,3332],[16,3342],[16,3352],[16,3362],[16,3372],[16,3382],[16,3392],[16,3402],[16,3412],[16,3422],[16,3432],[16,3442],[16,3452],[16,3462],[16,3472],[16,3482],[16,3492],[16,3502],[16,3512],[16,3522],[16,3532],[16,3542],[16,3552],[16,3562],[16,3572],[16,3582],[16,3592],[16,3602],[16,3612],[16,3622],[16,3632],[16,3642],[16,3652],[16,3662],[16,3672],[16,3682],[16,3692],[16,3702],[16,3712],[16,3722],[16,3732],[16,3742],[16,3752],[16,3762],[16,3772],[16,3782],[16,3792],[16,3802],[16,3812],[16,3822],[16,3832],[16,3842],[16,3852],[16,3862],[16,3872],[16,3882],[16,3892],[16,3902],[16,3912],[16,3922],[16,3932],[16,3942],[16,3952],[16,3962],[16,3972],[16,3982],[16,3992],[16,4002],[16,4012],[16,4022],[16,4032],[16,4042],[16,4052],[16,4062],[16,4072],[16,4082],[16,4092],[16,4102],[16,4112],[16,4122],[16,4132],[16,4142],[16,4152],[16,4162],[16,4172],[16,4182],[16,4192],[16,4202],[16,4212],[16,4222],[16,4232],[16,4242],[16,4252],[16,4262],[16,4272],[16,4282],[16,4292],[16,4302],[16,4312],[16,4322],[16,4332],[16,4342],[16,4352],[16,4362],[16,4372],[16,4382],[16,4392],[16,4402],[16,4412],[16,4422],[16,4432],[16,4442],[16,4452],[16,4462],[16,4472],[16,4482],[16,4492],[16,4502],[16,4512],[16,4522],[16,4532],[16,4542],[16,4552],[16,4562],[16,4572],[16,4582],[16,4592],[16,4602],[16,4612],[16,4622],[16,4632],[16,4642],[16,4652],[16,4662],[16,4672],[16,4682],[16,4692],[16,4702],[16,4712],[16,4722],[16,4732],[16,4742],[16,4752],[16,4762],[16,4772],[16,4782],[16,4792],[16,4802],[16,4812],[16,4822],[16,4832],[16,4842],[16,4852],[16,4862],[16,4872],[16,4882],[16,4892],[16,4902],[16,4912],[16,4922],[16,4932],[16,4942],[16,4952],[16,4962],[16,4972],[16,4982],[16,4992]],"__id":18,"parentNodes":[14],"constraint":{"options":{"alias":"f2","pattern":"f2.value != -1 && f2.sequence == s1 + 1","scope2":{}},"pattern":"f2.value != -1 && f2.sequence == s1 + 1","type":"inequality","alias":"f2","constraint":[[["f2",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"neq"]}},{"type":"property","out_nodes":[[17,2],[54,12],[80,22],[106,32],[132,42],[158,52],[184,62],[210,72],[236,82],[262,92],[288,102],[314,112],[340,122],[366,132],[392,142],[418,152],[444,162],[470,172],[496,182],[522,192],[548,202],[574,212],[600,222],[626,232],[652,242],[678,252],[704,262],[730,272],[756,282],[782,292],[808,302],[834,312],[860,322],[886,332],[912,342],[938,352],[964,362],[990,372],[1016,382],[1042,392],[1068,402],[1094,412],[1120,422],[1146,432],[1172,442],[1198,452],[1224,462],[1250,472],[1276,482],[1302,492],[1328,502],[1354,512],[1380,522],[1406,532],[1432,542],[1458,552],[1484,562],[1510,572],[1536,582],[1562,592],[1588,602],[1614,612],[1640,622],[1666,632],[1692,642],[1718,652],[1744,662],[1770,672],[1796,682],[1822,692],[1848,702],[1874,712],[1900,722],[1926,732],[1952,742],[1978,752],[2004,762],[2030,772],[2056,782],[2082,792],[2108,802],[2134,812],[2160,822],[2186,832],[2212,842],[2238,852],[2264,862],[2290,872],[2316,882],[2342,892],[2368,902],[2394,912],[2420,922],[2446,932],[2472,942],[2498,952],[2524,962],[2550,972],[2576,982],[2602,992],[2628,1002],[2654,1012],[2680,1022],[2706,1032],[2732,1042],[2758,1052],[2784,1062],[2810,1072],[2836,1082],[2862,1092],[2888,1102],[2914,1112],[2940,1122],[2966,1132],[2992,1142],[3018,1152],[3044,1162],[3070,1172],[3096,1182],[3122,1192],[3148,1202],[3174,1212],[3200,1222],[3226,1232],[3252,1242],[3278,1252],[3304,1262],[3330,1272],[3356,1282],[3382,1292],[3408,1302],[3434,1312],[3460,1322],[3486,1332],[3512,1342],[3538,1352],[3564,1362],[3590,1372],[3616,1382],[3642,1392],[3668,1402],[3694,1412],[3720,1422],[3746,1432],[3772,1442],[3798,1452],[3824,1462],[3850,1472],[3876,1482],[3902,1492],[3928,1502],[3954,1512],[3980,1522],[4006,1532],[4032,1542],[4058,1552],[4084,1562],[4110,1572],[4136,1582],[4162,1592],[4188,1602],[4214,1612],[4240,1622],[4266,1632],[4292,1642],[4318,1652],[4344,1662],[4370,1672],[4396,1682],[4422,1692],[4448,1702],[4474,1712],[4500,1722],[4526,1732],[4552,1742],[4578,1752],[4604,1762],[4630,1772],[4656,1782],[4682,1792],[4708,1802],[4734,1812],[4760,1822],[4786,1832],[4812,1842],[4838,1852],[4864,1862],[4890,1872],[4916,1882],[4942,1892],[4968,1902],[4994,1912],[5020,1922],[5046,1932],[5072,1942],[5098,1952],[5124,1962],[5150,1972],[5176,1982],[5202,1992],[5228,2002],[5254,2012],[5280,2022],[5306,2032],[5332,2042],[5358,2052],[5384,2062],[5410,2072],[5436,2082],[5462,2092],[5488,2102],[5514,2112],[5540,2122],[5566,2132],[5592,2142],[5618,2152],[5644,2162],[5670,2172],[5696,2182],[5722,2192],[5748,2202],[5774,2212],[5800,2222],[5826,2232],[5852,2242],[5878,2252],[5904,2262],[5930,2272],[5956,2282],[5982,2292],[6008,2302],[6034,2312],[6060,2322],[6086,2332],[6112,2342],[6138,2352],[6164,2362],[6190,2372],[6216,2382],[6242,2392],[6268,2402],[6294,2412],[6320,2422],[6346,2432],[6372,2442],[6398,2452],[6424,2462],[6450,2472],[6476,2482],[6502,2492],[6528,2502],[6554,2512],[6580,2522],[6606,2532],[6632,2542],[6658,2552],[6684,2562],[6710,2572],[6736,2582],[6762,2592],[6788,2602],[6814,2612],[6840,2622],[6866,2632],[6892,2642],[6918,2652],[6944,2662],[6970,2672],[6996,2682],[7022,2692],[7048,2702],[7074,2712],[7100,2722],[7126,2732],[7152,2742],[7178,2752],[7204,2762],[7230,2772],[7256,2782],[7282,2792],[7308,2802],[7334,2812],[7360,2822],[7386,2832],[7412,2842],[7438,2852],[7464,2862],[7490,2872],[7516,2882],[7542,2892],[7568,2902],[7594,2912],[7620,2922],[7646,2932],[7672,2942],[7698,2952],[7724,2962],[7750,2972],[7776,2982],[7802,2992],[7828,3002],[7854,3012],[7880,3022],[7906,3032],[7932,3042],[7958,3052],[7984,3062],[8010,3072],[8036,3082],[8062,3092],[8088,3102],[8114,3112],[8140,3122],[8166,3132],[8192,3142],[8218,3152],[8244,3162],[8270,3172],[8296,3182],[8322,3192],[8348,3202],[8374,3212],[8400,3222],[8426,3232],[8452,3242],[8478,3252],[8504,3262],[8530,3272],[8556,3282],[8582,3292],[8608,3302],[8634,3312],[8660,3322],[8686,3332],[8712,3342],[8738,3352],[8764,3362],[8790,3372],[8816,3382],[8842,3392],[8868,3402],[8894,3412],[8920,3422],[8946,3432],[8972,3442],[8998,3452],[9024,3462],[9050,3472],[9076,3482],[9102,3492],[9128,3502],[9154,3512],[9180,3522],[9206,3532],[9232,3542],[9258,3552],[9284,3562],[9310,3572],[9336,3582],[9362,3592],[9388,3602],[9414,3612],[9440,3622],[9466,3632],[9492,3642],[9518,3652],[9544,3662],[9570,3672],[9596,3682],[9622,3692],[9648,3702],[9674,3712],[9700,3722],[9726,3732],[9752,3742],[9778,3752],[9804,3762],[9830,3772],[9856,3782],[9882,3792],[9908,3802],[9934,3812],[9960,3822],[9986,3832],[10012,3842],[10038,3852],[10064,3862],[10090,3872],[10116,3882],[10142,3892],[10168,3902],[10194,3912],[10220,3922],[10246,3932],[10272,3942],[10298,3952],[10324,3962],[10350,3972],[10376,3982],[10402,3992],[10428,4002],[10454,4012],[10480,4022],[10506,4032],[10532,4042],[10558,4052],[10584,4062],[10610,4072],[10636,4082],[10662,4092],[10688,4102],[10714,4112],[10740,4122],[10766,4132],[10792,4142],[10818,4152],[10844,4162],[10870,4172],[10896,4182],[10922,4192],[10948,4202],[10974,4212],[11000,4222],[11026,4232],[11052,4242],[11078,4252],[11104,4262],[11130,4272],[11156,4282],[11182,4292],[11208,4302],[11234,4312],[11260,4322],[11286,4332],[11312,4342],[11338,4352],[11364,4362],[11390,4372],[11416,4382],[11442,4392],[11468,4402],[11494,4412],[11520,4422],[11546,4432],[11572,4442],[11598,4452],[11624,4462],[11650,4472],[11676,4482],[11702,4492],[11728,4502],[11754,4512],[11780,4522],[11806,4532],[11832,4542],[11858,4552],[11884,4562],[11910,4572],[11936,4582],[11962,4592],[11988,4602],[12014,4612],[12040,4622],[12066,4632],[12092,4642],[12118,4652],[12144,4662],[12170,4672],[12196,4682],[12222,4692],[12248,4702],[12274,4712],[12300,4722],[12326,4732],[12352,4742],[12378,4752],[12404,4762],[12430,4772],[12456,4782],[12482,4792],[12508,4802],[12534,4812],[12560,4822],[12586,4832],[12612,4842],[12638,4852],[12664,4862],[12690,4872],[12716,4882],[12742,4892],[12768,4902],[12794,4912],[12820,4922],[12846,4932],[12872,4942],[12898,4952],[12924,4962],[12950,4972],[12976,4982],[13002,4992]],"__id":19,"parentNodes":[15],"constraint":{"type":"hash","alias":"f2","constraint":{"sequence":"s2"}},"alias":"f2","constiables":{"sequence":"s2"}},{"type":"rightadapter","out_nodes":[[12,2]],"__id":20,"parentNodes":[16]},{"type":"beta","out_nodes":[[19,-1]],"__id":21,"parentNodes":[23,27]},{"type":"leftadapter","out_nodes":[[12,-1]],"__id":22,"parentNodes":[]},{"type":"alias","out_nodes":[[21,3],[37,7],[21,13],[37,17],[21,23],[37,27],[21,33],[37,37],[21,43],[37,47],[21,53],[37,57],[21,63],[37,67],[21,73],[37,77],[21,83],[37,87],[21,93],[37,97],[21,103],[37,107],[21,113],[37,117],[21,123],[37,127],[21,133],[37,137],[21,143],[37,147],[21,153],[37,157],[21,163],[37,167],[21,173],[37,177],[21,183],[37,187],[21,193],[37,197],[21,203],[37,207],[21,213],[37,217],[21,223],[37,227],[21,233],[37,237],[21,243],[37,247],[21,253],[37,257],[21,263],[37,267],[21,273],[37,277],[21,283],[37,287],[21,293],[37,297],[21,303],[37,307],[21,313],[37,317],[21,323],[37,327],[21,333],[37,337],[21,343],[37,347],[21,353],[37,357],[21,363],[37,367],[21,373],[37,377],[21,383],[37,387],[21,393],[37,397],[21,403],[37,407],[21,413],[37,417],[21,423],[37,427],[21,433],[37,437],[21,443],[37,447],[21,453],[37,457],[21,463],[37,467],[21,473],[37,477],[21,483],[37,487],[21,493],[37,497],[21,503],[37,507],[21,513],[37,517],[21,523],[37,527],[21,533],[37,537],[21,543],[37,547],[21,553],[37,557],[21,563],[37,567],[21,573],[37,577],[21,583],[37,587],[21,593],[37,597],[21,603],[37,607],[21,613],[37,617],[21,623],[37,627],[21,633],[37,637],[21,643],[37,647],[21,653],[37,657],[21,663],[37,667],[21,673],[37,677],[21,683],[37,687],[21,693],[37,697],[21,703],[37,707],[21,713],[37,717],[21,723],[37,727],[21,733],[37,737],[21,743],[37,747],[21,753],[37,757],[21,763],[37,767],[21,773],[37,777],[21,783],[37,787],[21,793],[37,797],[21,803],[37,807],[21,813],[37,817],[21,823],[37,827],[21,833],[37,837],[21,843],[37,847],[21,853],[37,857],[21,863],[37,867],[21,873],[37,877],[21,883],[37,887],[21,893],[37,897],[21,903],[37,907],[21,913],[37,917],[21,923],[37,927],[21,933],[37,937],[21,943],[37,947],[21,953],[37,957],[21,963],[37,967],[21,973],[37,977],[21,983],[37,987],[21,993],[37,997],[21,1003],[37,1007],[21,1013],[37,1017],[21,1023],[37,1027],[21,1033],[37,1037],[21,1043],[37,1047],[21,1053],[37,1057],[21,1063],[37,1067],[21,1073],[37,1077],[21,1083],[37,1087],[21,1093],[37,1097],[21,1103],[37,1107],[21,1113],[37,1117],[21,1123],[37,1127],[21,1133],[37,1137],[21,1143],[37,1147],[21,1153],[37,1157],[21,1163],[37,1167],[21,1173],[37,1177],[21,1183],[37,1187],[21,1193],[37,1197],[21,1203],[37,1207],[21,1213],[37,1217],[21,1223],[37,1227],[21,1233],[37,1237],[21,1243],[37,1247],[21,1253],[37,1257],[21,1263],[37,1267],[21,1273],[37,1277],[21,1283],[37,1287],[21,1293],[37,1297],[21,1303],[37,1307],[21,1313],[37,1317],[21,1323],[37,1327],[21,1333],[37,1337],[21,1343],[37,1347],[21,1353],[37,1357],[21,1363],[37,1367],[21,1373],[37,1377],[21,1383],[37,1387],[21,1393],[37,1397],[21,1403],[37,1407],[21,1413],[37,1417],[21,1423],[37,1427],[21,1433],[37,1437],[21,1443],[37,1447],[21,1453],[37,1457],[21,1463],[37,1467],[21,1473],[37,1477],[21,1483],[37,1487],[21,1493],[37,1497],[21,1503],[37,1507],[21,1513],[37,1517],[21,1523],[37,1527],[21,1533],[37,1537],[21,1543],[37,1547],[21,1553],[37,1557],[21,1563],[37,1567],[21,1573],[37,1577],[21,1583],[37,1587],[21,1593],[37,1597],[21,1603],[37,1607],[21,1613],[37,1617],[21,1623],[37,1627],[21,1633],[37,1637],[21,1643],[37,1647],[21,1653],[37,1657],[21,1663],[37,1667],[21,1673],[37,1677],[21,1683],[37,1687],[21,1693],[37,1697],[21,1703],[37,1707],[21,1713],[37,1717],[21,1723],[37,1727],[21,1733],[37,1737],[21,1743],[37,1747],[21,1753],[37,1757],[21,1763],[37,1767],[21,1773],[37,1777],[21,1783],[37,1787],[21,1793],[37,1797],[21,1803],[37,1807],[21,1813],[37,1817],[21,1823],[37,1827],[21,1833],[37,1837],[21,1843],[37,1847],[21,1853],[37,1857],[21,1863],[37,1867],[21,1873],[37,1877],[21,1883],[37,1887],[21,1893],[37,1897],[21,1903],[37,1907],[21,1913],[37,1917],[21,1923],[37,1927],[21,1933],[37,1937],[21,1943],[37,1947],[21,1953],[37,1957],[21,1963],[37,1967],[21,1973],[37,1977],[21,1983],[37,1987],[21,1993],[37,1997],[21,2003],[37,2007],[21,2013],[37,2017],[21,2023],[37,2027],[21,2033],[37,2037],[21,2043],[37,2047],[21,2053],[37,2057],[21,2063],[37,2067],[21,2073],[37,2077],[21,2083],[37,2087],[21,2093],[37,2097],[21,2103],[37,2107],[21,2113],[37,2117],[21,2123],[37,2127],[21,2133],[37,2137],[21,2143],[37,2147],[21,2153],[37,2157],[21,2163],[37,2167],[21,2173],[37,2177],[21,2183],[37,2187],[21,2193],[37,2197],[21,2203],[37,2207],[21,2213],[37,2217],[21,2223],[37,2227],[21,2233],[37,2237],[21,2243],[37,2247],[21,2253],[37,2257],[21,2263],[37,2267],[21,2273],[37,2277],[21,2283],[37,2287],[21,2293],[37,2297],[21,2303],[37,2307],[21,2313],[37,2317],[21,2323],[37,2327],[21,2333],[37,2337],[21,2343],[37,2347],[21,2353],[37,2357],[21,2363],[37,2367],[21,2373],[37,2377],[21,2383],[37,2387],[21,2393],[37,2397],[21,2403],[37,2407],[21,2413],[37,2417],[21,2423],[37,2427],[21,2433],[37,2437],[21,2443],[37,2447],[21,2453],[37,2457],[21,2463],[37,2467],[21,2473],[37,2477],[21,2483],[37,2487],[21,2493],[37,2497],[21,2503],[37,2507],[21,2513],[37,2517],[21,2523],[37,2527],[21,2533],[37,2537],[21,2543],[37,2547],[21,2553],[37,2557],[21,2563],[37,2567],[21,2573],[37,2577],[21,2583],[37,2587],[21,2593],[37,2597],[21,2603],[37,2607],[21,2613],[37,2617],[21,2623],[37,2627],[21,2633],[37,2637],[21,2643],[37,2647],[21,2653],[37,2657],[21,2663],[37,2667],[21,2673],[37,2677],[21,2683],[37,2687],[21,2693],[37,2697],[21,2703],[37,2707],[21,2713],[37,2717],[21,2723],[37,2727],[21,2733],[37,2737],[21,2743],[37,2747],[21,2753],[37,2757],[21,2763],[37,2767],[21,2773],[37,2777],[21,2783],[37,2787],[21,2793],[37,2797],[21,2803],[37,2807],[21,2813],[37,2817],[21,2823],[37,2827],[21,2833],[37,2837],[21,2843],[37,2847],[21,2853],[37,2857],[21,2863],[37,2867],[21,2873],[37,2877],[21,2883],[37,2887],[21,2893],[37,2897],[21,2903],[37,2907],[21,2913],[37,2917],[21,2923],[37,2927],[21,2933],[37,2937],[21,2943],[37,2947],[21,2953],[37,2957],[21,2963],[37,2967],[21,2973],[37,2977],[21,2983],[37,2987],[21,2993],[37,2997],[21,3003],[37,3007],[21,3013],[37,3017],[21,3023],[37,3027],[21,3033],[37,3037],[21,3043],[37,3047],[21,3053],[37,3057],[21,3063],[37,3067],[21,3073],[37,3077],[21,3083],[37,3087],[21,3093],[37,3097],[21,3103],[37,3107],[21,3113],[37,3117],[21,3123],[37,3127],[21,3133],[37,3137],[21,3143],[37,3147],[21,3153],[37,3157],[21,3163],[37,3167],[21,3173],[37,3177],[21,3183],[37,3187],[21,3193],[37,3197],[21,3203],[37,3207],[21,3213],[37,3217],[21,3223],[37,3227],[21,3233],[37,3237],[21,3243],[37,3247],[21,3253],[37,3257],[21,3263],[37,3267],[21,3273],[37,3277],[21,3283],[37,3287],[21,3293],[37,3297],[21,3303],[37,3307],[21,3313],[37,3317],[21,3323],[37,3327],[21,3333],[37,3337],[21,3343],[37,3347],[21,3353],[37,3357],[21,3363],[37,3367],[21,3373],[37,3377],[21,3383],[37,3387],[21,3393],[37,3397],[21,3403],[37,3407],[21,3413],[37,3417],[21,3423],[37,3427],[21,3433],[37,3437],[21,3443],[37,3447],[21,3453],[37,3457],[21,3463],[37,3467],[21,3473],[37,3477],[21,3483],[37,3487],[21,3493],[37,3497],[21,3503],[37,3507],[21,3513],[37,3517],[21,3523],[37,3527],[21,3533],[37,3537],[21,3543],[37,3547],[21,3553],[37,3557],[21,3563],[37,3567],[21,3573],[37,3577],[21,3583],[37,3587],[21,3593],[37,3597],[21,3603],[37,3607],[21,3613],[37,3617],[21,3623],[37,3627],[21,3633],[37,3637],[21,3643],[37,3647],[21,3653],[37,3657],[21,3663],[37,3667],[21,3673],[37,3677],[21,3683],[37,3687],[21,3693],[37,3697],[21,3703],[37,3707],[21,3713],[37,3717],[21,3723],[37,3727],[21,3733],[37,3737],[21,3743],[37,3747],[21,3753],[37,3757],[21,3763],[37,3767],[21,3773],[37,3777],[21,3783],[37,3787],[21,3793],[37,3797],[21,3803],[37,3807],[21,3813],[37,3817],[21,3823],[37,3827],[21,3833],[37,3837],[21,3843],[37,3847],[21,3853],[37,3857],[21,3863],[37,3867],[21,3873],[37,3877],[21,3883],[37,3887],[21,3893],[37,3897],[21,3903],[37,3907],[21,3913],[37,3917],[21,3923],[37,3927],[21,3933],[37,3937],[21,3943],[37,3947],[21,3953],[37,3957],[21,3963],[37,3967],[21,3973],[37,3977],[21,3983],[37,3987],[21,3993],[37,3997],[21,4003],[37,4007],[21,4013],[37,4017],[21,4023],[37,4027],[21,4033],[37,4037],[21,4043],[37,4047],[21,4053],[37,4057],[21,4063],[37,4067],[21,4073],[37,4077],[21,4083],[37,4087],[21,4093],[37,4097],[21,4103],[37,4107],[21,4113],[37,4117],[21,4123],[37,4127],[21,4133],[37,4137],[21,4143],[37,4147],[21,4153],[37,4157],[21,4163],[37,4167],[21,4173],[37,4177],[21,4183],[37,4187],[21,4193],[37,4197],[21,4203],[37,4207],[21,4213],[37,4217],[21,4223],[37,4227],[21,4233],[37,4237],[21,4243],[37,4247],[21,4253],[37,4257],[21,4263],[37,4267],[21,4273],[37,4277],[21,4283],[37,4287],[21,4293],[37,4297],[21,4303],[37,4307],[21,4313],[37,4317],[21,4323],[37,4327],[21,4333],[37,4337],[21,4343],[37,4347],[21,4353],[37,4357],[21,4363],[37,4367],[21,4373],[37,4377],[21,4383],[37,4387],[21,4393],[37,4397],[21,4403],[37,4407],[21,4413],[37,4417],[21,4423],[37,4427],[21,4433],[37,4437],[21,4443],[37,4447],[21,4453],[37,4457],[21,4463],[37,4467],[21,4473],[37,4477],[21,4483],[37,4487],[21,4493],[37,4497],[21,4503],[37,4507],[21,4513],[37,4517],[21,4523],[37,4527],[21,4533],[37,4537],[21,4543],[37,4547],[21,4553],[37,4557],[21,4563],[37,4567],[21,4573],[37,4577],[21,4583],[37,4587],[21,4593],[37,4597],[21,4603],[37,4607],[21,4613],[37,4617],[21,4623],[37,4627],[21,4633],[37,4637],[21,4643],[37,4647],[21,4653],[37,4657],[21,4663],[37,4667],[21,4673],[37,4677],[21,4683],[37,4687],[21,4693],[37,4697],[21,4703],[37,4707],[21,4713],[37,4717],[21,4723],[37,4727],[21,4733],[37,4737],[21,4743],[37,4747],[21,4753],[37,4757],[21,4763],[37,4767],[21,4773],[37,4777],[21,4783],[37,4787],[21,4793],[37,4797],[21,4803],[37,4807],[21,4813],[37,4817],[21,4823],[37,4827],[21,4833],[37,4837],[21,4843],[37,4847],[21,4853],[37,4857],[21,4863],[37,4867],[21,4873],[37,4877],[21,4883],[37,4887],[21,4893],[37,4897],[21,4903],[37,4907],[21,4913],[37,4917],[21,4923],[37,4927],[21,4933],[37,4937],[21,4943],[37,4947],[21,4953],[37,4957],[21,4963],[37,4967],[21,4973],[37,4977],[21,4983],[37,4987],[21,4993],[37,4997]],"__id":24,"parentNodes":[8,50,76,102,128,154,180,206,232,258,284,310,336,362,388,414,440,466,492,518,544,570,596,622,648,674,700,726,752,778,804,830,856,882,908,934,960,986,1012,1038,1064,1090,1116,1142,1168,1194,1220,1246,1272,1298,1324,1350,1376,1402,1428,1454,1480,1506,1532,1558,1584,1610,1636,1662,1688,1714,1740,1766,1792,1818,1844,1870,1896,1922,1948,1974,2000,2026,2052,2078,2104,2130,2156,2182,2208,2234,2260,2286,2312,2338,2364,2390,2416,2442,2468,2494,2520,2546,2572,2598,2624,2650,2676,2702,2728,2754,2780,2806,2832,2858,2884,2910,2936,2962,2988,3014,3040,3066,3092,3118,3144,3170,3196,3222,3248,3274,3300,3326,3352,3378,3404,3430,3456,3482,3508,3534,3560,3586,3612,3638,3664,3690,3716,3742,3768,3794,3820,3846,3872,3898,3924,3950,3976,4002,4028,4054,4080,4106,4132,4158,4184,4210,4236,4262,4288,4314,4340,4366,4392,4418,4444,4470,4496,4522,4548,4574,4600,4626,4652,4678,4704,4730,4756,4782,4808,4834,4860,4886,4912,4938,4964,4990,5016,5042,5068,5094,5120,5146,5172,5198,5224,5250,5276,5302,5328,5354,5380,5406,5432,5458,5484,5510,5536,5562,5588,5614,5640,5666,5692,5718,5744,5770,5796,5822,5848,5874,5900,5926,5952,5978,6004,6030,6056,6082,6108,6134,6160,6186,6212,6238,6264,6290,6316,6342,6368,6394,6420,6446,6472,6498,6524,6550,6576,6602,6628,6654,6680,6706,6732,6758,6784,6810,6836,6862,6888,6914,6940,6966,6992,7018,7044,7070,7096,7122,7148,7174,7200,7226,7252,7278,7304,7330,7356,7382,7408,7434,7460,7486,7512,7538,7564,7590,7616,7642,7668,7694,7720,7746,7772,7798,7824,7850,7876,7902,7928,7954,7980,8006,8032,8058,8084,8110,8136,8162,8188,8214,8240,8266,8292,8318,8344,8370,8396,8422,8448,8474,8500,8526,8552,8578,8604,8630,8656,8682,8708,8734,8760,8786,8812,8838,8864,8890,8916,8942,8968,8994,9020,9046,9072,9098,9124,9150,9176,9202,9228,9254,9280,9306,9332,9358,9384,9410,9436,9462,9488,9514,9540,9566,9592,9618,9644,9670,9696,9722,9748,9774,9800,9826,9852,9878,9904,9930,9956,9982,10008,10034,10060,10086,10112,10138,10164,10190,10216,10242,10268,10294,10320,10346,10372,10398,10424,10450,10476,10502,10528,10554,10580,10606,10632,10658,10684,10710,10736,10762,10788,10814,10840,10866,10892,10918,10944,10970,10996,11022,11048,11074,11100,11126,11152,11178,11204,11230,11256,11282,11308,11334,11360,11386,11412,11438,11464,11490,11516,11542,11568,11594,11620,11646,11672,11698,11724,11750,11776,11802,11828,11854,11880,11906,11932,11958,11984,12010,12036,12062,12088,12114,12140,12166,12192,12218,12244,12270,12296,12322,12348,12374,12400,12426,12452,12478,12504,12530,12556,12582,12608,12634,12660,12686,12712,12738,12764,12790,12816,12842,12868,12894,12920,12946,12972,12998],"alias":"f1","constraint":{"type":"object","id":1,"cls":"Fibonacci499","alias":"f1"}},{"type":"equality","out_nodes":[[22,3],[22,13],[22,23],[22,33],[22,43],[22,53],[22,63],[22,73],[22,83],[22,93],[22,103],[22,113],[22,123],[22,133],[22,143],[22,153],[22,163],[22,173],[22,183],[22,193],[22,203],[22,213],[22,223],[22,233],[22,243],[22,253],[22,263],[22,273],[22,283],[22,293],[22,303],[22,313],[22,323],[22,333],[22,343],[22,353],[22,363],[22,373],[22,383],[22,393],[22,403],[22,413],[22,423],[22,433],[22,443],[22,453],[22,463],[22,473],[22,483],[22,493],[22,503],[22,513],[22,523],[22,533],[22,543],[22,553],[22,563],[22,573],[22,583],[22,593],[22,603],[22,613],[22,623],[22,633],[22,643],[22,653],[22,663],[22,673],[22,683],[22,693],[22,703],[22,713],[22,723],[22,733],[22,743],[22,753],[22,763],[22,773],[22,783],[22,793],[22,803],[22,813],[22,823],[22,833],[22,843],[22,853],[22,863],[22,873],[22,883],[22,893],[22,903],[22,913],[22,923],[22,933],[22,943],[22,953],[22,963],[22,973],[22,983],[22,993],[22,1003],[22,1013],[22,1023],[22,1033],[22,1043],[22,1053],[22,1063],[22,1073],[22,1083],[22,1093],[22,1103],[22,1113],[22,1123],[22,1133],[22,1143],[22,1153],[22,1163],[22,1173],[22,1183],[22,1193],[22,1203],[22,1213],[22,1223],[22,1233],[22,1243],[22,1253],[22,1263],[22,1273],[22,1283],[22,1293],[22,1303],[22,1313],[22,1323],[22,1333],[22,1343],[22,1353],[22,1363],[22,1373],[22,1383],[22,1393],[22,1403],[22,1413],[22,1423],[22,1433],[22,1443],[22,1453],[22,1463],[22,1473],[22,1483],[22,1493],[22,1503],[22,1513],[22,1523],[22,1533],[22,1543],[22,1553],[22,1563],[22,1573],[22,1583],[22,1593],[22,1603],[22,1613],[22,1623],[22,1633],[22,1643],[22,1653],[22,1663],[22,1673],[22,1683],[22,1693],[22,1703],[22,1713],[22,1723],[22,1733],[22,1743],[22,1753],[22,1763],[22,1773],[22,1783],[22,1793],[22,1803],[22,1813],[22,1823],[22,1833],[22,1843],[22,1853],[22,1863],[22,1873],[22,1883],[22,1893],[22,1903],[22,1913],[22,1923],[22,1933],[22,1943],[22,1953],[22,1963],[22,1973],[22,1983],[22,1993],[22,2003],[22,2013],[22,2023],[22,2033],[22,2043],[22,2053],[22,2063],[22,2073],[22,2083],[22,2093],[22,2103],[22,2113],[22,2123],[22,2133],[22,2143],[22,2153],[22,2163],[22,2173],[22,2183],[22,2193],[22,2203],[22,2213],[22,2223],[22,2233],[22,2243],[22,2253],[22,2263],[22,2273],[22,2283],[22,2293],[22,2303],[22,2313],[22,2323],[22,2333],[22,2343],[22,2353],[22,2363],[22,2373],[22,2383],[22,2393],[22,2403],[22,2413],[22,2423],[22,2433],[22,2443],[22,2453],[22,2463],[22,2473],[22,2483],[22,2493],[22,2503],[22,2513],[22,2523],[22,2533],[22,2543],[22,2553],[22,2563],[22,2573],[22,2583],[22,2593],[22,2603],[22,2613],[22,2623],[22,2633],[22,2643],[22,2653],[22,2663],[22,2673],[22,2683],[22,2693],[22,2703],[22,2713],[22,2723],[22,2733],[22,2743],[22,2753],[22,2763],[22,2773],[22,2783],[22,2793],[22,2803],[22,2813],[22,2823],[22,2833],[22,2843],[22,2853],[22,2863],[22,2873],[22,2883],[22,2893],[22,2903],[22,2913],[22,2923],[22,2933],[22,2943],[22,2953],[22,2963],[22,2973],[22,2983],[22,2993],[22,3003],[22,3013],[22,3023],[22,3033],[22,3043],[22,3053],[22,3063],[22,3073],[22,3083],[22,3093],[22,3103],[22,3113],[22,3123],[22,3133],[22,3143],[22,3153],[22,3163],[22,3173],[22,3183],[22,3193],[22,3203],[22,3213],[22,3223],[22,3233],[22,3243],[22,3253],[22,3263],[22,3273],[22,3283],[22,3293],[22,3303],[22,3313],[22,3323],[22,3333],[22,3343],[22,3353],[22,3363],[22,3373],[22,3383],[22,3393],[22,3403],[22,3413],[22,3423],[22,3433],[22,3443],[22,3453],[22,3463],[22,3473],[22,3483],[22,3493],[22,3503],[22,3513],[22,3523],[22,3533],[22,3543],[22,3553],[22,3563],[22,3573],[22,3583],[22,3593],[22,3603],[22,3613],[22,3623],[22,3633],[22,3643],[22,3653],[22,3663],[22,3673],[22,3683],[22,3693],[22,3703],[22,3713],[22,3723],[22,3733],[22,3743],[22,3753],[22,3763],[22,3773],[22,3783],[22,3793],[22,3803],[22,3813],[22,3823],[22,3833],[22,3843],[22,3853],[22,3863],[22,3873],[22,3883],[22,3893],[22,3903],[22,3913],[22,3923],[22,3933],[22,3943],[22,3953],[22,3963],[22,3973],[22,3983],[22,3993],[22,4003],[22,4013],[22,4023],[22,4033],[22,4043],[22,4053],[22,4063],[22,4073],[22,4083],[22,4093],[22,4103],[22,4113],[22,4123],[22,4133],[22,4143],[22,4153],[22,4163],[22,4173],[22,4183],[22,4193],[22,4203],[22,4213],[22,4223],[22,4233],[22,4243],[22,4253],[22,4263],[22,4273],[22,4283],[22,4293],[22,4303],[22,4313],[22,4323],[22,4333],[22,4343],[22,4353],[22,4363],[22,4373],[22,4383],[22,4393],[22,4403],[22,4413],[22,4423],[22,4433],[22,4443],[22,4453],[22,4463],[22,4473],[22,4483],[22,4493],[22,4503],[22,4513],[22,4523],[22,4533],[22,4543],[22,4553],[22,4563],[22,4573],[22,4583],[22,4593],[22,4603],[22,4613],[22,4623],[22,4633],[22,4643],[22,4653],[22,4663],[22,4673],[22,4683],[22,4693],[22,4703],[22,4713],[22,4723],[22,4733],[22,4743],[22,4753],[22,4763],[22,4773],[22,4783],[22,4793],[22,4803],[22,4813],[22,4823],[22,4833],[22,4843],[22,4853],[22,4863],[22,4873],[22,4883],[22,4893],[22,4903],[22,4913],[22,4923],[22,4933],[22,4943],[22,4953],[22,4963],[22,4973],[22,4983],[22,4993]],"__id":25,"parentNodes":[20],"constraint":{"options":{"alias":"f1","pattern":"f1.value != -1","scope2":{}},"pattern":"f1.value != -1","type":"inequality","alias":"f1","constraint":[[["f1",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"neq"]}},{"type":"property","out_nodes":[[23,3],[57,13],[83,23],[109,33],[135,43],[161,53],[187,63],[213,73],[239,83],[265,93],[291,103],[317,113],[343,123],[369,133],[395,143],[421,153],[447,163],[473,173],[499,183],[525,193],[551,203],[577,213],[603,223],[629,233],[655,243],[681,253],[707,263],[733,273],[759,283],[785,293],[811,303],[837,313],[863,323],[889,333],[915,343],[941,353],[967,363],[993,373],[1019,383],[1045,393],[1071,403],[1097,413],[1123,423],[1149,433],[1175,443],[1201,453],[1227,463],[1253,473],[1279,483],[1305,493],[1331,503],[1357,513],[1383,523],[1409,533],[1435,543],[1461,553],[1487,563],[1513,573],[1539,583],[1565,593],[1591,603],[1617,613],[1643,623],[1669,633],[1695,643],[1721,653],[1747,663],[1773,673],[1799,683],[1825,693],[1851,703],[1877,713],[1903,723],[1929,733],[1955,743],[1981,753],[2007,763],[2033,773],[2059,783],[2085,793],[2111,803],[2137,813],[2163,823],[2189,833],[2215,843],[2241,853],[2267,863],[2293,873],[2319,883],[2345,893],[2371,903],[2397,913],[2423,923],[2449,933],[2475,943],[2501,953],[2527,963],[2553,973],[2579,983],[2605,993],[2631,1003],[2657,1013],[2683,1023],[2709,1033],[2735,1043],[2761,1053],[2787,1063],[2813,1073],[2839,1083],[2865,1093],[2891,1103],[2917,1113],[2943,1123],[2969,1133],[2995,1143],[3021,1153],[3047,1163],[3073,1173],[3099,1183],[3125,1193],[3151,1203],[3177,1213],[3203,1223],[3229,1233],[3255,1243],[3281,1253],[3307,1263],[3333,1273],[3359,1283],[3385,1293],[3411,1303],[3437,1313],[3463,1323],[3489,1333],[3515,1343],[3541,1353],[3567,1363],[3593,1373],[3619,1383],[3645,1393],[3671,1403],[3697,1413],[3723,1423],[3749,1433],[3775,1443],[3801,1453],[3827,1463],[3853,1473],[3879,1483],[3905,1493],[3931,1503],[3957,1513],[3983,1523],[4009,1533],[4035,1543],[4061,1553],[4087,1563],[4113,1573],[4139,1583],[4165,1593],[4191,1603],[4217,1613],[4243,1623],[4269,1633],[4295,1643],[4321,1653],[4347,1663],[4373,1673],[4399,1683],[4425,1693],[4451,1703],[4477,1713],[4503,1723],[4529,1733],[4555,1743],[4581,1753],[4607,1763],[4633,1773],[4659,1783],[4685,1793],[4711,1803],[4737,1813],[4763,1823],[4789,1833],[4815,1843],[4841,1853],[4867,1863],[4893,1873],[4919,1883],[4945,1893],[4971,1903],[4997,1913],[5023,1923],[5049,1933],[5075,1943],[5101,1953],[5127,1963],[5153,1973],[5179,1983],[5205,1993],[5231,2003],[5257,2013],[5283,2023],[5309,2033],[5335,2043],[5361,2053],[5387,2063],[5413,2073],[5439,2083],[5465,2093],[5491,2103],[5517,2113],[5543,2123],[5569,2133],[5595,2143],[5621,2153],[5647,2163],[5673,2173],[5699,2183],[5725,2193],[5751,2203],[5777,2213],[5803,2223],[5829,2233],[5855,2243],[5881,2253],[5907,2263],[5933,2273],[5959,2283],[5985,2293],[6011,2303],[6037,2313],[6063,2323],[6089,2333],[6115,2343],[6141,2353],[6167,2363],[6193,2373],[6219,2383],[6245,2393],[6271,2403],[6297,2413],[6323,2423],[6349,2433],[6375,2443],[6401,2453],[6427,2463],[6453,2473],[6479,2483],[6505,2493],[6531,2503],[6557,2513],[6583,2523],[6609,2533],[6635,2543],[6661,2553],[6687,2563],[6713,2573],[6739,2583],[6765,2593],[6791,2603],[6817,2613],[6843,2623],[6869,2633],[6895,2643],[6921,2653],[6947,2663],[6973,2673],[6999,2683],[7025,2693],[7051,2703],[7077,2713],[7103,2723],[7129,2733],[7155,2743],[7181,2753],[7207,2763],[7233,2773],[7259,2783],[7285,2793],[7311,2803],[7337,2813],[7363,2823],[7389,2833],[7415,2843],[7441,2853],[7467,2863],[7493,2873],[7519,2883],[7545,2893],[7571,2903],[7597,2913],[7623,2923],[7649,2933],[7675,2943],[7701,2953],[7727,2963],[7753,2973],[7779,2983],[7805,2993],[7831,3003],[7857,3013],[7883,3023],[7909,3033],[7935,3043],[7961,3053],[7987,3063],[8013,3073],[8039,3083],[8065,3093],[8091,3103],[8117,3113],[8143,3123],[8169,3133],[8195,3143],[8221,3153],[8247,3163],[8273,3173],[8299,3183],[8325,3193],[8351,3203],[8377,3213],[8403,3223],[8429,3233],[8455,3243],[8481,3253],[8507,3263],[8533,3273],[8559,3283],[8585,3293],[8611,3303],[8637,3313],[8663,3323],[8689,3333],[8715,3343],[8741,3353],[8767,3363],[8793,3373],[8819,3383],[8845,3393],[8871,3403],[8897,3413],[8923,3423],[8949,3433],[8975,3443],[9001,3453],[9027,3463],[9053,3473],[9079,3483],[9105,3493],[9131,3503],[9157,3513],[9183,3523],[9209,3533],[9235,3543],[9261,3553],[9287,3563],[9313,3573],[9339,3583],[9365,3593],[9391,3603],[9417,3613],[9443,3623],[9469,3633],[9495,3643],[9521,3653],[9547,3663],[9573,3673],[9599,3683],[9625,3693],[9651,3703],[9677,3713],[9703,3723],[9729,3733],[9755,3743],[9781,3753],[9807,3763],[9833,3773],[9859,3783],[9885,3793],[9911,3803],[9937,3813],[9963,3823],[9989,3833],[10015,3843],[10041,3853],[10067,3863],[10093,3873],[10119,3883],[10145,3893],[10171,3903],[10197,3913],[10223,3923],[10249,3933],[10275,3943],[10301,3953],[10327,3963],[10353,3973],[10379,3983],[10405,3993],[10431,4003],[10457,4013],[10483,4023],[10509,4033],[10535,4043],[10561,4053],[10587,4063],[10613,4073],[10639,4083],[10665,4093],[10691,4103],[10717,4113],[10743,4123],[10769,4133],[10795,4143],[10821,4153],[10847,4163],[10873,4173],[10899,4183],[10925,4193],[10951,4203],[10977,4213],[11003,4223],[11029,4233],[11055,4243],[11081,4253],[11107,4263],[11133,4273],[11159,4283],[11185,4293],[11211,4303],[11237,4313],[11263,4323],[11289,4333],[11315,4343],[11341,4353],[11367,4363],[11393,4373],[11419,4383],[11445,4393],[11471,4403],[11497,4413],[11523,4423],[11549,4433],[11575,4443],[11601,4453],[11627,4463],[11653,4473],[11679,4483],[11705,4493],[11731,4503],[11757,4513],[11783,4523],[11809,4533],[11835,4543],[11861,4553],[11887,4563],[11913,4573],[11939,4583],[11965,4593],[11991,4603],[12017,4613],[12043,4623],[12069,4633],[12095,4643],[12121,4653],[12147,4663],[12173,4673],[12199,4683],[12225,4693],[12251,4703],[12277,4713],[12303,4723],[12329,4733],[12355,4743],[12381,4753],[12407,4763],[12433,4773],[12459,4783],[12485,4793],[12511,4803],[12537,4813],[12563,4823],[12589,4833],[12615,4843],[12641,4853],[12667,4863],[12693,4873],[12719,4883],[12745,4893],[12771,4903],[12797,4913],[12823,4923],[12849,4933],[12875,4943],[12901,4953],[12927,4963],[12953,4973],[12979,4983],[13005,4993]],"__id":26,"parentNodes":[21],"constraint":{"type":"hash","alias":"f1","constraint":{"sequence":"s1"}},"alias":"f1","constiables":{"sequence":"s1"}},{"type":"rightadapter","out_nodes":[[18,3]],"__id":27,"parentNodes":[22]},{"type":"type","out_nodes":[[25,4],[25,6],[25,9],[25,14],[25,16],[25,19],[25,24],[25,26],[25,29],[25,34],[25,36],[25,39],[25,44],[25,46],[25,49],[25,54],[25,56],[25,59],[25,64],[25,66],[25,69],[25,74],[25,76],[25,79],[25,84],[25,86],[25,89],[25,94],[25,96],[25,99],[25,104],[25,106],[25,109],[25,114],[25,116],[25,119],[25,124],[25,126],[25,129],[25,134],[25,136],[25,139],[25,144],[25,146],[25,149],[25,154],[25,156],[25,159],[25,164],[25,166],[25,169],[25,174],[25,176],[25,179],[25,184],[25,186],[25,189],[25,194],[25,196],[25,199],[25,204],[25,206],[25,209],[25,214],[25,216],[25,219],[25,224],[25,226],[25,229],[25,234],[25,236],[25,239],[25,244],[25,246],[25,249],[25,254],[25,256],[25,259],[25,264],[25,266],[25,269],[25,274],[25,276],[25,279],[25,284],[25,286],[25,289],[25,294],[25,296],[25,299],[25,304],[25,306],[25,309],[25,314],[25,316],[25,319],[25,324],[25,326],[25,329],[25,334],[25,336],[25,339],[25,344],[25,346],[25,349],[25,354],[25,356],[25,359],[25,364],[25,366],[25,369],[25,374],[25,376],[25,379],[25,384],[25,386],[25,389],[25,394],[25,396],[25,399],[25,404],[25,406],[25,409],[25,414],[25,416],[25,419],[25,424],[25,426],[25,429],[25,434],[25,436],[25,439],[25,444],[25,446],[25,449],[25,454],[25,456],[25,459],[25,464],[25,466],[25,469],[25,474],[25,476],[25,479],[25,484],[25,486],[25,489],[25,494],[25,496],[25,499],[25,504],[25,506],[25,509],[25,514],[25,516],[25,519],[25,524],[25,526],[25,529],[25,534],[25,536],[25,539],[25,544],[25,546],[25,549],[25,554],[25,556],[25,559],[25,564],[25,566],[25,569],[25,574],[25,576],[25,579],[25,584],[25,586],[25,589],[25,594],[25,596],[25,599],[25,604],[25,606],[25,609],[25,614],[25,616],[25,619],[25,624],[25,626],[25,629],[25,634],[25,636],[25,639],[25,644],[25,646],[25,649],[25,654],[25,656],[25,659],[25,664],[25,666],[25,669],[25,674],[25,676],[25,679],[25,684],[25,686],[25,689],[25,694],[25,696],[25,699],[25,704],[25,706],[25,709],[25,714],[25,716],[25,719],[25,724],[25,726],[25,729],[25,734],[25,736],[25,739],[25,744],[25,746],[25,749],[25,754],[25,756],[25,759],[25,764],[25,766],[25,769],[25,774],[25,776],[25,779],[25,784],[25,786],[25,789],[25,794],[25,796],[25,799],[25,804],[25,806],[25,809],[25,814],[25,816],[25,819],[25,824],[25,826],[25,829],[25,834],[25,836],[25,839],[25,844],[25,846],[25,849],[25,854],[25,856],[25,859],[25,864],[25,866],[25,869],[25,874],[25,876],[25,879],[25,884],[25,886],[25,889],[25,894],[25,896],[25,899],[25,904],[25,906],[25,909],[25,914],[25,916],[25,919],[25,924],[25,926],[25,929],[25,934],[25,936],[25,939],[25,944],[25,946],[25,949],[25,954],[25,956],[25,959],[25,964],[25,966],[25,969],[25,974],[25,976],[25,979],[25,984],[25,986],[25,989],[25,994],[25,996],[25,999],[25,1004],[25,1006],[25,1009],[25,1014],[25,1016],[25,1019],[25,1024],[25,1026],[25,1029],[25,1034],[25,1036],[25,1039],[25,1044],[25,1046],[25,1049],[25,1054],[25,1056],[25,1059],[25,1064],[25,1066],[25,1069],[25,1074],[25,1076],[25,1079],[25,1084],[25,1086],[25,1089],[25,1094],[25,1096],[25,1099],[25,1104],[25,1106],[25,1109],[25,1114],[25,1116],[25,1119],[25,1124],[25,1126],[25,1129],[25,1134],[25,1136],[25,1139],[25,1144],[25,1146],[25,1149],[25,1154],[25,1156],[25,1159],[25,1164],[25,1166],[25,1169],[25,1174],[25,1176],[25,1179],[25,1184],[25,1186],[25,1189],[25,1194],[25,1196],[25,1199],[25,1204],[25,1206],[25,1209],[25,1214],[25,1216],[25,1219],[25,1224],[25,1226],[25,1229],[25,1234],[25,1236],[25,1239],[25,1244],[25,1246],[25,1249],[25,1254],[25,1256],[25,1259],[25,1264],[25,1266],[25,1269],[25,1274],[25,1276],[25,1279],[25,1284],[25,1286],[25,1289],[25,1294],[25,1296],[25,1299],[25,1304],[25,1306],[25,1309],[25,1314],[25,1316],[25,1319],[25,1324],[25,1326],[25,1329],[25,1334],[25,1336],[25,1339],[25,1344],[25,1346],[25,1349],[25,1354],[25,1356],[25,1359],[25,1364],[25,1366],[25,1369],[25,1374],[25,1376],[25,1379],[25,1384],[25,1386],[25,1389],[25,1394],[25,1396],[25,1399],[25,1404],[25,1406],[25,1409],[25,1414],[25,1416],[25,1419],[25,1424],[25,1426],[25,1429],[25,1434],[25,1436],[25,1439],[25,1444],[25,1446],[25,1449],[25,1454],[25,1456],[25,1459],[25,1464],[25,1466],[25,1469],[25,1474],[25,1476],[25,1479],[25,1484],[25,1486],[25,1489],[25,1494],[25,1496],[25,1499],[25,1504],[25,1506],[25,1509],[25,1514],[25,1516],[25,1519],[25,1524],[25,1526],[25,1529],[25,1534],[25,1536],[25,1539],[25,1544],[25,1546],[25,1549],[25,1554],[25,1556],[25,1559],[25,1564],[25,1566],[25,1569],[25,1574],[25,1576],[25,1579],[25,1584],[25,1586],[25,1589],[25,1594],[25,1596],[25,1599],[25,1604],[25,1606],[25,1609],[25,1614],[25,1616],[25,1619],[25,1624],[25,1626],[25,1629],[25,1634],[25,1636],[25,1639],[25,1644],[25,1646],[25,1649],[25,1654],[25,1656],[25,1659],[25,1664],[25,1666],[25,1669],[25,1674],[25,1676],[25,1679],[25,1684],[25,1686],[25,1689],[25,1694],[25,1696],[25,1699],[25,1704],[25,1706],[25,1709],[25,1714],[25,1716],[25,1719],[25,1724],[25,1726],[25,1729],[25,1734],[25,1736],[25,1739],[25,1744],[25,1746],[25,1749],[25,1754],[25,1756],[25,1759],[25,1764],[25,1766],[25,1769],[25,1774],[25,1776],[25,1779],[25,1784],[25,1786],[25,1789],[25,1794],[25,1796],[25,1799],[25,1804],[25,1806],[25,1809],[25,1814],[25,1816],[25,1819],[25,1824],[25,1826],[25,1829],[25,1834],[25,1836],[25,1839],[25,1844],[25,1846],[25,1849],[25,1854],[25,1856],[25,1859],[25,1864],[25,1866],[25,1869],[25,1874],[25,1876],[25,1879],[25,1884],[25,1886],[25,1889],[25,1894],[25,1896],[25,1899],[25,1904],[25,1906],[25,1909],[25,1914],[25,1916],[25,1919],[25,1924],[25,1926],[25,1929],[25,1934],[25,1936],[25,1939],[25,1944],[25,1946],[25,1949],[25,1954],[25,1956],[25,1959],[25,1964],[25,1966],[25,1969],[25,1974],[25,1976],[25,1979],[25,1984],[25,1986],[25,1989],[25,1994],[25,1996],[25,1999],[25,2004],[25,2006],[25,2009],[25,2014],[25,2016],[25,2019],[25,2024],[25,2026],[25,2029],[25,2034],[25,2036],[25,2039],[25,2044],[25,2046],[25,2049],[25,2054],[25,2056],[25,2059],[25,2064],[25,2066],[25,2069],[25,2074],[25,2076],[25,2079],[25,2084],[25,2086],[25,2089],[25,2094],[25,2096],[25,2099],[25,2104],[25,2106],[25,2109],[25,2114],[25,2116],[25,2119],[25,2124],[25,2126],[25,2129],[25,2134],[25,2136],[25,2139],[25,2144],[25,2146],[25,2149],[25,2154],[25,2156],[25,2159],[25,2164],[25,2166],[25,2169],[25,2174],[25,2176],[25,2179],[25,2184],[25,2186],[25,2189],[25,2194],[25,2196],[25,2199],[25,2204],[25,2206],[25,2209],[25,2214],[25,2216],[25,2219],[25,2224],[25,2226],[25,2229],[25,2234],[25,2236],[25,2239],[25,2244],[25,2246],[25,2249],[25,2254],[25,2256],[25,2259],[25,2264],[25,2266],[25,2269],[25,2274],[25,2276],[25,2279],[25,2284],[25,2286],[25,2289],[25,2294],[25,2296],[25,2299],[25,2304],[25,2306],[25,2309],[25,2314],[25,2316],[25,2319],[25,2324],[25,2326],[25,2329],[25,2334],[25,2336],[25,2339],[25,2344],[25,2346],[25,2349],[25,2354],[25,2356],[25,2359],[25,2364],[25,2366],[25,2369],[25,2374],[25,2376],[25,2379],[25,2384],[25,2386],[25,2389],[25,2394],[25,2396],[25,2399],[25,2404],[25,2406],[25,2409],[25,2414],[25,2416],[25,2419],[25,2424],[25,2426],[25,2429],[25,2434],[25,2436],[25,2439],[25,2444],[25,2446],[25,2449],[25,2454],[25,2456],[25,2459],[25,2464],[25,2466],[25,2469],[25,2474],[25,2476],[25,2479],[25,2484],[25,2486],[25,2489],[25,2494],[25,2496],[25,2499],[25,2504],[25,2506],[25,2509],[25,2514],[25,2516],[25,2519],[25,2524],[25,2526],[25,2529],[25,2534],[25,2536],[25,2539],[25,2544],[25,2546],[25,2549],[25,2554],[25,2556],[25,2559],[25,2564],[25,2566],[25,2569],[25,2574],[25,2576],[25,2579],[25,2584],[25,2586],[25,2589],[25,2594],[25,2596],[25,2599],[25,2604],[25,2606],[25,2609],[25,2614],[25,2616],[25,2619],[25,2624],[25,2626],[25,2629],[25,2634],[25,2636],[25,2639],[25,2644],[25,2646],[25,2649],[25,2654],[25,2656],[25,2659],[25,2664],[25,2666],[25,2669],[25,2674],[25,2676],[25,2679],[25,2684],[25,2686],[25,2689],[25,2694],[25,2696],[25,2699],[25,2704],[25,2706],[25,2709],[25,2714],[25,2716],[25,2719],[25,2724],[25,2726],[25,2729],[25,2734],[25,2736],[25,2739],[25,2744],[25,2746],[25,2749],[25,2754],[25,2756],[25,2759],[25,2764],[25,2766],[25,2769],[25,2774],[25,2776],[25,2779],[25,2784],[25,2786],[25,2789],[25,2794],[25,2796],[25,2799],[25,2804],[25,2806],[25,2809],[25,2814],[25,2816],[25,2819],[25,2824],[25,2826],[25,2829],[25,2834],[25,2836],[25,2839],[25,2844],[25,2846],[25,2849],[25,2854],[25,2856],[25,2859],[25,2864],[25,2866],[25,2869],[25,2874],[25,2876],[25,2879],[25,2884],[25,2886],[25,2889],[25,2894],[25,2896],[25,2899],[25,2904],[25,2906],[25,2909],[25,2914],[25,2916],[25,2919],[25,2924],[25,2926],[25,2929],[25,2934],[25,2936],[25,2939],[25,2944],[25,2946],[25,2949],[25,2954],[25,2956],[25,2959],[25,2964],[25,2966],[25,2969],[25,2974],[25,2976],[25,2979],[25,2984],[25,2986],[25,2989],[25,2994],[25,2996],[25,2999],[25,3004],[25,3006],[25,3009],[25,3014],[25,3016],[25,3019],[25,3024],[25,3026],[25,3029],[25,3034],[25,3036],[25,3039],[25,3044],[25,3046],[25,3049],[25,3054],[25,3056],[25,3059],[25,3064],[25,3066],[25,3069],[25,3074],[25,3076],[25,3079],[25,3084],[25,3086],[25,3089],[25,3094],[25,3096],[25,3099],[25,3104],[25,3106],[25,3109],[25,3114],[25,3116],[25,3119],[25,3124],[25,3126],[25,3129],[25,3134],[25,3136],[25,3139],[25,3144],[25,3146],[25,3149],[25,3154],[25,3156],[25,3159],[25,3164],[25,3166],[25,3169],[25,3174],[25,3176],[25,3179],[25,3184],[25,3186],[25,3189],[25,3194],[25,3196],[25,3199],[25,3204],[25,3206],[25,3209],[25,3214],[25,3216],[25,3219],[25,3224],[25,3226],[25,3229],[25,3234],[25,3236],[25,3239],[25,3244],[25,3246],[25,3249],[25,3254],[25,3256],[25,3259],[25,3264],[25,3266],[25,3269],[25,3274],[25,3276],[25,3279],[25,3284],[25,3286],[25,3289],[25,3294],[25,3296],[25,3299],[25,3304],[25,3306],[25,3309],[25,3314],[25,3316],[25,3319],[25,3324],[25,3326],[25,3329],[25,3334],[25,3336],[25,3339],[25,3344],[25,3346],[25,3349],[25,3354],[25,3356],[25,3359],[25,3364],[25,3366],[25,3369],[25,3374],[25,3376],[25,3379],[25,3384],[25,3386],[25,3389],[25,3394],[25,3396],[25,3399],[25,3404],[25,3406],[25,3409],[25,3414],[25,3416],[25,3419],[25,3424],[25,3426],[25,3429],[25,3434],[25,3436],[25,3439],[25,3444],[25,3446],[25,3449],[25,3454],[25,3456],[25,3459],[25,3464],[25,3466],[25,3469],[25,3474],[25,3476],[25,3479],[25,3484],[25,3486],[25,3489],[25,3494],[25,3496],[25,3499],[25,3504],[25,3506],[25,3509],[25,3514],[25,3516],[25,3519],[25,3524],[25,3526],[25,3529],[25,3534],[25,3536],[25,3539],[25,3544],[25,3546],[25,3549],[25,3554],[25,3556],[25,3559],[25,3564],[25,3566],[25,3569],[25,3574],[25,3576],[25,3579],[25,3584],[25,3586],[25,3589],[25,3594],[25,3596],[25,3599],[25,3604],[25,3606],[25,3609],[25,3614],[25,3616],[25,3619],[25,3624],[25,3626],[25,3629],[25,3634],[25,3636],[25,3639],[25,3644],[25,3646],[25,3649],[25,3654],[25,3656],[25,3659],[25,3664],[25,3666],[25,3669],[25,3674],[25,3676],[25,3679],[25,3684],[25,3686],[25,3689],[25,3694],[25,3696],[25,3699],[25,3704],[25,3706],[25,3709],[25,3714],[25,3716],[25,3719],[25,3724],[25,3726],[25,3729],[25,3734],[25,3736],[25,3739],[25,3744],[25,3746],[25,3749],[25,3754],[25,3756],[25,3759],[25,3764],[25,3766],[25,3769],[25,3774],[25,3776],[25,3779],[25,3784],[25,3786],[25,3789],[25,3794],[25,3796],[25,3799],[25,3804],[25,3806],[25,3809],[25,3814],[25,3816],[25,3819],[25,3824],[25,3826],[25,3829],[25,3834],[25,3836],[25,3839],[25,3844],[25,3846],[25,3849],[25,3854],[25,3856],[25,3859],[25,3864],[25,3866],[25,3869],[25,3874],[25,3876],[25,3879],[25,3884],[25,3886],[25,3889],[25,3894],[25,3896],[25,3899],[25,3904],[25,3906],[25,3909],[25,3914],[25,3916],[25,3919],[25,3924],[25,3926],[25,3929],[25,3934],[25,3936],[25,3939],[25,3944],[25,3946],[25,3949],[25,3954],[25,3956],[25,3959],[25,3964],[25,3966],[25,3969],[25,3974],[25,3976],[25,3979],[25,3984],[25,3986],[25,3989],[25,3994],[25,3996],[25,3999],[25,4004],[25,4006],[25,4009],[25,4014],[25,4016],[25,4019],[25,4024],[25,4026],[25,4029],[25,4034],[25,4036],[25,4039],[25,4044],[25,4046],[25,4049],[25,4054],[25,4056],[25,4059],[25,4064],[25,4066],[25,4069],[25,4074],[25,4076],[25,4079],[25,4084],[25,4086],[25,4089],[25,4094],[25,4096],[25,4099],[25,4104],[25,4106],[25,4109],[25,4114],[25,4116],[25,4119],[25,4124],[25,4126],[25,4129],[25,4134],[25,4136],[25,4139],[25,4144],[25,4146],[25,4149],[25,4154],[25,4156],[25,4159],[25,4164],[25,4166],[25,4169],[25,4174],[25,4176],[25,4179],[25,4184],[25,4186],[25,4189],[25,4194],[25,4196],[25,4199],[25,4204],[25,4206],[25,4209],[25,4214],[25,4216],[25,4219],[25,4224],[25,4226],[25,4229],[25,4234],[25,4236],[25,4239],[25,4244],[25,4246],[25,4249],[25,4254],[25,4256],[25,4259],[25,4264],[25,4266],[25,4269],[25,4274],[25,4276],[25,4279],[25,4284],[25,4286],[25,4289],[25,4294],[25,4296],[25,4299],[25,4304],[25,4306],[25,4309],[25,4314],[25,4316],[25,4319],[25,4324],[25,4326],[25,4329],[25,4334],[25,4336],[25,4339],[25,4344],[25,4346],[25,4349],[25,4354],[25,4356],[25,4359],[25,4364],[25,4366],[25,4369],[25,4374],[25,4376],[25,4379],[25,4384],[25,4386],[25,4389],[25,4394],[25,4396],[25,4399],[25,4404],[25,4406],[25,4409],[25,4414],[25,4416],[25,4419],[25,4424],[25,4426],[25,4429],[25,4434],[25,4436],[25,4439],[25,4444],[25,4446],[25,4449],[25,4454],[25,4456],[25,4459],[25,4464],[25,4466],[25,4469],[25,4474],[25,4476],[25,4479],[25,4484],[25,4486],[25,4489],[25,4494],[25,4496],[25,4499],[25,4504],[25,4506],[25,4509],[25,4514],[25,4516],[25,4519],[25,4524],[25,4526],[25,4529],[25,4534],[25,4536],[25,4539],[25,4544],[25,4546],[25,4549],[25,4554],[25,4556],[25,4559],[25,4564],[25,4566],[25,4569],[25,4574],[25,4576],[25,4579],[25,4584],[25,4586],[25,4589],[25,4594],[25,4596],[25,4599],[25,4604],[25,4606],[25,4609],[25,4614],[25,4616],[25,4619],[25,4624],[25,4626],[25,4629],[25,4634],[25,4636],[25,4639],[25,4644],[25,4646],[25,4649],[25,4654],[25,4656],[25,4659],[25,4664],[25,4666],[25,4669],[25,4674],[25,4676],[25,4679],[25,4684],[25,4686],[25,4689],[25,4694],[25,4696],[25,4699],[25,4704],[25,4706],[25,4709],[25,4714],[25,4716],[25,4719],[25,4724],[25,4726],[25,4729],[25,4734],[25,4736],[25,4739],[25,4744],[25,4746],[25,4749],[25,4754],[25,4756],[25,4759],[25,4764],[25,4766],[25,4769],[25,4774],[25,4776],[25,4779],[25,4784],[25,4786],[25,4789],[25,4794],[25,4796],[25,4799],[25,4804],[25,4806],[25,4809],[25,4814],[25,4816],[25,4819],[25,4824],[25,4826],[25,4829],[25,4834],[25,4836],[25,4839],[25,4844],[25,4846],[25,4849],[25,4854],[25,4856],[25,4859],[25,4864],[25,4866],[25,4869],[25,4874],[25,4876],[25,4879],[25,4884],[25,4886],[25,4889],[25,4894],[25,4896],[25,4899],[25,4904],[25,4906],[25,4909],[25,4914],[25,4916],[25,4919],[25,4924],[25,4926],[25,4929],[25,4934],[25,4936],[25,4939],[25,4944],[25,4946],[25,4949],[25,4954],[25,4956],[25,4959],[25,4964],[25,4966],[25,4969],[25,4974],[25,4976],[25,4979],[25,4984],[25,4986],[25,4989],[25,4994],[25,4996],[25,4999]],"__id":28,"parentNodes":[],"constraint":{"type":"object","alias":"__i__","cls":"InitialFact"}},{"type":"alias","out_nodes":[[26,4],[26,6],[26,9],[26,14],[26,16],[26,19],[26,24],[26,26],[26,29],[26,34],[26,36],[26,39],[26,44],[26,46],[26,49],[26,54],[26,56],[26,59],[26,64],[26,66],[26,69],[26,74],[26,76],[26,79],[26,84],[26,86],[26,89],[26,94],[26,96],[26,99],[26,104],[26,106],[26,109],[26,114],[26,116],[26,119],[26,124],[26,126],[26,129],[26,134],[26,136],[26,139],[26,144],[26,146],[26,149],[26,154],[26,156],[26,159],[26,164],[26,166],[26,169],[26,174],[26,176],[26,179],[26,184],[26,186],[26,189],[26,194],[26,196],[26,199],[26,204],[26,206],[26,209],[26,214],[26,216],[26,219],[26,224],[26,226],[26,229],[26,234],[26,236],[26,239],[26,244],[26,246],[26,249],[26,254],[26,256],[26,259],[26,264],[26,266],[26,269],[26,274],[26,276],[26,279],[26,284],[26,286],[26,289],[26,294],[26,296],[26,299],[26,304],[26,306],[26,309],[26,314],[26,316],[26,319],[26,324],[26,326],[26,329],[26,334],[26,336],[26,339],[26,344],[26,346],[26,349],[26,354],[26,356],[26,359],[26,364],[26,366],[26,369],[26,374],[26,376],[26,379],[26,384],[26,386],[26,389],[26,394],[26,396],[26,399],[26,404],[26,406],[26,409],[26,414],[26,416],[26,419],[26,424],[26,426],[26,429],[26,434],[26,436],[26,439],[26,444],[26,446],[26,449],[26,454],[26,456],[26,459],[26,464],[26,466],[26,469],[26,474],[26,476],[26,479],[26,484],[26,486],[26,489],[26,494],[26,496],[26,499],[26,504],[26,506],[26,509],[26,514],[26,516],[26,519],[26,524],[26,526],[26,529],[26,534],[26,536],[26,539],[26,544],[26,546],[26,549],[26,554],[26,556],[26,559],[26,564],[26,566],[26,569],[26,574],[26,576],[26,579],[26,584],[26,586],[26,589],[26,594],[26,596],[26,599],[26,604],[26,606],[26,609],[26,614],[26,616],[26,619],[26,624],[26,626],[26,629],[26,634],[26,636],[26,639],[26,644],[26,646],[26,649],[26,654],[26,656],[26,659],[26,664],[26,666],[26,669],[26,674],[26,676],[26,679],[26,684],[26,686],[26,689],[26,694],[26,696],[26,699],[26,704],[26,706],[26,709],[26,714],[26,716],[26,719],[26,724],[26,726],[26,729],[26,734],[26,736],[26,739],[26,744],[26,746],[26,749],[26,754],[26,756],[26,759],[26,764],[26,766],[26,769],[26,774],[26,776],[26,779],[26,784],[26,786],[26,789],[26,794],[26,796],[26,799],[26,804],[26,806],[26,809],[26,814],[26,816],[26,819],[26,824],[26,826],[26,829],[26,834],[26,836],[26,839],[26,844],[26,846],[26,849],[26,854],[26,856],[26,859],[26,864],[26,866],[26,869],[26,874],[26,876],[26,879],[26,884],[26,886],[26,889],[26,894],[26,896],[26,899],[26,904],[26,906],[26,909],[26,914],[26,916],[26,919],[26,924],[26,926],[26,929],[26,934],[26,936],[26,939],[26,944],[26,946],[26,949],[26,954],[26,956],[26,959],[26,964],[26,966],[26,969],[26,974],[26,976],[26,979],[26,984],[26,986],[26,989],[26,994],[26,996],[26,999],[26,1004],[26,1006],[26,1009],[26,1014],[26,1016],[26,1019],[26,1024],[26,1026],[26,1029],[26,1034],[26,1036],[26,1039],[26,1044],[26,1046],[26,1049],[26,1054],[26,1056],[26,1059],[26,1064],[26,1066],[26,1069],[26,1074],[26,1076],[26,1079],[26,1084],[26,1086],[26,1089],[26,1094],[26,1096],[26,1099],[26,1104],[26,1106],[26,1109],[26,1114],[26,1116],[26,1119],[26,1124],[26,1126],[26,1129],[26,1134],[26,1136],[26,1139],[26,1144],[26,1146],[26,1149],[26,1154],[26,1156],[26,1159],[26,1164],[26,1166],[26,1169],[26,1174],[26,1176],[26,1179],[26,1184],[26,1186],[26,1189],[26,1194],[26,1196],[26,1199],[26,1204],[26,1206],[26,1209],[26,1214],[26,1216],[26,1219],[26,1224],[26,1226],[26,1229],[26,1234],[26,1236],[26,1239],[26,1244],[26,1246],[26,1249],[26,1254],[26,1256],[26,1259],[26,1264],[26,1266],[26,1269],[26,1274],[26,1276],[26,1279],[26,1284],[26,1286],[26,1289],[26,1294],[26,1296],[26,1299],[26,1304],[26,1306],[26,1309],[26,1314],[26,1316],[26,1319],[26,1324],[26,1326],[26,1329],[26,1334],[26,1336],[26,1339],[26,1344],[26,1346],[26,1349],[26,1354],[26,1356],[26,1359],[26,1364],[26,1366],[26,1369],[26,1374],[26,1376],[26,1379],[26,1384],[26,1386],[26,1389],[26,1394],[26,1396],[26,1399],[26,1404],[26,1406],[26,1409],[26,1414],[26,1416],[26,1419],[26,1424],[26,1426],[26,1429],[26,1434],[26,1436],[26,1439],[26,1444],[26,1446],[26,1449],[26,1454],[26,1456],[26,1459],[26,1464],[26,1466],[26,1469],[26,1474],[26,1476],[26,1479],[26,1484],[26,1486],[26,1489],[26,1494],[26,1496],[26,1499],[26,1504],[26,1506],[26,1509],[26,1514],[26,1516],[26,1519],[26,1524],[26,1526],[26,1529],[26,1534],[26,1536],[26,1539],[26,1544],[26,1546],[26,1549],[26,1554],[26,1556],[26,1559],[26,1564],[26,1566],[26,1569],[26,1574],[26,1576],[26,1579],[26,1584],[26,1586],[26,1589],[26,1594],[26,1596],[26,1599],[26,1604],[26,1606],[26,1609],[26,1614],[26,1616],[26,1619],[26,1624],[26,1626],[26,1629],[26,1634],[26,1636],[26,1639],[26,1644],[26,1646],[26,1649],[26,1654],[26,1656],[26,1659],[26,1664],[26,1666],[26,1669],[26,1674],[26,1676],[26,1679],[26,1684],[26,1686],[26,1689],[26,1694],[26,1696],[26,1699],[26,1704],[26,1706],[26,1709],[26,1714],[26,1716],[26,1719],[26,1724],[26,1726],[26,1729],[26,1734],[26,1736],[26,1739],[26,1744],[26,1746],[26,1749],[26,1754],[26,1756],[26,1759],[26,1764],[26,1766],[26,1769],[26,1774],[26,1776],[26,1779],[26,1784],[26,1786],[26,1789],[26,1794],[26,1796],[26,1799],[26,1804],[26,1806],[26,1809],[26,1814],[26,1816],[26,1819],[26,1824],[26,1826],[26,1829],[26,1834],[26,1836],[26,1839],[26,1844],[26,1846],[26,1849],[26,1854],[26,1856],[26,1859],[26,1864],[26,1866],[26,1869],[26,1874],[26,1876],[26,1879],[26,1884],[26,1886],[26,1889],[26,1894],[26,1896],[26,1899],[26,1904],[26,1906],[26,1909],[26,1914],[26,1916],[26,1919],[26,1924],[26,1926],[26,1929],[26,1934],[26,1936],[26,1939],[26,1944],[26,1946],[26,1949],[26,1954],[26,1956],[26,1959],[26,1964],[26,1966],[26,1969],[26,1974],[26,1976],[26,1979],[26,1984],[26,1986],[26,1989],[26,1994],[26,1996],[26,1999],[26,2004],[26,2006],[26,2009],[26,2014],[26,2016],[26,2019],[26,2024],[26,2026],[26,2029],[26,2034],[26,2036],[26,2039],[26,2044],[26,2046],[26,2049],[26,2054],[26,2056],[26,2059],[26,2064],[26,2066],[26,2069],[26,2074],[26,2076],[26,2079],[26,2084],[26,2086],[26,2089],[26,2094],[26,2096],[26,2099],[26,2104],[26,2106],[26,2109],[26,2114],[26,2116],[26,2119],[26,2124],[26,2126],[26,2129],[26,2134],[26,2136],[26,2139],[26,2144],[26,2146],[26,2149],[26,2154],[26,2156],[26,2159],[26,2164],[26,2166],[26,2169],[26,2174],[26,2176],[26,2179],[26,2184],[26,2186],[26,2189],[26,2194],[26,2196],[26,2199],[26,2204],[26,2206],[26,2209],[26,2214],[26,2216],[26,2219],[26,2224],[26,2226],[26,2229],[26,2234],[26,2236],[26,2239],[26,2244],[26,2246],[26,2249],[26,2254],[26,2256],[26,2259],[26,2264],[26,2266],[26,2269],[26,2274],[26,2276],[26,2279],[26,2284],[26,2286],[26,2289],[26,2294],[26,2296],[26,2299],[26,2304],[26,2306],[26,2309],[26,2314],[26,2316],[26,2319],[26,2324],[26,2326],[26,2329],[26,2334],[26,2336],[26,2339],[26,2344],[26,2346],[26,2349],[26,2354],[26,2356],[26,2359],[26,2364],[26,2366],[26,2369],[26,2374],[26,2376],[26,2379],[26,2384],[26,2386],[26,2389],[26,2394],[26,2396],[26,2399],[26,2404],[26,2406],[26,2409],[26,2414],[26,2416],[26,2419],[26,2424],[26,2426],[26,2429],[26,2434],[26,2436],[26,2439],[26,2444],[26,2446],[26,2449],[26,2454],[26,2456],[26,2459],[26,2464],[26,2466],[26,2469],[26,2474],[26,2476],[26,2479],[26,2484],[26,2486],[26,2489],[26,2494],[26,2496],[26,2499],[26,2504],[26,2506],[26,2509],[26,2514],[26,2516],[26,2519],[26,2524],[26,2526],[26,2529],[26,2534],[26,2536],[26,2539],[26,2544],[26,2546],[26,2549],[26,2554],[26,2556],[26,2559],[26,2564],[26,2566],[26,2569],[26,2574],[26,2576],[26,2579],[26,2584],[26,2586],[26,2589],[26,2594],[26,2596],[26,2599],[26,2604],[26,2606],[26,2609],[26,2614],[26,2616],[26,2619],[26,2624],[26,2626],[26,2629],[26,2634],[26,2636],[26,2639],[26,2644],[26,2646],[26,2649],[26,2654],[26,2656],[26,2659],[26,2664],[26,2666],[26,2669],[26,2674],[26,2676],[26,2679],[26,2684],[26,2686],[26,2689],[26,2694],[26,2696],[26,2699],[26,2704],[26,2706],[26,2709],[26,2714],[26,2716],[26,2719],[26,2724],[26,2726],[26,2729],[26,2734],[26,2736],[26,2739],[26,2744],[26,2746],[26,2749],[26,2754],[26,2756],[26,2759],[26,2764],[26,2766],[26,2769],[26,2774],[26,2776],[26,2779],[26,2784],[26,2786],[26,2789],[26,2794],[26,2796],[26,2799],[26,2804],[26,2806],[26,2809],[26,2814],[26,2816],[26,2819],[26,2824],[26,2826],[26,2829],[26,2834],[26,2836],[26,2839],[26,2844],[26,2846],[26,2849],[26,2854],[26,2856],[26,2859],[26,2864],[26,2866],[26,2869],[26,2874],[26,2876],[26,2879],[26,2884],[26,2886],[26,2889],[26,2894],[26,2896],[26,2899],[26,2904],[26,2906],[26,2909],[26,2914],[26,2916],[26,2919],[26,2924],[26,2926],[26,2929],[26,2934],[26,2936],[26,2939],[26,2944],[26,2946],[26,2949],[26,2954],[26,2956],[26,2959],[26,2964],[26,2966],[26,2969],[26,2974],[26,2976],[26,2979],[26,2984],[26,2986],[26,2989],[26,2994],[26,2996],[26,2999],[26,3004],[26,3006],[26,3009],[26,3014],[26,3016],[26,3019],[26,3024],[26,3026],[26,3029],[26,3034],[26,3036],[26,3039],[26,3044],[26,3046],[26,3049],[26,3054],[26,3056],[26,3059],[26,3064],[26,3066],[26,3069],[26,3074],[26,3076],[26,3079],[26,3084],[26,3086],[26,3089],[26,3094],[26,3096],[26,3099],[26,3104],[26,3106],[26,3109],[26,3114],[26,3116],[26,3119],[26,3124],[26,3126],[26,3129],[26,3134],[26,3136],[26,3139],[26,3144],[26,3146],[26,3149],[26,3154],[26,3156],[26,3159],[26,3164],[26,3166],[26,3169],[26,3174],[26,3176],[26,3179],[26,3184],[26,3186],[26,3189],[26,3194],[26,3196],[26,3199],[26,3204],[26,3206],[26,3209],[26,3214],[26,3216],[26,3219],[26,3224],[26,3226],[26,3229],[26,3234],[26,3236],[26,3239],[26,3244],[26,3246],[26,3249],[26,3254],[26,3256],[26,3259],[26,3264],[26,3266],[26,3269],[26,3274],[26,3276],[26,3279],[26,3284],[26,3286],[26,3289],[26,3294],[26,3296],[26,3299],[26,3304],[26,3306],[26,3309],[26,3314],[26,3316],[26,3319],[26,3324],[26,3326],[26,3329],[26,3334],[26,3336],[26,3339],[26,3344],[26,3346],[26,3349],[26,3354],[26,3356],[26,3359],[26,3364],[26,3366],[26,3369],[26,3374],[26,3376],[26,3379],[26,3384],[26,3386],[26,3389],[26,3394],[26,3396],[26,3399],[26,3404],[26,3406],[26,3409],[26,3414],[26,3416],[26,3419],[26,3424],[26,3426],[26,3429],[26,3434],[26,3436],[26,3439],[26,3444],[26,3446],[26,3449],[26,3454],[26,3456],[26,3459],[26,3464],[26,3466],[26,3469],[26,3474],[26,3476],[26,3479],[26,3484],[26,3486],[26,3489],[26,3494],[26,3496],[26,3499],[26,3504],[26,3506],[26,3509],[26,3514],[26,3516],[26,3519],[26,3524],[26,3526],[26,3529],[26,3534],[26,3536],[26,3539],[26,3544],[26,3546],[26,3549],[26,3554],[26,3556],[26,3559],[26,3564],[26,3566],[26,3569],[26,3574],[26,3576],[26,3579],[26,3584],[26,3586],[26,3589],[26,3594],[26,3596],[26,3599],[26,3604],[26,3606],[26,3609],[26,3614],[26,3616],[26,3619],[26,3624],[26,3626],[26,3629],[26,3634],[26,3636],[26,3639],[26,3644],[26,3646],[26,3649],[26,3654],[26,3656],[26,3659],[26,3664],[26,3666],[26,3669],[26,3674],[26,3676],[26,3679],[26,3684],[26,3686],[26,3689],[26,3694],[26,3696],[26,3699],[26,3704],[26,3706],[26,3709],[26,3714],[26,3716],[26,3719],[26,3724],[26,3726],[26,3729],[26,3734],[26,3736],[26,3739],[26,3744],[26,3746],[26,3749],[26,3754],[26,3756],[26,3759],[26,3764],[26,3766],[26,3769],[26,3774],[26,3776],[26,3779],[26,3784],[26,3786],[26,3789],[26,3794],[26,3796],[26,3799],[26,3804],[26,3806],[26,3809],[26,3814],[26,3816],[26,3819],[26,3824],[26,3826],[26,3829],[26,3834],[26,3836],[26,3839],[26,3844],[26,3846],[26,3849],[26,3854],[26,3856],[26,3859],[26,3864],[26,3866],[26,3869],[26,3874],[26,3876],[26,3879],[26,3884],[26,3886],[26,3889],[26,3894],[26,3896],[26,3899],[26,3904],[26,3906],[26,3909],[26,3914],[26,3916],[26,3919],[26,3924],[26,3926],[26,3929],[26,3934],[26,3936],[26,3939],[26,3944],[26,3946],[26,3949],[26,3954],[26,3956],[26,3959],[26,3964],[26,3966],[26,3969],[26,3974],[26,3976],[26,3979],[26,3984],[26,3986],[26,3989],[26,3994],[26,3996],[26,3999],[26,4004],[26,4006],[26,4009],[26,4014],[26,4016],[26,4019],[26,4024],[26,4026],[26,4029],[26,4034],[26,4036],[26,4039],[26,4044],[26,4046],[26,4049],[26,4054],[26,4056],[26,4059],[26,4064],[26,4066],[26,4069],[26,4074],[26,4076],[26,4079],[26,4084],[26,4086],[26,4089],[26,4094],[26,4096],[26,4099],[26,4104],[26,4106],[26,4109],[26,4114],[26,4116],[26,4119],[26,4124],[26,4126],[26,4129],[26,4134],[26,4136],[26,4139],[26,4144],[26,4146],[26,4149],[26,4154],[26,4156],[26,4159],[26,4164],[26,4166],[26,4169],[26,4174],[26,4176],[26,4179],[26,4184],[26,4186],[26,4189],[26,4194],[26,4196],[26,4199],[26,4204],[26,4206],[26,4209],[26,4214],[26,4216],[26,4219],[26,4224],[26,4226],[26,4229],[26,4234],[26,4236],[26,4239],[26,4244],[26,4246],[26,4249],[26,4254],[26,4256],[26,4259],[26,4264],[26,4266],[26,4269],[26,4274],[26,4276],[26,4279],[26,4284],[26,4286],[26,4289],[26,4294],[26,4296],[26,4299],[26,4304],[26,4306],[26,4309],[26,4314],[26,4316],[26,4319],[26,4324],[26,4326],[26,4329],[26,4334],[26,4336],[26,4339],[26,4344],[26,4346],[26,4349],[26,4354],[26,4356],[26,4359],[26,4364],[26,4366],[26,4369],[26,4374],[26,4376],[26,4379],[26,4384],[26,4386],[26,4389],[26,4394],[26,4396],[26,4399],[26,4404],[26,4406],[26,4409],[26,4414],[26,4416],[26,4419],[26,4424],[26,4426],[26,4429],[26,4434],[26,4436],[26,4439],[26,4444],[26,4446],[26,4449],[26,4454],[26,4456],[26,4459],[26,4464],[26,4466],[26,4469],[26,4474],[26,4476],[26,4479],[26,4484],[26,4486],[26,4489],[26,4494],[26,4496],[26,4499],[26,4504],[26,4506],[26,4509],[26,4514],[26,4516],[26,4519],[26,4524],[26,4526],[26,4529],[26,4534],[26,4536],[26,4539],[26,4544],[26,4546],[26,4549],[26,4554],[26,4556],[26,4559],[26,4564],[26,4566],[26,4569],[26,4574],[26,4576],[26,4579],[26,4584],[26,4586],[26,4589],[26,4594],[26,4596],[26,4599],[26,4604],[26,4606],[26,4609],[26,4614],[26,4616],[26,4619],[26,4624],[26,4626],[26,4629],[26,4634],[26,4636],[26,4639],[26,4644],[26,4646],[26,4649],[26,4654],[26,4656],[26,4659],[26,4664],[26,4666],[26,4669],[26,4674],[26,4676],[26,4679],[26,4684],[26,4686],[26,4689],[26,4694],[26,4696],[26,4699],[26,4704],[26,4706],[26,4709],[26,4714],[26,4716],[26,4719],[26,4724],[26,4726],[26,4729],[26,4734],[26,4736],[26,4739],[26,4744],[26,4746],[26,4749],[26,4754],[26,4756],[26,4759],[26,4764],[26,4766],[26,4769],[26,4774],[26,4776],[26,4779],[26,4784],[26,4786],[26,4789],[26,4794],[26,4796],[26,4799],[26,4804],[26,4806],[26,4809],[26,4814],[26,4816],[26,4819],[26,4824],[26,4826],[26,4829],[26,4834],[26,4836],[26,4839],[26,4844],[26,4846],[26,4849],[26,4854],[26,4856],[26,4859],[26,4864],[26,4866],[26,4869],[26,4874],[26,4876],[26,4879],[26,4884],[26,4886],[26,4889],[26,4894],[26,4896],[26,4899],[26,4904],[26,4906],[26,4909],[26,4914],[26,4916],[26,4919],[26,4924],[26,4926],[26,4929],[26,4934],[26,4936],[26,4939],[26,4944],[26,4946],[26,4949],[26,4954],[26,4956],[26,4959],[26,4964],[26,4966],[26,4969],[26,4974],[26,4976],[26,4979],[26,4984],[26,4986],[26,4989],[26,4994],[26,4996],[26,4999]],"__id":29,"parentNodes":[24],"alias":"__i__","constraint":{"type":"initial_fact","id":5501,"cls":"InitialFact","alias":"__i__"}},{"type":"equality","out_nodes":[[27,4],[34,6],[43,9],[58,14],[62,16],[69,19],[84,24],[88,26],[95,29],[110,34],[114,36],[121,39],[136,44],[140,46],[147,49],[162,54],[166,56],[173,59],[188,64],[192,66],[199,69],[214,74],[218,76],[225,79],[240,84],[244,86],[251,89],[266,94],[270,96],[277,99],[292,104],[296,106],[303,109],[318,114],[322,116],[329,119],[344,124],[348,126],[355,129],[370,134],[374,136],[381,139],[396,144],[400,146],[407,149],[422,154],[426,156],[433,159],[448,164],[452,166],[459,169],[474,174],[478,176],[485,179],[500,184],[504,186],[511,189],[526,194],[530,196],[537,199],[552,204],[556,206],[563,209],[578,214],[582,216],[589,219],[604,224],[608,226],[615,229],[630,234],[634,236],[641,239],[656,244],[660,246],[667,249],[682,254],[686,256],[693,259],[708,264],[712,266],[719,269],[734,274],[738,276],[745,279],[760,284],[764,286],[771,289],[786,294],[790,296],[797,299],[812,304],[816,306],[823,309],[838,314],[842,316],[849,319],[864,324],[868,326],[875,329],[890,334],[894,336],[901,339],[916,344],[920,346],[927,349],[942,354],[946,356],[953,359],[968,364],[972,366],[979,369],[994,374],[998,376],[1005,379],[1020,384],[1024,386],[1031,389],[1046,394],[1050,396],[1057,399],[1072,404],[1076,406],[1083,409],[1098,414],[1102,416],[1109,419],[1124,424],[1128,426],[1135,429],[1150,434],[1154,436],[1161,439],[1176,444],[1180,446],[1187,449],[1202,454],[1206,456],[1213,459],[1228,464],[1232,466],[1239,469],[1254,474],[1258,476],[1265,479],[1280,484],[1284,486],[1291,489],[1306,494],[1310,496],[1317,499],[1332,504],[1336,506],[1343,509],[1358,514],[1362,516],[1369,519],[1384,524],[1388,526],[1395,529],[1410,534],[1414,536],[1421,539],[1436,544],[1440,546],[1447,549],[1462,554],[1466,556],[1473,559],[1488,564],[1492,566],[1499,569],[1514,574],[1518,576],[1525,579],[1540,584],[1544,586],[1551,589],[1566,594],[1570,596],[1577,599],[1592,604],[1596,606],[1603,609],[1618,614],[1622,616],[1629,619],[1644,624],[1648,626],[1655,629],[1670,634],[1674,636],[1681,639],[1696,644],[1700,646],[1707,649],[1722,654],[1726,656],[1733,659],[1748,664],[1752,666],[1759,669],[1774,674],[1778,676],[1785,679],[1800,684],[1804,686],[1811,689],[1826,694],[1830,696],[1837,699],[1852,704],[1856,706],[1863,709],[1878,714],[1882,716],[1889,719],[1904,724],[1908,726],[1915,729],[1930,734],[1934,736],[1941,739],[1956,744],[1960,746],[1967,749],[1982,754],[1986,756],[1993,759],[2008,764],[2012,766],[2019,769],[2034,774],[2038,776],[2045,779],[2060,784],[2064,786],[2071,789],[2086,794],[2090,796],[2097,799],[2112,804],[2116,806],[2123,809],[2138,814],[2142,816],[2149,819],[2164,824],[2168,826],[2175,829],[2190,834],[2194,836],[2201,839],[2216,844],[2220,846],[2227,849],[2242,854],[2246,856],[2253,859],[2268,864],[2272,866],[2279,869],[2294,874],[2298,876],[2305,879],[2320,884],[2324,886],[2331,889],[2346,894],[2350,896],[2357,899],[2372,904],[2376,906],[2383,909],[2398,914],[2402,916],[2409,919],[2424,924],[2428,926],[2435,929],[2450,934],[2454,936],[2461,939],[2476,944],[2480,946],[2487,949],[2502,954],[2506,956],[2513,959],[2528,964],[2532,966],[2539,969],[2554,974],[2558,976],[2565,979],[2580,984],[2584,986],[2591,989],[2606,994],[2610,996],[2617,999],[2632,1004],[2636,1006],[2643,1009],[2658,1014],[2662,1016],[2669,1019],[2684,1024],[2688,1026],[2695,1029],[2710,1034],[2714,1036],[2721,1039],[2736,1044],[2740,1046],[2747,1049],[2762,1054],[2766,1056],[2773,1059],[2788,1064],[2792,1066],[2799,1069],[2814,1074],[2818,1076],[2825,1079],[2840,1084],[2844,1086],[2851,1089],[2866,1094],[2870,1096],[2877,1099],[2892,1104],[2896,1106],[2903,1109],[2918,1114],[2922,1116],[2929,1119],[2944,1124],[2948,1126],[2955,1129],[2970,1134],[2974,1136],[2981,1139],[2996,1144],[3000,1146],[3007,1149],[3022,1154],[3026,1156],[3033,1159],[3048,1164],[3052,1166],[3059,1169],[3074,1174],[3078,1176],[3085,1179],[3100,1184],[3104,1186],[3111,1189],[3126,1194],[3130,1196],[3137,1199],[3152,1204],[3156,1206],[3163,1209],[3178,1214],[3182,1216],[3189,1219],[3204,1224],[3208,1226],[3215,1229],[3230,1234],[3234,1236],[3241,1239],[3256,1244],[3260,1246],[3267,1249],[3282,1254],[3286,1256],[3293,1259],[3308,1264],[3312,1266],[3319,1269],[3334,1274],[3338,1276],[3345,1279],[3360,1284],[3364,1286],[3371,1289],[3386,1294],[3390,1296],[3397,1299],[3412,1304],[3416,1306],[3423,1309],[3438,1314],[3442,1316],[3449,1319],[3464,1324],[3468,1326],[3475,1329],[3490,1334],[3494,1336],[3501,1339],[3516,1344],[3520,1346],[3527,1349],[3542,1354],[3546,1356],[3553,1359],[3568,1364],[3572,1366],[3579,1369],[3594,1374],[3598,1376],[3605,1379],[3620,1384],[3624,1386],[3631,1389],[3646,1394],[3650,1396],[3657,1399],[3672,1404],[3676,1406],[3683,1409],[3698,1414],[3702,1416],[3709,1419],[3724,1424],[3728,1426],[3735,1429],[3750,1434],[3754,1436],[3761,1439],[3776,1444],[3780,1446],[3787,1449],[3802,1454],[3806,1456],[3813,1459],[3828,1464],[3832,1466],[3839,1469],[3854,1474],[3858,1476],[3865,1479],[3880,1484],[3884,1486],[3891,1489],[3906,1494],[3910,1496],[3917,1499],[3932,1504],[3936,1506],[3943,1509],[3958,1514],[3962,1516],[3969,1519],[3984,1524],[3988,1526],[3995,1529],[4010,1534],[4014,1536],[4021,1539],[4036,1544],[4040,1546],[4047,1549],[4062,1554],[4066,1556],[4073,1559],[4088,1564],[4092,1566],[4099,1569],[4114,1574],[4118,1576],[4125,1579],[4140,1584],[4144,1586],[4151,1589],[4166,1594],[4170,1596],[4177,1599],[4192,1604],[4196,1606],[4203,1609],[4218,1614],[4222,1616],[4229,1619],[4244,1624],[4248,1626],[4255,1629],[4270,1634],[4274,1636],[4281,1639],[4296,1644],[4300,1646],[4307,1649],[4322,1654],[4326,1656],[4333,1659],[4348,1664],[4352,1666],[4359,1669],[4374,1674],[4378,1676],[4385,1679],[4400,1684],[4404,1686],[4411,1689],[4426,1694],[4430,1696],[4437,1699],[4452,1704],[4456,1706],[4463,1709],[4478,1714],[4482,1716],[4489,1719],[4504,1724],[4508,1726],[4515,1729],[4530,1734],[4534,1736],[4541,1739],[4556,1744],[4560,1746],[4567,1749],[4582,1754],[4586,1756],[4593,1759],[4608,1764],[4612,1766],[4619,1769],[4634,1774],[4638,1776],[4645,1779],[4660,1784],[4664,1786],[4671,1789],[4686,1794],[4690,1796],[4697,1799],[4712,1804],[4716,1806],[4723,1809],[4738,1814],[4742,1816],[4749,1819],[4764,1824],[4768,1826],[4775,1829],[4790,1834],[4794,1836],[4801,1839],[4816,1844],[4820,1846],[4827,1849],[4842,1854],[4846,1856],[4853,1859],[4868,1864],[4872,1866],[4879,1869],[4894,1874],[4898,1876],[4905,1879],[4920,1884],[4924,1886],[4931,1889],[4946,1894],[4950,1896],[4957,1899],[4972,1904],[4976,1906],[4983,1909],[4998,1914],[5002,1916],[5009,1919],[5024,1924],[5028,1926],[5035,1929],[5050,1934],[5054,1936],[5061,1939],[5076,1944],[5080,1946],[5087,1949],[5102,1954],[5106,1956],[5113,1959],[5128,1964],[5132,1966],[5139,1969],[5154,1974],[5158,1976],[5165,1979],[5180,1984],[5184,1986],[5191,1989],[5206,1994],[5210,1996],[5217,1999],[5232,2004],[5236,2006],[5243,2009],[5258,2014],[5262,2016],[5269,2019],[5284,2024],[5288,2026],[5295,2029],[5310,2034],[5314,2036],[5321,2039],[5336,2044],[5340,2046],[5347,2049],[5362,2054],[5366,2056],[5373,2059],[5388,2064],[5392,2066],[5399,2069],[5414,2074],[5418,2076],[5425,2079],[5440,2084],[5444,2086],[5451,2089],[5466,2094],[5470,2096],[5477,2099],[5492,2104],[5496,2106],[5503,2109],[5518,2114],[5522,2116],[5529,2119],[5544,2124],[5548,2126],[5555,2129],[5570,2134],[5574,2136],[5581,2139],[5596,2144],[5600,2146],[5607,2149],[5622,2154],[5626,2156],[5633,2159],[5648,2164],[5652,2166],[5659,2169],[5674,2174],[5678,2176],[5685,2179],[5700,2184],[5704,2186],[5711,2189],[5726,2194],[5730,2196],[5737,2199],[5752,2204],[5756,2206],[5763,2209],[5778,2214],[5782,2216],[5789,2219],[5804,2224],[5808,2226],[5815,2229],[5830,2234],[5834,2236],[5841,2239],[5856,2244],[5860,2246],[5867,2249],[5882,2254],[5886,2256],[5893,2259],[5908,2264],[5912,2266],[5919,2269],[5934,2274],[5938,2276],[5945,2279],[5960,2284],[5964,2286],[5971,2289],[5986,2294],[5990,2296],[5997,2299],[6012,2304],[6016,2306],[6023,2309],[6038,2314],[6042,2316],[6049,2319],[6064,2324],[6068,2326],[6075,2329],[6090,2334],[6094,2336],[6101,2339],[6116,2344],[6120,2346],[6127,2349],[6142,2354],[6146,2356],[6153,2359],[6168,2364],[6172,2366],[6179,2369],[6194,2374],[6198,2376],[6205,2379],[6220,2384],[6224,2386],[6231,2389],[6246,2394],[6250,2396],[6257,2399],[6272,2404],[6276,2406],[6283,2409],[6298,2414],[6302,2416],[6309,2419],[6324,2424],[6328,2426],[6335,2429],[6350,2434],[6354,2436],[6361,2439],[6376,2444],[6380,2446],[6387,2449],[6402,2454],[6406,2456],[6413,2459],[6428,2464],[6432,2466],[6439,2469],[6454,2474],[6458,2476],[6465,2479],[6480,2484],[6484,2486],[6491,2489],[6506,2494],[6510,2496],[6517,2499],[6532,2504],[6536,2506],[6543,2509],[6558,2514],[6562,2516],[6569,2519],[6584,2524],[6588,2526],[6595,2529],[6610,2534],[6614,2536],[6621,2539],[6636,2544],[6640,2546],[6647,2549],[6662,2554],[6666,2556],[6673,2559],[6688,2564],[6692,2566],[6699,2569],[6714,2574],[6718,2576],[6725,2579],[6740,2584],[6744,2586],[6751,2589],[6766,2594],[6770,2596],[6777,2599],[6792,2604],[6796,2606],[6803,2609],[6818,2614],[6822,2616],[6829,2619],[6844,2624],[6848,2626],[6855,2629],[6870,2634],[6874,2636],[6881,2639],[6896,2644],[6900,2646],[6907,2649],[6922,2654],[6926,2656],[6933,2659],[6948,2664],[6952,2666],[6959,2669],[6974,2674],[6978,2676],[6985,2679],[7000,2684],[7004,2686],[7011,2689],[7026,2694],[7030,2696],[7037,2699],[7052,2704],[7056,2706],[7063,2709],[7078,2714],[7082,2716],[7089,2719],[7104,2724],[7108,2726],[7115,2729],[7130,2734],[7134,2736],[7141,2739],[7156,2744],[7160,2746],[7167,2749],[7182,2754],[7186,2756],[7193,2759],[7208,2764],[7212,2766],[7219,2769],[7234,2774],[7238,2776],[7245,2779],[7260,2784],[7264,2786],[7271,2789],[7286,2794],[7290,2796],[7297,2799],[7312,2804],[7316,2806],[7323,2809],[7338,2814],[7342,2816],[7349,2819],[7364,2824],[7368,2826],[7375,2829],[7390,2834],[7394,2836],[7401,2839],[7416,2844],[7420,2846],[7427,2849],[7442,2854],[7446,2856],[7453,2859],[7468,2864],[7472,2866],[7479,2869],[7494,2874],[7498,2876],[7505,2879],[7520,2884],[7524,2886],[7531,2889],[7546,2894],[7550,2896],[7557,2899],[7572,2904],[7576,2906],[7583,2909],[7598,2914],[7602,2916],[7609,2919],[7624,2924],[7628,2926],[7635,2929],[7650,2934],[7654,2936],[7661,2939],[7676,2944],[7680,2946],[7687,2949],[7702,2954],[7706,2956],[7713,2959],[7728,2964],[7732,2966],[7739,2969],[7754,2974],[7758,2976],[7765,2979],[7780,2984],[7784,2986],[7791,2989],[7806,2994],[7810,2996],[7817,2999],[7832,3004],[7836,3006],[7843,3009],[7858,3014],[7862,3016],[7869,3019],[7884,3024],[7888,3026],[7895,3029],[7910,3034],[7914,3036],[7921,3039],[7936,3044],[7940,3046],[7947,3049],[7962,3054],[7966,3056],[7973,3059],[7988,3064],[7992,3066],[7999,3069],[8014,3074],[8018,3076],[8025,3079],[8040,3084],[8044,3086],[8051,3089],[8066,3094],[8070,3096],[8077,3099],[8092,3104],[8096,3106],[8103,3109],[8118,3114],[8122,3116],[8129,3119],[8144,3124],[8148,3126],[8155,3129],[8170,3134],[8174,3136],[8181,3139],[8196,3144],[8200,3146],[8207,3149],[8222,3154],[8226,3156],[8233,3159],[8248,3164],[8252,3166],[8259,3169],[8274,3174],[8278,3176],[8285,3179],[8300,3184],[8304,3186],[8311,3189],[8326,3194],[8330,3196],[8337,3199],[8352,3204],[8356,3206],[8363,3209],[8378,3214],[8382,3216],[8389,3219],[8404,3224],[8408,3226],[8415,3229],[8430,3234],[8434,3236],[8441,3239],[8456,3244],[8460,3246],[8467,3249],[8482,3254],[8486,3256],[8493,3259],[8508,3264],[8512,3266],[8519,3269],[8534,3274],[8538,3276],[8545,3279],[8560,3284],[8564,3286],[8571,3289],[8586,3294],[8590,3296],[8597,3299],[8612,3304],[8616,3306],[8623,3309],[8638,3314],[8642,3316],[8649,3319],[8664,3324],[8668,3326],[8675,3329],[8690,3334],[8694,3336],[8701,3339],[8716,3344],[8720,3346],[8727,3349],[8742,3354],[8746,3356],[8753,3359],[8768,3364],[8772,3366],[8779,3369],[8794,3374],[8798,3376],[8805,3379],[8820,3384],[8824,3386],[8831,3389],[8846,3394],[8850,3396],[8857,3399],[8872,3404],[8876,3406],[8883,3409],[8898,3414],[8902,3416],[8909,3419],[8924,3424],[8928,3426],[8935,3429],[8950,3434],[8954,3436],[8961,3439],[8976,3444],[8980,3446],[8987,3449],[9002,3454],[9006,3456],[9013,3459],[9028,3464],[9032,3466],[9039,3469],[9054,3474],[9058,3476],[9065,3479],[9080,3484],[9084,3486],[9091,3489],[9106,3494],[9110,3496],[9117,3499],[9132,3504],[9136,3506],[9143,3509],[9158,3514],[9162,3516],[9169,3519],[9184,3524],[9188,3526],[9195,3529],[9210,3534],[9214,3536],[9221,3539],[9236,3544],[9240,3546],[9247,3549],[9262,3554],[9266,3556],[9273,3559],[9288,3564],[9292,3566],[9299,3569],[9314,3574],[9318,3576],[9325,3579],[9340,3584],[9344,3586],[9351,3589],[9366,3594],[9370,3596],[9377,3599],[9392,3604],[9396,3606],[9403,3609],[9418,3614],[9422,3616],[9429,3619],[9444,3624],[9448,3626],[9455,3629],[9470,3634],[9474,3636],[9481,3639],[9496,3644],[9500,3646],[9507,3649],[9522,3654],[9526,3656],[9533,3659],[9548,3664],[9552,3666],[9559,3669],[9574,3674],[9578,3676],[9585,3679],[9600,3684],[9604,3686],[9611,3689],[9626,3694],[9630,3696],[9637,3699],[9652,3704],[9656,3706],[9663,3709],[9678,3714],[9682,3716],[9689,3719],[9704,3724],[9708,3726],[9715,3729],[9730,3734],[9734,3736],[9741,3739],[9756,3744],[9760,3746],[9767,3749],[9782,3754],[9786,3756],[9793,3759],[9808,3764],[9812,3766],[9819,3769],[9834,3774],[9838,3776],[9845,3779],[9860,3784],[9864,3786],[9871,3789],[9886,3794],[9890,3796],[9897,3799],[9912,3804],[9916,3806],[9923,3809],[9938,3814],[9942,3816],[9949,3819],[9964,3824],[9968,3826],[9975,3829],[9990,3834],[9994,3836],[10001,3839],[10016,3844],[10020,3846],[10027,3849],[10042,3854],[10046,3856],[10053,3859],[10068,3864],[10072,3866],[10079,3869],[10094,3874],[10098,3876],[10105,3879],[10120,3884],[10124,3886],[10131,3889],[10146,3894],[10150,3896],[10157,3899],[10172,3904],[10176,3906],[10183,3909],[10198,3914],[10202,3916],[10209,3919],[10224,3924],[10228,3926],[10235,3929],[10250,3934],[10254,3936],[10261,3939],[10276,3944],[10280,3946],[10287,3949],[10302,3954],[10306,3956],[10313,3959],[10328,3964],[10332,3966],[10339,3969],[10354,3974],[10358,3976],[10365,3979],[10380,3984],[10384,3986],[10391,3989],[10406,3994],[10410,3996],[10417,3999],[10432,4004],[10436,4006],[10443,4009],[10458,4014],[10462,4016],[10469,4019],[10484,4024],[10488,4026],[10495,4029],[10510,4034],[10514,4036],[10521,4039],[10536,4044],[10540,4046],[10547,4049],[10562,4054],[10566,4056],[10573,4059],[10588,4064],[10592,4066],[10599,4069],[10614,4074],[10618,4076],[10625,4079],[10640,4084],[10644,4086],[10651,4089],[10666,4094],[10670,4096],[10677,4099],[10692,4104],[10696,4106],[10703,4109],[10718,4114],[10722,4116],[10729,4119],[10744,4124],[10748,4126],[10755,4129],[10770,4134],[10774,4136],[10781,4139],[10796,4144],[10800,4146],[10807,4149],[10822,4154],[10826,4156],[10833,4159],[10848,4164],[10852,4166],[10859,4169],[10874,4174],[10878,4176],[10885,4179],[10900,4184],[10904,4186],[10911,4189],[10926,4194],[10930,4196],[10937,4199],[10952,4204],[10956,4206],[10963,4209],[10978,4214],[10982,4216],[10989,4219],[11004,4224],[11008,4226],[11015,4229],[11030,4234],[11034,4236],[11041,4239],[11056,4244],[11060,4246],[11067,4249],[11082,4254],[11086,4256],[11093,4259],[11108,4264],[11112,4266],[11119,4269],[11134,4274],[11138,4276],[11145,4279],[11160,4284],[11164,4286],[11171,4289],[11186,4294],[11190,4296],[11197,4299],[11212,4304],[11216,4306],[11223,4309],[11238,4314],[11242,4316],[11249,4319],[11264,4324],[11268,4326],[11275,4329],[11290,4334],[11294,4336],[11301,4339],[11316,4344],[11320,4346],[11327,4349],[11342,4354],[11346,4356],[11353,4359],[11368,4364],[11372,4366],[11379,4369],[11394,4374],[11398,4376],[11405,4379],[11420,4384],[11424,4386],[11431,4389],[11446,4394],[11450,4396],[11457,4399],[11472,4404],[11476,4406],[11483,4409],[11498,4414],[11502,4416],[11509,4419],[11524,4424],[11528,4426],[11535,4429],[11550,4434],[11554,4436],[11561,4439],[11576,4444],[11580,4446],[11587,4449],[11602,4454],[11606,4456],[11613,4459],[11628,4464],[11632,4466],[11639,4469],[11654,4474],[11658,4476],[11665,4479],[11680,4484],[11684,4486],[11691,4489],[11706,4494],[11710,4496],[11717,4499],[11732,4504],[11736,4506],[11743,4509],[11758,4514],[11762,4516],[11769,4519],[11784,4524],[11788,4526],[11795,4529],[11810,4534],[11814,4536],[11821,4539],[11836,4544],[11840,4546],[11847,4549],[11862,4554],[11866,4556],[11873,4559],[11888,4564],[11892,4566],[11899,4569],[11914,4574],[11918,4576],[11925,4579],[11940,4584],[11944,4586],[11951,4589],[11966,4594],[11970,4596],[11977,4599],[11992,4604],[11996,4606],[12003,4609],[12018,4614],[12022,4616],[12029,4619],[12044,4624],[12048,4626],[12055,4629],[12070,4634],[12074,4636],[12081,4639],[12096,4644],[12100,4646],[12107,4649],[12122,4654],[12126,4656],[12133,4659],[12148,4664],[12152,4666],[12159,4669],[12174,4674],[12178,4676],[12185,4679],[12200,4684],[12204,4686],[12211,4689],[12226,4694],[12230,4696],[12237,4699],[12252,4704],[12256,4706],[12263,4709],[12278,4714],[12282,4716],[12289,4719],[12304,4724],[12308,4726],[12315,4729],[12330,4734],[12334,4736],[12341,4739],[12356,4744],[12360,4746],[12367,4749],[12382,4754],[12386,4756],[12393,4759],[12408,4764],[12412,4766],[12419,4769],[12434,4774],[12438,4776],[12445,4779],[12460,4784],[12464,4786],[12471,4789],[12486,4794],[12490,4796],[12497,4799],[12512,4804],[12516,4806],[12523,4809],[12538,4814],[12542,4816],[12549,4819],[12564,4824],[12568,4826],[12575,4829],[12590,4834],[12594,4836],[12601,4839],[12616,4844],[12620,4846],[12627,4849],[12642,4854],[12646,4856],[12653,4859],[12668,4864],[12672,4866],[12679,4869],[12694,4874],[12698,4876],[12705,4879],[12720,4884],[12724,4886],[12731,4889],[12746,4894],[12750,4896],[12757,4899],[12772,4904],[12776,4906],[12783,4909],[12798,4914],[12802,4916],[12809,4919],[12824,4924],[12828,4926],[12835,4929],[12850,4934],[12854,4936],[12861,4939],[12876,4944],[12880,4946],[12887,4949],[12902,4954],[12906,4956],[12913,4959],[12928,4964],[12932,4966],[12939,4969],[12954,4974],[12958,4976],[12965,4979],[12980,4984],[12984,4986],[12991,4989],[13006,4994],[13010,4996],[13017,4999]],"__id":30,"parentNodes":[25],"constraint":{"type":"true","alias":"__i__"}},{"type":"leftadapter","out_nodes":[[18,4]],"__id":31,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":32,"parentNodes":[29],"index":1,"rule":{"name":"Bootstrap499","pattern":{"type":"object","id":8,"cls":"Fibonacci499","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap499"},{"type":"beta","out_nodes":[[28,-1]],"__id":33,"parentNodes":[33,34]},{"type":"alias","out_nodes":[[31,5],[41,8],[31,15],[41,18],[31,25],[41,28],[31,35],[41,38],[31,45],[41,48],[31,55],[41,58],[31,65],[41,68],[31,75],[41,78],[31,85],[41,88],[31,95],[41,98],[31,105],[41,108],[31,115],[41,118],[31,125],[41,128],[31,135],[41,138],[31,145],[41,148],[31,155],[41,158],[31,165],[41,168],[31,175],[41,178],[31,185],[41,188],[31,195],[41,198],[31,205],[41,208],[31,215],[41,218],[31,225],[41,228],[31,235],[41,238],[31,245],[41,248],[31,255],[41,258],[31,265],[41,268],[31,275],[41,278],[31,285],[41,288],[31,295],[41,298],[31,305],[41,308],[31,315],[41,318],[31,325],[41,328],[31,335],[41,338],[31,345],[41,348],[31,355],[41,358],[31,365],[41,368],[31,375],[41,378],[31,385],[41,388],[31,395],[41,398],[31,405],[41,408],[31,415],[41,418],[31,425],[41,428],[31,435],[41,438],[31,445],[41,448],[31,455],[41,458],[31,465],[41,468],[31,475],[41,478],[31,485],[41,488],[31,495],[41,498],[31,505],[41,508],[31,515],[41,518],[31,525],[41,528],[31,535],[41,538],[31,545],[41,548],[31,555],[41,558],[31,565],[41,568],[31,575],[41,578],[31,585],[41,588],[31,595],[41,598],[31,605],[41,608],[31,615],[41,618],[31,625],[41,628],[31,635],[41,638],[31,645],[41,648],[31,655],[41,658],[31,665],[41,668],[31,675],[41,678],[31,685],[41,688],[31,695],[41,698],[31,705],[41,708],[31,715],[41,718],[31,725],[41,728],[31,735],[41,738],[31,745],[41,748],[31,755],[41,758],[31,765],[41,768],[31,775],[41,778],[31,785],[41,788],[31,795],[41,798],[31,805],[41,808],[31,815],[41,818],[31,825],[41,828],[31,835],[41,838],[31,845],[41,848],[31,855],[41,858],[31,865],[41,868],[31,875],[41,878],[31,885],[41,888],[31,895],[41,898],[31,905],[41,908],[31,915],[41,918],[31,925],[41,928],[31,935],[41,938],[31,945],[41,948],[31,955],[41,958],[31,965],[41,968],[31,975],[41,978],[31,985],[41,988],[31,995],[41,998],[31,1005],[41,1008],[31,1015],[41,1018],[31,1025],[41,1028],[31,1035],[41,1038],[31,1045],[41,1048],[31,1055],[41,1058],[31,1065],[41,1068],[31,1075],[41,1078],[31,1085],[41,1088],[31,1095],[41,1098],[31,1105],[41,1108],[31,1115],[41,1118],[31,1125],[41,1128],[31,1135],[41,1138],[31,1145],[41,1148],[31,1155],[41,1158],[31,1165],[41,1168],[31,1175],[41,1178],[31,1185],[41,1188],[31,1195],[41,1198],[31,1205],[41,1208],[31,1215],[41,1218],[31,1225],[41,1228],[31,1235],[41,1238],[31,1245],[41,1248],[31,1255],[41,1258],[31,1265],[41,1268],[31,1275],[41,1278],[31,1285],[41,1288],[31,1295],[41,1298],[31,1305],[41,1308],[31,1315],[41,1318],[31,1325],[41,1328],[31,1335],[41,1338],[31,1345],[41,1348],[31,1355],[41,1358],[31,1365],[41,1368],[31,1375],[41,1378],[31,1385],[41,1388],[31,1395],[41,1398],[31,1405],[41,1408],[31,1415],[41,1418],[31,1425],[41,1428],[31,1435],[41,1438],[31,1445],[41,1448],[31,1455],[41,1458],[31,1465],[41,1468],[31,1475],[41,1478],[31,1485],[41,1488],[31,1495],[41,1498],[31,1505],[41,1508],[31,1515],[41,1518],[31,1525],[41,1528],[31,1535],[41,1538],[31,1545],[41,1548],[31,1555],[41,1558],[31,1565],[41,1568],[31,1575],[41,1578],[31,1585],[41,1588],[31,1595],[41,1598],[31,1605],[41,1608],[31,1615],[41,1618],[31,1625],[41,1628],[31,1635],[41,1638],[31,1645],[41,1648],[31,1655],[41,1658],[31,1665],[41,1668],[31,1675],[41,1678],[31,1685],[41,1688],[31,1695],[41,1698],[31,1705],[41,1708],[31,1715],[41,1718],[31,1725],[41,1728],[31,1735],[41,1738],[31,1745],[41,1748],[31,1755],[41,1758],[31,1765],[41,1768],[31,1775],[41,1778],[31,1785],[41,1788],[31,1795],[41,1798],[31,1805],[41,1808],[31,1815],[41,1818],[31,1825],[41,1828],[31,1835],[41,1838],[31,1845],[41,1848],[31,1855],[41,1858],[31,1865],[41,1868],[31,1875],[41,1878],[31,1885],[41,1888],[31,1895],[41,1898],[31,1905],[41,1908],[31,1915],[41,1918],[31,1925],[41,1928],[31,1935],[41,1938],[31,1945],[41,1948],[31,1955],[41,1958],[31,1965],[41,1968],[31,1975],[41,1978],[31,1985],[41,1988],[31,1995],[41,1998],[31,2005],[41,2008],[31,2015],[41,2018],[31,2025],[41,2028],[31,2035],[41,2038],[31,2045],[41,2048],[31,2055],[41,2058],[31,2065],[41,2068],[31,2075],[41,2078],[31,2085],[41,2088],[31,2095],[41,2098],[31,2105],[41,2108],[31,2115],[41,2118],[31,2125],[41,2128],[31,2135],[41,2138],[31,2145],[41,2148],[31,2155],[41,2158],[31,2165],[41,2168],[31,2175],[41,2178],[31,2185],[41,2188],[31,2195],[41,2198],[31,2205],[41,2208],[31,2215],[41,2218],[31,2225],[41,2228],[31,2235],[41,2238],[31,2245],[41,2248],[31,2255],[41,2258],[31,2265],[41,2268],[31,2275],[41,2278],[31,2285],[41,2288],[31,2295],[41,2298],[31,2305],[41,2308],[31,2315],[41,2318],[31,2325],[41,2328],[31,2335],[41,2338],[31,2345],[41,2348],[31,2355],[41,2358],[31,2365],[41,2368],[31,2375],[41,2378],[31,2385],[41,2388],[31,2395],[41,2398],[31,2405],[41,2408],[31,2415],[41,2418],[31,2425],[41,2428],[31,2435],[41,2438],[31,2445],[41,2448],[31,2455],[41,2458],[31,2465],[41,2468],[31,2475],[41,2478],[31,2485],[41,2488],[31,2495],[41,2498],[31,2505],[41,2508],[31,2515],[41,2518],[31,2525],[41,2528],[31,2535],[41,2538],[31,2545],[41,2548],[31,2555],[41,2558],[31,2565],[41,2568],[31,2575],[41,2578],[31,2585],[41,2588],[31,2595],[41,2598],[31,2605],[41,2608],[31,2615],[41,2618],[31,2625],[41,2628],[31,2635],[41,2638],[31,2645],[41,2648],[31,2655],[41,2658],[31,2665],[41,2668],[31,2675],[41,2678],[31,2685],[41,2688],[31,2695],[41,2698],[31,2705],[41,2708],[31,2715],[41,2718],[31,2725],[41,2728],[31,2735],[41,2738],[31,2745],[41,2748],[31,2755],[41,2758],[31,2765],[41,2768],[31,2775],[41,2778],[31,2785],[41,2788],[31,2795],[41,2798],[31,2805],[41,2808],[31,2815],[41,2818],[31,2825],[41,2828],[31,2835],[41,2838],[31,2845],[41,2848],[31,2855],[41,2858],[31,2865],[41,2868],[31,2875],[41,2878],[31,2885],[41,2888],[31,2895],[41,2898],[31,2905],[41,2908],[31,2915],[41,2918],[31,2925],[41,2928],[31,2935],[41,2938],[31,2945],[41,2948],[31,2955],[41,2958],[31,2965],[41,2968],[31,2975],[41,2978],[31,2985],[41,2988],[31,2995],[41,2998],[31,3005],[41,3008],[31,3015],[41,3018],[31,3025],[41,3028],[31,3035],[41,3038],[31,3045],[41,3048],[31,3055],[41,3058],[31,3065],[41,3068],[31,3075],[41,3078],[31,3085],[41,3088],[31,3095],[41,3098],[31,3105],[41,3108],[31,3115],[41,3118],[31,3125],[41,3128],[31,3135],[41,3138],[31,3145],[41,3148],[31,3155],[41,3158],[31,3165],[41,3168],[31,3175],[41,3178],[31,3185],[41,3188],[31,3195],[41,3198],[31,3205],[41,3208],[31,3215],[41,3218],[31,3225],[41,3228],[31,3235],[41,3238],[31,3245],[41,3248],[31,3255],[41,3258],[31,3265],[41,3268],[31,3275],[41,3278],[31,3285],[41,3288],[31,3295],[41,3298],[31,3305],[41,3308],[31,3315],[41,3318],[31,3325],[41,3328],[31,3335],[41,3338],[31,3345],[41,3348],[31,3355],[41,3358],[31,3365],[41,3368],[31,3375],[41,3378],[31,3385],[41,3388],[31,3395],[41,3398],[31,3405],[41,3408],[31,3415],[41,3418],[31,3425],[41,3428],[31,3435],[41,3438],[31,3445],[41,3448],[31,3455],[41,3458],[31,3465],[41,3468],[31,3475],[41,3478],[31,3485],[41,3488],[31,3495],[41,3498],[31,3505],[41,3508],[31,3515],[41,3518],[31,3525],[41,3528],[31,3535],[41,3538],[31,3545],[41,3548],[31,3555],[41,3558],[31,3565],[41,3568],[31,3575],[41,3578],[31,3585],[41,3588],[31,3595],[41,3598],[31,3605],[41,3608],[31,3615],[41,3618],[31,3625],[41,3628],[31,3635],[41,3638],[31,3645],[41,3648],[31,3655],[41,3658],[31,3665],[41,3668],[31,3675],[41,3678],[31,3685],[41,3688],[31,3695],[41,3698],[31,3705],[41,3708],[31,3715],[41,3718],[31,3725],[41,3728],[31,3735],[41,3738],[31,3745],[41,3748],[31,3755],[41,3758],[31,3765],[41,3768],[31,3775],[41,3778],[31,3785],[41,3788],[31,3795],[41,3798],[31,3805],[41,3808],[31,3815],[41,3818],[31,3825],[41,3828],[31,3835],[41,3838],[31,3845],[41,3848],[31,3855],[41,3858],[31,3865],[41,3868],[31,3875],[41,3878],[31,3885],[41,3888],[31,3895],[41,3898],[31,3905],[41,3908],[31,3915],[41,3918],[31,3925],[41,3928],[31,3935],[41,3938],[31,3945],[41,3948],[31,3955],[41,3958],[31,3965],[41,3968],[31,3975],[41,3978],[31,3985],[41,3988],[31,3995],[41,3998],[31,4005],[41,4008],[31,4015],[41,4018],[31,4025],[41,4028],[31,4035],[41,4038],[31,4045],[41,4048],[31,4055],[41,4058],[31,4065],[41,4068],[31,4075],[41,4078],[31,4085],[41,4088],[31,4095],[41,4098],[31,4105],[41,4108],[31,4115],[41,4118],[31,4125],[41,4128],[31,4135],[41,4138],[31,4145],[41,4148],[31,4155],[41,4158],[31,4165],[41,4168],[31,4175],[41,4178],[31,4185],[41,4188],[31,4195],[41,4198],[31,4205],[41,4208],[31,4215],[41,4218],[31,4225],[41,4228],[31,4235],[41,4238],[31,4245],[41,4248],[31,4255],[41,4258],[31,4265],[41,4268],[31,4275],[41,4278],[31,4285],[41,4288],[31,4295],[41,4298],[31,4305],[41,4308],[31,4315],[41,4318],[31,4325],[41,4328],[31,4335],[41,4338],[31,4345],[41,4348],[31,4355],[41,4358],[31,4365],[41,4368],[31,4375],[41,4378],[31,4385],[41,4388],[31,4395],[41,4398],[31,4405],[41,4408],[31,4415],[41,4418],[31,4425],[41,4428],[31,4435],[41,4438],[31,4445],[41,4448],[31,4455],[41,4458],[31,4465],[41,4468],[31,4475],[41,4478],[31,4485],[41,4488],[31,4495],[41,4498],[31,4505],[41,4508],[31,4515],[41,4518],[31,4525],[41,4528],[31,4535],[41,4538],[31,4545],[41,4548],[31,4555],[41,4558],[31,4565],[41,4568],[31,4575],[41,4578],[31,4585],[41,4588],[31,4595],[41,4598],[31,4605],[41,4608],[31,4615],[41,4618],[31,4625],[41,4628],[31,4635],[41,4638],[31,4645],[41,4648],[31,4655],[41,4658],[31,4665],[41,4668],[31,4675],[41,4678],[31,4685],[41,4688],[31,4695],[41,4698],[31,4705],[41,4708],[31,4715],[41,4718],[31,4725],[41,4728],[31,4735],[41,4738],[31,4745],[41,4748],[31,4755],[41,4758],[31,4765],[41,4768],[31,4775],[41,4778],[31,4785],[41,4788],[31,4795],[41,4798],[31,4805],[41,4808],[31,4815],[41,4818],[31,4825],[41,4828],[31,4835],[41,4838],[31,4845],[41,4848],[31,4855],[41,4858],[31,4865],[41,4868],[31,4875],[41,4878],[31,4885],[41,4888],[31,4895],[41,4898],[31,4905],[41,4908],[31,4915],[41,4918],[31,4925],[41,4928],[31,4935],[41,4938],[31,4945],[41,4948],[31,4955],[41,4958],[31,4965],[41,4968],[31,4975],[41,4978],[31,4985],[41,4988],[31,4995],[41,4998]],"__id":35,"parentNodes":[8,50,76,102,128,154,180,206,232,258,284,310,336,362,388,414,440,466,492,518,544,570,596,622,648,674,700,726,752,778,804,830,856,882,908,934,960,986,1012,1038,1064,1090,1116,1142,1168,1194,1220,1246,1272,1298,1324,1350,1376,1402,1428,1454,1480,1506,1532,1558,1584,1610,1636,1662,1688,1714,1740,1766,1792,1818,1844,1870,1896,1922,1948,1974,2000,2026,2052,2078,2104,2130,2156,2182,2208,2234,2260,2286,2312,2338,2364,2390,2416,2442,2468,2494,2520,2546,2572,2598,2624,2650,2676,2702,2728,2754,2780,2806,2832,2858,2884,2910,2936,2962,2988,3014,3040,3066,3092,3118,3144,3170,3196,3222,3248,3274,3300,3326,3352,3378,3404,3430,3456,3482,3508,3534,3560,3586,3612,3638,3664,3690,3716,3742,3768,3794,3820,3846,3872,3898,3924,3950,3976,4002,4028,4054,4080,4106,4132,4158,4184,4210,4236,4262,4288,4314,4340,4366,4392,4418,4444,4470,4496,4522,4548,4574,4600,4626,4652,4678,4704,4730,4756,4782,4808,4834,4860,4886,4912,4938,4964,4990,5016,5042,5068,5094,5120,5146,5172,5198,5224,5250,5276,5302,5328,5354,5380,5406,5432,5458,5484,5510,5536,5562,5588,5614,5640,5666,5692,5718,5744,5770,5796,5822,5848,5874,5900,5926,5952,5978,6004,6030,6056,6082,6108,6134,6160,6186,6212,6238,6264,6290,6316,6342,6368,6394,6420,6446,6472,6498,6524,6550,6576,6602,6628,6654,6680,6706,6732,6758,6784,6810,6836,6862,6888,6914,6940,6966,6992,7018,7044,7070,7096,7122,7148,7174,7200,7226,7252,7278,7304,7330,7356,7382,7408,7434,7460,7486,7512,7538,7564,7590,7616,7642,7668,7694,7720,7746,7772,7798,7824,7850,7876,7902,7928,7954,7980,8006,8032,8058,8084,8110,8136,8162,8188,8214,8240,8266,8292,8318,8344,8370,8396,8422,8448,8474,8500,8526,8552,8578,8604,8630,8656,8682,8708,8734,8760,8786,8812,8838,8864,8890,8916,8942,8968,8994,9020,9046,9072,9098,9124,9150,9176,9202,9228,9254,9280,9306,9332,9358,9384,9410,9436,9462,9488,9514,9540,9566,9592,9618,9644,9670,9696,9722,9748,9774,9800,9826,9852,9878,9904,9930,9956,9982,10008,10034,10060,10086,10112,10138,10164,10190,10216,10242,10268,10294,10320,10346,10372,10398,10424,10450,10476,10502,10528,10554,10580,10606,10632,10658,10684,10710,10736,10762,10788,10814,10840,10866,10892,10918,10944,10970,10996,11022,11048,11074,11100,11126,11152,11178,11204,11230,11256,11282,11308,11334,11360,11386,11412,11438,11464,11490,11516,11542,11568,11594,11620,11646,11672,11698,11724,11750,11776,11802,11828,11854,11880,11906,11932,11958,11984,12010,12036,12062,12088,12114,12140,12166,12192,12218,12244,12270,12296,12322,12348,12374,12400,12426,12452,12478,12504,12530,12556,12582,12608,12634,12660,12686,12712,12738,12764,12790,12816,12842,12868,12894,12920,12946,12972,12998],"alias":"f","constraint":{"type":"object","id":8,"cls":"Fibonacci499","alias":"f"}},{"type":"equality","out_nodes":[[32,5],[32,15],[32,25],[32,35],[32,45],[32,55],[32,65],[32,75],[32,85],[32,95],[32,105],[32,115],[32,125],[32,135],[32,145],[32,155],[32,165],[32,175],[32,185],[32,195],[32,205],[32,215],[32,225],[32,235],[32,245],[32,255],[32,265],[32,275],[32,285],[32,295],[32,305],[32,315],[32,325],[32,335],[32,345],[32,355],[32,365],[32,375],[32,385],[32,395],[32,405],[32,415],[32,425],[32,435],[32,445],[32,455],[32,465],[32,475],[32,485],[32,495],[32,505],[32,515],[32,525],[32,535],[32,545],[32,555],[32,565],[32,575],[32,585],[32,595],[32,605],[32,615],[32,625],[32,635],[32,645],[32,655],[32,665],[32,675],[32,685],[32,695],[32,705],[32,715],[32,725],[32,735],[32,745],[32,755],[32,765],[32,775],[32,785],[32,795],[32,805],[32,815],[32,825],[32,835],[32,845],[32,855],[32,865],[32,875],[32,885],[32,895],[32,905],[32,915],[32,925],[32,935],[32,945],[32,955],[32,965],[32,975],[32,985],[32,995],[32,1005],[32,1015],[32,1025],[32,1035],[32,1045],[32,1055],[32,1065],[32,1075],[32,1085],[32,1095],[32,1105],[32,1115],[32,1125],[32,1135],[32,1145],[32,1155],[32,1165],[32,1175],[32,1185],[32,1195],[32,1205],[32,1215],[32,1225],[32,1235],[32,1245],[32,1255],[32,1265],[32,1275],[32,1285],[32,1295],[32,1305],[32,1315],[32,1325],[32,1335],[32,1345],[32,1355],[32,1365],[32,1375],[32,1385],[32,1395],[32,1405],[32,1415],[32,1425],[32,1435],[32,1445],[32,1455],[32,1465],[32,1475],[32,1485],[32,1495],[32,1505],[32,1515],[32,1525],[32,1535],[32,1545],[32,1555],[32,1565],[32,1575],[32,1585],[32,1595],[32,1605],[32,1615],[32,1625],[32,1635],[32,1645],[32,1655],[32,1665],[32,1675],[32,1685],[32,1695],[32,1705],[32,1715],[32,1725],[32,1735],[32,1745],[32,1755],[32,1765],[32,1775],[32,1785],[32,1795],[32,1805],[32,1815],[32,1825],[32,1835],[32,1845],[32,1855],[32,1865],[32,1875],[32,1885],[32,1895],[32,1905],[32,1915],[32,1925],[32,1935],[32,1945],[32,1955],[32,1965],[32,1975],[32,1985],[32,1995],[32,2005],[32,2015],[32,2025],[32,2035],[32,2045],[32,2055],[32,2065],[32,2075],[32,2085],[32,2095],[32,2105],[32,2115],[32,2125],[32,2135],[32,2145],[32,2155],[32,2165],[32,2175],[32,2185],[32,2195],[32,2205],[32,2215],[32,2225],[32,2235],[32,2245],[32,2255],[32,2265],[32,2275],[32,2285],[32,2295],[32,2305],[32,2315],[32,2325],[32,2335],[32,2345],[32,2355],[32,2365],[32,2375],[32,2385],[32,2395],[32,2405],[32,2415],[32,2425],[32,2435],[32,2445],[32,2455],[32,2465],[32,2475],[32,2485],[32,2495],[32,2505],[32,2515],[32,2525],[32,2535],[32,2545],[32,2555],[32,2565],[32,2575],[32,2585],[32,2595],[32,2605],[32,2615],[32,2625],[32,2635],[32,2645],[32,2655],[32,2665],[32,2675],[32,2685],[32,2695],[32,2705],[32,2715],[32,2725],[32,2735],[32,2745],[32,2755],[32,2765],[32,2775],[32,2785],[32,2795],[32,2805],[32,2815],[32,2825],[32,2835],[32,2845],[32,2855],[32,2865],[32,2875],[32,2885],[32,2895],[32,2905],[32,2915],[32,2925],[32,2935],[32,2945],[32,2955],[32,2965],[32,2975],[32,2985],[32,2995],[32,3005],[32,3015],[32,3025],[32,3035],[32,3045],[32,3055],[32,3065],[32,3075],[32,3085],[32,3095],[32,3105],[32,3115],[32,3125],[32,3135],[32,3145],[32,3155],[32,3165],[32,3175],[32,3185],[32,3195],[32,3205],[32,3215],[32,3225],[32,3235],[32,3245],[32,3255],[32,3265],[32,3275],[32,3285],[32,3295],[32,3305],[32,3315],[32,3325],[32,3335],[32,3345],[32,3355],[32,3365],[32,3375],[32,3385],[32,3395],[32,3405],[32,3415],[32,3425],[32,3435],[32,3445],[32,3455],[32,3465],[32,3475],[32,3485],[32,3495],[32,3505],[32,3515],[32,3525],[32,3535],[32,3545],[32,3555],[32,3565],[32,3575],[32,3585],[32,3595],[32,3605],[32,3615],[32,3625],[32,3635],[32,3645],[32,3655],[32,3665],[32,3675],[32,3685],[32,3695],[32,3705],[32,3715],[32,3725],[32,3735],[32,3745],[32,3755],[32,3765],[32,3775],[32,3785],[32,3795],[32,3805],[32,3815],[32,3825],[32,3835],[32,3845],[32,3855],[32,3865],[32,3875],[32,3885],[32,3895],[32,3905],[32,3915],[32,3925],[32,3935],[32,3945],[32,3955],[32,3965],[32,3975],[32,3985],[32,3995],[32,4005],[32,4015],[32,4025],[32,4035],[32,4045],[32,4055],[32,4065],[32,4075],[32,4085],[32,4095],[32,4105],[32,4115],[32,4125],[32,4135],[32,4145],[32,4155],[32,4165],[32,4175],[32,4185],[32,4195],[32,4205],[32,4215],[32,4225],[32,4235],[32,4245],[32,4255],[32,4265],[32,4275],[32,4285],[32,4295],[32,4305],[32,4315],[32,4325],[32,4335],[32,4345],[32,4355],[32,4365],[32,4375],[32,4385],[32,4395],[32,4405],[32,4415],[32,4425],[32,4435],[32,4445],[32,4455],[32,4465],[32,4475],[32,4485],[32,4495],[32,4505],[32,4515],[32,4525],[32,4535],[32,4545],[32,4555],[32,4565],[32,4575],[32,4585],[32,4595],[32,4605],[32,4615],[32,4625],[32,4635],[32,4645],[32,4655],[32,4665],[32,4675],[32,4685],[32,4695],[32,4705],[32,4715],[32,4725],[32,4735],[32,4745],[32,4755],[32,4765],[32,4775],[32,4785],[32,4795],[32,4805],[32,4815],[32,4825],[32,4835],[32,4845],[32,4855],[32,4865],[32,4875],[32,4885],[32,4895],[32,4905],[32,4915],[32,4925],[32,4935],[32,4945],[32,4955],[32,4965],[32,4975],[32,4985],[32,4995]],"__id":36,"parentNodes":[30],"constraint":{"options":{"alias":"f","pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","scope2":{}},"pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","type":"equality","alias":"f","constraint":[[["f",null,"identifier"],["value",null,"identifier"],"prop"],[-1,null,"number"],"eq"]}},{"type":"equality","out_nodes":[[33,5],[61,15],[87,25],[113,35],[139,45],[165,55],[191,65],[217,75],[243,85],[269,95],[295,105],[321,115],[347,125],[373,135],[399,145],[425,155],[451,165],[477,175],[503,185],[529,195],[555,205],[581,215],[607,225],[633,235],[659,245],[685,255],[711,265],[737,275],[763,285],[789,295],[815,305],[841,315],[867,325],[893,335],[919,345],[945,355],[971,365],[997,375],[1023,385],[1049,395],[1075,405],[1101,415],[1127,425],[1153,435],[1179,445],[1205,455],[1231,465],[1257,475],[1283,485],[1309,495],[1335,505],[1361,515],[1387,525],[1413,535],[1439,545],[1465,555],[1491,565],[1517,575],[1543,585],[1569,595],[1595,605],[1621,615],[1647,625],[1673,635],[1699,645],[1725,655],[1751,665],[1777,675],[1803,685],[1829,695],[1855,705],[1881,715],[1907,725],[1933,735],[1959,745],[1985,755],[2011,765],[2037,775],[2063,785],[2089,795],[2115,805],[2141,815],[2167,825],[2193,835],[2219,845],[2245,855],[2271,865],[2297,875],[2323,885],[2349,895],[2375,905],[2401,915],[2427,925],[2453,935],[2479,945],[2505,955],[2531,965],[2557,975],[2583,985],[2609,995],[2635,1005],[2661,1015],[2687,1025],[2713,1035],[2739,1045],[2765,1055],[2791,1065],[2817,1075],[2843,1085],[2869,1095],[2895,1105],[2921,1115],[2947,1125],[2973,1135],[2999,1145],[3025,1155],[3051,1165],[3077,1175],[3103,1185],[3129,1195],[3155,1205],[3181,1215],[3207,1225],[3233,1235],[3259,1245],[3285,1255],[3311,1265],[3337,1275],[3363,1285],[3389,1295],[3415,1305],[3441,1315],[3467,1325],[3493,1335],[3519,1345],[3545,1355],[3571,1365],[3597,1375],[3623,1385],[3649,1395],[3675,1405],[3701,1415],[3727,1425],[3753,1435],[3779,1445],[3805,1455],[3831,1465],[3857,1475],[3883,1485],[3909,1495],[3935,1505],[3961,1515],[3987,1525],[4013,1535],[4039,1545],[4065,1555],[4091,1565],[4117,1575],[4143,1585],[4169,1595],[4195,1605],[4221,1615],[4247,1625],[4273,1635],[4299,1645],[4325,1655],[4351,1665],[4377,1675],[4403,1685],[4429,1695],[4455,1705],[4481,1715],[4507,1725],[4533,1735],[4559,1745],[4585,1755],[4611,1765],[4637,1775],[4663,1785],[4689,1795],[4715,1805],[4741,1815],[4767,1825],[4793,1835],[4819,1845],[4845,1855],[4871,1865],[4897,1875],[4923,1885],[4949,1895],[4975,1905],[5001,1915],[5027,1925],[5053,1935],[5079,1945],[5105,1955],[5131,1965],[5157,1975],[5183,1985],[5209,1995],[5235,2005],[5261,2015],[5287,2025],[5313,2035],[5339,2045],[5365,2055],[5391,2065],[5417,2075],[5443,2085],[5469,2095],[5495,2105],[5521,2115],[5547,2125],[5573,2135],[5599,2145],[5625,2155],[5651,2165],[5677,2175],[5703,2185],[5729,2195],[5755,2205],[5781,2215],[5807,2225],[5833,2235],[5859,2245],[5885,2255],[5911,2265],[5937,2275],[5963,2285],[5989,2295],[6015,2305],[6041,2315],[6067,2325],[6093,2335],[6119,2345],[6145,2355],[6171,2365],[6197,2375],[6223,2385],[6249,2395],[6275,2405],[6301,2415],[6327,2425],[6353,2435],[6379,2445],[6405,2455],[6431,2465],[6457,2475],[6483,2485],[6509,2495],[6535,2505],[6561,2515],[6587,2525],[6613,2535],[6639,2545],[6665,2555],[6691,2565],[6717,2575],[6743,2585],[6769,2595],[6795,2605],[6821,2615],[6847,2625],[6873,2635],[6899,2645],[6925,2655],[6951,2665],[6977,2675],[7003,2685],[7029,2695],[7055,2705],[7081,2715],[7107,2725],[7133,2735],[7159,2745],[7185,2755],[7211,2765],[7237,2775],[7263,2785],[7289,2795],[7315,2805],[7341,2815],[7367,2825],[7393,2835],[7419,2845],[7445,2855],[7471,2865],[7497,2875],[7523,2885],[7549,2895],[7575,2905],[7601,2915],[7627,2925],[7653,2935],[7679,2945],[7705,2955],[7731,2965],[7757,2975],[7783,2985],[7809,2995],[7835,3005],[7861,3015],[7887,3025],[7913,3035],[7939,3045],[7965,3055],[7991,3065],[8017,3075],[8043,3085],[8069,3095],[8095,3105],[8121,3115],[8147,3125],[8173,3135],[8199,3145],[8225,3155],[8251,3165],[8277,3175],[8303,3185],[8329,3195],[8355,3205],[8381,3215],[8407,3225],[8433,3235],[8459,3245],[8485,3255],[8511,3265],[8537,3275],[8563,3285],[8589,3295],[8615,3305],[8641,3315],[8667,3325],[8693,3335],[8719,3345],[8745,3355],[8771,3365],[8797,3375],[8823,3385],[8849,3395],[8875,3405],[8901,3415],[8927,3425],[8953,3435],[8979,3445],[9005,3455],[9031,3465],[9057,3475],[9083,3485],[9109,3495],[9135,3505],[9161,3515],[9187,3525],[9213,3535],[9239,3545],[9265,3555],[9291,3565],[9317,3575],[9343,3585],[9369,3595],[9395,3605],[9421,3615],[9447,3625],[9473,3635],[9499,3645],[9525,3655],[9551,3665],[9577,3675],[9603,3685],[9629,3695],[9655,3705],[9681,3715],[9707,3725],[9733,3735],[9759,3745],[9785,3755],[9811,3765],[9837,3775],[9863,3785],[9889,3795],[9915,3805],[9941,3815],[9967,3825],[9993,3835],[10019,3845],[10045,3855],[10071,3865],[10097,3875],[10123,3885],[10149,3895],[10175,3905],[10201,3915],[10227,3925],[10253,3935],[10279,3945],[10305,3955],[10331,3965],[10357,3975],[10383,3985],[10409,3995],[10435,4005],[10461,4015],[10487,4025],[10513,4035],[10539,4045],[10565,4055],[10591,4065],[10617,4075],[10643,4085],[10669,4095],[10695,4105],[10721,4115],[10747,4125],[10773,4135],[10799,4145],[10825,4155],[10851,4165],[10877,4175],[10903,4185],[10929,4195],[10955,4205],[10981,4215],[11007,4225],[11033,4235],[11059,4245],[11085,4255],[11111,4265],[11137,4275],[11163,4285],[11189,4295],[11215,4305],[11241,4315],[11267,4325],[11293,4335],[11319,4345],[11345,4355],[11371,4365],[11397,4375],[11423,4385],[11449,4395],[11475,4405],[11501,4415],[11527,4425],[11553,4435],[11579,4445],[11605,4455],[11631,4465],[11657,4475],[11683,4485],[11709,4495],[11735,4505],[11761,4515],[11787,4525],[11813,4535],[11839,4545],[11865,4555],[11891,4565],[11917,4575],[11943,4585],[11969,4595],[11995,4605],[12021,4615],[12047,4625],[12073,4635],[12099,4645],[12125,4655],[12151,4665],[12177,4675],[12203,4685],[12229,4695],[12255,4705],[12281,4715],[12307,4725],[12333,4735],[12359,4745],[12385,4755],[12411,4765],[12437,4775],[12463,4785],[12489,4795],[12515,4805],[12541,4815],[12567,4825],[12593,4835],[12619,4845],[12645,4855],[12671,4865],[12697,4875],[12723,4885],[12749,4895],[12775,4905],[12801,4915],[12827,4925],[12853,4935],[12879,4945],[12905,4955],[12931,4965],[12957,4975],[12983,4985],[13009,4995]],"__id":37,"parentNodes":[31],"constraint":{"options":{"alias":"f","pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","scope2":{}},"pattern":"f.value == -1 && (f.sequence == 1 || f.sequence == 2)","type":"comparison","alias":"f","constraint":[[[[["f",null,"identifier"],["sequence",null,"identifier"],"prop"],[1,null,"number"],"eq"],[[["f",null,"identifier"],["sequence",null,"identifier"],"prop"],[2,null,"number"],"eq"],"or"],null,"composite"]}},{"type":"rightadapter","out_nodes":[[29,5]],"__id":38,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[29,6]],"__id":42,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":43,"parentNodes":[36],"index":2,"rule":{"name":"Recurse499","pattern":{"type":"composite","id":11,"leftPattern":{"type":"not","id":9,"cls":"Fibonacci499","alias":"f"},"rightPattern":{"type":"object","id":10,"cls":"Fibonacci499","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci499 = defined.get('Fibonacci499');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci499(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse499"},{"type":"beta","out_nodes":[[35,-1]],"__id":44,"parentNodes":[38,39]},{"type":"equality","out_nodes":[[38,7],[65,17],[91,27],[117,37],[143,47],[169,57],[195,67],[221,77],[247,87],[273,97],[299,107],[325,117],[351,127],[377,137],[403,147],[429,157],[455,167],[481,177],[507,187],[533,197],[559,207],[585,217],[611,227],[637,237],[663,247],[689,257],[715,267],[741,277],[767,287],[793,297],[819,307],[845,317],[871,327],[897,337],[923,347],[949,357],[975,367],[1001,377],[1027,387],[1053,397],[1079,407],[1105,417],[1131,427],[1157,437],[1183,447],[1209,457],[1235,467],[1261,477],[1287,487],[1313,497],[1339,507],[1365,517],[1391,527],[1417,537],[1443,547],[1469,557],[1495,567],[1521,577],[1547,587],[1573,597],[1599,607],[1625,617],[1651,627],[1677,637],[1703,647],[1729,657],[1755,667],[1781,677],[1807,687],[1833,697],[1859,707],[1885,717],[1911,727],[1937,737],[1963,747],[1989,757],[2015,767],[2041,777],[2067,787],[2093,797],[2119,807],[2145,817],[2171,827],[2197,837],[2223,847],[2249,857],[2275,867],[2301,877],[2327,887],[2353,897],[2379,907],[2405,917],[2431,927],[2457,937],[2483,947],[2509,957],[2535,967],[2561,977],[2587,987],[2613,997],[2639,1007],[2665,1017],[2691,1027],[2717,1037],[2743,1047],[2769,1057],[2795,1067],[2821,1077],[2847,1087],[2873,1097],[2899,1107],[2925,1117],[2951,1127],[2977,1137],[3003,1147],[3029,1157],[3055,1167],[3081,1177],[3107,1187],[3133,1197],[3159,1207],[3185,1217],[3211,1227],[3237,1237],[3263,1247],[3289,1257],[3315,1267],[3341,1277],[3367,1287],[3393,1297],[3419,1307],[3445,1317],[3471,1327],[3497,1337],[3523,1347],[3549,1357],[3575,1367],[3601,1377],[3627,1387],[3653,1397],[3679,1407],[3705,1417],[3731,1427],[3757,1437],[3783,1447],[3809,1457],[3835,1467],[3861,1477],[3887,1487],[3913,1497],[3939,1507],[3965,1517],[3991,1527],[4017,1537],[4043,1547],[4069,1557],[4095,1567],[4121,1577],[4147,1587],[4173,1597],[4199,1607],[4225,1617],[4251,1627],[4277,1637],[4303,1647],[4329,1657],[4355,1667],[4381,1677],[4407,1687],[4433,1697],[4459,1707],[4485,1717],[4511,1727],[4537,1737],[4563,1747],[4589,1757],[4615,1767],[4641,1777],[4667,1787],[4693,1797],[4719,1807],[4745,1817],[4771,1827],[4797,1837],[4823,1847],[4849,1857],[4875,1867],[4901,1877],[4927,1887],[4953,1897],[4979,1907],[5005,1917],[5031,1927],[5057,1937],[5083,1947],[5109,1957],[5135,1967],[5161,1977],[5187,1987],[5213,1997],[5239,2007],[5265,2017],[5291,2027],[5317,2037],[5343,2047],[5369,2057],[5395,2067],[5421,2077],[5447,2087],[5473,2097],[5499,2107],[5525,2117],[5551,2127],[5577,2137],[5603,2147],[5629,2157],[5655,2167],[5681,2177],[5707,2187],[5733,2197],[5759,2207],[5785,2217],[5811,2227],[5837,2237],[5863,2247],[5889,2257],[5915,2267],[5941,2277],[5967,2287],[5993,2297],[6019,2307],[6045,2317],[6071,2327],[6097,2337],[6123,2347],[6149,2357],[6175,2367],[6201,2377],[6227,2387],[6253,2397],[6279,2407],[6305,2417],[6331,2427],[6357,2437],[6383,2447],[6409,2457],[6435,2467],[6461,2477],[6487,2487],[6513,2497],[6539,2507],[6565,2517],[6591,2527],[6617,2537],[6643,2547],[6669,2557],[6695,2567],[6721,2577],[6747,2587],[6773,2597],[6799,2607],[6825,2617],[6851,2627],[6877,2637],[6903,2647],[6929,2657],[6955,2667],[6981,2677],[7007,2687],[7033,2697],[7059,2707],[7085,2717],[7111,2727],[7137,2737],[7163,2747],[7189,2757],[7215,2767],[7241,2777],[7267,2787],[7293,2797],[7319,2807],[7345,2817],[7371,2827],[7397,2837],[7423,2847],[7449,2857],[7475,2867],[7501,2877],[7527,2887],[7553,2897],[7579,2907],[7605,2917],[7631,2927],[7657,2937],[7683,2947],[7709,2957],[7735,2967],[7761,2977],[7787,2987],[7813,2997],[7839,3007],[7865,3017],[7891,3027],[7917,3037],[7943,3047],[7969,3057],[7995,3067],[8021,3077],[8047,3087],[8073,3097],[8099,3107],[8125,3117],[8151,3127],[8177,3137],[8203,3147],[8229,3157],[8255,3167],[8281,3177],[8307,3187],[8333,3197],[8359,3207],[8385,3217],[8411,3227],[8437,3237],[8463,3247],[8489,3257],[8515,3267],[8541,3277],[8567,3287],[8593,3297],[8619,3307],[8645,3317],[8671,3327],[8697,3337],[8723,3347],[8749,3357],[8775,3367],[8801,3377],[8827,3387],[8853,3397],[8879,3407],[8905,3417],[8931,3427],[8957,3437],[8983,3447],[9009,3457],[9035,3467],[9061,3477],[9087,3487],[9113,3497],[9139,3507],[9165,3517],[9191,3527],[9217,3537],[9243,3547],[9269,3557],[9295,3567],[9321,3577],[9347,3587],[9373,3597],[9399,3607],[9425,3617],[9451,3627],[9477,3637],[9503,3647],[9529,3657],[9555,3667],[9581,3677],[9607,3687],[9633,3697],[9659,3707],[9685,3717],[9711,3727],[9737,3737],[9763,3747],[9789,3757],[9815,3767],[9841,3777],[9867,3787],[9893,3797],[9919,3807],[9945,3817],[9971,3827],[9997,3837],[10023,3847],[10049,3857],[10075,3867],[10101,3877],[10127,3887],[10153,3897],[10179,3907],[10205,3917],[10231,3927],[10257,3937],[10283,3947],[10309,3957],[10335,3967],[10361,3977],[10387,3987],[10413,3997],[10439,4007],[10465,4017],[10491,4027],[10517,4037],[10543,4047],[10569,4057],[10595,4067],[10621,4077],[10647,4087],[10673,4097],[10699,4107],[10725,4117],[10751,4127],[10777,4137],[10803,4147],[10829,4157],[10855,4167],[10881,4177],[10907,4187],[10933,4197],[10959,4207],[10985,4217],[11011,4227],[11037,4237],[11063,4247],[11089,4257],[11115,4267],[11141,4277],[11167,4287],[11193,4297],[11219,4307],[11245,4317],[11271,4327],[11297,4337],[11323,4347],[11349,4357],[11375,4367],[11401,4377],[11427,4387],[11453,4397],[11479,4407],[11505,4417],[11531,4427],[11557,4437],[11583,4447],[11609,4457],[11635,4467],[11661,4477],[11687,4487],[11713,4497],[11739,4507],[11765,4517],[11791,4527],[11817,4537],[11843,4547],[11869,4557],[11895,4567],[11921,4577],[11947,4587],[11973,4597],[11999,4607],[12025,4617],[12051,4627],[12077,4637],[12103,4647],[12129,4657],[12155,4667],[12181,4677],[12207,4687],[12233,4697],[12259,4707],[12285,4717],[12311,4727],[12337,4737],[12363,4747],[12389,4757],[12415,4767],[12441,4777],[12467,4787],[12493,4797],[12519,4807],[12545,4817],[12571,4827],[12597,4837],[12623,4847],[12649,4857],[12675,4867],[12701,4877],[12727,4887],[12753,4897],[12779,4907],[12805,4917],[12831,4927],[12857,4937],[12883,4947],[12909,4957],[12935,4967],[12961,4977],[12987,4987],[13013,4997]],"__id":47,"parentNodes":[20],"constraint":{"options":{"alias":"f1","pattern":"f1.sequence != 1","scope2":{}},"pattern":"f1.sequence != 1","type":"inequality","alias":"f1","constraint":[[["f1",null,"identifier"],["sequence",null,"identifier"],"prop"],[1,null,"number"],"neq"]}},{"type":"rightadapter","out_nodes":[[36,7]],"__id":48,"parentNodes":[37]},{"type":"not","out_nodes":[[40,-1]],"__id":49,"parentNodes":[42,43],"constraint":{"type":"join-reference","out_nodes":[],"__id":50,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[36,-1]],"__id":51,"parentNodes":[]},{"type":"equality","out_nodes":[[42,8],[68,18],[94,28],[120,38],[146,48],[172,58],[198,68],[224,78],[250,88],[276,98],[302,108],[328,118],[354,128],[380,138],[406,148],[432,158],[458,168],[484,178],[510,188],[536,198],[562,208],[588,218],[614,228],[640,238],[666,248],[692,258],[718,268],[744,278],[770,288],[796,298],[822,308],[848,318],[874,328],[900,338],[926,348],[952,358],[978,368],[1004,378],[1030,388],[1056,398],[1082,408],[1108,418],[1134,428],[1160,438],[1186,448],[1212,458],[1238,468],[1264,478],[1290,488],[1316,498],[1342,508],[1368,518],[1394,528],[1420,538],[1446,548],[1472,558],[1498,568],[1524,578],[1550,588],[1576,598],[1602,608],[1628,618],[1654,628],[1680,638],[1706,648],[1732,658],[1758,668],[1784,678],[1810,688],[1836,698],[1862,708],[1888,718],[1914,728],[1940,738],[1966,748],[1992,758],[2018,768],[2044,778],[2070,788],[2096,798],[2122,808],[2148,818],[2174,828],[2200,838],[2226,848],[2252,858],[2278,868],[2304,878],[2330,888],[2356,898],[2382,908],[2408,918],[2434,928],[2460,938],[2486,948],[2512,958],[2538,968],[2564,978],[2590,988],[2616,998],[2642,1008],[2668,1018],[2694,1028],[2720,1038],[2746,1048],[2772,1058],[2798,1068],[2824,1078],[2850,1088],[2876,1098],[2902,1108],[2928,1118],[2954,1128],[2980,1138],[3006,1148],[3032,1158],[3058,1168],[3084,1178],[3110,1188],[3136,1198],[3162,1208],[3188,1218],[3214,1228],[3240,1238],[3266,1248],[3292,1258],[3318,1268],[3344,1278],[3370,1288],[3396,1298],[3422,1308],[3448,1318],[3474,1328],[3500,1338],[3526,1348],[3552,1358],[3578,1368],[3604,1378],[3630,1388],[3656,1398],[3682,1408],[3708,1418],[3734,1428],[3760,1438],[3786,1448],[3812,1458],[3838,1468],[3864,1478],[3890,1488],[3916,1498],[3942,1508],[3968,1518],[3994,1528],[4020,1538],[4046,1548],[4072,1558],[4098,1568],[4124,1578],[4150,1588],[4176,1598],[4202,1608],[4228,1618],[4254,1628],[4280,1638],[4306,1648],[4332,1658],[4358,1668],[4384,1678],[4410,1688],[4436,1698],[4462,1708],[4488,1718],[4514,1728],[4540,1738],[4566,1748],[4592,1758],[4618,1768],[4644,1778],[4670,1788],[4696,1798],[4722,1808],[4748,1818],[4774,1828],[4800,1838],[4826,1848],[4852,1858],[4878,1868],[4904,1878],[4930,1888],[4956,1898],[4982,1908],[5008,1918],[5034,1928],[5060,1938],[5086,1948],[5112,1958],[5138,1968],[5164,1978],[5190,1988],[5216,1998],[5242,2008],[5268,2018],[5294,2028],[5320,2038],[5346,2048],[5372,2058],[5398,2068],[5424,2078],[5450,2088],[5476,2098],[5502,2108],[5528,2118],[5554,2128],[5580,2138],[5606,2148],[5632,2158],[5658,2168],[5684,2178],[5710,2188],[5736,2198],[5762,2208],[5788,2218],[5814,2228],[5840,2238],[5866,2248],[5892,2258],[5918,2268],[5944,2278],[5970,2288],[5996,2298],[6022,2308],[6048,2318],[6074,2328],[6100,2338],[6126,2348],[6152,2358],[6178,2368],[6204,2378],[6230,2388],[6256,2398],[6282,2408],[6308,2418],[6334,2428],[6360,2438],[6386,2448],[6412,2458],[6438,2468],[6464,2478],[6490,2488],[6516,2498],[6542,2508],[6568,2518],[6594,2528],[6620,2538],[6646,2548],[6672,2558],[6698,2568],[6724,2578],[6750,2588],[6776,2598],[6802,2608],[6828,2618],[6854,2628],[6880,2638],[6906,2648],[6932,2658],[6958,2668],[6984,2678],[7010,2688],[7036,2698],[7062,2708],[7088,2718],[7114,2728],[7140,2738],[7166,2748],[7192,2758],[7218,2768],[7244,2778],[7270,2788],[7296,2798],[7322,2808],[7348,2818],[7374,2828],[7400,2838],[7426,2848],[7452,2858],[7478,2868],[7504,2878],[7530,2888],[7556,2898],[7582,2908],[7608,2918],[7634,2928],[7660,2938],[7686,2948],[7712,2958],[7738,2968],[7764,2978],[7790,2988],[7816,2998],[7842,3008],[7868,3018],[7894,3028],[7920,3038],[7946,3048],[7972,3058],[7998,3068],[8024,3078],[8050,3088],[8076,3098],[8102,3108],[8128,3118],[8154,3128],[8180,3138],[8206,3148],[8232,3158],[8258,3168],[8284,3178],[8310,3188],[8336,3198],[8362,3208],[8388,3218],[8414,3228],[8440,3238],[8466,3248],[8492,3258],[8518,3268],[8544,3278],[8570,3288],[8596,3298],[8622,3308],[8648,3318],[8674,3328],[8700,3338],[8726,3348],[8752,3358],[8778,3368],[8804,3378],[8830,3388],[8856,3398],[8882,3408],[8908,3418],[8934,3428],[8960,3438],[8986,3448],[9012,3458],[9038,3468],[9064,3478],[9090,3488],[9116,3498],[9142,3508],[9168,3518],[9194,3528],[9220,3538],[9246,3548],[9272,3558],[9298,3568],[9324,3578],[9350,3588],[9376,3598],[9402,3608],[9428,3618],[9454,3628],[9480,3638],[9506,3648],[9532,3658],[9558,3668],[9584,3678],[9610,3688],[9636,3698],[9662,3708],[9688,3718],[9714,3728],[9740,3738],[9766,3748],[9792,3758],[9818,3768],[9844,3778],[9870,3788],[9896,3798],[9922,3808],[9948,3818],[9974,3828],[10000,3838],[10026,3848],[10052,3858],[10078,3868],[10104,3878],[10130,3888],[10156,3898],[10182,3908],[10208,3918],[10234,3928],[10260,3938],[10286,3948],[10312,3958],[10338,3968],[10364,3978],[10390,3988],[10416,3998],[10442,4008],[10468,4018],[10494,4028],[10520,4038],[10546,4048],[10572,4058],[10598,4068],[10624,4078],[10650,4088],[10676,4098],[10702,4108],[10728,4118],[10754,4128],[10780,4138],[10806,4148],[10832,4158],[10858,4168],[10884,4178],[10910,4188],[10936,4198],[10962,4208],[10988,4218],[11014,4228],[11040,4238],[11066,4248],[11092,4258],[11118,4268],[11144,4278],[11170,4288],[11196,4298],[11222,4308],[11248,4318],[11274,4328],[11300,4338],[11326,4348],[11352,4358],[11378,4368],[11404,4378],[11430,4388],[11456,4398],[11482,4408],[11508,4418],[11534,4428],[11560,4438],[11586,4448],[11612,4458],[11638,4468],[11664,4478],[11690,4488],[11716,4498],[11742,4508],[11768,4518],[11794,4528],[11820,4538],[11846,4548],[11872,4558],[11898,4568],[11924,4578],[11950,4588],[11976,4598],[12002,4608],[12028,4618],[12054,4628],[12080,4638],[12106,4648],[12132,4658],[12158,4668],[12184,4678],[12210,4688],[12236,4698],[12262,4708],[12288,4718],[12314,4728],[12340,4738],[12366,4748],[12392,4758],[12418,4768],[12444,4778],[12470,4788],[12496,4798],[12522,4808],[12548,4818],[12574,4828],[12600,4838],[12626,4848],[12652,4858],[12678,4868],[12704,4878],[12730,4888],[12756,4898],[12782,4908],[12808,4918],[12834,4928],[12860,4938],[12886,4948],[12912,4958],[12938,4968],[12964,4978],[12990,4988],[13016,4998]],"__id":54,"parentNodes":[30],"constraint":{"options":{"alias":"f","pattern":"f.sequence == 1","scope2":{}},"pattern":"f.sequence == 1","type":"equality","alias":"f","constraint":[[["f",null,"identifier"],["sequence",null,"identifier"],"prop"],[1,null,"number"],"eq"]}},{"type":"rightadapter","out_nodes":[[39,8]],"__id":55,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[39,9]],"__id":59,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":60,"parentNodes":[45],"index":3,"rule":{"name":"Calculate498","pattern":{"type":"composite","id":18,"leftPattern":{"type":"composite","id":17,"leftPattern":{"type":"composite","id":16,"leftPattern":{"type":"object","id":12,"cls":"Fibonacci498","alias":"f1"},"rightPattern":{"type":"object","id":13,"cls":"Fibonacci498","alias":"f2"}},"rightPattern":{"type":"object","id":14,"cls":"Fibonacci498","alias":"f3"}},"rightPattern":{"type":"object","id":15,"cls":"Result498","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate498"},{"type":"beta","out_nodes":[[44,-1]],"__id":61,"parentNodes":[47,48]},{"type":"type","out_nodes":[[3,10]],"__id":62,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result498"}},{"type":"rightadapter","out_nodes":[[45,10]],"__id":65,"parentNodes":[4]},{"type":"join","out_nodes":[[49,-1]],"__id":66,"parentNodes":[51,52],"constraint":{"type":"join-reference","out_nodes":[],"__id":67,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[45,-1]],"__id":68,"parentNodes":[]},{"type":"type","out_nodes":[[9,11],[14,12],[20,13],[30,15],[20,17],[30,18]],"__id":69,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci498"}},{"type":"rightadapter","out_nodes":[[48,11]],"__id":72,"parentNodes":[10]},{"type":"join","out_nodes":[[53,-1]],"__id":73,"parentNodes":[54,55],"constraint":{"type":"join-reference","out_nodes":[],"__id":74,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[48,-1]],"__id":75,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[52,12]],"__id":80,"parentNodes":[16]},{"type":"beta","out_nodes":[[56,-1]],"__id":81,"parentNodes":[57,58]},{"type":"leftadapter","out_nodes":[[52,-1]],"__id":82,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[55,13]],"__id":87,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[55,14]],"__id":91,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":92,"parentNodes":[60],"index":4,"rule":{"name":"Bootstrap498","pattern":{"type":"object","id":19,"cls":"Fibonacci498","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap498"},{"type":"beta","out_nodes":[[59,-1]],"__id":93,"parentNodes":[61,62]},{"type":"rightadapter","out_nodes":[[60,15]],"__id":98,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[60,16]],"__id":102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":103,"parentNodes":[64],"index":5,"rule":{"name":"Recurse498","pattern":{"type":"composite","id":22,"leftPattern":{"type":"not","id":20,"cls":"Fibonacci498","alias":"f"},"rightPattern":{"type":"object","id":21,"cls":"Fibonacci498","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci498 = defined.get('Fibonacci498');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci498(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse498"},{"type":"beta","out_nodes":[[63,-1]],"__id":104,"parentNodes":[65,66]},{"type":"rightadapter","out_nodes":[[64,17]],"__id":108,"parentNodes":[37]},{"type":"not","out_nodes":[[67,-1]],"__id":109,"parentNodes":[68,69],"constraint":{"type":"join-reference","out_nodes":[],"__id":110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[64,-1]],"__id":111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[66,18]],"__id":115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[66,19]],"__id":119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":120,"parentNodes":[71],"index":6,"rule":{"name":"Calculate497","pattern":{"type":"composite","id":29,"leftPattern":{"type":"composite","id":28,"leftPattern":{"type":"composite","id":27,"leftPattern":{"type":"object","id":23,"cls":"Fibonacci497","alias":"f1"},"rightPattern":{"type":"object","id":24,"cls":"Fibonacci497","alias":"f2"}},"rightPattern":{"type":"object","id":25,"cls":"Fibonacci497","alias":"f3"}},"rightPattern":{"type":"object","id":26,"cls":"Result497","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate497"},{"type":"beta","out_nodes":[[70,-1]],"__id":121,"parentNodes":[73,74]},{"type":"type","out_nodes":[[3,20]],"__id":122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result497"}},{"type":"rightadapter","out_nodes":[[71,20]],"__id":125,"parentNodes":[4]},{"type":"join","out_nodes":[[75,-1]],"__id":126,"parentNodes":[77,78],"constraint":{"type":"join-reference","out_nodes":[],"__id":127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[71,-1]],"__id":128,"parentNodes":[]},{"type":"type","out_nodes":[[9,21],[14,22],[20,23],[30,25],[20,27],[30,28]],"__id":129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci497"}},{"type":"rightadapter","out_nodes":[[74,21]],"__id":132,"parentNodes":[10]},{"type":"join","out_nodes":[[79,-1]],"__id":133,"parentNodes":[80,81],"constraint":{"type":"join-reference","out_nodes":[],"__id":134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[74,-1]],"__id":135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[78,22]],"__id":140,"parentNodes":[16]},{"type":"beta","out_nodes":[[82,-1]],"__id":141,"parentNodes":[83,84]},{"type":"leftadapter","out_nodes":[[78,-1]],"__id":142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[81,23]],"__id":147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[81,24]],"__id":151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":152,"parentNodes":[86],"index":7,"rule":{"name":"Bootstrap497","pattern":{"type":"object","id":30,"cls":"Fibonacci497","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap497"},{"type":"beta","out_nodes":[[85,-1]],"__id":153,"parentNodes":[87,88]},{"type":"rightadapter","out_nodes":[[86,25]],"__id":158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[86,26]],"__id":162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":163,"parentNodes":[90],"index":8,"rule":{"name":"Recurse497","pattern":{"type":"composite","id":33,"leftPattern":{"type":"not","id":31,"cls":"Fibonacci497","alias":"f"},"rightPattern":{"type":"object","id":32,"cls":"Fibonacci497","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci497 = defined.get('Fibonacci497');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci497(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse497"},{"type":"beta","out_nodes":[[89,-1]],"__id":164,"parentNodes":[91,92]},{"type":"rightadapter","out_nodes":[[90,27]],"__id":168,"parentNodes":[37]},{"type":"not","out_nodes":[[93,-1]],"__id":169,"parentNodes":[94,95],"constraint":{"type":"join-reference","out_nodes":[],"__id":170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[90,-1]],"__id":171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[92,28]],"__id":175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[92,29]],"__id":179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":180,"parentNodes":[97],"index":9,"rule":{"name":"Calculate496","pattern":{"type":"composite","id":40,"leftPattern":{"type":"composite","id":39,"leftPattern":{"type":"composite","id":38,"leftPattern":{"type":"object","id":34,"cls":"Fibonacci496","alias":"f1"},"rightPattern":{"type":"object","id":35,"cls":"Fibonacci496","alias":"f2"}},"rightPattern":{"type":"object","id":36,"cls":"Fibonacci496","alias":"f3"}},"rightPattern":{"type":"object","id":37,"cls":"Result496","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate496"},{"type":"beta","out_nodes":[[96,-1]],"__id":181,"parentNodes":[99,100]},{"type":"type","out_nodes":[[3,30]],"__id":182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result496"}},{"type":"rightadapter","out_nodes":[[97,30]],"__id":185,"parentNodes":[4]},{"type":"join","out_nodes":[[101,-1]],"__id":186,"parentNodes":[103,104],"constraint":{"type":"join-reference","out_nodes":[],"__id":187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[97,-1]],"__id":188,"parentNodes":[]},{"type":"type","out_nodes":[[9,31],[14,32],[20,33],[30,35],[20,37],[30,38]],"__id":189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci496"}},{"type":"rightadapter","out_nodes":[[100,31]],"__id":192,"parentNodes":[10]},{"type":"join","out_nodes":[[105,-1]],"__id":193,"parentNodes":[106,107],"constraint":{"type":"join-reference","out_nodes":[],"__id":194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[100,-1]],"__id":195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[104,32]],"__id":200,"parentNodes":[16]},{"type":"beta","out_nodes":[[108,-1]],"__id":201,"parentNodes":[109,110]},{"type":"leftadapter","out_nodes":[[104,-1]],"__id":202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[107,33]],"__id":207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[107,34]],"__id":211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":212,"parentNodes":[112],"index":10,"rule":{"name":"Bootstrap496","pattern":{"type":"object","id":41,"cls":"Fibonacci496","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap496"},{"type":"beta","out_nodes":[[111,-1]],"__id":213,"parentNodes":[113,114]},{"type":"rightadapter","out_nodes":[[112,35]],"__id":218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[112,36]],"__id":222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":223,"parentNodes":[116],"index":11,"rule":{"name":"Recurse496","pattern":{"type":"composite","id":44,"leftPattern":{"type":"not","id":42,"cls":"Fibonacci496","alias":"f"},"rightPattern":{"type":"object","id":43,"cls":"Fibonacci496","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci496 = defined.get('Fibonacci496');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci496(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse496"},{"type":"beta","out_nodes":[[115,-1]],"__id":224,"parentNodes":[117,118]},{"type":"rightadapter","out_nodes":[[116,37]],"__id":228,"parentNodes":[37]},{"type":"not","out_nodes":[[119,-1]],"__id":229,"parentNodes":[120,121],"constraint":{"type":"join-reference","out_nodes":[],"__id":230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[116,-1]],"__id":231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[118,38]],"__id":235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[118,39]],"__id":239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":240,"parentNodes":[123],"index":12,"rule":{"name":"Calculate495","pattern":{"type":"composite","id":51,"leftPattern":{"type":"composite","id":50,"leftPattern":{"type":"composite","id":49,"leftPattern":{"type":"object","id":45,"cls":"Fibonacci495","alias":"f1"},"rightPattern":{"type":"object","id":46,"cls":"Fibonacci495","alias":"f2"}},"rightPattern":{"type":"object","id":47,"cls":"Fibonacci495","alias":"f3"}},"rightPattern":{"type":"object","id":48,"cls":"Result495","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate495"},{"type":"beta","out_nodes":[[122,-1]],"__id":241,"parentNodes":[125,126]},{"type":"type","out_nodes":[[3,40]],"__id":242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result495"}},{"type":"rightadapter","out_nodes":[[123,40]],"__id":245,"parentNodes":[4]},{"type":"join","out_nodes":[[127,-1]],"__id":246,"parentNodes":[129,130],"constraint":{"type":"join-reference","out_nodes":[],"__id":247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[123,-1]],"__id":248,"parentNodes":[]},{"type":"type","out_nodes":[[9,41],[14,42],[20,43],[30,45],[20,47],[30,48]],"__id":249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci495"}},{"type":"rightadapter","out_nodes":[[126,41]],"__id":252,"parentNodes":[10]},{"type":"join","out_nodes":[[131,-1]],"__id":253,"parentNodes":[132,133],"constraint":{"type":"join-reference","out_nodes":[],"__id":254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[126,-1]],"__id":255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[130,42]],"__id":260,"parentNodes":[16]},{"type":"beta","out_nodes":[[134,-1]],"__id":261,"parentNodes":[135,136]},{"type":"leftadapter","out_nodes":[[130,-1]],"__id":262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[133,43]],"__id":267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[133,44]],"__id":271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":272,"parentNodes":[138],"index":13,"rule":{"name":"Bootstrap495","pattern":{"type":"object","id":52,"cls":"Fibonacci495","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap495"},{"type":"beta","out_nodes":[[137,-1]],"__id":273,"parentNodes":[139,140]},{"type":"rightadapter","out_nodes":[[138,45]],"__id":278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[138,46]],"__id":282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":283,"parentNodes":[142],"index":14,"rule":{"name":"Recurse495","pattern":{"type":"composite","id":55,"leftPattern":{"type":"not","id":53,"cls":"Fibonacci495","alias":"f"},"rightPattern":{"type":"object","id":54,"cls":"Fibonacci495","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci495 = defined.get('Fibonacci495');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci495(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse495"},{"type":"beta","out_nodes":[[141,-1]],"__id":284,"parentNodes":[143,144]},{"type":"rightadapter","out_nodes":[[142,47]],"__id":288,"parentNodes":[37]},{"type":"not","out_nodes":[[145,-1]],"__id":289,"parentNodes":[146,147],"constraint":{"type":"join-reference","out_nodes":[],"__id":290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[142,-1]],"__id":291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[144,48]],"__id":295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[144,49]],"__id":299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":300,"parentNodes":[149],"index":15,"rule":{"name":"Calculate494","pattern":{"type":"composite","id":62,"leftPattern":{"type":"composite","id":61,"leftPattern":{"type":"composite","id":60,"leftPattern":{"type":"object","id":56,"cls":"Fibonacci494","alias":"f1"},"rightPattern":{"type":"object","id":57,"cls":"Fibonacci494","alias":"f2"}},"rightPattern":{"type":"object","id":58,"cls":"Fibonacci494","alias":"f3"}},"rightPattern":{"type":"object","id":59,"cls":"Result494","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate494"},{"type":"beta","out_nodes":[[148,-1]],"__id":301,"parentNodes":[151,152]},{"type":"type","out_nodes":[[3,50]],"__id":302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result494"}},{"type":"rightadapter","out_nodes":[[149,50]],"__id":305,"parentNodes":[4]},{"type":"join","out_nodes":[[153,-1]],"__id":306,"parentNodes":[155,156],"constraint":{"type":"join-reference","out_nodes":[],"__id":307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[149,-1]],"__id":308,"parentNodes":[]},{"type":"type","out_nodes":[[9,51],[14,52],[20,53],[30,55],[20,57],[30,58]],"__id":309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci494"}},{"type":"rightadapter","out_nodes":[[152,51]],"__id":312,"parentNodes":[10]},{"type":"join","out_nodes":[[157,-1]],"__id":313,"parentNodes":[158,159],"constraint":{"type":"join-reference","out_nodes":[],"__id":314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[152,-1]],"__id":315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[156,52]],"__id":320,"parentNodes":[16]},{"type":"beta","out_nodes":[[160,-1]],"__id":321,"parentNodes":[161,162]},{"type":"leftadapter","out_nodes":[[156,-1]],"__id":322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[159,53]],"__id":327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[159,54]],"__id":331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":332,"parentNodes":[164],"index":16,"rule":{"name":"Bootstrap494","pattern":{"type":"object","id":63,"cls":"Fibonacci494","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap494"},{"type":"beta","out_nodes":[[163,-1]],"__id":333,"parentNodes":[165,166]},{"type":"rightadapter","out_nodes":[[164,55]],"__id":338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[164,56]],"__id":342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":343,"parentNodes":[168],"index":17,"rule":{"name":"Recurse494","pattern":{"type":"composite","id":66,"leftPattern":{"type":"not","id":64,"cls":"Fibonacci494","alias":"f"},"rightPattern":{"type":"object","id":65,"cls":"Fibonacci494","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci494 = defined.get('Fibonacci494');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci494(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse494"},{"type":"beta","out_nodes":[[167,-1]],"__id":344,"parentNodes":[169,170]},{"type":"rightadapter","out_nodes":[[168,57]],"__id":348,"parentNodes":[37]},{"type":"not","out_nodes":[[171,-1]],"__id":349,"parentNodes":[172,173],"constraint":{"type":"join-reference","out_nodes":[],"__id":350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[168,-1]],"__id":351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[170,58]],"__id":355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[170,59]],"__id":359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":360,"parentNodes":[175],"index":18,"rule":{"name":"Calculate493","pattern":{"type":"composite","id":73,"leftPattern":{"type":"composite","id":72,"leftPattern":{"type":"composite","id":71,"leftPattern":{"type":"object","id":67,"cls":"Fibonacci493","alias":"f1"},"rightPattern":{"type":"object","id":68,"cls":"Fibonacci493","alias":"f2"}},"rightPattern":{"type":"object","id":69,"cls":"Fibonacci493","alias":"f3"}},"rightPattern":{"type":"object","id":70,"cls":"Result493","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate493"},{"type":"beta","out_nodes":[[174,-1]],"__id":361,"parentNodes":[177,178]},{"type":"type","out_nodes":[[3,60]],"__id":362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result493"}},{"type":"rightadapter","out_nodes":[[175,60]],"__id":365,"parentNodes":[4]},{"type":"join","out_nodes":[[179,-1]],"__id":366,"parentNodes":[181,182],"constraint":{"type":"join-reference","out_nodes":[],"__id":367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[175,-1]],"__id":368,"parentNodes":[]},{"type":"type","out_nodes":[[9,61],[14,62],[20,63],[30,65],[20,67],[30,68]],"__id":369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci493"}},{"type":"rightadapter","out_nodes":[[178,61]],"__id":372,"parentNodes":[10]},{"type":"join","out_nodes":[[183,-1]],"__id":373,"parentNodes":[184,185],"constraint":{"type":"join-reference","out_nodes":[],"__id":374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[178,-1]],"__id":375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[182,62]],"__id":380,"parentNodes":[16]},{"type":"beta","out_nodes":[[186,-1]],"__id":381,"parentNodes":[187,188]},{"type":"leftadapter","out_nodes":[[182,-1]],"__id":382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[185,63]],"__id":387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[185,64]],"__id":391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":392,"parentNodes":[190],"index":19,"rule":{"name":"Bootstrap493","pattern":{"type":"object","id":74,"cls":"Fibonacci493","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap493"},{"type":"beta","out_nodes":[[189,-1]],"__id":393,"parentNodes":[191,192]},{"type":"rightadapter","out_nodes":[[190,65]],"__id":398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[190,66]],"__id":402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":403,"parentNodes":[194],"index":20,"rule":{"name":"Recurse493","pattern":{"type":"composite","id":77,"leftPattern":{"type":"not","id":75,"cls":"Fibonacci493","alias":"f"},"rightPattern":{"type":"object","id":76,"cls":"Fibonacci493","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci493 = defined.get('Fibonacci493');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci493(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse493"},{"type":"beta","out_nodes":[[193,-1]],"__id":404,"parentNodes":[195,196]},{"type":"rightadapter","out_nodes":[[194,67]],"__id":408,"parentNodes":[37]},{"type":"not","out_nodes":[[197,-1]],"__id":409,"parentNodes":[198,199],"constraint":{"type":"join-reference","out_nodes":[],"__id":410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[194,-1]],"__id":411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[196,68]],"__id":415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[196,69]],"__id":419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":420,"parentNodes":[201],"index":21,"rule":{"name":"Calculate492","pattern":{"type":"composite","id":84,"leftPattern":{"type":"composite","id":83,"leftPattern":{"type":"composite","id":82,"leftPattern":{"type":"object","id":78,"cls":"Fibonacci492","alias":"f1"},"rightPattern":{"type":"object","id":79,"cls":"Fibonacci492","alias":"f2"}},"rightPattern":{"type":"object","id":80,"cls":"Fibonacci492","alias":"f3"}},"rightPattern":{"type":"object","id":81,"cls":"Result492","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate492"},{"type":"beta","out_nodes":[[200,-1]],"__id":421,"parentNodes":[203,204]},{"type":"type","out_nodes":[[3,70]],"__id":422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result492"}},{"type":"rightadapter","out_nodes":[[201,70]],"__id":425,"parentNodes":[4]},{"type":"join","out_nodes":[[205,-1]],"__id":426,"parentNodes":[207,208],"constraint":{"type":"join-reference","out_nodes":[],"__id":427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[201,-1]],"__id":428,"parentNodes":[]},{"type":"type","out_nodes":[[9,71],[14,72],[20,73],[30,75],[20,77],[30,78]],"__id":429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci492"}},{"type":"rightadapter","out_nodes":[[204,71]],"__id":432,"parentNodes":[10]},{"type":"join","out_nodes":[[209,-1]],"__id":433,"parentNodes":[210,211],"constraint":{"type":"join-reference","out_nodes":[],"__id":434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[204,-1]],"__id":435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[208,72]],"__id":440,"parentNodes":[16]},{"type":"beta","out_nodes":[[212,-1]],"__id":441,"parentNodes":[213,214]},{"type":"leftadapter","out_nodes":[[208,-1]],"__id":442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[211,73]],"__id":447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[211,74]],"__id":451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":452,"parentNodes":[216],"index":22,"rule":{"name":"Bootstrap492","pattern":{"type":"object","id":85,"cls":"Fibonacci492","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap492"},{"type":"beta","out_nodes":[[215,-1]],"__id":453,"parentNodes":[217,218]},{"type":"rightadapter","out_nodes":[[216,75]],"__id":458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[216,76]],"__id":462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":463,"parentNodes":[220],"index":23,"rule":{"name":"Recurse492","pattern":{"type":"composite","id":88,"leftPattern":{"type":"not","id":86,"cls":"Fibonacci492","alias":"f"},"rightPattern":{"type":"object","id":87,"cls":"Fibonacci492","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci492 = defined.get('Fibonacci492');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci492(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse492"},{"type":"beta","out_nodes":[[219,-1]],"__id":464,"parentNodes":[221,222]},{"type":"rightadapter","out_nodes":[[220,77]],"__id":468,"parentNodes":[37]},{"type":"not","out_nodes":[[223,-1]],"__id":469,"parentNodes":[224,225],"constraint":{"type":"join-reference","out_nodes":[],"__id":470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[220,-1]],"__id":471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[222,78]],"__id":475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[222,79]],"__id":479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":480,"parentNodes":[227],"index":24,"rule":{"name":"Calculate491","pattern":{"type":"composite","id":95,"leftPattern":{"type":"composite","id":94,"leftPattern":{"type":"composite","id":93,"leftPattern":{"type":"object","id":89,"cls":"Fibonacci491","alias":"f1"},"rightPattern":{"type":"object","id":90,"cls":"Fibonacci491","alias":"f2"}},"rightPattern":{"type":"object","id":91,"cls":"Fibonacci491","alias":"f3"}},"rightPattern":{"type":"object","id":92,"cls":"Result491","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate491"},{"type":"beta","out_nodes":[[226,-1]],"__id":481,"parentNodes":[229,230]},{"type":"type","out_nodes":[[3,80]],"__id":482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result491"}},{"type":"rightadapter","out_nodes":[[227,80]],"__id":485,"parentNodes":[4]},{"type":"join","out_nodes":[[231,-1]],"__id":486,"parentNodes":[233,234],"constraint":{"type":"join-reference","out_nodes":[],"__id":487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[227,-1]],"__id":488,"parentNodes":[]},{"type":"type","out_nodes":[[9,81],[14,82],[20,83],[30,85],[20,87],[30,88]],"__id":489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci491"}},{"type":"rightadapter","out_nodes":[[230,81]],"__id":492,"parentNodes":[10]},{"type":"join","out_nodes":[[235,-1]],"__id":493,"parentNodes":[236,237],"constraint":{"type":"join-reference","out_nodes":[],"__id":494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[230,-1]],"__id":495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[234,82]],"__id":500,"parentNodes":[16]},{"type":"beta","out_nodes":[[238,-1]],"__id":501,"parentNodes":[239,240]},{"type":"leftadapter","out_nodes":[[234,-1]],"__id":502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[237,83]],"__id":507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[237,84]],"__id":511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":512,"parentNodes":[242],"index":25,"rule":{"name":"Bootstrap491","pattern":{"type":"object","id":96,"cls":"Fibonacci491","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap491"},{"type":"beta","out_nodes":[[241,-1]],"__id":513,"parentNodes":[243,244]},{"type":"rightadapter","out_nodes":[[242,85]],"__id":518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[242,86]],"__id":522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":523,"parentNodes":[246],"index":26,"rule":{"name":"Recurse491","pattern":{"type":"composite","id":99,"leftPattern":{"type":"not","id":97,"cls":"Fibonacci491","alias":"f"},"rightPattern":{"type":"object","id":98,"cls":"Fibonacci491","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci491 = defined.get('Fibonacci491');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci491(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse491"},{"type":"beta","out_nodes":[[245,-1]],"__id":524,"parentNodes":[247,248]},{"type":"rightadapter","out_nodes":[[246,87]],"__id":528,"parentNodes":[37]},{"type":"not","out_nodes":[[249,-1]],"__id":529,"parentNodes":[250,251],"constraint":{"type":"join-reference","out_nodes":[],"__id":530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[246,-1]],"__id":531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[248,88]],"__id":535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[248,89]],"__id":539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":540,"parentNodes":[253],"index":27,"rule":{"name":"Calculate490","pattern":{"type":"composite","id":106,"leftPattern":{"type":"composite","id":105,"leftPattern":{"type":"composite","id":104,"leftPattern":{"type":"object","id":100,"cls":"Fibonacci490","alias":"f1"},"rightPattern":{"type":"object","id":101,"cls":"Fibonacci490","alias":"f2"}},"rightPattern":{"type":"object","id":102,"cls":"Fibonacci490","alias":"f3"}},"rightPattern":{"type":"object","id":103,"cls":"Result490","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate490"},{"type":"beta","out_nodes":[[252,-1]],"__id":541,"parentNodes":[255,256]},{"type":"type","out_nodes":[[3,90]],"__id":542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result490"}},{"type":"rightadapter","out_nodes":[[253,90]],"__id":545,"parentNodes":[4]},{"type":"join","out_nodes":[[257,-1]],"__id":546,"parentNodes":[259,260],"constraint":{"type":"join-reference","out_nodes":[],"__id":547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[253,-1]],"__id":548,"parentNodes":[]},{"type":"type","out_nodes":[[9,91],[14,92],[20,93],[30,95],[20,97],[30,98]],"__id":549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci490"}},{"type":"rightadapter","out_nodes":[[256,91]],"__id":552,"parentNodes":[10]},{"type":"join","out_nodes":[[261,-1]],"__id":553,"parentNodes":[262,263],"constraint":{"type":"join-reference","out_nodes":[],"__id":554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[256,-1]],"__id":555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[260,92]],"__id":560,"parentNodes":[16]},{"type":"beta","out_nodes":[[264,-1]],"__id":561,"parentNodes":[265,266]},{"type":"leftadapter","out_nodes":[[260,-1]],"__id":562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[263,93]],"__id":567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[263,94]],"__id":571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":572,"parentNodes":[268],"index":28,"rule":{"name":"Bootstrap490","pattern":{"type":"object","id":107,"cls":"Fibonacci490","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap490"},{"type":"beta","out_nodes":[[267,-1]],"__id":573,"parentNodes":[269,270]},{"type":"rightadapter","out_nodes":[[268,95]],"__id":578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[268,96]],"__id":582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":583,"parentNodes":[272],"index":29,"rule":{"name":"Recurse490","pattern":{"type":"composite","id":110,"leftPattern":{"type":"not","id":108,"cls":"Fibonacci490","alias":"f"},"rightPattern":{"type":"object","id":109,"cls":"Fibonacci490","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');let Fibonacci490 = defined.get('Fibonacci490');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci490(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse490"},{"type":"beta","out_nodes":[[271,-1]],"__id":584,"parentNodes":[273,274]},{"type":"rightadapter","out_nodes":[[272,97]],"__id":588,"parentNodes":[37]},{"type":"not","out_nodes":[[275,-1]],"__id":589,"parentNodes":[276,277],"constraint":{"type":"join-reference","out_nodes":[],"__id":590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[272,-1]],"__id":591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[274,98]],"__id":595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[274,99]],"__id":599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":600,"parentNodes":[279],"index":30,"rule":{"name":"Calculate489","pattern":{"type":"composite","id":117,"leftPattern":{"type":"composite","id":116,"leftPattern":{"type":"composite","id":115,"leftPattern":{"type":"object","id":111,"cls":"Fibonacci489","alias":"f1"},"rightPattern":{"type":"object","id":112,"cls":"Fibonacci489","alias":"f2"}},"rightPattern":{"type":"object","id":113,"cls":"Fibonacci489","alias":"f3"}},"rightPattern":{"type":"object","id":114,"cls":"Result489","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate489"},{"type":"beta","out_nodes":[[278,-1]],"__id":601,"parentNodes":[281,282]},{"type":"type","out_nodes":[[3,100]],"__id":602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result489"}},{"type":"rightadapter","out_nodes":[[279,100]],"__id":605,"parentNodes":[4]},{"type":"join","out_nodes":[[283,-1]],"__id":606,"parentNodes":[285,286],"constraint":{"type":"join-reference","out_nodes":[],"__id":607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[279,-1]],"__id":608,"parentNodes":[]},{"type":"type","out_nodes":[[9,101],[14,102],[20,103],[30,105],[20,107],[30,108]],"__id":609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci489"}},{"type":"rightadapter","out_nodes":[[282,101]],"__id":612,"parentNodes":[10]},{"type":"join","out_nodes":[[287,-1]],"__id":613,"parentNodes":[288,289],"constraint":{"type":"join-reference","out_nodes":[],"__id":614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[282,-1]],"__id":615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[286,102]],"__id":620,"parentNodes":[16]},{"type":"beta","out_nodes":[[290,-1]],"__id":621,"parentNodes":[291,292]},{"type":"leftadapter","out_nodes":[[286,-1]],"__id":622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[289,103]],"__id":627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[289,104]],"__id":631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":632,"parentNodes":[294],"index":31,"rule":{"name":"Bootstrap489","pattern":{"type":"object","id":118,"cls":"Fibonacci489","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap489"},{"type":"beta","out_nodes":[[293,-1]],"__id":633,"parentNodes":[295,296]},{"type":"rightadapter","out_nodes":[[294,105]],"__id":638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[294,106]],"__id":642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":643,"parentNodes":[298],"index":32,"rule":{"name":"Recurse489","pattern":{"type":"composite","id":121,"leftPattern":{"type":"not","id":119,"cls":"Fibonacci489","alias":"f"},"rightPattern":{"type":"object","id":120,"cls":"Fibonacci489","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci489 = defined.get('Fibonacci489');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci489(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse489"},{"type":"beta","out_nodes":[[297,-1]],"__id":644,"parentNodes":[299,300]},{"type":"rightadapter","out_nodes":[[298,107]],"__id":648,"parentNodes":[37]},{"type":"not","out_nodes":[[301,-1]],"__id":649,"parentNodes":[302,303],"constraint":{"type":"join-reference","out_nodes":[],"__id":650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[298,-1]],"__id":651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[300,108]],"__id":655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[300,109]],"__id":659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":660,"parentNodes":[305],"index":33,"rule":{"name":"Calculate488","pattern":{"type":"composite","id":128,"leftPattern":{"type":"composite","id":127,"leftPattern":{"type":"composite","id":126,"leftPattern":{"type":"object","id":122,"cls":"Fibonacci488","alias":"f1"},"rightPattern":{"type":"object","id":123,"cls":"Fibonacci488","alias":"f2"}},"rightPattern":{"type":"object","id":124,"cls":"Fibonacci488","alias":"f3"}},"rightPattern":{"type":"object","id":125,"cls":"Result488","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate488"},{"type":"beta","out_nodes":[[304,-1]],"__id":661,"parentNodes":[307,308]},{"type":"type","out_nodes":[[3,110]],"__id":662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result488"}},{"type":"rightadapter","out_nodes":[[305,110]],"__id":665,"parentNodes":[4]},{"type":"join","out_nodes":[[309,-1]],"__id":666,"parentNodes":[311,312],"constraint":{"type":"join-reference","out_nodes":[],"__id":667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[305,-1]],"__id":668,"parentNodes":[]},{"type":"type","out_nodes":[[9,111],[14,112],[20,113],[30,115],[20,117],[30,118]],"__id":669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci488"}},{"type":"rightadapter","out_nodes":[[308,111]],"__id":672,"parentNodes":[10]},{"type":"join","out_nodes":[[313,-1]],"__id":673,"parentNodes":[314,315],"constraint":{"type":"join-reference","out_nodes":[],"__id":674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[308,-1]],"__id":675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[312,112]],"__id":680,"parentNodes":[16]},{"type":"beta","out_nodes":[[316,-1]],"__id":681,"parentNodes":[317,318]},{"type":"leftadapter","out_nodes":[[312,-1]],"__id":682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[315,113]],"__id":687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[315,114]],"__id":691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":692,"parentNodes":[320],"index":34,"rule":{"name":"Bootstrap488","pattern":{"type":"object","id":129,"cls":"Fibonacci488","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap488"},{"type":"beta","out_nodes":[[319,-1]],"__id":693,"parentNodes":[321,322]},{"type":"rightadapter","out_nodes":[[320,115]],"__id":698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[320,116]],"__id":702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":703,"parentNodes":[324],"index":35,"rule":{"name":"Recurse488","pattern":{"type":"composite","id":132,"leftPattern":{"type":"not","id":130,"cls":"Fibonacci488","alias":"f"},"rightPattern":{"type":"object","id":131,"cls":"Fibonacci488","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci488 = defined.get('Fibonacci488');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci488(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse488"},{"type":"beta","out_nodes":[[323,-1]],"__id":704,"parentNodes":[325,326]},{"type":"rightadapter","out_nodes":[[324,117]],"__id":708,"parentNodes":[37]},{"type":"not","out_nodes":[[327,-1]],"__id":709,"parentNodes":[328,329],"constraint":{"type":"join-reference","out_nodes":[],"__id":710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[324,-1]],"__id":711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[326,118]],"__id":715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[326,119]],"__id":719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":720,"parentNodes":[331],"index":36,"rule":{"name":"Calculate487","pattern":{"type":"composite","id":139,"leftPattern":{"type":"composite","id":138,"leftPattern":{"type":"composite","id":137,"leftPattern":{"type":"object","id":133,"cls":"Fibonacci487","alias":"f1"},"rightPattern":{"type":"object","id":134,"cls":"Fibonacci487","alias":"f2"}},"rightPattern":{"type":"object","id":135,"cls":"Fibonacci487","alias":"f3"}},"rightPattern":{"type":"object","id":136,"cls":"Result487","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate487"},{"type":"beta","out_nodes":[[330,-1]],"__id":721,"parentNodes":[333,334]},{"type":"type","out_nodes":[[3,120]],"__id":722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result487"}},{"type":"rightadapter","out_nodes":[[331,120]],"__id":725,"parentNodes":[4]},{"type":"join","out_nodes":[[335,-1]],"__id":726,"parentNodes":[337,338],"constraint":{"type":"join-reference","out_nodes":[],"__id":727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[331,-1]],"__id":728,"parentNodes":[]},{"type":"type","out_nodes":[[9,121],[14,122],[20,123],[30,125],[20,127],[30,128]],"__id":729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci487"}},{"type":"rightadapter","out_nodes":[[334,121]],"__id":732,"parentNodes":[10]},{"type":"join","out_nodes":[[339,-1]],"__id":733,"parentNodes":[340,341],"constraint":{"type":"join-reference","out_nodes":[],"__id":734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[334,-1]],"__id":735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[338,122]],"__id":740,"parentNodes":[16]},{"type":"beta","out_nodes":[[342,-1]],"__id":741,"parentNodes":[343,344]},{"type":"leftadapter","out_nodes":[[338,-1]],"__id":742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[341,123]],"__id":747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[341,124]],"__id":751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":752,"parentNodes":[346],"index":37,"rule":{"name":"Bootstrap487","pattern":{"type":"object","id":140,"cls":"Fibonacci487","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap487"},{"type":"beta","out_nodes":[[345,-1]],"__id":753,"parentNodes":[347,348]},{"type":"rightadapter","out_nodes":[[346,125]],"__id":758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[346,126]],"__id":762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":763,"parentNodes":[350],"index":38,"rule":{"name":"Recurse487","pattern":{"type":"composite","id":143,"leftPattern":{"type":"not","id":141,"cls":"Fibonacci487","alias":"f"},"rightPattern":{"type":"object","id":142,"cls":"Fibonacci487","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci487 = defined.get('Fibonacci487');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci487(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse487"},{"type":"beta","out_nodes":[[349,-1]],"__id":764,"parentNodes":[351,352]},{"type":"rightadapter","out_nodes":[[350,127]],"__id":768,"parentNodes":[37]},{"type":"not","out_nodes":[[353,-1]],"__id":769,"parentNodes":[354,355],"constraint":{"type":"join-reference","out_nodes":[],"__id":770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[350,-1]],"__id":771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[352,128]],"__id":775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[352,129]],"__id":779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":780,"parentNodes":[357],"index":39,"rule":{"name":"Calculate486","pattern":{"type":"composite","id":150,"leftPattern":{"type":"composite","id":149,"leftPattern":{"type":"composite","id":148,"leftPattern":{"type":"object","id":144,"cls":"Fibonacci486","alias":"f1"},"rightPattern":{"type":"object","id":145,"cls":"Fibonacci486","alias":"f2"}},"rightPattern":{"type":"object","id":146,"cls":"Fibonacci486","alias":"f3"}},"rightPattern":{"type":"object","id":147,"cls":"Result486","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate486"},{"type":"beta","out_nodes":[[356,-1]],"__id":781,"parentNodes":[359,360]},{"type":"type","out_nodes":[[3,130]],"__id":782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result486"}},{"type":"rightadapter","out_nodes":[[357,130]],"__id":785,"parentNodes":[4]},{"type":"join","out_nodes":[[361,-1]],"__id":786,"parentNodes":[363,364],"constraint":{"type":"join-reference","out_nodes":[],"__id":787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[357,-1]],"__id":788,"parentNodes":[]},{"type":"type","out_nodes":[[9,131],[14,132],[20,133],[30,135],[20,137],[30,138]],"__id":789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci486"}},{"type":"rightadapter","out_nodes":[[360,131]],"__id":792,"parentNodes":[10]},{"type":"join","out_nodes":[[365,-1]],"__id":793,"parentNodes":[366,367],"constraint":{"type":"join-reference","out_nodes":[],"__id":794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[360,-1]],"__id":795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[364,132]],"__id":800,"parentNodes":[16]},{"type":"beta","out_nodes":[[368,-1]],"__id":801,"parentNodes":[369,370]},{"type":"leftadapter","out_nodes":[[364,-1]],"__id":802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[367,133]],"__id":807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[367,134]],"__id":811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":812,"parentNodes":[372],"index":40,"rule":{"name":"Bootstrap486","pattern":{"type":"object","id":151,"cls":"Fibonacci486","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap486"},{"type":"beta","out_nodes":[[371,-1]],"__id":813,"parentNodes":[373,374]},{"type":"rightadapter","out_nodes":[[372,135]],"__id":818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[372,136]],"__id":822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":823,"parentNodes":[376],"index":41,"rule":{"name":"Recurse486","pattern":{"type":"composite","id":154,"leftPattern":{"type":"not","id":152,"cls":"Fibonacci486","alias":"f"},"rightPattern":{"type":"object","id":153,"cls":"Fibonacci486","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci486 = defined.get('Fibonacci486');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci486(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse486"},{"type":"beta","out_nodes":[[375,-1]],"__id":824,"parentNodes":[377,378]},{"type":"rightadapter","out_nodes":[[376,137]],"__id":828,"parentNodes":[37]},{"type":"not","out_nodes":[[379,-1]],"__id":829,"parentNodes":[380,381],"constraint":{"type":"join-reference","out_nodes":[],"__id":830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[376,-1]],"__id":831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[378,138]],"__id":835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[378,139]],"__id":839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":840,"parentNodes":[383],"index":42,"rule":{"name":"Calculate485","pattern":{"type":"composite","id":161,"leftPattern":{"type":"composite","id":160,"leftPattern":{"type":"composite","id":159,"leftPattern":{"type":"object","id":155,"cls":"Fibonacci485","alias":"f1"},"rightPattern":{"type":"object","id":156,"cls":"Fibonacci485","alias":"f2"}},"rightPattern":{"type":"object","id":157,"cls":"Fibonacci485","alias":"f3"}},"rightPattern":{"type":"object","id":158,"cls":"Result485","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate485"},{"type":"beta","out_nodes":[[382,-1]],"__id":841,"parentNodes":[385,386]},{"type":"type","out_nodes":[[3,140]],"__id":842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result485"}},{"type":"rightadapter","out_nodes":[[383,140]],"__id":845,"parentNodes":[4]},{"type":"join","out_nodes":[[387,-1]],"__id":846,"parentNodes":[389,390],"constraint":{"type":"join-reference","out_nodes":[],"__id":847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[383,-1]],"__id":848,"parentNodes":[]},{"type":"type","out_nodes":[[9,141],[14,142],[20,143],[30,145],[20,147],[30,148]],"__id":849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci485"}},{"type":"rightadapter","out_nodes":[[386,141]],"__id":852,"parentNodes":[10]},{"type":"join","out_nodes":[[391,-1]],"__id":853,"parentNodes":[392,393],"constraint":{"type":"join-reference","out_nodes":[],"__id":854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[386,-1]],"__id":855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[390,142]],"__id":860,"parentNodes":[16]},{"type":"beta","out_nodes":[[394,-1]],"__id":861,"parentNodes":[395,396]},{"type":"leftadapter","out_nodes":[[390,-1]],"__id":862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[393,143]],"__id":867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[393,144]],"__id":871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":872,"parentNodes":[398],"index":43,"rule":{"name":"Bootstrap485","pattern":{"type":"object","id":162,"cls":"Fibonacci485","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap485"},{"type":"beta","out_nodes":[[397,-1]],"__id":873,"parentNodes":[399,400]},{"type":"rightadapter","out_nodes":[[398,145]],"__id":878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[398,146]],"__id":882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":883,"parentNodes":[402],"index":44,"rule":{"name":"Recurse485","pattern":{"type":"composite","id":165,"leftPattern":{"type":"not","id":163,"cls":"Fibonacci485","alias":"f"},"rightPattern":{"type":"object","id":164,"cls":"Fibonacci485","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci485 = defined.get('Fibonacci485');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci485(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse485"},{"type":"beta","out_nodes":[[401,-1]],"__id":884,"parentNodes":[403,404]},{"type":"rightadapter","out_nodes":[[402,147]],"__id":888,"parentNodes":[37]},{"type":"not","out_nodes":[[405,-1]],"__id":889,"parentNodes":[406,407],"constraint":{"type":"join-reference","out_nodes":[],"__id":890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[402,-1]],"__id":891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[404,148]],"__id":895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[404,149]],"__id":899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":900,"parentNodes":[409],"index":45,"rule":{"name":"Calculate484","pattern":{"type":"composite","id":172,"leftPattern":{"type":"composite","id":171,"leftPattern":{"type":"composite","id":170,"leftPattern":{"type":"object","id":166,"cls":"Fibonacci484","alias":"f1"},"rightPattern":{"type":"object","id":167,"cls":"Fibonacci484","alias":"f2"}},"rightPattern":{"type":"object","id":168,"cls":"Fibonacci484","alias":"f3"}},"rightPattern":{"type":"object","id":169,"cls":"Result484","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate484"},{"type":"beta","out_nodes":[[408,-1]],"__id":901,"parentNodes":[411,412]},{"type":"type","out_nodes":[[3,150]],"__id":902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result484"}},{"type":"rightadapter","out_nodes":[[409,150]],"__id":905,"parentNodes":[4]},{"type":"join","out_nodes":[[413,-1]],"__id":906,"parentNodes":[415,416],"constraint":{"type":"join-reference","out_nodes":[],"__id":907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[409,-1]],"__id":908,"parentNodes":[]},{"type":"type","out_nodes":[[9,151],[14,152],[20,153],[30,155],[20,157],[30,158]],"__id":909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci484"}},{"type":"rightadapter","out_nodes":[[412,151]],"__id":912,"parentNodes":[10]},{"type":"join","out_nodes":[[417,-1]],"__id":913,"parentNodes":[418,419],"constraint":{"type":"join-reference","out_nodes":[],"__id":914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[412,-1]],"__id":915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[416,152]],"__id":920,"parentNodes":[16]},{"type":"beta","out_nodes":[[420,-1]],"__id":921,"parentNodes":[421,422]},{"type":"leftadapter","out_nodes":[[416,-1]],"__id":922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[419,153]],"__id":927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[419,154]],"__id":931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":932,"parentNodes":[424],"index":46,"rule":{"name":"Bootstrap484","pattern":{"type":"object","id":173,"cls":"Fibonacci484","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap484"},{"type":"beta","out_nodes":[[423,-1]],"__id":933,"parentNodes":[425,426]},{"type":"rightadapter","out_nodes":[[424,155]],"__id":938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[424,156]],"__id":942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":943,"parentNodes":[428],"index":47,"rule":{"name":"Recurse484","pattern":{"type":"composite","id":176,"leftPattern":{"type":"not","id":174,"cls":"Fibonacci484","alias":"f"},"rightPattern":{"type":"object","id":175,"cls":"Fibonacci484","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci484 = defined.get('Fibonacci484');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci484(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse484"},{"type":"beta","out_nodes":[[427,-1]],"__id":944,"parentNodes":[429,430]},{"type":"rightadapter","out_nodes":[[428,157]],"__id":948,"parentNodes":[37]},{"type":"not","out_nodes":[[431,-1]],"__id":949,"parentNodes":[432,433],"constraint":{"type":"join-reference","out_nodes":[],"__id":950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[428,-1]],"__id":951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[430,158]],"__id":955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[430,159]],"__id":959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":960,"parentNodes":[435],"index":48,"rule":{"name":"Calculate483","pattern":{"type":"composite","id":183,"leftPattern":{"type":"composite","id":182,"leftPattern":{"type":"composite","id":181,"leftPattern":{"type":"object","id":177,"cls":"Fibonacci483","alias":"f1"},"rightPattern":{"type":"object","id":178,"cls":"Fibonacci483","alias":"f2"}},"rightPattern":{"type":"object","id":179,"cls":"Fibonacci483","alias":"f3"}},"rightPattern":{"type":"object","id":180,"cls":"Result483","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate483"},{"type":"beta","out_nodes":[[434,-1]],"__id":961,"parentNodes":[437,438]},{"type":"type","out_nodes":[[3,160]],"__id":962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result483"}},{"type":"rightadapter","out_nodes":[[435,160]],"__id":965,"parentNodes":[4]},{"type":"join","out_nodes":[[439,-1]],"__id":966,"parentNodes":[441,442],"constraint":{"type":"join-reference","out_nodes":[],"__id":967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[435,-1]],"__id":968,"parentNodes":[]},{"type":"type","out_nodes":[[9,161],[14,162],[20,163],[30,165],[20,167],[30,168]],"__id":969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci483"}},{"type":"rightadapter","out_nodes":[[438,161]],"__id":972,"parentNodes":[10]},{"type":"join","out_nodes":[[443,-1]],"__id":973,"parentNodes":[444,445],"constraint":{"type":"join-reference","out_nodes":[],"__id":974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[438,-1]],"__id":975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[442,162]],"__id":980,"parentNodes":[16]},{"type":"beta","out_nodes":[[446,-1]],"__id":981,"parentNodes":[447,448]},{"type":"leftadapter","out_nodes":[[442,-1]],"__id":982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[445,163]],"__id":987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[445,164]],"__id":991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":992,"parentNodes":[450],"index":49,"rule":{"name":"Bootstrap483","pattern":{"type":"object","id":184,"cls":"Fibonacci483","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap483"},{"type":"beta","out_nodes":[[449,-1]],"__id":993,"parentNodes":[451,452]},{"type":"rightadapter","out_nodes":[[450,165]],"__id":998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[450,166]],"__id":1002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1003,"parentNodes":[454],"index":50,"rule":{"name":"Recurse483","pattern":{"type":"composite","id":187,"leftPattern":{"type":"not","id":185,"cls":"Fibonacci483","alias":"f"},"rightPattern":{"type":"object","id":186,"cls":"Fibonacci483","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci483 = defined.get('Fibonacci483');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci483(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse483"},{"type":"beta","out_nodes":[[453,-1]],"__id":1004,"parentNodes":[455,456]},{"type":"rightadapter","out_nodes":[[454,167]],"__id":1008,"parentNodes":[37]},{"type":"not","out_nodes":[[457,-1]],"__id":1009,"parentNodes":[458,459],"constraint":{"type":"join-reference","out_nodes":[],"__id":1010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[454,-1]],"__id":1011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[456,168]],"__id":1015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[456,169]],"__id":1019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1020,"parentNodes":[461],"index":51,"rule":{"name":"Calculate482","pattern":{"type":"composite","id":194,"leftPattern":{"type":"composite","id":193,"leftPattern":{"type":"composite","id":192,"leftPattern":{"type":"object","id":188,"cls":"Fibonacci482","alias":"f1"},"rightPattern":{"type":"object","id":189,"cls":"Fibonacci482","alias":"f2"}},"rightPattern":{"type":"object","id":190,"cls":"Fibonacci482","alias":"f3"}},"rightPattern":{"type":"object","id":191,"cls":"Result482","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate482"},{"type":"beta","out_nodes":[[460,-1]],"__id":1021,"parentNodes":[463,464]},{"type":"type","out_nodes":[[3,170]],"__id":1022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result482"}},{"type":"rightadapter","out_nodes":[[461,170]],"__id":1025,"parentNodes":[4]},{"type":"join","out_nodes":[[465,-1]],"__id":1026,"parentNodes":[467,468],"constraint":{"type":"join-reference","out_nodes":[],"__id":1027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[461,-1]],"__id":1028,"parentNodes":[]},{"type":"type","out_nodes":[[9,171],[14,172],[20,173],[30,175],[20,177],[30,178]],"__id":1029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci482"}},{"type":"rightadapter","out_nodes":[[464,171]],"__id":1032,"parentNodes":[10]},{"type":"join","out_nodes":[[469,-1]],"__id":1033,"parentNodes":[470,471],"constraint":{"type":"join-reference","out_nodes":[],"__id":1034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[464,-1]],"__id":1035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[468,172]],"__id":1040,"parentNodes":[16]},{"type":"beta","out_nodes":[[472,-1]],"__id":1041,"parentNodes":[473,474]},{"type":"leftadapter","out_nodes":[[468,-1]],"__id":1042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[471,173]],"__id":1047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[471,174]],"__id":1051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1052,"parentNodes":[476],"index":52,"rule":{"name":"Bootstrap482","pattern":{"type":"object","id":195,"cls":"Fibonacci482","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap482"},{"type":"beta","out_nodes":[[475,-1]],"__id":1053,"parentNodes":[477,478]},{"type":"rightadapter","out_nodes":[[476,175]],"__id":1058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[476,176]],"__id":1062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1063,"parentNodes":[480],"index":53,"rule":{"name":"Recurse482","pattern":{"type":"composite","id":198,"leftPattern":{"type":"not","id":196,"cls":"Fibonacci482","alias":"f"},"rightPattern":{"type":"object","id":197,"cls":"Fibonacci482","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci482 = defined.get('Fibonacci482');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci482(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse482"},{"type":"beta","out_nodes":[[479,-1]],"__id":1064,"parentNodes":[481,482]},{"type":"rightadapter","out_nodes":[[480,177]],"__id":1068,"parentNodes":[37]},{"type":"not","out_nodes":[[483,-1]],"__id":1069,"parentNodes":[484,485],"constraint":{"type":"join-reference","out_nodes":[],"__id":1070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[480,-1]],"__id":1071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[482,178]],"__id":1075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[482,179]],"__id":1079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1080,"parentNodes":[487],"index":54,"rule":{"name":"Calculate481","pattern":{"type":"composite","id":205,"leftPattern":{"type":"composite","id":204,"leftPattern":{"type":"composite","id":203,"leftPattern":{"type":"object","id":199,"cls":"Fibonacci481","alias":"f1"},"rightPattern":{"type":"object","id":200,"cls":"Fibonacci481","alias":"f2"}},"rightPattern":{"type":"object","id":201,"cls":"Fibonacci481","alias":"f3"}},"rightPattern":{"type":"object","id":202,"cls":"Result481","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate481"},{"type":"beta","out_nodes":[[486,-1]],"__id":1081,"parentNodes":[489,490]},{"type":"type","out_nodes":[[3,180]],"__id":1082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result481"}},{"type":"rightadapter","out_nodes":[[487,180]],"__id":1085,"parentNodes":[4]},{"type":"join","out_nodes":[[491,-1]],"__id":1086,"parentNodes":[493,494],"constraint":{"type":"join-reference","out_nodes":[],"__id":1087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[487,-1]],"__id":1088,"parentNodes":[]},{"type":"type","out_nodes":[[9,181],[14,182],[20,183],[30,185],[20,187],[30,188]],"__id":1089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci481"}},{"type":"rightadapter","out_nodes":[[490,181]],"__id":1092,"parentNodes":[10]},{"type":"join","out_nodes":[[495,-1]],"__id":1093,"parentNodes":[496,497],"constraint":{"type":"join-reference","out_nodes":[],"__id":1094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[490,-1]],"__id":1095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[494,182]],"__id":1100,"parentNodes":[16]},{"type":"beta","out_nodes":[[498,-1]],"__id":1101,"parentNodes":[499,500]},{"type":"leftadapter","out_nodes":[[494,-1]],"__id":1102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[497,183]],"__id":1107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[497,184]],"__id":1111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1112,"parentNodes":[502],"index":55,"rule":{"name":"Bootstrap481","pattern":{"type":"object","id":206,"cls":"Fibonacci481","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap481"},{"type":"beta","out_nodes":[[501,-1]],"__id":1113,"parentNodes":[503,504]},{"type":"rightadapter","out_nodes":[[502,185]],"__id":1118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[502,186]],"__id":1122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1123,"parentNodes":[506],"index":56,"rule":{"name":"Recurse481","pattern":{"type":"composite","id":209,"leftPattern":{"type":"not","id":207,"cls":"Fibonacci481","alias":"f"},"rightPattern":{"type":"object","id":208,"cls":"Fibonacci481","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci481 = defined.get('Fibonacci481');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci481(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse481"},{"type":"beta","out_nodes":[[505,-1]],"__id":1124,"parentNodes":[507,508]},{"type":"rightadapter","out_nodes":[[506,187]],"__id":1128,"parentNodes":[37]},{"type":"not","out_nodes":[[509,-1]],"__id":1129,"parentNodes":[510,511],"constraint":{"type":"join-reference","out_nodes":[],"__id":1130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[506,-1]],"__id":1131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[508,188]],"__id":1135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[508,189]],"__id":1139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1140,"parentNodes":[513],"index":57,"rule":{"name":"Calculate480","pattern":{"type":"composite","id":216,"leftPattern":{"type":"composite","id":215,"leftPattern":{"type":"composite","id":214,"leftPattern":{"type":"object","id":210,"cls":"Fibonacci480","alias":"f1"},"rightPattern":{"type":"object","id":211,"cls":"Fibonacci480","alias":"f2"}},"rightPattern":{"type":"object","id":212,"cls":"Fibonacci480","alias":"f3"}},"rightPattern":{"type":"object","id":213,"cls":"Result480","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate480"},{"type":"beta","out_nodes":[[512,-1]],"__id":1141,"parentNodes":[515,516]},{"type":"type","out_nodes":[[3,190]],"__id":1142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result480"}},{"type":"rightadapter","out_nodes":[[513,190]],"__id":1145,"parentNodes":[4]},{"type":"join","out_nodes":[[517,-1]],"__id":1146,"parentNodes":[519,520],"constraint":{"type":"join-reference","out_nodes":[],"__id":1147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[513,-1]],"__id":1148,"parentNodes":[]},{"type":"type","out_nodes":[[9,191],[14,192],[20,193],[30,195],[20,197],[30,198]],"__id":1149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci480"}},{"type":"rightadapter","out_nodes":[[516,191]],"__id":1152,"parentNodes":[10]},{"type":"join","out_nodes":[[521,-1]],"__id":1153,"parentNodes":[522,523],"constraint":{"type":"join-reference","out_nodes":[],"__id":1154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[516,-1]],"__id":1155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[520,192]],"__id":1160,"parentNodes":[16]},{"type":"beta","out_nodes":[[524,-1]],"__id":1161,"parentNodes":[525,526]},{"type":"leftadapter","out_nodes":[[520,-1]],"__id":1162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[523,193]],"__id":1167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[523,194]],"__id":1171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1172,"parentNodes":[528],"index":58,"rule":{"name":"Bootstrap480","pattern":{"type":"object","id":217,"cls":"Fibonacci480","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap480"},{"type":"beta","out_nodes":[[527,-1]],"__id":1173,"parentNodes":[529,530]},{"type":"rightadapter","out_nodes":[[528,195]],"__id":1178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[528,196]],"__id":1182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1183,"parentNodes":[532],"index":59,"rule":{"name":"Recurse480","pattern":{"type":"composite","id":220,"leftPattern":{"type":"not","id":218,"cls":"Fibonacci480","alias":"f"},"rightPattern":{"type":"object","id":219,"cls":"Fibonacci480","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');let Fibonacci480 = defined.get('Fibonacci480');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci480(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse480"},{"type":"beta","out_nodes":[[531,-1]],"__id":1184,"parentNodes":[533,534]},{"type":"rightadapter","out_nodes":[[532,197]],"__id":1188,"parentNodes":[37]},{"type":"not","out_nodes":[[535,-1]],"__id":1189,"parentNodes":[536,537],"constraint":{"type":"join-reference","out_nodes":[],"__id":1190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[532,-1]],"__id":1191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[534,198]],"__id":1195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[534,199]],"__id":1199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1200,"parentNodes":[539],"index":60,"rule":{"name":"Calculate479","pattern":{"type":"composite","id":227,"leftPattern":{"type":"composite","id":226,"leftPattern":{"type":"composite","id":225,"leftPattern":{"type":"object","id":221,"cls":"Fibonacci479","alias":"f1"},"rightPattern":{"type":"object","id":222,"cls":"Fibonacci479","alias":"f2"}},"rightPattern":{"type":"object","id":223,"cls":"Fibonacci479","alias":"f3"}},"rightPattern":{"type":"object","id":224,"cls":"Result479","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate479"},{"type":"beta","out_nodes":[[538,-1]],"__id":1201,"parentNodes":[541,542]},{"type":"type","out_nodes":[[3,200]],"__id":1202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result479"}},{"type":"rightadapter","out_nodes":[[539,200]],"__id":1205,"parentNodes":[4]},{"type":"join","out_nodes":[[543,-1]],"__id":1206,"parentNodes":[545,546],"constraint":{"type":"join-reference","out_nodes":[],"__id":1207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[539,-1]],"__id":1208,"parentNodes":[]},{"type":"type","out_nodes":[[9,201],[14,202],[20,203],[30,205],[20,207],[30,208]],"__id":1209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci479"}},{"type":"rightadapter","out_nodes":[[542,201]],"__id":1212,"parentNodes":[10]},{"type":"join","out_nodes":[[547,-1]],"__id":1213,"parentNodes":[548,549],"constraint":{"type":"join-reference","out_nodes":[],"__id":1214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[542,-1]],"__id":1215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[546,202]],"__id":1220,"parentNodes":[16]},{"type":"beta","out_nodes":[[550,-1]],"__id":1221,"parentNodes":[551,552]},{"type":"leftadapter","out_nodes":[[546,-1]],"__id":1222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[549,203]],"__id":1227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[549,204]],"__id":1231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1232,"parentNodes":[554],"index":61,"rule":{"name":"Bootstrap479","pattern":{"type":"object","id":228,"cls":"Fibonacci479","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap479"},{"type":"beta","out_nodes":[[553,-1]],"__id":1233,"parentNodes":[555,556]},{"type":"rightadapter","out_nodes":[[554,205]],"__id":1238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[554,206]],"__id":1242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1243,"parentNodes":[558],"index":62,"rule":{"name":"Recurse479","pattern":{"type":"composite","id":231,"leftPattern":{"type":"not","id":229,"cls":"Fibonacci479","alias":"f"},"rightPattern":{"type":"object","id":230,"cls":"Fibonacci479","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci479 = defined.get('Fibonacci479');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci479(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse479"},{"type":"beta","out_nodes":[[557,-1]],"__id":1244,"parentNodes":[559,560]},{"type":"rightadapter","out_nodes":[[558,207]],"__id":1248,"parentNodes":[37]},{"type":"not","out_nodes":[[561,-1]],"__id":1249,"parentNodes":[562,563],"constraint":{"type":"join-reference","out_nodes":[],"__id":1250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[558,-1]],"__id":1251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[560,208]],"__id":1255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[560,209]],"__id":1259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1260,"parentNodes":[565],"index":63,"rule":{"name":"Calculate478","pattern":{"type":"composite","id":238,"leftPattern":{"type":"composite","id":237,"leftPattern":{"type":"composite","id":236,"leftPattern":{"type":"object","id":232,"cls":"Fibonacci478","alias":"f1"},"rightPattern":{"type":"object","id":233,"cls":"Fibonacci478","alias":"f2"}},"rightPattern":{"type":"object","id":234,"cls":"Fibonacci478","alias":"f3"}},"rightPattern":{"type":"object","id":235,"cls":"Result478","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate478"},{"type":"beta","out_nodes":[[564,-1]],"__id":1261,"parentNodes":[567,568]},{"type":"type","out_nodes":[[3,210]],"__id":1262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result478"}},{"type":"rightadapter","out_nodes":[[565,210]],"__id":1265,"parentNodes":[4]},{"type":"join","out_nodes":[[569,-1]],"__id":1266,"parentNodes":[571,572],"constraint":{"type":"join-reference","out_nodes":[],"__id":1267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[565,-1]],"__id":1268,"parentNodes":[]},{"type":"type","out_nodes":[[9,211],[14,212],[20,213],[30,215],[20,217],[30,218]],"__id":1269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci478"}},{"type":"rightadapter","out_nodes":[[568,211]],"__id":1272,"parentNodes":[10]},{"type":"join","out_nodes":[[573,-1]],"__id":1273,"parentNodes":[574,575],"constraint":{"type":"join-reference","out_nodes":[],"__id":1274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[568,-1]],"__id":1275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[572,212]],"__id":1280,"parentNodes":[16]},{"type":"beta","out_nodes":[[576,-1]],"__id":1281,"parentNodes":[577,578]},{"type":"leftadapter","out_nodes":[[572,-1]],"__id":1282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[575,213]],"__id":1287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[575,214]],"__id":1291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1292,"parentNodes":[580],"index":64,"rule":{"name":"Bootstrap478","pattern":{"type":"object","id":239,"cls":"Fibonacci478","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap478"},{"type":"beta","out_nodes":[[579,-1]],"__id":1293,"parentNodes":[581,582]},{"type":"rightadapter","out_nodes":[[580,215]],"__id":1298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[580,216]],"__id":1302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1303,"parentNodes":[584],"index":65,"rule":{"name":"Recurse478","pattern":{"type":"composite","id":242,"leftPattern":{"type":"not","id":240,"cls":"Fibonacci478","alias":"f"},"rightPattern":{"type":"object","id":241,"cls":"Fibonacci478","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci478 = defined.get('Fibonacci478');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci478(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse478"},{"type":"beta","out_nodes":[[583,-1]],"__id":1304,"parentNodes":[585,586]},{"type":"rightadapter","out_nodes":[[584,217]],"__id":1308,"parentNodes":[37]},{"type":"not","out_nodes":[[587,-1]],"__id":1309,"parentNodes":[588,589],"constraint":{"type":"join-reference","out_nodes":[],"__id":1310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[584,-1]],"__id":1311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[586,218]],"__id":1315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[586,219]],"__id":1319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1320,"parentNodes":[591],"index":66,"rule":{"name":"Calculate477","pattern":{"type":"composite","id":249,"leftPattern":{"type":"composite","id":248,"leftPattern":{"type":"composite","id":247,"leftPattern":{"type":"object","id":243,"cls":"Fibonacci477","alias":"f1"},"rightPattern":{"type":"object","id":244,"cls":"Fibonacci477","alias":"f2"}},"rightPattern":{"type":"object","id":245,"cls":"Fibonacci477","alias":"f3"}},"rightPattern":{"type":"object","id":246,"cls":"Result477","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate477"},{"type":"beta","out_nodes":[[590,-1]],"__id":1321,"parentNodes":[593,594]},{"type":"type","out_nodes":[[3,220]],"__id":1322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result477"}},{"type":"rightadapter","out_nodes":[[591,220]],"__id":1325,"parentNodes":[4]},{"type":"join","out_nodes":[[595,-1]],"__id":1326,"parentNodes":[597,598],"constraint":{"type":"join-reference","out_nodes":[],"__id":1327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[591,-1]],"__id":1328,"parentNodes":[]},{"type":"type","out_nodes":[[9,221],[14,222],[20,223],[30,225],[20,227],[30,228]],"__id":1329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci477"}},{"type":"rightadapter","out_nodes":[[594,221]],"__id":1332,"parentNodes":[10]},{"type":"join","out_nodes":[[599,-1]],"__id":1333,"parentNodes":[600,601],"constraint":{"type":"join-reference","out_nodes":[],"__id":1334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[594,-1]],"__id":1335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[598,222]],"__id":1340,"parentNodes":[16]},{"type":"beta","out_nodes":[[602,-1]],"__id":1341,"parentNodes":[603,604]},{"type":"leftadapter","out_nodes":[[598,-1]],"__id":1342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[601,223]],"__id":1347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[601,224]],"__id":1351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1352,"parentNodes":[606],"index":67,"rule":{"name":"Bootstrap477","pattern":{"type":"object","id":250,"cls":"Fibonacci477","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap477"},{"type":"beta","out_nodes":[[605,-1]],"__id":1353,"parentNodes":[607,608]},{"type":"rightadapter","out_nodes":[[606,225]],"__id":1358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[606,226]],"__id":1362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1363,"parentNodes":[610],"index":68,"rule":{"name":"Recurse477","pattern":{"type":"composite","id":253,"leftPattern":{"type":"not","id":251,"cls":"Fibonacci477","alias":"f"},"rightPattern":{"type":"object","id":252,"cls":"Fibonacci477","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci477 = defined.get('Fibonacci477');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci477(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse477"},{"type":"beta","out_nodes":[[609,-1]],"__id":1364,"parentNodes":[611,612]},{"type":"rightadapter","out_nodes":[[610,227]],"__id":1368,"parentNodes":[37]},{"type":"not","out_nodes":[[613,-1]],"__id":1369,"parentNodes":[614,615],"constraint":{"type":"join-reference","out_nodes":[],"__id":1370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[610,-1]],"__id":1371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[612,228]],"__id":1375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[612,229]],"__id":1379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1380,"parentNodes":[617],"index":69,"rule":{"name":"Calculate476","pattern":{"type":"composite","id":260,"leftPattern":{"type":"composite","id":259,"leftPattern":{"type":"composite","id":258,"leftPattern":{"type":"object","id":254,"cls":"Fibonacci476","alias":"f1"},"rightPattern":{"type":"object","id":255,"cls":"Fibonacci476","alias":"f2"}},"rightPattern":{"type":"object","id":256,"cls":"Fibonacci476","alias":"f3"}},"rightPattern":{"type":"object","id":257,"cls":"Result476","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate476"},{"type":"beta","out_nodes":[[616,-1]],"__id":1381,"parentNodes":[619,620]},{"type":"type","out_nodes":[[3,230]],"__id":1382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result476"}},{"type":"rightadapter","out_nodes":[[617,230]],"__id":1385,"parentNodes":[4]},{"type":"join","out_nodes":[[621,-1]],"__id":1386,"parentNodes":[623,624],"constraint":{"type":"join-reference","out_nodes":[],"__id":1387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[617,-1]],"__id":1388,"parentNodes":[]},{"type":"type","out_nodes":[[9,231],[14,232],[20,233],[30,235],[20,237],[30,238]],"__id":1389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci476"}},{"type":"rightadapter","out_nodes":[[620,231]],"__id":1392,"parentNodes":[10]},{"type":"join","out_nodes":[[625,-1]],"__id":1393,"parentNodes":[626,627],"constraint":{"type":"join-reference","out_nodes":[],"__id":1394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[620,-1]],"__id":1395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[624,232]],"__id":1400,"parentNodes":[16]},{"type":"beta","out_nodes":[[628,-1]],"__id":1401,"parentNodes":[629,630]},{"type":"leftadapter","out_nodes":[[624,-1]],"__id":1402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[627,233]],"__id":1407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[627,234]],"__id":1411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1412,"parentNodes":[632],"index":70,"rule":{"name":"Bootstrap476","pattern":{"type":"object","id":261,"cls":"Fibonacci476","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap476"},{"type":"beta","out_nodes":[[631,-1]],"__id":1413,"parentNodes":[633,634]},{"type":"rightadapter","out_nodes":[[632,235]],"__id":1418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[632,236]],"__id":1422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1423,"parentNodes":[636],"index":71,"rule":{"name":"Recurse476","pattern":{"type":"composite","id":264,"leftPattern":{"type":"not","id":262,"cls":"Fibonacci476","alias":"f"},"rightPattern":{"type":"object","id":263,"cls":"Fibonacci476","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci476 = defined.get('Fibonacci476');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci476(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse476"},{"type":"beta","out_nodes":[[635,-1]],"__id":1424,"parentNodes":[637,638]},{"type":"rightadapter","out_nodes":[[636,237]],"__id":1428,"parentNodes":[37]},{"type":"not","out_nodes":[[639,-1]],"__id":1429,"parentNodes":[640,641],"constraint":{"type":"join-reference","out_nodes":[],"__id":1430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[636,-1]],"__id":1431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[638,238]],"__id":1435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[638,239]],"__id":1439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1440,"parentNodes":[643],"index":72,"rule":{"name":"Calculate475","pattern":{"type":"composite","id":271,"leftPattern":{"type":"composite","id":270,"leftPattern":{"type":"composite","id":269,"leftPattern":{"type":"object","id":265,"cls":"Fibonacci475","alias":"f1"},"rightPattern":{"type":"object","id":266,"cls":"Fibonacci475","alias":"f2"}},"rightPattern":{"type":"object","id":267,"cls":"Fibonacci475","alias":"f3"}},"rightPattern":{"type":"object","id":268,"cls":"Result475","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate475"},{"type":"beta","out_nodes":[[642,-1]],"__id":1441,"parentNodes":[645,646]},{"type":"type","out_nodes":[[3,240]],"__id":1442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result475"}},{"type":"rightadapter","out_nodes":[[643,240]],"__id":1445,"parentNodes":[4]},{"type":"join","out_nodes":[[647,-1]],"__id":1446,"parentNodes":[649,650],"constraint":{"type":"join-reference","out_nodes":[],"__id":1447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[643,-1]],"__id":1448,"parentNodes":[]},{"type":"type","out_nodes":[[9,241],[14,242],[20,243],[30,245],[20,247],[30,248]],"__id":1449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci475"}},{"type":"rightadapter","out_nodes":[[646,241]],"__id":1452,"parentNodes":[10]},{"type":"join","out_nodes":[[651,-1]],"__id":1453,"parentNodes":[652,653],"constraint":{"type":"join-reference","out_nodes":[],"__id":1454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[646,-1]],"__id":1455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[650,242]],"__id":1460,"parentNodes":[16]},{"type":"beta","out_nodes":[[654,-1]],"__id":1461,"parentNodes":[655,656]},{"type":"leftadapter","out_nodes":[[650,-1]],"__id":1462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[653,243]],"__id":1467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[653,244]],"__id":1471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1472,"parentNodes":[658],"index":73,"rule":{"name":"Bootstrap475","pattern":{"type":"object","id":272,"cls":"Fibonacci475","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap475"},{"type":"beta","out_nodes":[[657,-1]],"__id":1473,"parentNodes":[659,660]},{"type":"rightadapter","out_nodes":[[658,245]],"__id":1478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[658,246]],"__id":1482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1483,"parentNodes":[662],"index":74,"rule":{"name":"Recurse475","pattern":{"type":"composite","id":275,"leftPattern":{"type":"not","id":273,"cls":"Fibonacci475","alias":"f"},"rightPattern":{"type":"object","id":274,"cls":"Fibonacci475","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci475 = defined.get('Fibonacci475');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci475(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse475"},{"type":"beta","out_nodes":[[661,-1]],"__id":1484,"parentNodes":[663,664]},{"type":"rightadapter","out_nodes":[[662,247]],"__id":1488,"parentNodes":[37]},{"type":"not","out_nodes":[[665,-1]],"__id":1489,"parentNodes":[666,667],"constraint":{"type":"join-reference","out_nodes":[],"__id":1490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[662,-1]],"__id":1491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[664,248]],"__id":1495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[664,249]],"__id":1499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1500,"parentNodes":[669],"index":75,"rule":{"name":"Calculate474","pattern":{"type":"composite","id":282,"leftPattern":{"type":"composite","id":281,"leftPattern":{"type":"composite","id":280,"leftPattern":{"type":"object","id":276,"cls":"Fibonacci474","alias":"f1"},"rightPattern":{"type":"object","id":277,"cls":"Fibonacci474","alias":"f2"}},"rightPattern":{"type":"object","id":278,"cls":"Fibonacci474","alias":"f3"}},"rightPattern":{"type":"object","id":279,"cls":"Result474","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate474"},{"type":"beta","out_nodes":[[668,-1]],"__id":1501,"parentNodes":[671,672]},{"type":"type","out_nodes":[[3,250]],"__id":1502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result474"}},{"type":"rightadapter","out_nodes":[[669,250]],"__id":1505,"parentNodes":[4]},{"type":"join","out_nodes":[[673,-1]],"__id":1506,"parentNodes":[675,676],"constraint":{"type":"join-reference","out_nodes":[],"__id":1507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[669,-1]],"__id":1508,"parentNodes":[]},{"type":"type","out_nodes":[[9,251],[14,252],[20,253],[30,255],[20,257],[30,258]],"__id":1509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci474"}},{"type":"rightadapter","out_nodes":[[672,251]],"__id":1512,"parentNodes":[10]},{"type":"join","out_nodes":[[677,-1]],"__id":1513,"parentNodes":[678,679],"constraint":{"type":"join-reference","out_nodes":[],"__id":1514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[672,-1]],"__id":1515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[676,252]],"__id":1520,"parentNodes":[16]},{"type":"beta","out_nodes":[[680,-1]],"__id":1521,"parentNodes":[681,682]},{"type":"leftadapter","out_nodes":[[676,-1]],"__id":1522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[679,253]],"__id":1527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[679,254]],"__id":1531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1532,"parentNodes":[684],"index":76,"rule":{"name":"Bootstrap474","pattern":{"type":"object","id":283,"cls":"Fibonacci474","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap474"},{"type":"beta","out_nodes":[[683,-1]],"__id":1533,"parentNodes":[685,686]},{"type":"rightadapter","out_nodes":[[684,255]],"__id":1538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[684,256]],"__id":1542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1543,"parentNodes":[688],"index":77,"rule":{"name":"Recurse474","pattern":{"type":"composite","id":286,"leftPattern":{"type":"not","id":284,"cls":"Fibonacci474","alias":"f"},"rightPattern":{"type":"object","id":285,"cls":"Fibonacci474","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci474 = defined.get('Fibonacci474');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci474(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse474"},{"type":"beta","out_nodes":[[687,-1]],"__id":1544,"parentNodes":[689,690]},{"type":"rightadapter","out_nodes":[[688,257]],"__id":1548,"parentNodes":[37]},{"type":"not","out_nodes":[[691,-1]],"__id":1549,"parentNodes":[692,693],"constraint":{"type":"join-reference","out_nodes":[],"__id":1550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[688,-1]],"__id":1551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[690,258]],"__id":1555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[690,259]],"__id":1559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1560,"parentNodes":[695],"index":78,"rule":{"name":"Calculate473","pattern":{"type":"composite","id":293,"leftPattern":{"type":"composite","id":292,"leftPattern":{"type":"composite","id":291,"leftPattern":{"type":"object","id":287,"cls":"Fibonacci473","alias":"f1"},"rightPattern":{"type":"object","id":288,"cls":"Fibonacci473","alias":"f2"}},"rightPattern":{"type":"object","id":289,"cls":"Fibonacci473","alias":"f3"}},"rightPattern":{"type":"object","id":290,"cls":"Result473","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate473"},{"type":"beta","out_nodes":[[694,-1]],"__id":1561,"parentNodes":[697,698]},{"type":"type","out_nodes":[[3,260]],"__id":1562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result473"}},{"type":"rightadapter","out_nodes":[[695,260]],"__id":1565,"parentNodes":[4]},{"type":"join","out_nodes":[[699,-1]],"__id":1566,"parentNodes":[701,702],"constraint":{"type":"join-reference","out_nodes":[],"__id":1567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[695,-1]],"__id":1568,"parentNodes":[]},{"type":"type","out_nodes":[[9,261],[14,262],[20,263],[30,265],[20,267],[30,268]],"__id":1569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci473"}},{"type":"rightadapter","out_nodes":[[698,261]],"__id":1572,"parentNodes":[10]},{"type":"join","out_nodes":[[703,-1]],"__id":1573,"parentNodes":[704,705],"constraint":{"type":"join-reference","out_nodes":[],"__id":1574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[698,-1]],"__id":1575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[702,262]],"__id":1580,"parentNodes":[16]},{"type":"beta","out_nodes":[[706,-1]],"__id":1581,"parentNodes":[707,708]},{"type":"leftadapter","out_nodes":[[702,-1]],"__id":1582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[705,263]],"__id":1587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[705,264]],"__id":1591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1592,"parentNodes":[710],"index":79,"rule":{"name":"Bootstrap473","pattern":{"type":"object","id":294,"cls":"Fibonacci473","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap473"},{"type":"beta","out_nodes":[[709,-1]],"__id":1593,"parentNodes":[711,712]},{"type":"rightadapter","out_nodes":[[710,265]],"__id":1598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[710,266]],"__id":1602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1603,"parentNodes":[714],"index":80,"rule":{"name":"Recurse473","pattern":{"type":"composite","id":297,"leftPattern":{"type":"not","id":295,"cls":"Fibonacci473","alias":"f"},"rightPattern":{"type":"object","id":296,"cls":"Fibonacci473","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci473 = defined.get('Fibonacci473');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci473(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse473"},{"type":"beta","out_nodes":[[713,-1]],"__id":1604,"parentNodes":[715,716]},{"type":"rightadapter","out_nodes":[[714,267]],"__id":1608,"parentNodes":[37]},{"type":"not","out_nodes":[[717,-1]],"__id":1609,"parentNodes":[718,719],"constraint":{"type":"join-reference","out_nodes":[],"__id":1610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[714,-1]],"__id":1611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[716,268]],"__id":1615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[716,269]],"__id":1619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1620,"parentNodes":[721],"index":81,"rule":{"name":"Calculate472","pattern":{"type":"composite","id":304,"leftPattern":{"type":"composite","id":303,"leftPattern":{"type":"composite","id":302,"leftPattern":{"type":"object","id":298,"cls":"Fibonacci472","alias":"f1"},"rightPattern":{"type":"object","id":299,"cls":"Fibonacci472","alias":"f2"}},"rightPattern":{"type":"object","id":300,"cls":"Fibonacci472","alias":"f3"}},"rightPattern":{"type":"object","id":301,"cls":"Result472","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate472"},{"type":"beta","out_nodes":[[720,-1]],"__id":1621,"parentNodes":[723,724]},{"type":"type","out_nodes":[[3,270]],"__id":1622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result472"}},{"type":"rightadapter","out_nodes":[[721,270]],"__id":1625,"parentNodes":[4]},{"type":"join","out_nodes":[[725,-1]],"__id":1626,"parentNodes":[727,728],"constraint":{"type":"join-reference","out_nodes":[],"__id":1627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[721,-1]],"__id":1628,"parentNodes":[]},{"type":"type","out_nodes":[[9,271],[14,272],[20,273],[30,275],[20,277],[30,278]],"__id":1629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci472"}},{"type":"rightadapter","out_nodes":[[724,271]],"__id":1632,"parentNodes":[10]},{"type":"join","out_nodes":[[729,-1]],"__id":1633,"parentNodes":[730,731],"constraint":{"type":"join-reference","out_nodes":[],"__id":1634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[724,-1]],"__id":1635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[728,272]],"__id":1640,"parentNodes":[16]},{"type":"beta","out_nodes":[[732,-1]],"__id":1641,"parentNodes":[733,734]},{"type":"leftadapter","out_nodes":[[728,-1]],"__id":1642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[731,273]],"__id":1647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[731,274]],"__id":1651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1652,"parentNodes":[736],"index":82,"rule":{"name":"Bootstrap472","pattern":{"type":"object","id":305,"cls":"Fibonacci472","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap472"},{"type":"beta","out_nodes":[[735,-1]],"__id":1653,"parentNodes":[737,738]},{"type":"rightadapter","out_nodes":[[736,275]],"__id":1658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[736,276]],"__id":1662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1663,"parentNodes":[740],"index":83,"rule":{"name":"Recurse472","pattern":{"type":"composite","id":308,"leftPattern":{"type":"not","id":306,"cls":"Fibonacci472","alias":"f"},"rightPattern":{"type":"object","id":307,"cls":"Fibonacci472","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci472 = defined.get('Fibonacci472');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci472(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse472"},{"type":"beta","out_nodes":[[739,-1]],"__id":1664,"parentNodes":[741,742]},{"type":"rightadapter","out_nodes":[[740,277]],"__id":1668,"parentNodes":[37]},{"type":"not","out_nodes":[[743,-1]],"__id":1669,"parentNodes":[744,745],"constraint":{"type":"join-reference","out_nodes":[],"__id":1670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[740,-1]],"__id":1671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[742,278]],"__id":1675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[742,279]],"__id":1679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1680,"parentNodes":[747],"index":84,"rule":{"name":"Calculate471","pattern":{"type":"composite","id":315,"leftPattern":{"type":"composite","id":314,"leftPattern":{"type":"composite","id":313,"leftPattern":{"type":"object","id":309,"cls":"Fibonacci471","alias":"f1"},"rightPattern":{"type":"object","id":310,"cls":"Fibonacci471","alias":"f2"}},"rightPattern":{"type":"object","id":311,"cls":"Fibonacci471","alias":"f3"}},"rightPattern":{"type":"object","id":312,"cls":"Result471","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate471"},{"type":"beta","out_nodes":[[746,-1]],"__id":1681,"parentNodes":[749,750]},{"type":"type","out_nodes":[[3,280]],"__id":1682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result471"}},{"type":"rightadapter","out_nodes":[[747,280]],"__id":1685,"parentNodes":[4]},{"type":"join","out_nodes":[[751,-1]],"__id":1686,"parentNodes":[753,754],"constraint":{"type":"join-reference","out_nodes":[],"__id":1687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[747,-1]],"__id":1688,"parentNodes":[]},{"type":"type","out_nodes":[[9,281],[14,282],[20,283],[30,285],[20,287],[30,288]],"__id":1689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci471"}},{"type":"rightadapter","out_nodes":[[750,281]],"__id":1692,"parentNodes":[10]},{"type":"join","out_nodes":[[755,-1]],"__id":1693,"parentNodes":[756,757],"constraint":{"type":"join-reference","out_nodes":[],"__id":1694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[750,-1]],"__id":1695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[754,282]],"__id":1700,"parentNodes":[16]},{"type":"beta","out_nodes":[[758,-1]],"__id":1701,"parentNodes":[759,760]},{"type":"leftadapter","out_nodes":[[754,-1]],"__id":1702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[757,283]],"__id":1707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[757,284]],"__id":1711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1712,"parentNodes":[762],"index":85,"rule":{"name":"Bootstrap471","pattern":{"type":"object","id":316,"cls":"Fibonacci471","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap471"},{"type":"beta","out_nodes":[[761,-1]],"__id":1713,"parentNodes":[763,764]},{"type":"rightadapter","out_nodes":[[762,285]],"__id":1718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[762,286]],"__id":1722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1723,"parentNodes":[766],"index":86,"rule":{"name":"Recurse471","pattern":{"type":"composite","id":319,"leftPattern":{"type":"not","id":317,"cls":"Fibonacci471","alias":"f"},"rightPattern":{"type":"object","id":318,"cls":"Fibonacci471","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci471 = defined.get('Fibonacci471');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci471(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse471"},{"type":"beta","out_nodes":[[765,-1]],"__id":1724,"parentNodes":[767,768]},{"type":"rightadapter","out_nodes":[[766,287]],"__id":1728,"parentNodes":[37]},{"type":"not","out_nodes":[[769,-1]],"__id":1729,"parentNodes":[770,771],"constraint":{"type":"join-reference","out_nodes":[],"__id":1730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[766,-1]],"__id":1731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[768,288]],"__id":1735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[768,289]],"__id":1739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1740,"parentNodes":[773],"index":87,"rule":{"name":"Calculate470","pattern":{"type":"composite","id":326,"leftPattern":{"type":"composite","id":325,"leftPattern":{"type":"composite","id":324,"leftPattern":{"type":"object","id":320,"cls":"Fibonacci470","alias":"f1"},"rightPattern":{"type":"object","id":321,"cls":"Fibonacci470","alias":"f2"}},"rightPattern":{"type":"object","id":322,"cls":"Fibonacci470","alias":"f3"}},"rightPattern":{"type":"object","id":323,"cls":"Result470","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate470"},{"type":"beta","out_nodes":[[772,-1]],"__id":1741,"parentNodes":[775,776]},{"type":"type","out_nodes":[[3,290]],"__id":1742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result470"}},{"type":"rightadapter","out_nodes":[[773,290]],"__id":1745,"parentNodes":[4]},{"type":"join","out_nodes":[[777,-1]],"__id":1746,"parentNodes":[779,780],"constraint":{"type":"join-reference","out_nodes":[],"__id":1747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[773,-1]],"__id":1748,"parentNodes":[]},{"type":"type","out_nodes":[[9,291],[14,292],[20,293],[30,295],[20,297],[30,298]],"__id":1749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci470"}},{"type":"rightadapter","out_nodes":[[776,291]],"__id":1752,"parentNodes":[10]},{"type":"join","out_nodes":[[781,-1]],"__id":1753,"parentNodes":[782,783],"constraint":{"type":"join-reference","out_nodes":[],"__id":1754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[776,-1]],"__id":1755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[780,292]],"__id":1760,"parentNodes":[16]},{"type":"beta","out_nodes":[[784,-1]],"__id":1761,"parentNodes":[785,786]},{"type":"leftadapter","out_nodes":[[780,-1]],"__id":1762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[783,293]],"__id":1767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[783,294]],"__id":1771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1772,"parentNodes":[788],"index":88,"rule":{"name":"Bootstrap470","pattern":{"type":"object","id":327,"cls":"Fibonacci470","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap470"},{"type":"beta","out_nodes":[[787,-1]],"__id":1773,"parentNodes":[789,790]},{"type":"rightadapter","out_nodes":[[788,295]],"__id":1778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[788,296]],"__id":1782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1783,"parentNodes":[792],"index":89,"rule":{"name":"Recurse470","pattern":{"type":"composite","id":330,"leftPattern":{"type":"not","id":328,"cls":"Fibonacci470","alias":"f"},"rightPattern":{"type":"object","id":329,"cls":"Fibonacci470","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');let Fibonacci470 = defined.get('Fibonacci470');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci470(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse470"},{"type":"beta","out_nodes":[[791,-1]],"__id":1784,"parentNodes":[793,794]},{"type":"rightadapter","out_nodes":[[792,297]],"__id":1788,"parentNodes":[37]},{"type":"not","out_nodes":[[795,-1]],"__id":1789,"parentNodes":[796,797],"constraint":{"type":"join-reference","out_nodes":[],"__id":1790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[792,-1]],"__id":1791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[794,298]],"__id":1795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[794,299]],"__id":1799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1800,"parentNodes":[799],"index":90,"rule":{"name":"Calculate469","pattern":{"type":"composite","id":337,"leftPattern":{"type":"composite","id":336,"leftPattern":{"type":"composite","id":335,"leftPattern":{"type":"object","id":331,"cls":"Fibonacci469","alias":"f1"},"rightPattern":{"type":"object","id":332,"cls":"Fibonacci469","alias":"f2"}},"rightPattern":{"type":"object","id":333,"cls":"Fibonacci469","alias":"f3"}},"rightPattern":{"type":"object","id":334,"cls":"Result469","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate469"},{"type":"beta","out_nodes":[[798,-1]],"__id":1801,"parentNodes":[801,802]},{"type":"type","out_nodes":[[3,300]],"__id":1802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result469"}},{"type":"rightadapter","out_nodes":[[799,300]],"__id":1805,"parentNodes":[4]},{"type":"join","out_nodes":[[803,-1]],"__id":1806,"parentNodes":[805,806],"constraint":{"type":"join-reference","out_nodes":[],"__id":1807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[799,-1]],"__id":1808,"parentNodes":[]},{"type":"type","out_nodes":[[9,301],[14,302],[20,303],[30,305],[20,307],[30,308]],"__id":1809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci469"}},{"type":"rightadapter","out_nodes":[[802,301]],"__id":1812,"parentNodes":[10]},{"type":"join","out_nodes":[[807,-1]],"__id":1813,"parentNodes":[808,809],"constraint":{"type":"join-reference","out_nodes":[],"__id":1814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[802,-1]],"__id":1815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[806,302]],"__id":1820,"parentNodes":[16]},{"type":"beta","out_nodes":[[810,-1]],"__id":1821,"parentNodes":[811,812]},{"type":"leftadapter","out_nodes":[[806,-1]],"__id":1822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[809,303]],"__id":1827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[809,304]],"__id":1831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1832,"parentNodes":[814],"index":91,"rule":{"name":"Bootstrap469","pattern":{"type":"object","id":338,"cls":"Fibonacci469","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap469"},{"type":"beta","out_nodes":[[813,-1]],"__id":1833,"parentNodes":[815,816]},{"type":"rightadapter","out_nodes":[[814,305]],"__id":1838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[814,306]],"__id":1842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1843,"parentNodes":[818],"index":92,"rule":{"name":"Recurse469","pattern":{"type":"composite","id":341,"leftPattern":{"type":"not","id":339,"cls":"Fibonacci469","alias":"f"},"rightPattern":{"type":"object","id":340,"cls":"Fibonacci469","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci469 = defined.get('Fibonacci469');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci469(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse469"},{"type":"beta","out_nodes":[[817,-1]],"__id":1844,"parentNodes":[819,820]},{"type":"rightadapter","out_nodes":[[818,307]],"__id":1848,"parentNodes":[37]},{"type":"not","out_nodes":[[821,-1]],"__id":1849,"parentNodes":[822,823],"constraint":{"type":"join-reference","out_nodes":[],"__id":1850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[818,-1]],"__id":1851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[820,308]],"__id":1855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[820,309]],"__id":1859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1860,"parentNodes":[825],"index":93,"rule":{"name":"Calculate468","pattern":{"type":"composite","id":348,"leftPattern":{"type":"composite","id":347,"leftPattern":{"type":"composite","id":346,"leftPattern":{"type":"object","id":342,"cls":"Fibonacci468","alias":"f1"},"rightPattern":{"type":"object","id":343,"cls":"Fibonacci468","alias":"f2"}},"rightPattern":{"type":"object","id":344,"cls":"Fibonacci468","alias":"f3"}},"rightPattern":{"type":"object","id":345,"cls":"Result468","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate468"},{"type":"beta","out_nodes":[[824,-1]],"__id":1861,"parentNodes":[827,828]},{"type":"type","out_nodes":[[3,310]],"__id":1862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result468"}},{"type":"rightadapter","out_nodes":[[825,310]],"__id":1865,"parentNodes":[4]},{"type":"join","out_nodes":[[829,-1]],"__id":1866,"parentNodes":[831,832],"constraint":{"type":"join-reference","out_nodes":[],"__id":1867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[825,-1]],"__id":1868,"parentNodes":[]},{"type":"type","out_nodes":[[9,311],[14,312],[20,313],[30,315],[20,317],[30,318]],"__id":1869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci468"}},{"type":"rightadapter","out_nodes":[[828,311]],"__id":1872,"parentNodes":[10]},{"type":"join","out_nodes":[[833,-1]],"__id":1873,"parentNodes":[834,835],"constraint":{"type":"join-reference","out_nodes":[],"__id":1874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[828,-1]],"__id":1875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[832,312]],"__id":1880,"parentNodes":[16]},{"type":"beta","out_nodes":[[836,-1]],"__id":1881,"parentNodes":[837,838]},{"type":"leftadapter","out_nodes":[[832,-1]],"__id":1882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[835,313]],"__id":1887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[835,314]],"__id":1891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1892,"parentNodes":[840],"index":94,"rule":{"name":"Bootstrap468","pattern":{"type":"object","id":349,"cls":"Fibonacci468","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap468"},{"type":"beta","out_nodes":[[839,-1]],"__id":1893,"parentNodes":[841,842]},{"type":"rightadapter","out_nodes":[[840,315]],"__id":1898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[840,316]],"__id":1902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1903,"parentNodes":[844],"index":95,"rule":{"name":"Recurse468","pattern":{"type":"composite","id":352,"leftPattern":{"type":"not","id":350,"cls":"Fibonacci468","alias":"f"},"rightPattern":{"type":"object","id":351,"cls":"Fibonacci468","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci468 = defined.get('Fibonacci468');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci468(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse468"},{"type":"beta","out_nodes":[[843,-1]],"__id":1904,"parentNodes":[845,846]},{"type":"rightadapter","out_nodes":[[844,317]],"__id":1908,"parentNodes":[37]},{"type":"not","out_nodes":[[847,-1]],"__id":1909,"parentNodes":[848,849],"constraint":{"type":"join-reference","out_nodes":[],"__id":1910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[844,-1]],"__id":1911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[846,318]],"__id":1915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[846,319]],"__id":1919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1920,"parentNodes":[851],"index":96,"rule":{"name":"Calculate467","pattern":{"type":"composite","id":359,"leftPattern":{"type":"composite","id":358,"leftPattern":{"type":"composite","id":357,"leftPattern":{"type":"object","id":353,"cls":"Fibonacci467","alias":"f1"},"rightPattern":{"type":"object","id":354,"cls":"Fibonacci467","alias":"f2"}},"rightPattern":{"type":"object","id":355,"cls":"Fibonacci467","alias":"f3"}},"rightPattern":{"type":"object","id":356,"cls":"Result467","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate467"},{"type":"beta","out_nodes":[[850,-1]],"__id":1921,"parentNodes":[853,854]},{"type":"type","out_nodes":[[3,320]],"__id":1922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result467"}},{"type":"rightadapter","out_nodes":[[851,320]],"__id":1925,"parentNodes":[4]},{"type":"join","out_nodes":[[855,-1]],"__id":1926,"parentNodes":[857,858],"constraint":{"type":"join-reference","out_nodes":[],"__id":1927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[851,-1]],"__id":1928,"parentNodes":[]},{"type":"type","out_nodes":[[9,321],[14,322],[20,323],[30,325],[20,327],[30,328]],"__id":1929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci467"}},{"type":"rightadapter","out_nodes":[[854,321]],"__id":1932,"parentNodes":[10]},{"type":"join","out_nodes":[[859,-1]],"__id":1933,"parentNodes":[860,861],"constraint":{"type":"join-reference","out_nodes":[],"__id":1934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[854,-1]],"__id":1935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[858,322]],"__id":1940,"parentNodes":[16]},{"type":"beta","out_nodes":[[862,-1]],"__id":1941,"parentNodes":[863,864]},{"type":"leftadapter","out_nodes":[[858,-1]],"__id":1942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[861,323]],"__id":1947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[861,324]],"__id":1951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1952,"parentNodes":[866],"index":97,"rule":{"name":"Bootstrap467","pattern":{"type":"object","id":360,"cls":"Fibonacci467","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap467"},{"type":"beta","out_nodes":[[865,-1]],"__id":1953,"parentNodes":[867,868]},{"type":"rightadapter","out_nodes":[[866,325]],"__id":1958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[866,326]],"__id":1962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1963,"parentNodes":[870],"index":98,"rule":{"name":"Recurse467","pattern":{"type":"composite","id":363,"leftPattern":{"type":"not","id":361,"cls":"Fibonacci467","alias":"f"},"rightPattern":{"type":"object","id":362,"cls":"Fibonacci467","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci467 = defined.get('Fibonacci467');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci467(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse467"},{"type":"beta","out_nodes":[[869,-1]],"__id":1964,"parentNodes":[871,872]},{"type":"rightadapter","out_nodes":[[870,327]],"__id":1968,"parentNodes":[37]},{"type":"not","out_nodes":[[873,-1]],"__id":1969,"parentNodes":[874,875],"constraint":{"type":"join-reference","out_nodes":[],"__id":1970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[870,-1]],"__id":1971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[872,328]],"__id":1975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[872,329]],"__id":1979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":1980,"parentNodes":[877],"index":99,"rule":{"name":"Calculate466","pattern":{"type":"composite","id":370,"leftPattern":{"type":"composite","id":369,"leftPattern":{"type":"composite","id":368,"leftPattern":{"type":"object","id":364,"cls":"Fibonacci466","alias":"f1"},"rightPattern":{"type":"object","id":365,"cls":"Fibonacci466","alias":"f2"}},"rightPattern":{"type":"object","id":366,"cls":"Fibonacci466","alias":"f3"}},"rightPattern":{"type":"object","id":367,"cls":"Result466","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate466"},{"type":"beta","out_nodes":[[876,-1]],"__id":1981,"parentNodes":[879,880]},{"type":"type","out_nodes":[[3,330]],"__id":1982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result466"}},{"type":"rightadapter","out_nodes":[[877,330]],"__id":1985,"parentNodes":[4]},{"type":"join","out_nodes":[[881,-1]],"__id":1986,"parentNodes":[883,884],"constraint":{"type":"join-reference","out_nodes":[],"__id":1987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[877,-1]],"__id":1988,"parentNodes":[]},{"type":"type","out_nodes":[[9,331],[14,332],[20,333],[30,335],[20,337],[30,338]],"__id":1989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci466"}},{"type":"rightadapter","out_nodes":[[880,331]],"__id":1992,"parentNodes":[10]},{"type":"join","out_nodes":[[885,-1]],"__id":1993,"parentNodes":[886,887],"constraint":{"type":"join-reference","out_nodes":[],"__id":1994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[880,-1]],"__id":1995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[884,332]],"__id":2000,"parentNodes":[16]},{"type":"beta","out_nodes":[[888,-1]],"__id":2001,"parentNodes":[889,890]},{"type":"leftadapter","out_nodes":[[884,-1]],"__id":2002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[887,333]],"__id":2007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[887,334]],"__id":2011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2012,"parentNodes":[892],"index":100,"rule":{"name":"Bootstrap466","pattern":{"type":"object","id":371,"cls":"Fibonacci466","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap466"},{"type":"beta","out_nodes":[[891,-1]],"__id":2013,"parentNodes":[893,894]},{"type":"rightadapter","out_nodes":[[892,335]],"__id":2018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[892,336]],"__id":2022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2023,"parentNodes":[896],"index":101,"rule":{"name":"Recurse466","pattern":{"type":"composite","id":374,"leftPattern":{"type":"not","id":372,"cls":"Fibonacci466","alias":"f"},"rightPattern":{"type":"object","id":373,"cls":"Fibonacci466","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci466 = defined.get('Fibonacci466');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci466(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse466"},{"type":"beta","out_nodes":[[895,-1]],"__id":2024,"parentNodes":[897,898]},{"type":"rightadapter","out_nodes":[[896,337]],"__id":2028,"parentNodes":[37]},{"type":"not","out_nodes":[[899,-1]],"__id":2029,"parentNodes":[900,901],"constraint":{"type":"join-reference","out_nodes":[],"__id":2030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[896,-1]],"__id":2031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[898,338]],"__id":2035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[898,339]],"__id":2039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2040,"parentNodes":[903],"index":102,"rule":{"name":"Calculate465","pattern":{"type":"composite","id":381,"leftPattern":{"type":"composite","id":380,"leftPattern":{"type":"composite","id":379,"leftPattern":{"type":"object","id":375,"cls":"Fibonacci465","alias":"f1"},"rightPattern":{"type":"object","id":376,"cls":"Fibonacci465","alias":"f2"}},"rightPattern":{"type":"object","id":377,"cls":"Fibonacci465","alias":"f3"}},"rightPattern":{"type":"object","id":378,"cls":"Result465","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate465"},{"type":"beta","out_nodes":[[902,-1]],"__id":2041,"parentNodes":[905,906]},{"type":"type","out_nodes":[[3,340]],"__id":2042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result465"}},{"type":"rightadapter","out_nodes":[[903,340]],"__id":2045,"parentNodes":[4]},{"type":"join","out_nodes":[[907,-1]],"__id":2046,"parentNodes":[909,910],"constraint":{"type":"join-reference","out_nodes":[],"__id":2047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[903,-1]],"__id":2048,"parentNodes":[]},{"type":"type","out_nodes":[[9,341],[14,342],[20,343],[30,345],[20,347],[30,348]],"__id":2049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci465"}},{"type":"rightadapter","out_nodes":[[906,341]],"__id":2052,"parentNodes":[10]},{"type":"join","out_nodes":[[911,-1]],"__id":2053,"parentNodes":[912,913],"constraint":{"type":"join-reference","out_nodes":[],"__id":2054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[906,-1]],"__id":2055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[910,342]],"__id":2060,"parentNodes":[16]},{"type":"beta","out_nodes":[[914,-1]],"__id":2061,"parentNodes":[915,916]},{"type":"leftadapter","out_nodes":[[910,-1]],"__id":2062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[913,343]],"__id":2067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[913,344]],"__id":2071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2072,"parentNodes":[918],"index":103,"rule":{"name":"Bootstrap465","pattern":{"type":"object","id":382,"cls":"Fibonacci465","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap465"},{"type":"beta","out_nodes":[[917,-1]],"__id":2073,"parentNodes":[919,920]},{"type":"rightadapter","out_nodes":[[918,345]],"__id":2078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[918,346]],"__id":2082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2083,"parentNodes":[922],"index":104,"rule":{"name":"Recurse465","pattern":{"type":"composite","id":385,"leftPattern":{"type":"not","id":383,"cls":"Fibonacci465","alias":"f"},"rightPattern":{"type":"object","id":384,"cls":"Fibonacci465","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci465 = defined.get('Fibonacci465');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci465(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse465"},{"type":"beta","out_nodes":[[921,-1]],"__id":2084,"parentNodes":[923,924]},{"type":"rightadapter","out_nodes":[[922,347]],"__id":2088,"parentNodes":[37]},{"type":"not","out_nodes":[[925,-1]],"__id":2089,"parentNodes":[926,927],"constraint":{"type":"join-reference","out_nodes":[],"__id":2090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[922,-1]],"__id":2091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[924,348]],"__id":2095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[924,349]],"__id":2099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2100,"parentNodes":[929],"index":105,"rule":{"name":"Calculate464","pattern":{"type":"composite","id":392,"leftPattern":{"type":"composite","id":391,"leftPattern":{"type":"composite","id":390,"leftPattern":{"type":"object","id":386,"cls":"Fibonacci464","alias":"f1"},"rightPattern":{"type":"object","id":387,"cls":"Fibonacci464","alias":"f2"}},"rightPattern":{"type":"object","id":388,"cls":"Fibonacci464","alias":"f3"}},"rightPattern":{"type":"object","id":389,"cls":"Result464","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate464"},{"type":"beta","out_nodes":[[928,-1]],"__id":2101,"parentNodes":[931,932]},{"type":"type","out_nodes":[[3,350]],"__id":2102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result464"}},{"type":"rightadapter","out_nodes":[[929,350]],"__id":2105,"parentNodes":[4]},{"type":"join","out_nodes":[[933,-1]],"__id":2106,"parentNodes":[935,936],"constraint":{"type":"join-reference","out_nodes":[],"__id":2107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[929,-1]],"__id":2108,"parentNodes":[]},{"type":"type","out_nodes":[[9,351],[14,352],[20,353],[30,355],[20,357],[30,358]],"__id":2109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci464"}},{"type":"rightadapter","out_nodes":[[932,351]],"__id":2112,"parentNodes":[10]},{"type":"join","out_nodes":[[937,-1]],"__id":2113,"parentNodes":[938,939],"constraint":{"type":"join-reference","out_nodes":[],"__id":2114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[932,-1]],"__id":2115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[936,352]],"__id":2120,"parentNodes":[16]},{"type":"beta","out_nodes":[[940,-1]],"__id":2121,"parentNodes":[941,942]},{"type":"leftadapter","out_nodes":[[936,-1]],"__id":2122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[939,353]],"__id":2127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[939,354]],"__id":2131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2132,"parentNodes":[944],"index":106,"rule":{"name":"Bootstrap464","pattern":{"type":"object","id":393,"cls":"Fibonacci464","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap464"},{"type":"beta","out_nodes":[[943,-1]],"__id":2133,"parentNodes":[945,946]},{"type":"rightadapter","out_nodes":[[944,355]],"__id":2138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[944,356]],"__id":2142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2143,"parentNodes":[948],"index":107,"rule":{"name":"Recurse464","pattern":{"type":"composite","id":396,"leftPattern":{"type":"not","id":394,"cls":"Fibonacci464","alias":"f"},"rightPattern":{"type":"object","id":395,"cls":"Fibonacci464","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci464 = defined.get('Fibonacci464');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci464(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse464"},{"type":"beta","out_nodes":[[947,-1]],"__id":2144,"parentNodes":[949,950]},{"type":"rightadapter","out_nodes":[[948,357]],"__id":2148,"parentNodes":[37]},{"type":"not","out_nodes":[[951,-1]],"__id":2149,"parentNodes":[952,953],"constraint":{"type":"join-reference","out_nodes":[],"__id":2150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[948,-1]],"__id":2151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[950,358]],"__id":2155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[950,359]],"__id":2159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2160,"parentNodes":[955],"index":108,"rule":{"name":"Calculate463","pattern":{"type":"composite","id":403,"leftPattern":{"type":"composite","id":402,"leftPattern":{"type":"composite","id":401,"leftPattern":{"type":"object","id":397,"cls":"Fibonacci463","alias":"f1"},"rightPattern":{"type":"object","id":398,"cls":"Fibonacci463","alias":"f2"}},"rightPattern":{"type":"object","id":399,"cls":"Fibonacci463","alias":"f3"}},"rightPattern":{"type":"object","id":400,"cls":"Result463","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate463"},{"type":"beta","out_nodes":[[954,-1]],"__id":2161,"parentNodes":[957,958]},{"type":"type","out_nodes":[[3,360]],"__id":2162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result463"}},{"type":"rightadapter","out_nodes":[[955,360]],"__id":2165,"parentNodes":[4]},{"type":"join","out_nodes":[[959,-1]],"__id":2166,"parentNodes":[961,962],"constraint":{"type":"join-reference","out_nodes":[],"__id":2167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[955,-1]],"__id":2168,"parentNodes":[]},{"type":"type","out_nodes":[[9,361],[14,362],[20,363],[30,365],[20,367],[30,368]],"__id":2169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci463"}},{"type":"rightadapter","out_nodes":[[958,361]],"__id":2172,"parentNodes":[10]},{"type":"join","out_nodes":[[963,-1]],"__id":2173,"parentNodes":[964,965],"constraint":{"type":"join-reference","out_nodes":[],"__id":2174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[958,-1]],"__id":2175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[962,362]],"__id":2180,"parentNodes":[16]},{"type":"beta","out_nodes":[[966,-1]],"__id":2181,"parentNodes":[967,968]},{"type":"leftadapter","out_nodes":[[962,-1]],"__id":2182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[965,363]],"__id":2187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[965,364]],"__id":2191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2192,"parentNodes":[970],"index":109,"rule":{"name":"Bootstrap463","pattern":{"type":"object","id":404,"cls":"Fibonacci463","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap463"},{"type":"beta","out_nodes":[[969,-1]],"__id":2193,"parentNodes":[971,972]},{"type":"rightadapter","out_nodes":[[970,365]],"__id":2198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[970,366]],"__id":2202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2203,"parentNodes":[974],"index":110,"rule":{"name":"Recurse463","pattern":{"type":"composite","id":407,"leftPattern":{"type":"not","id":405,"cls":"Fibonacci463","alias":"f"},"rightPattern":{"type":"object","id":406,"cls":"Fibonacci463","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci463 = defined.get('Fibonacci463');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci463(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse463"},{"type":"beta","out_nodes":[[973,-1]],"__id":2204,"parentNodes":[975,976]},{"type":"rightadapter","out_nodes":[[974,367]],"__id":2208,"parentNodes":[37]},{"type":"not","out_nodes":[[977,-1]],"__id":2209,"parentNodes":[978,979],"constraint":{"type":"join-reference","out_nodes":[],"__id":2210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[974,-1]],"__id":2211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[976,368]],"__id":2215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[976,369]],"__id":2219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2220,"parentNodes":[981],"index":111,"rule":{"name":"Calculate462","pattern":{"type":"composite","id":414,"leftPattern":{"type":"composite","id":413,"leftPattern":{"type":"composite","id":412,"leftPattern":{"type":"object","id":408,"cls":"Fibonacci462","alias":"f1"},"rightPattern":{"type":"object","id":409,"cls":"Fibonacci462","alias":"f2"}},"rightPattern":{"type":"object","id":410,"cls":"Fibonacci462","alias":"f3"}},"rightPattern":{"type":"object","id":411,"cls":"Result462","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate462"},{"type":"beta","out_nodes":[[980,-1]],"__id":2221,"parentNodes":[983,984]},{"type":"type","out_nodes":[[3,370]],"__id":2222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result462"}},{"type":"rightadapter","out_nodes":[[981,370]],"__id":2225,"parentNodes":[4]},{"type":"join","out_nodes":[[985,-1]],"__id":2226,"parentNodes":[987,988],"constraint":{"type":"join-reference","out_nodes":[],"__id":2227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[981,-1]],"__id":2228,"parentNodes":[]},{"type":"type","out_nodes":[[9,371],[14,372],[20,373],[30,375],[20,377],[30,378]],"__id":2229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci462"}},{"type":"rightadapter","out_nodes":[[984,371]],"__id":2232,"parentNodes":[10]},{"type":"join","out_nodes":[[989,-1]],"__id":2233,"parentNodes":[990,991],"constraint":{"type":"join-reference","out_nodes":[],"__id":2234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[984,-1]],"__id":2235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[988,372]],"__id":2240,"parentNodes":[16]},{"type":"beta","out_nodes":[[992,-1]],"__id":2241,"parentNodes":[993,994]},{"type":"leftadapter","out_nodes":[[988,-1]],"__id":2242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[991,373]],"__id":2247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[991,374]],"__id":2251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2252,"parentNodes":[996],"index":112,"rule":{"name":"Bootstrap462","pattern":{"type":"object","id":415,"cls":"Fibonacci462","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap462"},{"type":"beta","out_nodes":[[995,-1]],"__id":2253,"parentNodes":[997,998]},{"type":"rightadapter","out_nodes":[[996,375]],"__id":2258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[996,376]],"__id":2262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2263,"parentNodes":[1000],"index":113,"rule":{"name":"Recurse462","pattern":{"type":"composite","id":418,"leftPattern":{"type":"not","id":416,"cls":"Fibonacci462","alias":"f"},"rightPattern":{"type":"object","id":417,"cls":"Fibonacci462","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci462 = defined.get('Fibonacci462');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci462(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse462"},{"type":"beta","out_nodes":[[999,-1]],"__id":2264,"parentNodes":[1001,1002]},{"type":"rightadapter","out_nodes":[[1000,377]],"__id":2268,"parentNodes":[37]},{"type":"not","out_nodes":[[1003,-1]],"__id":2269,"parentNodes":[1004,1005],"constraint":{"type":"join-reference","out_nodes":[],"__id":2270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1000,-1]],"__id":2271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1002,378]],"__id":2275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1002,379]],"__id":2279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2280,"parentNodes":[1007],"index":114,"rule":{"name":"Calculate461","pattern":{"type":"composite","id":425,"leftPattern":{"type":"composite","id":424,"leftPattern":{"type":"composite","id":423,"leftPattern":{"type":"object","id":419,"cls":"Fibonacci461","alias":"f1"},"rightPattern":{"type":"object","id":420,"cls":"Fibonacci461","alias":"f2"}},"rightPattern":{"type":"object","id":421,"cls":"Fibonacci461","alias":"f3"}},"rightPattern":{"type":"object","id":422,"cls":"Result461","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate461"},{"type":"beta","out_nodes":[[1006,-1]],"__id":2281,"parentNodes":[1009,1010]},{"type":"type","out_nodes":[[3,380]],"__id":2282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result461"}},{"type":"rightadapter","out_nodes":[[1007,380]],"__id":2285,"parentNodes":[4]},{"type":"join","out_nodes":[[1011,-1]],"__id":2286,"parentNodes":[1013,1014],"constraint":{"type":"join-reference","out_nodes":[],"__id":2287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1007,-1]],"__id":2288,"parentNodes":[]},{"type":"type","out_nodes":[[9,381],[14,382],[20,383],[30,385],[20,387],[30,388]],"__id":2289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci461"}},{"type":"rightadapter","out_nodes":[[1010,381]],"__id":2292,"parentNodes":[10]},{"type":"join","out_nodes":[[1015,-1]],"__id":2293,"parentNodes":[1016,1017],"constraint":{"type":"join-reference","out_nodes":[],"__id":2294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1010,-1]],"__id":2295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1014,382]],"__id":2300,"parentNodes":[16]},{"type":"beta","out_nodes":[[1018,-1]],"__id":2301,"parentNodes":[1019,1020]},{"type":"leftadapter","out_nodes":[[1014,-1]],"__id":2302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1017,383]],"__id":2307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1017,384]],"__id":2311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2312,"parentNodes":[1022],"index":115,"rule":{"name":"Bootstrap461","pattern":{"type":"object","id":426,"cls":"Fibonacci461","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap461"},{"type":"beta","out_nodes":[[1021,-1]],"__id":2313,"parentNodes":[1023,1024]},{"type":"rightadapter","out_nodes":[[1022,385]],"__id":2318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1022,386]],"__id":2322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2323,"parentNodes":[1026],"index":116,"rule":{"name":"Recurse461","pattern":{"type":"composite","id":429,"leftPattern":{"type":"not","id":427,"cls":"Fibonacci461","alias":"f"},"rightPattern":{"type":"object","id":428,"cls":"Fibonacci461","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci461 = defined.get('Fibonacci461');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci461(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse461"},{"type":"beta","out_nodes":[[1025,-1]],"__id":2324,"parentNodes":[1027,1028]},{"type":"rightadapter","out_nodes":[[1026,387]],"__id":2328,"parentNodes":[37]},{"type":"not","out_nodes":[[1029,-1]],"__id":2329,"parentNodes":[1030,1031],"constraint":{"type":"join-reference","out_nodes":[],"__id":2330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1026,-1]],"__id":2331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1028,388]],"__id":2335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1028,389]],"__id":2339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2340,"parentNodes":[1033],"index":117,"rule":{"name":"Calculate460","pattern":{"type":"composite","id":436,"leftPattern":{"type":"composite","id":435,"leftPattern":{"type":"composite","id":434,"leftPattern":{"type":"object","id":430,"cls":"Fibonacci460","alias":"f1"},"rightPattern":{"type":"object","id":431,"cls":"Fibonacci460","alias":"f2"}},"rightPattern":{"type":"object","id":432,"cls":"Fibonacci460","alias":"f3"}},"rightPattern":{"type":"object","id":433,"cls":"Result460","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate460"},{"type":"beta","out_nodes":[[1032,-1]],"__id":2341,"parentNodes":[1035,1036]},{"type":"type","out_nodes":[[3,390]],"__id":2342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result460"}},{"type":"rightadapter","out_nodes":[[1033,390]],"__id":2345,"parentNodes":[4]},{"type":"join","out_nodes":[[1037,-1]],"__id":2346,"parentNodes":[1039,1040],"constraint":{"type":"join-reference","out_nodes":[],"__id":2347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1033,-1]],"__id":2348,"parentNodes":[]},{"type":"type","out_nodes":[[9,391],[14,392],[20,393],[30,395],[20,397],[30,398]],"__id":2349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci460"}},{"type":"rightadapter","out_nodes":[[1036,391]],"__id":2352,"parentNodes":[10]},{"type":"join","out_nodes":[[1041,-1]],"__id":2353,"parentNodes":[1042,1043],"constraint":{"type":"join-reference","out_nodes":[],"__id":2354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1036,-1]],"__id":2355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1040,392]],"__id":2360,"parentNodes":[16]},{"type":"beta","out_nodes":[[1044,-1]],"__id":2361,"parentNodes":[1045,1046]},{"type":"leftadapter","out_nodes":[[1040,-1]],"__id":2362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1043,393]],"__id":2367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1043,394]],"__id":2371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2372,"parentNodes":[1048],"index":118,"rule":{"name":"Bootstrap460","pattern":{"type":"object","id":437,"cls":"Fibonacci460","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap460"},{"type":"beta","out_nodes":[[1047,-1]],"__id":2373,"parentNodes":[1049,1050]},{"type":"rightadapter","out_nodes":[[1048,395]],"__id":2378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1048,396]],"__id":2382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2383,"parentNodes":[1052],"index":119,"rule":{"name":"Recurse460","pattern":{"type":"composite","id":440,"leftPattern":{"type":"not","id":438,"cls":"Fibonacci460","alias":"f"},"rightPattern":{"type":"object","id":439,"cls":"Fibonacci460","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');let Fibonacci460 = defined.get('Fibonacci460');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci460(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse460"},{"type":"beta","out_nodes":[[1051,-1]],"__id":2384,"parentNodes":[1053,1054]},{"type":"rightadapter","out_nodes":[[1052,397]],"__id":2388,"parentNodes":[37]},{"type":"not","out_nodes":[[1055,-1]],"__id":2389,"parentNodes":[1056,1057],"constraint":{"type":"join-reference","out_nodes":[],"__id":2390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1052,-1]],"__id":2391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1054,398]],"__id":2395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1054,399]],"__id":2399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2400,"parentNodes":[1059],"index":120,"rule":{"name":"Calculate459","pattern":{"type":"composite","id":447,"leftPattern":{"type":"composite","id":446,"leftPattern":{"type":"composite","id":445,"leftPattern":{"type":"object","id":441,"cls":"Fibonacci459","alias":"f1"},"rightPattern":{"type":"object","id":442,"cls":"Fibonacci459","alias":"f2"}},"rightPattern":{"type":"object","id":443,"cls":"Fibonacci459","alias":"f3"}},"rightPattern":{"type":"object","id":444,"cls":"Result459","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate459"},{"type":"beta","out_nodes":[[1058,-1]],"__id":2401,"parentNodes":[1061,1062]},{"type":"type","out_nodes":[[3,400]],"__id":2402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result459"}},{"type":"rightadapter","out_nodes":[[1059,400]],"__id":2405,"parentNodes":[4]},{"type":"join","out_nodes":[[1063,-1]],"__id":2406,"parentNodes":[1065,1066],"constraint":{"type":"join-reference","out_nodes":[],"__id":2407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1059,-1]],"__id":2408,"parentNodes":[]},{"type":"type","out_nodes":[[9,401],[14,402],[20,403],[30,405],[20,407],[30,408]],"__id":2409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci459"}},{"type":"rightadapter","out_nodes":[[1062,401]],"__id":2412,"parentNodes":[10]},{"type":"join","out_nodes":[[1067,-1]],"__id":2413,"parentNodes":[1068,1069],"constraint":{"type":"join-reference","out_nodes":[],"__id":2414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1062,-1]],"__id":2415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1066,402]],"__id":2420,"parentNodes":[16]},{"type":"beta","out_nodes":[[1070,-1]],"__id":2421,"parentNodes":[1071,1072]},{"type":"leftadapter","out_nodes":[[1066,-1]],"__id":2422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1069,403]],"__id":2427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1069,404]],"__id":2431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2432,"parentNodes":[1074],"index":121,"rule":{"name":"Bootstrap459","pattern":{"type":"object","id":448,"cls":"Fibonacci459","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap459"},{"type":"beta","out_nodes":[[1073,-1]],"__id":2433,"parentNodes":[1075,1076]},{"type":"rightadapter","out_nodes":[[1074,405]],"__id":2438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1074,406]],"__id":2442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2443,"parentNodes":[1078],"index":122,"rule":{"name":"Recurse459","pattern":{"type":"composite","id":451,"leftPattern":{"type":"not","id":449,"cls":"Fibonacci459","alias":"f"},"rightPattern":{"type":"object","id":450,"cls":"Fibonacci459","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci459 = defined.get('Fibonacci459');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci459(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse459"},{"type":"beta","out_nodes":[[1077,-1]],"__id":2444,"parentNodes":[1079,1080]},{"type":"rightadapter","out_nodes":[[1078,407]],"__id":2448,"parentNodes":[37]},{"type":"not","out_nodes":[[1081,-1]],"__id":2449,"parentNodes":[1082,1083],"constraint":{"type":"join-reference","out_nodes":[],"__id":2450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1078,-1]],"__id":2451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1080,408]],"__id":2455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1080,409]],"__id":2459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2460,"parentNodes":[1085],"index":123,"rule":{"name":"Calculate458","pattern":{"type":"composite","id":458,"leftPattern":{"type":"composite","id":457,"leftPattern":{"type":"composite","id":456,"leftPattern":{"type":"object","id":452,"cls":"Fibonacci458","alias":"f1"},"rightPattern":{"type":"object","id":453,"cls":"Fibonacci458","alias":"f2"}},"rightPattern":{"type":"object","id":454,"cls":"Fibonacci458","alias":"f3"}},"rightPattern":{"type":"object","id":455,"cls":"Result458","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate458"},{"type":"beta","out_nodes":[[1084,-1]],"__id":2461,"parentNodes":[1087,1088]},{"type":"type","out_nodes":[[3,410]],"__id":2462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result458"}},{"type":"rightadapter","out_nodes":[[1085,410]],"__id":2465,"parentNodes":[4]},{"type":"join","out_nodes":[[1089,-1]],"__id":2466,"parentNodes":[1091,1092],"constraint":{"type":"join-reference","out_nodes":[],"__id":2467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1085,-1]],"__id":2468,"parentNodes":[]},{"type":"type","out_nodes":[[9,411],[14,412],[20,413],[30,415],[20,417],[30,418]],"__id":2469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci458"}},{"type":"rightadapter","out_nodes":[[1088,411]],"__id":2472,"parentNodes":[10]},{"type":"join","out_nodes":[[1093,-1]],"__id":2473,"parentNodes":[1094,1095],"constraint":{"type":"join-reference","out_nodes":[],"__id":2474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1088,-1]],"__id":2475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1092,412]],"__id":2480,"parentNodes":[16]},{"type":"beta","out_nodes":[[1096,-1]],"__id":2481,"parentNodes":[1097,1098]},{"type":"leftadapter","out_nodes":[[1092,-1]],"__id":2482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1095,413]],"__id":2487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1095,414]],"__id":2491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2492,"parentNodes":[1100],"index":124,"rule":{"name":"Bootstrap458","pattern":{"type":"object","id":459,"cls":"Fibonacci458","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap458"},{"type":"beta","out_nodes":[[1099,-1]],"__id":2493,"parentNodes":[1101,1102]},{"type":"rightadapter","out_nodes":[[1100,415]],"__id":2498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1100,416]],"__id":2502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2503,"parentNodes":[1104],"index":125,"rule":{"name":"Recurse458","pattern":{"type":"composite","id":462,"leftPattern":{"type":"not","id":460,"cls":"Fibonacci458","alias":"f"},"rightPattern":{"type":"object","id":461,"cls":"Fibonacci458","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci458 = defined.get('Fibonacci458');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci458(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse458"},{"type":"beta","out_nodes":[[1103,-1]],"__id":2504,"parentNodes":[1105,1106]},{"type":"rightadapter","out_nodes":[[1104,417]],"__id":2508,"parentNodes":[37]},{"type":"not","out_nodes":[[1107,-1]],"__id":2509,"parentNodes":[1108,1109],"constraint":{"type":"join-reference","out_nodes":[],"__id":2510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1104,-1]],"__id":2511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1106,418]],"__id":2515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1106,419]],"__id":2519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2520,"parentNodes":[1111],"index":126,"rule":{"name":"Calculate457","pattern":{"type":"composite","id":469,"leftPattern":{"type":"composite","id":468,"leftPattern":{"type":"composite","id":467,"leftPattern":{"type":"object","id":463,"cls":"Fibonacci457","alias":"f1"},"rightPattern":{"type":"object","id":464,"cls":"Fibonacci457","alias":"f2"}},"rightPattern":{"type":"object","id":465,"cls":"Fibonacci457","alias":"f3"}},"rightPattern":{"type":"object","id":466,"cls":"Result457","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate457"},{"type":"beta","out_nodes":[[1110,-1]],"__id":2521,"parentNodes":[1113,1114]},{"type":"type","out_nodes":[[3,420]],"__id":2522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result457"}},{"type":"rightadapter","out_nodes":[[1111,420]],"__id":2525,"parentNodes":[4]},{"type":"join","out_nodes":[[1115,-1]],"__id":2526,"parentNodes":[1117,1118],"constraint":{"type":"join-reference","out_nodes":[],"__id":2527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1111,-1]],"__id":2528,"parentNodes":[]},{"type":"type","out_nodes":[[9,421],[14,422],[20,423],[30,425],[20,427],[30,428]],"__id":2529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci457"}},{"type":"rightadapter","out_nodes":[[1114,421]],"__id":2532,"parentNodes":[10]},{"type":"join","out_nodes":[[1119,-1]],"__id":2533,"parentNodes":[1120,1121],"constraint":{"type":"join-reference","out_nodes":[],"__id":2534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1114,-1]],"__id":2535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1118,422]],"__id":2540,"parentNodes":[16]},{"type":"beta","out_nodes":[[1122,-1]],"__id":2541,"parentNodes":[1123,1124]},{"type":"leftadapter","out_nodes":[[1118,-1]],"__id":2542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1121,423]],"__id":2547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1121,424]],"__id":2551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2552,"parentNodes":[1126],"index":127,"rule":{"name":"Bootstrap457","pattern":{"type":"object","id":470,"cls":"Fibonacci457","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap457"},{"type":"beta","out_nodes":[[1125,-1]],"__id":2553,"parentNodes":[1127,1128]},{"type":"rightadapter","out_nodes":[[1126,425]],"__id":2558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1126,426]],"__id":2562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2563,"parentNodes":[1130],"index":128,"rule":{"name":"Recurse457","pattern":{"type":"composite","id":473,"leftPattern":{"type":"not","id":471,"cls":"Fibonacci457","alias":"f"},"rightPattern":{"type":"object","id":472,"cls":"Fibonacci457","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci457 = defined.get('Fibonacci457');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci457(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse457"},{"type":"beta","out_nodes":[[1129,-1]],"__id":2564,"parentNodes":[1131,1132]},{"type":"rightadapter","out_nodes":[[1130,427]],"__id":2568,"parentNodes":[37]},{"type":"not","out_nodes":[[1133,-1]],"__id":2569,"parentNodes":[1134,1135],"constraint":{"type":"join-reference","out_nodes":[],"__id":2570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1130,-1]],"__id":2571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1132,428]],"__id":2575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1132,429]],"__id":2579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2580,"parentNodes":[1137],"index":129,"rule":{"name":"Calculate456","pattern":{"type":"composite","id":480,"leftPattern":{"type":"composite","id":479,"leftPattern":{"type":"composite","id":478,"leftPattern":{"type":"object","id":474,"cls":"Fibonacci456","alias":"f1"},"rightPattern":{"type":"object","id":475,"cls":"Fibonacci456","alias":"f2"}},"rightPattern":{"type":"object","id":476,"cls":"Fibonacci456","alias":"f3"}},"rightPattern":{"type":"object","id":477,"cls":"Result456","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate456"},{"type":"beta","out_nodes":[[1136,-1]],"__id":2581,"parentNodes":[1139,1140]},{"type":"type","out_nodes":[[3,430]],"__id":2582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result456"}},{"type":"rightadapter","out_nodes":[[1137,430]],"__id":2585,"parentNodes":[4]},{"type":"join","out_nodes":[[1141,-1]],"__id":2586,"parentNodes":[1143,1144],"constraint":{"type":"join-reference","out_nodes":[],"__id":2587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1137,-1]],"__id":2588,"parentNodes":[]},{"type":"type","out_nodes":[[9,431],[14,432],[20,433],[30,435],[20,437],[30,438]],"__id":2589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci456"}},{"type":"rightadapter","out_nodes":[[1140,431]],"__id":2592,"parentNodes":[10]},{"type":"join","out_nodes":[[1145,-1]],"__id":2593,"parentNodes":[1146,1147],"constraint":{"type":"join-reference","out_nodes":[],"__id":2594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1140,-1]],"__id":2595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1144,432]],"__id":2600,"parentNodes":[16]},{"type":"beta","out_nodes":[[1148,-1]],"__id":2601,"parentNodes":[1149,1150]},{"type":"leftadapter","out_nodes":[[1144,-1]],"__id":2602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1147,433]],"__id":2607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1147,434]],"__id":2611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2612,"parentNodes":[1152],"index":130,"rule":{"name":"Bootstrap456","pattern":{"type":"object","id":481,"cls":"Fibonacci456","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap456"},{"type":"beta","out_nodes":[[1151,-1]],"__id":2613,"parentNodes":[1153,1154]},{"type":"rightadapter","out_nodes":[[1152,435]],"__id":2618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1152,436]],"__id":2622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2623,"parentNodes":[1156],"index":131,"rule":{"name":"Recurse456","pattern":{"type":"composite","id":484,"leftPattern":{"type":"not","id":482,"cls":"Fibonacci456","alias":"f"},"rightPattern":{"type":"object","id":483,"cls":"Fibonacci456","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci456 = defined.get('Fibonacci456');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci456(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse456"},{"type":"beta","out_nodes":[[1155,-1]],"__id":2624,"parentNodes":[1157,1158]},{"type":"rightadapter","out_nodes":[[1156,437]],"__id":2628,"parentNodes":[37]},{"type":"not","out_nodes":[[1159,-1]],"__id":2629,"parentNodes":[1160,1161],"constraint":{"type":"join-reference","out_nodes":[],"__id":2630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1156,-1]],"__id":2631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1158,438]],"__id":2635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1158,439]],"__id":2639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2640,"parentNodes":[1163],"index":132,"rule":{"name":"Calculate455","pattern":{"type":"composite","id":491,"leftPattern":{"type":"composite","id":490,"leftPattern":{"type":"composite","id":489,"leftPattern":{"type":"object","id":485,"cls":"Fibonacci455","alias":"f1"},"rightPattern":{"type":"object","id":486,"cls":"Fibonacci455","alias":"f2"}},"rightPattern":{"type":"object","id":487,"cls":"Fibonacci455","alias":"f3"}},"rightPattern":{"type":"object","id":488,"cls":"Result455","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate455"},{"type":"beta","out_nodes":[[1162,-1]],"__id":2641,"parentNodes":[1165,1166]},{"type":"type","out_nodes":[[3,440]],"__id":2642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result455"}},{"type":"rightadapter","out_nodes":[[1163,440]],"__id":2645,"parentNodes":[4]},{"type":"join","out_nodes":[[1167,-1]],"__id":2646,"parentNodes":[1169,1170],"constraint":{"type":"join-reference","out_nodes":[],"__id":2647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1163,-1]],"__id":2648,"parentNodes":[]},{"type":"type","out_nodes":[[9,441],[14,442],[20,443],[30,445],[20,447],[30,448]],"__id":2649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci455"}},{"type":"rightadapter","out_nodes":[[1166,441]],"__id":2652,"parentNodes":[10]},{"type":"join","out_nodes":[[1171,-1]],"__id":2653,"parentNodes":[1172,1173],"constraint":{"type":"join-reference","out_nodes":[],"__id":2654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1166,-1]],"__id":2655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1170,442]],"__id":2660,"parentNodes":[16]},{"type":"beta","out_nodes":[[1174,-1]],"__id":2661,"parentNodes":[1175,1176]},{"type":"leftadapter","out_nodes":[[1170,-1]],"__id":2662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1173,443]],"__id":2667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1173,444]],"__id":2671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2672,"parentNodes":[1178],"index":133,"rule":{"name":"Bootstrap455","pattern":{"type":"object","id":492,"cls":"Fibonacci455","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap455"},{"type":"beta","out_nodes":[[1177,-1]],"__id":2673,"parentNodes":[1179,1180]},{"type":"rightadapter","out_nodes":[[1178,445]],"__id":2678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1178,446]],"__id":2682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2683,"parentNodes":[1182],"index":134,"rule":{"name":"Recurse455","pattern":{"type":"composite","id":495,"leftPattern":{"type":"not","id":493,"cls":"Fibonacci455","alias":"f"},"rightPattern":{"type":"object","id":494,"cls":"Fibonacci455","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci455 = defined.get('Fibonacci455');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci455(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse455"},{"type":"beta","out_nodes":[[1181,-1]],"__id":2684,"parentNodes":[1183,1184]},{"type":"rightadapter","out_nodes":[[1182,447]],"__id":2688,"parentNodes":[37]},{"type":"not","out_nodes":[[1185,-1]],"__id":2689,"parentNodes":[1186,1187],"constraint":{"type":"join-reference","out_nodes":[],"__id":2690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1182,-1]],"__id":2691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1184,448]],"__id":2695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1184,449]],"__id":2699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2700,"parentNodes":[1189],"index":135,"rule":{"name":"Calculate454","pattern":{"type":"composite","id":502,"leftPattern":{"type":"composite","id":501,"leftPattern":{"type":"composite","id":500,"leftPattern":{"type":"object","id":496,"cls":"Fibonacci454","alias":"f1"},"rightPattern":{"type":"object","id":497,"cls":"Fibonacci454","alias":"f2"}},"rightPattern":{"type":"object","id":498,"cls":"Fibonacci454","alias":"f3"}},"rightPattern":{"type":"object","id":499,"cls":"Result454","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate454"},{"type":"beta","out_nodes":[[1188,-1]],"__id":2701,"parentNodes":[1191,1192]},{"type":"type","out_nodes":[[3,450]],"__id":2702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result454"}},{"type":"rightadapter","out_nodes":[[1189,450]],"__id":2705,"parentNodes":[4]},{"type":"join","out_nodes":[[1193,-1]],"__id":2706,"parentNodes":[1195,1196],"constraint":{"type":"join-reference","out_nodes":[],"__id":2707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1189,-1]],"__id":2708,"parentNodes":[]},{"type":"type","out_nodes":[[9,451],[14,452],[20,453],[30,455],[20,457],[30,458]],"__id":2709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci454"}},{"type":"rightadapter","out_nodes":[[1192,451]],"__id":2712,"parentNodes":[10]},{"type":"join","out_nodes":[[1197,-1]],"__id":2713,"parentNodes":[1198,1199],"constraint":{"type":"join-reference","out_nodes":[],"__id":2714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1192,-1]],"__id":2715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1196,452]],"__id":2720,"parentNodes":[16]},{"type":"beta","out_nodes":[[1200,-1]],"__id":2721,"parentNodes":[1201,1202]},{"type":"leftadapter","out_nodes":[[1196,-1]],"__id":2722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1199,453]],"__id":2727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1199,454]],"__id":2731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2732,"parentNodes":[1204],"index":136,"rule":{"name":"Bootstrap454","pattern":{"type":"object","id":503,"cls":"Fibonacci454","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap454"},{"type":"beta","out_nodes":[[1203,-1]],"__id":2733,"parentNodes":[1205,1206]},{"type":"rightadapter","out_nodes":[[1204,455]],"__id":2738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1204,456]],"__id":2742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2743,"parentNodes":[1208],"index":137,"rule":{"name":"Recurse454","pattern":{"type":"composite","id":506,"leftPattern":{"type":"not","id":504,"cls":"Fibonacci454","alias":"f"},"rightPattern":{"type":"object","id":505,"cls":"Fibonacci454","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci454 = defined.get('Fibonacci454');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci454(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse454"},{"type":"beta","out_nodes":[[1207,-1]],"__id":2744,"parentNodes":[1209,1210]},{"type":"rightadapter","out_nodes":[[1208,457]],"__id":2748,"parentNodes":[37]},{"type":"not","out_nodes":[[1211,-1]],"__id":2749,"parentNodes":[1212,1213],"constraint":{"type":"join-reference","out_nodes":[],"__id":2750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1208,-1]],"__id":2751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1210,458]],"__id":2755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1210,459]],"__id":2759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2760,"parentNodes":[1215],"index":138,"rule":{"name":"Calculate453","pattern":{"type":"composite","id":513,"leftPattern":{"type":"composite","id":512,"leftPattern":{"type":"composite","id":511,"leftPattern":{"type":"object","id":507,"cls":"Fibonacci453","alias":"f1"},"rightPattern":{"type":"object","id":508,"cls":"Fibonacci453","alias":"f2"}},"rightPattern":{"type":"object","id":509,"cls":"Fibonacci453","alias":"f3"}},"rightPattern":{"type":"object","id":510,"cls":"Result453","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate453"},{"type":"beta","out_nodes":[[1214,-1]],"__id":2761,"parentNodes":[1217,1218]},{"type":"type","out_nodes":[[3,460]],"__id":2762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result453"}},{"type":"rightadapter","out_nodes":[[1215,460]],"__id":2765,"parentNodes":[4]},{"type":"join","out_nodes":[[1219,-1]],"__id":2766,"parentNodes":[1221,1222],"constraint":{"type":"join-reference","out_nodes":[],"__id":2767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1215,-1]],"__id":2768,"parentNodes":[]},{"type":"type","out_nodes":[[9,461],[14,462],[20,463],[30,465],[20,467],[30,468]],"__id":2769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci453"}},{"type":"rightadapter","out_nodes":[[1218,461]],"__id":2772,"parentNodes":[10]},{"type":"join","out_nodes":[[1223,-1]],"__id":2773,"parentNodes":[1224,1225],"constraint":{"type":"join-reference","out_nodes":[],"__id":2774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1218,-1]],"__id":2775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1222,462]],"__id":2780,"parentNodes":[16]},{"type":"beta","out_nodes":[[1226,-1]],"__id":2781,"parentNodes":[1227,1228]},{"type":"leftadapter","out_nodes":[[1222,-1]],"__id":2782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1225,463]],"__id":2787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1225,464]],"__id":2791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2792,"parentNodes":[1230],"index":139,"rule":{"name":"Bootstrap453","pattern":{"type":"object","id":514,"cls":"Fibonacci453","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap453"},{"type":"beta","out_nodes":[[1229,-1]],"__id":2793,"parentNodes":[1231,1232]},{"type":"rightadapter","out_nodes":[[1230,465]],"__id":2798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1230,466]],"__id":2802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2803,"parentNodes":[1234],"index":140,"rule":{"name":"Recurse453","pattern":{"type":"composite","id":517,"leftPattern":{"type":"not","id":515,"cls":"Fibonacci453","alias":"f"},"rightPattern":{"type":"object","id":516,"cls":"Fibonacci453","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci453 = defined.get('Fibonacci453');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci453(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse453"},{"type":"beta","out_nodes":[[1233,-1]],"__id":2804,"parentNodes":[1235,1236]},{"type":"rightadapter","out_nodes":[[1234,467]],"__id":2808,"parentNodes":[37]},{"type":"not","out_nodes":[[1237,-1]],"__id":2809,"parentNodes":[1238,1239],"constraint":{"type":"join-reference","out_nodes":[],"__id":2810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1234,-1]],"__id":2811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1236,468]],"__id":2815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1236,469]],"__id":2819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2820,"parentNodes":[1241],"index":141,"rule":{"name":"Calculate452","pattern":{"type":"composite","id":524,"leftPattern":{"type":"composite","id":523,"leftPattern":{"type":"composite","id":522,"leftPattern":{"type":"object","id":518,"cls":"Fibonacci452","alias":"f1"},"rightPattern":{"type":"object","id":519,"cls":"Fibonacci452","alias":"f2"}},"rightPattern":{"type":"object","id":520,"cls":"Fibonacci452","alias":"f3"}},"rightPattern":{"type":"object","id":521,"cls":"Result452","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate452"},{"type":"beta","out_nodes":[[1240,-1]],"__id":2821,"parentNodes":[1243,1244]},{"type":"type","out_nodes":[[3,470]],"__id":2822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result452"}},{"type":"rightadapter","out_nodes":[[1241,470]],"__id":2825,"parentNodes":[4]},{"type":"join","out_nodes":[[1245,-1]],"__id":2826,"parentNodes":[1247,1248],"constraint":{"type":"join-reference","out_nodes":[],"__id":2827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1241,-1]],"__id":2828,"parentNodes":[]},{"type":"type","out_nodes":[[9,471],[14,472],[20,473],[30,475],[20,477],[30,478]],"__id":2829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci452"}},{"type":"rightadapter","out_nodes":[[1244,471]],"__id":2832,"parentNodes":[10]},{"type":"join","out_nodes":[[1249,-1]],"__id":2833,"parentNodes":[1250,1251],"constraint":{"type":"join-reference","out_nodes":[],"__id":2834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1244,-1]],"__id":2835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1248,472]],"__id":2840,"parentNodes":[16]},{"type":"beta","out_nodes":[[1252,-1]],"__id":2841,"parentNodes":[1253,1254]},{"type":"leftadapter","out_nodes":[[1248,-1]],"__id":2842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1251,473]],"__id":2847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1251,474]],"__id":2851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2852,"parentNodes":[1256],"index":142,"rule":{"name":"Bootstrap452","pattern":{"type":"object","id":525,"cls":"Fibonacci452","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap452"},{"type":"beta","out_nodes":[[1255,-1]],"__id":2853,"parentNodes":[1257,1258]},{"type":"rightadapter","out_nodes":[[1256,475]],"__id":2858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1256,476]],"__id":2862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2863,"parentNodes":[1260],"index":143,"rule":{"name":"Recurse452","pattern":{"type":"composite","id":528,"leftPattern":{"type":"not","id":526,"cls":"Fibonacci452","alias":"f"},"rightPattern":{"type":"object","id":527,"cls":"Fibonacci452","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci452 = defined.get('Fibonacci452');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci452(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse452"},{"type":"beta","out_nodes":[[1259,-1]],"__id":2864,"parentNodes":[1261,1262]},{"type":"rightadapter","out_nodes":[[1260,477]],"__id":2868,"parentNodes":[37]},{"type":"not","out_nodes":[[1263,-1]],"__id":2869,"parentNodes":[1264,1265],"constraint":{"type":"join-reference","out_nodes":[],"__id":2870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1260,-1]],"__id":2871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1262,478]],"__id":2875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1262,479]],"__id":2879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2880,"parentNodes":[1267],"index":144,"rule":{"name":"Calculate451","pattern":{"type":"composite","id":535,"leftPattern":{"type":"composite","id":534,"leftPattern":{"type":"composite","id":533,"leftPattern":{"type":"object","id":529,"cls":"Fibonacci451","alias":"f1"},"rightPattern":{"type":"object","id":530,"cls":"Fibonacci451","alias":"f2"}},"rightPattern":{"type":"object","id":531,"cls":"Fibonacci451","alias":"f3"}},"rightPattern":{"type":"object","id":532,"cls":"Result451","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate451"},{"type":"beta","out_nodes":[[1266,-1]],"__id":2881,"parentNodes":[1269,1270]},{"type":"type","out_nodes":[[3,480]],"__id":2882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result451"}},{"type":"rightadapter","out_nodes":[[1267,480]],"__id":2885,"parentNodes":[4]},{"type":"join","out_nodes":[[1271,-1]],"__id":2886,"parentNodes":[1273,1274],"constraint":{"type":"join-reference","out_nodes":[],"__id":2887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1267,-1]],"__id":2888,"parentNodes":[]},{"type":"type","out_nodes":[[9,481],[14,482],[20,483],[30,485],[20,487],[30,488]],"__id":2889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci451"}},{"type":"rightadapter","out_nodes":[[1270,481]],"__id":2892,"parentNodes":[10]},{"type":"join","out_nodes":[[1275,-1]],"__id":2893,"parentNodes":[1276,1277],"constraint":{"type":"join-reference","out_nodes":[],"__id":2894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1270,-1]],"__id":2895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1274,482]],"__id":2900,"parentNodes":[16]},{"type":"beta","out_nodes":[[1278,-1]],"__id":2901,"parentNodes":[1279,1280]},{"type":"leftadapter","out_nodes":[[1274,-1]],"__id":2902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1277,483]],"__id":2907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1277,484]],"__id":2911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2912,"parentNodes":[1282],"index":145,"rule":{"name":"Bootstrap451","pattern":{"type":"object","id":536,"cls":"Fibonacci451","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap451"},{"type":"beta","out_nodes":[[1281,-1]],"__id":2913,"parentNodes":[1283,1284]},{"type":"rightadapter","out_nodes":[[1282,485]],"__id":2918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1282,486]],"__id":2922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2923,"parentNodes":[1286],"index":146,"rule":{"name":"Recurse451","pattern":{"type":"composite","id":539,"leftPattern":{"type":"not","id":537,"cls":"Fibonacci451","alias":"f"},"rightPattern":{"type":"object","id":538,"cls":"Fibonacci451","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci451 = defined.get('Fibonacci451');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci451(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse451"},{"type":"beta","out_nodes":[[1285,-1]],"__id":2924,"parentNodes":[1287,1288]},{"type":"rightadapter","out_nodes":[[1286,487]],"__id":2928,"parentNodes":[37]},{"type":"not","out_nodes":[[1289,-1]],"__id":2929,"parentNodes":[1290,1291],"constraint":{"type":"join-reference","out_nodes":[],"__id":2930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1286,-1]],"__id":2931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1288,488]],"__id":2935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1288,489]],"__id":2939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2940,"parentNodes":[1293],"index":147,"rule":{"name":"Calculate450","pattern":{"type":"composite","id":546,"leftPattern":{"type":"composite","id":545,"leftPattern":{"type":"composite","id":544,"leftPattern":{"type":"object","id":540,"cls":"Fibonacci450","alias":"f1"},"rightPattern":{"type":"object","id":541,"cls":"Fibonacci450","alias":"f2"}},"rightPattern":{"type":"object","id":542,"cls":"Fibonacci450","alias":"f3"}},"rightPattern":{"type":"object","id":543,"cls":"Result450","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate450"},{"type":"beta","out_nodes":[[1292,-1]],"__id":2941,"parentNodes":[1295,1296]},{"type":"type","out_nodes":[[3,490]],"__id":2942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result450"}},{"type":"rightadapter","out_nodes":[[1293,490]],"__id":2945,"parentNodes":[4]},{"type":"join","out_nodes":[[1297,-1]],"__id":2946,"parentNodes":[1299,1300],"constraint":{"type":"join-reference","out_nodes":[],"__id":2947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1293,-1]],"__id":2948,"parentNodes":[]},{"type":"type","out_nodes":[[9,491],[14,492],[20,493],[30,495],[20,497],[30,498]],"__id":2949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci450"}},{"type":"rightadapter","out_nodes":[[1296,491]],"__id":2952,"parentNodes":[10]},{"type":"join","out_nodes":[[1301,-1]],"__id":2953,"parentNodes":[1302,1303],"constraint":{"type":"join-reference","out_nodes":[],"__id":2954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1296,-1]],"__id":2955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1300,492]],"__id":2960,"parentNodes":[16]},{"type":"beta","out_nodes":[[1304,-1]],"__id":2961,"parentNodes":[1305,1306]},{"type":"leftadapter","out_nodes":[[1300,-1]],"__id":2962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1303,493]],"__id":2967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1303,494]],"__id":2971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2972,"parentNodes":[1308],"index":148,"rule":{"name":"Bootstrap450","pattern":{"type":"object","id":547,"cls":"Fibonacci450","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap450"},{"type":"beta","out_nodes":[[1307,-1]],"__id":2973,"parentNodes":[1309,1310]},{"type":"rightadapter","out_nodes":[[1308,495]],"__id":2978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1308,496]],"__id":2982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":2983,"parentNodes":[1312],"index":149,"rule":{"name":"Recurse450","pattern":{"type":"composite","id":550,"leftPattern":{"type":"not","id":548,"cls":"Fibonacci450","alias":"f"},"rightPattern":{"type":"object","id":549,"cls":"Fibonacci450","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');let Fibonacci450 = defined.get('Fibonacci450');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci450(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse450"},{"type":"beta","out_nodes":[[1311,-1]],"__id":2984,"parentNodes":[1313,1314]},{"type":"rightadapter","out_nodes":[[1312,497]],"__id":2988,"parentNodes":[37]},{"type":"not","out_nodes":[[1315,-1]],"__id":2989,"parentNodes":[1316,1317],"constraint":{"type":"join-reference","out_nodes":[],"__id":2990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1312,-1]],"__id":2991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1314,498]],"__id":2995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1314,499]],"__id":2999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3000,"parentNodes":[1319],"index":150,"rule":{"name":"Calculate449","pattern":{"type":"composite","id":557,"leftPattern":{"type":"composite","id":556,"leftPattern":{"type":"composite","id":555,"leftPattern":{"type":"object","id":551,"cls":"Fibonacci449","alias":"f1"},"rightPattern":{"type":"object","id":552,"cls":"Fibonacci449","alias":"f2"}},"rightPattern":{"type":"object","id":553,"cls":"Fibonacci449","alias":"f3"}},"rightPattern":{"type":"object","id":554,"cls":"Result449","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate449"},{"type":"beta","out_nodes":[[1318,-1]],"__id":3001,"parentNodes":[1321,1322]},{"type":"type","out_nodes":[[3,500]],"__id":3002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result449"}},{"type":"rightadapter","out_nodes":[[1319,500]],"__id":3005,"parentNodes":[4]},{"type":"join","out_nodes":[[1323,-1]],"__id":3006,"parentNodes":[1325,1326],"constraint":{"type":"join-reference","out_nodes":[],"__id":3007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1319,-1]],"__id":3008,"parentNodes":[]},{"type":"type","out_nodes":[[9,501],[14,502],[20,503],[30,505],[20,507],[30,508]],"__id":3009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci449"}},{"type":"rightadapter","out_nodes":[[1322,501]],"__id":3012,"parentNodes":[10]},{"type":"join","out_nodes":[[1327,-1]],"__id":3013,"parentNodes":[1328,1329],"constraint":{"type":"join-reference","out_nodes":[],"__id":3014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1322,-1]],"__id":3015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1326,502]],"__id":3020,"parentNodes":[16]},{"type":"beta","out_nodes":[[1330,-1]],"__id":3021,"parentNodes":[1331,1332]},{"type":"leftadapter","out_nodes":[[1326,-1]],"__id":3022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1329,503]],"__id":3027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1329,504]],"__id":3031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3032,"parentNodes":[1334],"index":151,"rule":{"name":"Bootstrap449","pattern":{"type":"object","id":558,"cls":"Fibonacci449","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap449"},{"type":"beta","out_nodes":[[1333,-1]],"__id":3033,"parentNodes":[1335,1336]},{"type":"rightadapter","out_nodes":[[1334,505]],"__id":3038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1334,506]],"__id":3042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3043,"parentNodes":[1338],"index":152,"rule":{"name":"Recurse449","pattern":{"type":"composite","id":561,"leftPattern":{"type":"not","id":559,"cls":"Fibonacci449","alias":"f"},"rightPattern":{"type":"object","id":560,"cls":"Fibonacci449","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci449 = defined.get('Fibonacci449');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci449(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse449"},{"type":"beta","out_nodes":[[1337,-1]],"__id":3044,"parentNodes":[1339,1340]},{"type":"rightadapter","out_nodes":[[1338,507]],"__id":3048,"parentNodes":[37]},{"type":"not","out_nodes":[[1341,-1]],"__id":3049,"parentNodes":[1342,1343],"constraint":{"type":"join-reference","out_nodes":[],"__id":3050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1338,-1]],"__id":3051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1340,508]],"__id":3055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1340,509]],"__id":3059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3060,"parentNodes":[1345],"index":153,"rule":{"name":"Calculate448","pattern":{"type":"composite","id":568,"leftPattern":{"type":"composite","id":567,"leftPattern":{"type":"composite","id":566,"leftPattern":{"type":"object","id":562,"cls":"Fibonacci448","alias":"f1"},"rightPattern":{"type":"object","id":563,"cls":"Fibonacci448","alias":"f2"}},"rightPattern":{"type":"object","id":564,"cls":"Fibonacci448","alias":"f3"}},"rightPattern":{"type":"object","id":565,"cls":"Result448","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate448"},{"type":"beta","out_nodes":[[1344,-1]],"__id":3061,"parentNodes":[1347,1348]},{"type":"type","out_nodes":[[3,510]],"__id":3062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result448"}},{"type":"rightadapter","out_nodes":[[1345,510]],"__id":3065,"parentNodes":[4]},{"type":"join","out_nodes":[[1349,-1]],"__id":3066,"parentNodes":[1351,1352],"constraint":{"type":"join-reference","out_nodes":[],"__id":3067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1345,-1]],"__id":3068,"parentNodes":[]},{"type":"type","out_nodes":[[9,511],[14,512],[20,513],[30,515],[20,517],[30,518]],"__id":3069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci448"}},{"type":"rightadapter","out_nodes":[[1348,511]],"__id":3072,"parentNodes":[10]},{"type":"join","out_nodes":[[1353,-1]],"__id":3073,"parentNodes":[1354,1355],"constraint":{"type":"join-reference","out_nodes":[],"__id":3074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1348,-1]],"__id":3075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1352,512]],"__id":3080,"parentNodes":[16]},{"type":"beta","out_nodes":[[1356,-1]],"__id":3081,"parentNodes":[1357,1358]},{"type":"leftadapter","out_nodes":[[1352,-1]],"__id":3082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1355,513]],"__id":3087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1355,514]],"__id":3091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3092,"parentNodes":[1360],"index":154,"rule":{"name":"Bootstrap448","pattern":{"type":"object","id":569,"cls":"Fibonacci448","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap448"},{"type":"beta","out_nodes":[[1359,-1]],"__id":3093,"parentNodes":[1361,1362]},{"type":"rightadapter","out_nodes":[[1360,515]],"__id":3098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1360,516]],"__id":3102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3103,"parentNodes":[1364],"index":155,"rule":{"name":"Recurse448","pattern":{"type":"composite","id":572,"leftPattern":{"type":"not","id":570,"cls":"Fibonacci448","alias":"f"},"rightPattern":{"type":"object","id":571,"cls":"Fibonacci448","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci448 = defined.get('Fibonacci448');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci448(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse448"},{"type":"beta","out_nodes":[[1363,-1]],"__id":3104,"parentNodes":[1365,1366]},{"type":"rightadapter","out_nodes":[[1364,517]],"__id":3108,"parentNodes":[37]},{"type":"not","out_nodes":[[1367,-1]],"__id":3109,"parentNodes":[1368,1369],"constraint":{"type":"join-reference","out_nodes":[],"__id":3110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1364,-1]],"__id":3111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1366,518]],"__id":3115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1366,519]],"__id":3119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3120,"parentNodes":[1371],"index":156,"rule":{"name":"Calculate447","pattern":{"type":"composite","id":579,"leftPattern":{"type":"composite","id":578,"leftPattern":{"type":"composite","id":577,"leftPattern":{"type":"object","id":573,"cls":"Fibonacci447","alias":"f1"},"rightPattern":{"type":"object","id":574,"cls":"Fibonacci447","alias":"f2"}},"rightPattern":{"type":"object","id":575,"cls":"Fibonacci447","alias":"f3"}},"rightPattern":{"type":"object","id":576,"cls":"Result447","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate447"},{"type":"beta","out_nodes":[[1370,-1]],"__id":3121,"parentNodes":[1373,1374]},{"type":"type","out_nodes":[[3,520]],"__id":3122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result447"}},{"type":"rightadapter","out_nodes":[[1371,520]],"__id":3125,"parentNodes":[4]},{"type":"join","out_nodes":[[1375,-1]],"__id":3126,"parentNodes":[1377,1378],"constraint":{"type":"join-reference","out_nodes":[],"__id":3127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1371,-1]],"__id":3128,"parentNodes":[]},{"type":"type","out_nodes":[[9,521],[14,522],[20,523],[30,525],[20,527],[30,528]],"__id":3129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci447"}},{"type":"rightadapter","out_nodes":[[1374,521]],"__id":3132,"parentNodes":[10]},{"type":"join","out_nodes":[[1379,-1]],"__id":3133,"parentNodes":[1380,1381],"constraint":{"type":"join-reference","out_nodes":[],"__id":3134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1374,-1]],"__id":3135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1378,522]],"__id":3140,"parentNodes":[16]},{"type":"beta","out_nodes":[[1382,-1]],"__id":3141,"parentNodes":[1383,1384]},{"type":"leftadapter","out_nodes":[[1378,-1]],"__id":3142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1381,523]],"__id":3147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1381,524]],"__id":3151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3152,"parentNodes":[1386],"index":157,"rule":{"name":"Bootstrap447","pattern":{"type":"object","id":580,"cls":"Fibonacci447","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap447"},{"type":"beta","out_nodes":[[1385,-1]],"__id":3153,"parentNodes":[1387,1388]},{"type":"rightadapter","out_nodes":[[1386,525]],"__id":3158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1386,526]],"__id":3162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3163,"parentNodes":[1390],"index":158,"rule":{"name":"Recurse447","pattern":{"type":"composite","id":583,"leftPattern":{"type":"not","id":581,"cls":"Fibonacci447","alias":"f"},"rightPattern":{"type":"object","id":582,"cls":"Fibonacci447","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci447 = defined.get('Fibonacci447');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci447(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse447"},{"type":"beta","out_nodes":[[1389,-1]],"__id":3164,"parentNodes":[1391,1392]},{"type":"rightadapter","out_nodes":[[1390,527]],"__id":3168,"parentNodes":[37]},{"type":"not","out_nodes":[[1393,-1]],"__id":3169,"parentNodes":[1394,1395],"constraint":{"type":"join-reference","out_nodes":[],"__id":3170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1390,-1]],"__id":3171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1392,528]],"__id":3175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1392,529]],"__id":3179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3180,"parentNodes":[1397],"index":159,"rule":{"name":"Calculate446","pattern":{"type":"composite","id":590,"leftPattern":{"type":"composite","id":589,"leftPattern":{"type":"composite","id":588,"leftPattern":{"type":"object","id":584,"cls":"Fibonacci446","alias":"f1"},"rightPattern":{"type":"object","id":585,"cls":"Fibonacci446","alias":"f2"}},"rightPattern":{"type":"object","id":586,"cls":"Fibonacci446","alias":"f3"}},"rightPattern":{"type":"object","id":587,"cls":"Result446","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate446"},{"type":"beta","out_nodes":[[1396,-1]],"__id":3181,"parentNodes":[1399,1400]},{"type":"type","out_nodes":[[3,530]],"__id":3182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result446"}},{"type":"rightadapter","out_nodes":[[1397,530]],"__id":3185,"parentNodes":[4]},{"type":"join","out_nodes":[[1401,-1]],"__id":3186,"parentNodes":[1403,1404],"constraint":{"type":"join-reference","out_nodes":[],"__id":3187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1397,-1]],"__id":3188,"parentNodes":[]},{"type":"type","out_nodes":[[9,531],[14,532],[20,533],[30,535],[20,537],[30,538]],"__id":3189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci446"}},{"type":"rightadapter","out_nodes":[[1400,531]],"__id":3192,"parentNodes":[10]},{"type":"join","out_nodes":[[1405,-1]],"__id":3193,"parentNodes":[1406,1407],"constraint":{"type":"join-reference","out_nodes":[],"__id":3194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1400,-1]],"__id":3195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1404,532]],"__id":3200,"parentNodes":[16]},{"type":"beta","out_nodes":[[1408,-1]],"__id":3201,"parentNodes":[1409,1410]},{"type":"leftadapter","out_nodes":[[1404,-1]],"__id":3202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1407,533]],"__id":3207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1407,534]],"__id":3211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3212,"parentNodes":[1412],"index":160,"rule":{"name":"Bootstrap446","pattern":{"type":"object","id":591,"cls":"Fibonacci446","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap446"},{"type":"beta","out_nodes":[[1411,-1]],"__id":3213,"parentNodes":[1413,1414]},{"type":"rightadapter","out_nodes":[[1412,535]],"__id":3218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1412,536]],"__id":3222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3223,"parentNodes":[1416],"index":161,"rule":{"name":"Recurse446","pattern":{"type":"composite","id":594,"leftPattern":{"type":"not","id":592,"cls":"Fibonacci446","alias":"f"},"rightPattern":{"type":"object","id":593,"cls":"Fibonacci446","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci446 = defined.get('Fibonacci446');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci446(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse446"},{"type":"beta","out_nodes":[[1415,-1]],"__id":3224,"parentNodes":[1417,1418]},{"type":"rightadapter","out_nodes":[[1416,537]],"__id":3228,"parentNodes":[37]},{"type":"not","out_nodes":[[1419,-1]],"__id":3229,"parentNodes":[1420,1421],"constraint":{"type":"join-reference","out_nodes":[],"__id":3230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1416,-1]],"__id":3231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1418,538]],"__id":3235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1418,539]],"__id":3239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3240,"parentNodes":[1423],"index":162,"rule":{"name":"Calculate445","pattern":{"type":"composite","id":601,"leftPattern":{"type":"composite","id":600,"leftPattern":{"type":"composite","id":599,"leftPattern":{"type":"object","id":595,"cls":"Fibonacci445","alias":"f1"},"rightPattern":{"type":"object","id":596,"cls":"Fibonacci445","alias":"f2"}},"rightPattern":{"type":"object","id":597,"cls":"Fibonacci445","alias":"f3"}},"rightPattern":{"type":"object","id":598,"cls":"Result445","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate445"},{"type":"beta","out_nodes":[[1422,-1]],"__id":3241,"parentNodes":[1425,1426]},{"type":"type","out_nodes":[[3,540]],"__id":3242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result445"}},{"type":"rightadapter","out_nodes":[[1423,540]],"__id":3245,"parentNodes":[4]},{"type":"join","out_nodes":[[1427,-1]],"__id":3246,"parentNodes":[1429,1430],"constraint":{"type":"join-reference","out_nodes":[],"__id":3247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1423,-1]],"__id":3248,"parentNodes":[]},{"type":"type","out_nodes":[[9,541],[14,542],[20,543],[30,545],[20,547],[30,548]],"__id":3249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci445"}},{"type":"rightadapter","out_nodes":[[1426,541]],"__id":3252,"parentNodes":[10]},{"type":"join","out_nodes":[[1431,-1]],"__id":3253,"parentNodes":[1432,1433],"constraint":{"type":"join-reference","out_nodes":[],"__id":3254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1426,-1]],"__id":3255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1430,542]],"__id":3260,"parentNodes":[16]},{"type":"beta","out_nodes":[[1434,-1]],"__id":3261,"parentNodes":[1435,1436]},{"type":"leftadapter","out_nodes":[[1430,-1]],"__id":3262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1433,543]],"__id":3267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1433,544]],"__id":3271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3272,"parentNodes":[1438],"index":163,"rule":{"name":"Bootstrap445","pattern":{"type":"object","id":602,"cls":"Fibonacci445","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap445"},{"type":"beta","out_nodes":[[1437,-1]],"__id":3273,"parentNodes":[1439,1440]},{"type":"rightadapter","out_nodes":[[1438,545]],"__id":3278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1438,546]],"__id":3282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3283,"parentNodes":[1442],"index":164,"rule":{"name":"Recurse445","pattern":{"type":"composite","id":605,"leftPattern":{"type":"not","id":603,"cls":"Fibonacci445","alias":"f"},"rightPattern":{"type":"object","id":604,"cls":"Fibonacci445","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci445 = defined.get('Fibonacci445');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci445(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse445"},{"type":"beta","out_nodes":[[1441,-1]],"__id":3284,"parentNodes":[1443,1444]},{"type":"rightadapter","out_nodes":[[1442,547]],"__id":3288,"parentNodes":[37]},{"type":"not","out_nodes":[[1445,-1]],"__id":3289,"parentNodes":[1446,1447],"constraint":{"type":"join-reference","out_nodes":[],"__id":3290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1442,-1]],"__id":3291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1444,548]],"__id":3295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1444,549]],"__id":3299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3300,"parentNodes":[1449],"index":165,"rule":{"name":"Calculate444","pattern":{"type":"composite","id":612,"leftPattern":{"type":"composite","id":611,"leftPattern":{"type":"composite","id":610,"leftPattern":{"type":"object","id":606,"cls":"Fibonacci444","alias":"f1"},"rightPattern":{"type":"object","id":607,"cls":"Fibonacci444","alias":"f2"}},"rightPattern":{"type":"object","id":608,"cls":"Fibonacci444","alias":"f3"}},"rightPattern":{"type":"object","id":609,"cls":"Result444","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate444"},{"type":"beta","out_nodes":[[1448,-1]],"__id":3301,"parentNodes":[1451,1452]},{"type":"type","out_nodes":[[3,550]],"__id":3302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result444"}},{"type":"rightadapter","out_nodes":[[1449,550]],"__id":3305,"parentNodes":[4]},{"type":"join","out_nodes":[[1453,-1]],"__id":3306,"parentNodes":[1455,1456],"constraint":{"type":"join-reference","out_nodes":[],"__id":3307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1449,-1]],"__id":3308,"parentNodes":[]},{"type":"type","out_nodes":[[9,551],[14,552],[20,553],[30,555],[20,557],[30,558]],"__id":3309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci444"}},{"type":"rightadapter","out_nodes":[[1452,551]],"__id":3312,"parentNodes":[10]},{"type":"join","out_nodes":[[1457,-1]],"__id":3313,"parentNodes":[1458,1459],"constraint":{"type":"join-reference","out_nodes":[],"__id":3314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1452,-1]],"__id":3315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1456,552]],"__id":3320,"parentNodes":[16]},{"type":"beta","out_nodes":[[1460,-1]],"__id":3321,"parentNodes":[1461,1462]},{"type":"leftadapter","out_nodes":[[1456,-1]],"__id":3322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1459,553]],"__id":3327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1459,554]],"__id":3331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3332,"parentNodes":[1464],"index":166,"rule":{"name":"Bootstrap444","pattern":{"type":"object","id":613,"cls":"Fibonacci444","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap444"},{"type":"beta","out_nodes":[[1463,-1]],"__id":3333,"parentNodes":[1465,1466]},{"type":"rightadapter","out_nodes":[[1464,555]],"__id":3338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1464,556]],"__id":3342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3343,"parentNodes":[1468],"index":167,"rule":{"name":"Recurse444","pattern":{"type":"composite","id":616,"leftPattern":{"type":"not","id":614,"cls":"Fibonacci444","alias":"f"},"rightPattern":{"type":"object","id":615,"cls":"Fibonacci444","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci444 = defined.get('Fibonacci444');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci444(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse444"},{"type":"beta","out_nodes":[[1467,-1]],"__id":3344,"parentNodes":[1469,1470]},{"type":"rightadapter","out_nodes":[[1468,557]],"__id":3348,"parentNodes":[37]},{"type":"not","out_nodes":[[1471,-1]],"__id":3349,"parentNodes":[1472,1473],"constraint":{"type":"join-reference","out_nodes":[],"__id":3350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1468,-1]],"__id":3351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1470,558]],"__id":3355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1470,559]],"__id":3359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3360,"parentNodes":[1475],"index":168,"rule":{"name":"Calculate443","pattern":{"type":"composite","id":623,"leftPattern":{"type":"composite","id":622,"leftPattern":{"type":"composite","id":621,"leftPattern":{"type":"object","id":617,"cls":"Fibonacci443","alias":"f1"},"rightPattern":{"type":"object","id":618,"cls":"Fibonacci443","alias":"f2"}},"rightPattern":{"type":"object","id":619,"cls":"Fibonacci443","alias":"f3"}},"rightPattern":{"type":"object","id":620,"cls":"Result443","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate443"},{"type":"beta","out_nodes":[[1474,-1]],"__id":3361,"parentNodes":[1477,1478]},{"type":"type","out_nodes":[[3,560]],"__id":3362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result443"}},{"type":"rightadapter","out_nodes":[[1475,560]],"__id":3365,"parentNodes":[4]},{"type":"join","out_nodes":[[1479,-1]],"__id":3366,"parentNodes":[1481,1482],"constraint":{"type":"join-reference","out_nodes":[],"__id":3367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1475,-1]],"__id":3368,"parentNodes":[]},{"type":"type","out_nodes":[[9,561],[14,562],[20,563],[30,565],[20,567],[30,568]],"__id":3369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci443"}},{"type":"rightadapter","out_nodes":[[1478,561]],"__id":3372,"parentNodes":[10]},{"type":"join","out_nodes":[[1483,-1]],"__id":3373,"parentNodes":[1484,1485],"constraint":{"type":"join-reference","out_nodes":[],"__id":3374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1478,-1]],"__id":3375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1482,562]],"__id":3380,"parentNodes":[16]},{"type":"beta","out_nodes":[[1486,-1]],"__id":3381,"parentNodes":[1487,1488]},{"type":"leftadapter","out_nodes":[[1482,-1]],"__id":3382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1485,563]],"__id":3387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1485,564]],"__id":3391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3392,"parentNodes":[1490],"index":169,"rule":{"name":"Bootstrap443","pattern":{"type":"object","id":624,"cls":"Fibonacci443","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap443"},{"type":"beta","out_nodes":[[1489,-1]],"__id":3393,"parentNodes":[1491,1492]},{"type":"rightadapter","out_nodes":[[1490,565]],"__id":3398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1490,566]],"__id":3402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3403,"parentNodes":[1494],"index":170,"rule":{"name":"Recurse443","pattern":{"type":"composite","id":627,"leftPattern":{"type":"not","id":625,"cls":"Fibonacci443","alias":"f"},"rightPattern":{"type":"object","id":626,"cls":"Fibonacci443","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci443 = defined.get('Fibonacci443');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci443(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse443"},{"type":"beta","out_nodes":[[1493,-1]],"__id":3404,"parentNodes":[1495,1496]},{"type":"rightadapter","out_nodes":[[1494,567]],"__id":3408,"parentNodes":[37]},{"type":"not","out_nodes":[[1497,-1]],"__id":3409,"parentNodes":[1498,1499],"constraint":{"type":"join-reference","out_nodes":[],"__id":3410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1494,-1]],"__id":3411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1496,568]],"__id":3415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1496,569]],"__id":3419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3420,"parentNodes":[1501],"index":171,"rule":{"name":"Calculate442","pattern":{"type":"composite","id":634,"leftPattern":{"type":"composite","id":633,"leftPattern":{"type":"composite","id":632,"leftPattern":{"type":"object","id":628,"cls":"Fibonacci442","alias":"f1"},"rightPattern":{"type":"object","id":629,"cls":"Fibonacci442","alias":"f2"}},"rightPattern":{"type":"object","id":630,"cls":"Fibonacci442","alias":"f3"}},"rightPattern":{"type":"object","id":631,"cls":"Result442","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate442"},{"type":"beta","out_nodes":[[1500,-1]],"__id":3421,"parentNodes":[1503,1504]},{"type":"type","out_nodes":[[3,570]],"__id":3422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result442"}},{"type":"rightadapter","out_nodes":[[1501,570]],"__id":3425,"parentNodes":[4]},{"type":"join","out_nodes":[[1505,-1]],"__id":3426,"parentNodes":[1507,1508],"constraint":{"type":"join-reference","out_nodes":[],"__id":3427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1501,-1]],"__id":3428,"parentNodes":[]},{"type":"type","out_nodes":[[9,571],[14,572],[20,573],[30,575],[20,577],[30,578]],"__id":3429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci442"}},{"type":"rightadapter","out_nodes":[[1504,571]],"__id":3432,"parentNodes":[10]},{"type":"join","out_nodes":[[1509,-1]],"__id":3433,"parentNodes":[1510,1511],"constraint":{"type":"join-reference","out_nodes":[],"__id":3434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1504,-1]],"__id":3435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1508,572]],"__id":3440,"parentNodes":[16]},{"type":"beta","out_nodes":[[1512,-1]],"__id":3441,"parentNodes":[1513,1514]},{"type":"leftadapter","out_nodes":[[1508,-1]],"__id":3442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1511,573]],"__id":3447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1511,574]],"__id":3451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3452,"parentNodes":[1516],"index":172,"rule":{"name":"Bootstrap442","pattern":{"type":"object","id":635,"cls":"Fibonacci442","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap442"},{"type":"beta","out_nodes":[[1515,-1]],"__id":3453,"parentNodes":[1517,1518]},{"type":"rightadapter","out_nodes":[[1516,575]],"__id":3458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1516,576]],"__id":3462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3463,"parentNodes":[1520],"index":173,"rule":{"name":"Recurse442","pattern":{"type":"composite","id":638,"leftPattern":{"type":"not","id":636,"cls":"Fibonacci442","alias":"f"},"rightPattern":{"type":"object","id":637,"cls":"Fibonacci442","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci442 = defined.get('Fibonacci442');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci442(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse442"},{"type":"beta","out_nodes":[[1519,-1]],"__id":3464,"parentNodes":[1521,1522]},{"type":"rightadapter","out_nodes":[[1520,577]],"__id":3468,"parentNodes":[37]},{"type":"not","out_nodes":[[1523,-1]],"__id":3469,"parentNodes":[1524,1525],"constraint":{"type":"join-reference","out_nodes":[],"__id":3470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1520,-1]],"__id":3471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1522,578]],"__id":3475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1522,579]],"__id":3479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3480,"parentNodes":[1527],"index":174,"rule":{"name":"Calculate441","pattern":{"type":"composite","id":645,"leftPattern":{"type":"composite","id":644,"leftPattern":{"type":"composite","id":643,"leftPattern":{"type":"object","id":639,"cls":"Fibonacci441","alias":"f1"},"rightPattern":{"type":"object","id":640,"cls":"Fibonacci441","alias":"f2"}},"rightPattern":{"type":"object","id":641,"cls":"Fibonacci441","alias":"f3"}},"rightPattern":{"type":"object","id":642,"cls":"Result441","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate441"},{"type":"beta","out_nodes":[[1526,-1]],"__id":3481,"parentNodes":[1529,1530]},{"type":"type","out_nodes":[[3,580]],"__id":3482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result441"}},{"type":"rightadapter","out_nodes":[[1527,580]],"__id":3485,"parentNodes":[4]},{"type":"join","out_nodes":[[1531,-1]],"__id":3486,"parentNodes":[1533,1534],"constraint":{"type":"join-reference","out_nodes":[],"__id":3487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1527,-1]],"__id":3488,"parentNodes":[]},{"type":"type","out_nodes":[[9,581],[14,582],[20,583],[30,585],[20,587],[30,588]],"__id":3489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci441"}},{"type":"rightadapter","out_nodes":[[1530,581]],"__id":3492,"parentNodes":[10]},{"type":"join","out_nodes":[[1535,-1]],"__id":3493,"parentNodes":[1536,1537],"constraint":{"type":"join-reference","out_nodes":[],"__id":3494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1530,-1]],"__id":3495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1534,582]],"__id":3500,"parentNodes":[16]},{"type":"beta","out_nodes":[[1538,-1]],"__id":3501,"parentNodes":[1539,1540]},{"type":"leftadapter","out_nodes":[[1534,-1]],"__id":3502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1537,583]],"__id":3507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1537,584]],"__id":3511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3512,"parentNodes":[1542],"index":175,"rule":{"name":"Bootstrap441","pattern":{"type":"object","id":646,"cls":"Fibonacci441","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap441"},{"type":"beta","out_nodes":[[1541,-1]],"__id":3513,"parentNodes":[1543,1544]},{"type":"rightadapter","out_nodes":[[1542,585]],"__id":3518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1542,586]],"__id":3522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3523,"parentNodes":[1546],"index":176,"rule":{"name":"Recurse441","pattern":{"type":"composite","id":649,"leftPattern":{"type":"not","id":647,"cls":"Fibonacci441","alias":"f"},"rightPattern":{"type":"object","id":648,"cls":"Fibonacci441","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci441 = defined.get('Fibonacci441');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci441(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse441"},{"type":"beta","out_nodes":[[1545,-1]],"__id":3524,"parentNodes":[1547,1548]},{"type":"rightadapter","out_nodes":[[1546,587]],"__id":3528,"parentNodes":[37]},{"type":"not","out_nodes":[[1549,-1]],"__id":3529,"parentNodes":[1550,1551],"constraint":{"type":"join-reference","out_nodes":[],"__id":3530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1546,-1]],"__id":3531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1548,588]],"__id":3535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1548,589]],"__id":3539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3540,"parentNodes":[1553],"index":177,"rule":{"name":"Calculate440","pattern":{"type":"composite","id":656,"leftPattern":{"type":"composite","id":655,"leftPattern":{"type":"composite","id":654,"leftPattern":{"type":"object","id":650,"cls":"Fibonacci440","alias":"f1"},"rightPattern":{"type":"object","id":651,"cls":"Fibonacci440","alias":"f2"}},"rightPattern":{"type":"object","id":652,"cls":"Fibonacci440","alias":"f3"}},"rightPattern":{"type":"object","id":653,"cls":"Result440","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate440"},{"type":"beta","out_nodes":[[1552,-1]],"__id":3541,"parentNodes":[1555,1556]},{"type":"type","out_nodes":[[3,590]],"__id":3542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result440"}},{"type":"rightadapter","out_nodes":[[1553,590]],"__id":3545,"parentNodes":[4]},{"type":"join","out_nodes":[[1557,-1]],"__id":3546,"parentNodes":[1559,1560],"constraint":{"type":"join-reference","out_nodes":[],"__id":3547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1553,-1]],"__id":3548,"parentNodes":[]},{"type":"type","out_nodes":[[9,591],[14,592],[20,593],[30,595],[20,597],[30,598]],"__id":3549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci440"}},{"type":"rightadapter","out_nodes":[[1556,591]],"__id":3552,"parentNodes":[10]},{"type":"join","out_nodes":[[1561,-1]],"__id":3553,"parentNodes":[1562,1563],"constraint":{"type":"join-reference","out_nodes":[],"__id":3554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1556,-1]],"__id":3555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1560,592]],"__id":3560,"parentNodes":[16]},{"type":"beta","out_nodes":[[1564,-1]],"__id":3561,"parentNodes":[1565,1566]},{"type":"leftadapter","out_nodes":[[1560,-1]],"__id":3562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1563,593]],"__id":3567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1563,594]],"__id":3571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3572,"parentNodes":[1568],"index":178,"rule":{"name":"Bootstrap440","pattern":{"type":"object","id":657,"cls":"Fibonacci440","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap440"},{"type":"beta","out_nodes":[[1567,-1]],"__id":3573,"parentNodes":[1569,1570]},{"type":"rightadapter","out_nodes":[[1568,595]],"__id":3578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1568,596]],"__id":3582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3583,"parentNodes":[1572],"index":179,"rule":{"name":"Recurse440","pattern":{"type":"composite","id":660,"leftPattern":{"type":"not","id":658,"cls":"Fibonacci440","alias":"f"},"rightPattern":{"type":"object","id":659,"cls":"Fibonacci440","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');let Fibonacci440 = defined.get('Fibonacci440');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci440(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse440"},{"type":"beta","out_nodes":[[1571,-1]],"__id":3584,"parentNodes":[1573,1574]},{"type":"rightadapter","out_nodes":[[1572,597]],"__id":3588,"parentNodes":[37]},{"type":"not","out_nodes":[[1575,-1]],"__id":3589,"parentNodes":[1576,1577],"constraint":{"type":"join-reference","out_nodes":[],"__id":3590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1572,-1]],"__id":3591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1574,598]],"__id":3595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1574,599]],"__id":3599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3600,"parentNodes":[1579],"index":180,"rule":{"name":"Calculate439","pattern":{"type":"composite","id":667,"leftPattern":{"type":"composite","id":666,"leftPattern":{"type":"composite","id":665,"leftPattern":{"type":"object","id":661,"cls":"Fibonacci439","alias":"f1"},"rightPattern":{"type":"object","id":662,"cls":"Fibonacci439","alias":"f2"}},"rightPattern":{"type":"object","id":663,"cls":"Fibonacci439","alias":"f3"}},"rightPattern":{"type":"object","id":664,"cls":"Result439","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate439"},{"type":"beta","out_nodes":[[1578,-1]],"__id":3601,"parentNodes":[1581,1582]},{"type":"type","out_nodes":[[3,600]],"__id":3602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result439"}},{"type":"rightadapter","out_nodes":[[1579,600]],"__id":3605,"parentNodes":[4]},{"type":"join","out_nodes":[[1583,-1]],"__id":3606,"parentNodes":[1585,1586],"constraint":{"type":"join-reference","out_nodes":[],"__id":3607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1579,-1]],"__id":3608,"parentNodes":[]},{"type":"type","out_nodes":[[9,601],[14,602],[20,603],[30,605],[20,607],[30,608]],"__id":3609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci439"}},{"type":"rightadapter","out_nodes":[[1582,601]],"__id":3612,"parentNodes":[10]},{"type":"join","out_nodes":[[1587,-1]],"__id":3613,"parentNodes":[1588,1589],"constraint":{"type":"join-reference","out_nodes":[],"__id":3614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1582,-1]],"__id":3615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1586,602]],"__id":3620,"parentNodes":[16]},{"type":"beta","out_nodes":[[1590,-1]],"__id":3621,"parentNodes":[1591,1592]},{"type":"leftadapter","out_nodes":[[1586,-1]],"__id":3622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1589,603]],"__id":3627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1589,604]],"__id":3631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3632,"parentNodes":[1594],"index":181,"rule":{"name":"Bootstrap439","pattern":{"type":"object","id":668,"cls":"Fibonacci439","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap439"},{"type":"beta","out_nodes":[[1593,-1]],"__id":3633,"parentNodes":[1595,1596]},{"type":"rightadapter","out_nodes":[[1594,605]],"__id":3638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1594,606]],"__id":3642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3643,"parentNodes":[1598],"index":182,"rule":{"name":"Recurse439","pattern":{"type":"composite","id":671,"leftPattern":{"type":"not","id":669,"cls":"Fibonacci439","alias":"f"},"rightPattern":{"type":"object","id":670,"cls":"Fibonacci439","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci439 = defined.get('Fibonacci439');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci439(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse439"},{"type":"beta","out_nodes":[[1597,-1]],"__id":3644,"parentNodes":[1599,1600]},{"type":"rightadapter","out_nodes":[[1598,607]],"__id":3648,"parentNodes":[37]},{"type":"not","out_nodes":[[1601,-1]],"__id":3649,"parentNodes":[1602,1603],"constraint":{"type":"join-reference","out_nodes":[],"__id":3650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1598,-1]],"__id":3651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1600,608]],"__id":3655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1600,609]],"__id":3659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3660,"parentNodes":[1605],"index":183,"rule":{"name":"Calculate438","pattern":{"type":"composite","id":678,"leftPattern":{"type":"composite","id":677,"leftPattern":{"type":"composite","id":676,"leftPattern":{"type":"object","id":672,"cls":"Fibonacci438","alias":"f1"},"rightPattern":{"type":"object","id":673,"cls":"Fibonacci438","alias":"f2"}},"rightPattern":{"type":"object","id":674,"cls":"Fibonacci438","alias":"f3"}},"rightPattern":{"type":"object","id":675,"cls":"Result438","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate438"},{"type":"beta","out_nodes":[[1604,-1]],"__id":3661,"parentNodes":[1607,1608]},{"type":"type","out_nodes":[[3,610]],"__id":3662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result438"}},{"type":"rightadapter","out_nodes":[[1605,610]],"__id":3665,"parentNodes":[4]},{"type":"join","out_nodes":[[1609,-1]],"__id":3666,"parentNodes":[1611,1612],"constraint":{"type":"join-reference","out_nodes":[],"__id":3667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1605,-1]],"__id":3668,"parentNodes":[]},{"type":"type","out_nodes":[[9,611],[14,612],[20,613],[30,615],[20,617],[30,618]],"__id":3669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci438"}},{"type":"rightadapter","out_nodes":[[1608,611]],"__id":3672,"parentNodes":[10]},{"type":"join","out_nodes":[[1613,-1]],"__id":3673,"parentNodes":[1614,1615],"constraint":{"type":"join-reference","out_nodes":[],"__id":3674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1608,-1]],"__id":3675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1612,612]],"__id":3680,"parentNodes":[16]},{"type":"beta","out_nodes":[[1616,-1]],"__id":3681,"parentNodes":[1617,1618]},{"type":"leftadapter","out_nodes":[[1612,-1]],"__id":3682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1615,613]],"__id":3687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1615,614]],"__id":3691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3692,"parentNodes":[1620],"index":184,"rule":{"name":"Bootstrap438","pattern":{"type":"object","id":679,"cls":"Fibonacci438","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap438"},{"type":"beta","out_nodes":[[1619,-1]],"__id":3693,"parentNodes":[1621,1622]},{"type":"rightadapter","out_nodes":[[1620,615]],"__id":3698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1620,616]],"__id":3702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3703,"parentNodes":[1624],"index":185,"rule":{"name":"Recurse438","pattern":{"type":"composite","id":682,"leftPattern":{"type":"not","id":680,"cls":"Fibonacci438","alias":"f"},"rightPattern":{"type":"object","id":681,"cls":"Fibonacci438","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci438 = defined.get('Fibonacci438');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci438(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse438"},{"type":"beta","out_nodes":[[1623,-1]],"__id":3704,"parentNodes":[1625,1626]},{"type":"rightadapter","out_nodes":[[1624,617]],"__id":3708,"parentNodes":[37]},{"type":"not","out_nodes":[[1627,-1]],"__id":3709,"parentNodes":[1628,1629],"constraint":{"type":"join-reference","out_nodes":[],"__id":3710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1624,-1]],"__id":3711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1626,618]],"__id":3715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1626,619]],"__id":3719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3720,"parentNodes":[1631],"index":186,"rule":{"name":"Calculate437","pattern":{"type":"composite","id":689,"leftPattern":{"type":"composite","id":688,"leftPattern":{"type":"composite","id":687,"leftPattern":{"type":"object","id":683,"cls":"Fibonacci437","alias":"f1"},"rightPattern":{"type":"object","id":684,"cls":"Fibonacci437","alias":"f2"}},"rightPattern":{"type":"object","id":685,"cls":"Fibonacci437","alias":"f3"}},"rightPattern":{"type":"object","id":686,"cls":"Result437","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate437"},{"type":"beta","out_nodes":[[1630,-1]],"__id":3721,"parentNodes":[1633,1634]},{"type":"type","out_nodes":[[3,620]],"__id":3722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result437"}},{"type":"rightadapter","out_nodes":[[1631,620]],"__id":3725,"parentNodes":[4]},{"type":"join","out_nodes":[[1635,-1]],"__id":3726,"parentNodes":[1637,1638],"constraint":{"type":"join-reference","out_nodes":[],"__id":3727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1631,-1]],"__id":3728,"parentNodes":[]},{"type":"type","out_nodes":[[9,621],[14,622],[20,623],[30,625],[20,627],[30,628]],"__id":3729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci437"}},{"type":"rightadapter","out_nodes":[[1634,621]],"__id":3732,"parentNodes":[10]},{"type":"join","out_nodes":[[1639,-1]],"__id":3733,"parentNodes":[1640,1641],"constraint":{"type":"join-reference","out_nodes":[],"__id":3734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1634,-1]],"__id":3735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1638,622]],"__id":3740,"parentNodes":[16]},{"type":"beta","out_nodes":[[1642,-1]],"__id":3741,"parentNodes":[1643,1644]},{"type":"leftadapter","out_nodes":[[1638,-1]],"__id":3742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1641,623]],"__id":3747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1641,624]],"__id":3751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3752,"parentNodes":[1646],"index":187,"rule":{"name":"Bootstrap437","pattern":{"type":"object","id":690,"cls":"Fibonacci437","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap437"},{"type":"beta","out_nodes":[[1645,-1]],"__id":3753,"parentNodes":[1647,1648]},{"type":"rightadapter","out_nodes":[[1646,625]],"__id":3758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1646,626]],"__id":3762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3763,"parentNodes":[1650],"index":188,"rule":{"name":"Recurse437","pattern":{"type":"composite","id":693,"leftPattern":{"type":"not","id":691,"cls":"Fibonacci437","alias":"f"},"rightPattern":{"type":"object","id":692,"cls":"Fibonacci437","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci437 = defined.get('Fibonacci437');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci437(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse437"},{"type":"beta","out_nodes":[[1649,-1]],"__id":3764,"parentNodes":[1651,1652]},{"type":"rightadapter","out_nodes":[[1650,627]],"__id":3768,"parentNodes":[37]},{"type":"not","out_nodes":[[1653,-1]],"__id":3769,"parentNodes":[1654,1655],"constraint":{"type":"join-reference","out_nodes":[],"__id":3770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1650,-1]],"__id":3771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1652,628]],"__id":3775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1652,629]],"__id":3779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3780,"parentNodes":[1657],"index":189,"rule":{"name":"Calculate436","pattern":{"type":"composite","id":700,"leftPattern":{"type":"composite","id":699,"leftPattern":{"type":"composite","id":698,"leftPattern":{"type":"object","id":694,"cls":"Fibonacci436","alias":"f1"},"rightPattern":{"type":"object","id":695,"cls":"Fibonacci436","alias":"f2"}},"rightPattern":{"type":"object","id":696,"cls":"Fibonacci436","alias":"f3"}},"rightPattern":{"type":"object","id":697,"cls":"Result436","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate436"},{"type":"beta","out_nodes":[[1656,-1]],"__id":3781,"parentNodes":[1659,1660]},{"type":"type","out_nodes":[[3,630]],"__id":3782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result436"}},{"type":"rightadapter","out_nodes":[[1657,630]],"__id":3785,"parentNodes":[4]},{"type":"join","out_nodes":[[1661,-1]],"__id":3786,"parentNodes":[1663,1664],"constraint":{"type":"join-reference","out_nodes":[],"__id":3787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1657,-1]],"__id":3788,"parentNodes":[]},{"type":"type","out_nodes":[[9,631],[14,632],[20,633],[30,635],[20,637],[30,638]],"__id":3789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci436"}},{"type":"rightadapter","out_nodes":[[1660,631]],"__id":3792,"parentNodes":[10]},{"type":"join","out_nodes":[[1665,-1]],"__id":3793,"parentNodes":[1666,1667],"constraint":{"type":"join-reference","out_nodes":[],"__id":3794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1660,-1]],"__id":3795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1664,632]],"__id":3800,"parentNodes":[16]},{"type":"beta","out_nodes":[[1668,-1]],"__id":3801,"parentNodes":[1669,1670]},{"type":"leftadapter","out_nodes":[[1664,-1]],"__id":3802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1667,633]],"__id":3807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1667,634]],"__id":3811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3812,"parentNodes":[1672],"index":190,"rule":{"name":"Bootstrap436","pattern":{"type":"object","id":701,"cls":"Fibonacci436","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap436"},{"type":"beta","out_nodes":[[1671,-1]],"__id":3813,"parentNodes":[1673,1674]},{"type":"rightadapter","out_nodes":[[1672,635]],"__id":3818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1672,636]],"__id":3822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3823,"parentNodes":[1676],"index":191,"rule":{"name":"Recurse436","pattern":{"type":"composite","id":704,"leftPattern":{"type":"not","id":702,"cls":"Fibonacci436","alias":"f"},"rightPattern":{"type":"object","id":703,"cls":"Fibonacci436","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci436 = defined.get('Fibonacci436');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci436(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse436"},{"type":"beta","out_nodes":[[1675,-1]],"__id":3824,"parentNodes":[1677,1678]},{"type":"rightadapter","out_nodes":[[1676,637]],"__id":3828,"parentNodes":[37]},{"type":"not","out_nodes":[[1679,-1]],"__id":3829,"parentNodes":[1680,1681],"constraint":{"type":"join-reference","out_nodes":[],"__id":3830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1676,-1]],"__id":3831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1678,638]],"__id":3835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1678,639]],"__id":3839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3840,"parentNodes":[1683],"index":192,"rule":{"name":"Calculate435","pattern":{"type":"composite","id":711,"leftPattern":{"type":"composite","id":710,"leftPattern":{"type":"composite","id":709,"leftPattern":{"type":"object","id":705,"cls":"Fibonacci435","alias":"f1"},"rightPattern":{"type":"object","id":706,"cls":"Fibonacci435","alias":"f2"}},"rightPattern":{"type":"object","id":707,"cls":"Fibonacci435","alias":"f3"}},"rightPattern":{"type":"object","id":708,"cls":"Result435","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate435"},{"type":"beta","out_nodes":[[1682,-1]],"__id":3841,"parentNodes":[1685,1686]},{"type":"type","out_nodes":[[3,640]],"__id":3842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result435"}},{"type":"rightadapter","out_nodes":[[1683,640]],"__id":3845,"parentNodes":[4]},{"type":"join","out_nodes":[[1687,-1]],"__id":3846,"parentNodes":[1689,1690],"constraint":{"type":"join-reference","out_nodes":[],"__id":3847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1683,-1]],"__id":3848,"parentNodes":[]},{"type":"type","out_nodes":[[9,641],[14,642],[20,643],[30,645],[20,647],[30,648]],"__id":3849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci435"}},{"type":"rightadapter","out_nodes":[[1686,641]],"__id":3852,"parentNodes":[10]},{"type":"join","out_nodes":[[1691,-1]],"__id":3853,"parentNodes":[1692,1693],"constraint":{"type":"join-reference","out_nodes":[],"__id":3854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1686,-1]],"__id":3855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1690,642]],"__id":3860,"parentNodes":[16]},{"type":"beta","out_nodes":[[1694,-1]],"__id":3861,"parentNodes":[1695,1696]},{"type":"leftadapter","out_nodes":[[1690,-1]],"__id":3862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1693,643]],"__id":3867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1693,644]],"__id":3871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3872,"parentNodes":[1698],"index":193,"rule":{"name":"Bootstrap435","pattern":{"type":"object","id":712,"cls":"Fibonacci435","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap435"},{"type":"beta","out_nodes":[[1697,-1]],"__id":3873,"parentNodes":[1699,1700]},{"type":"rightadapter","out_nodes":[[1698,645]],"__id":3878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1698,646]],"__id":3882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3883,"parentNodes":[1702],"index":194,"rule":{"name":"Recurse435","pattern":{"type":"composite","id":715,"leftPattern":{"type":"not","id":713,"cls":"Fibonacci435","alias":"f"},"rightPattern":{"type":"object","id":714,"cls":"Fibonacci435","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci435 = defined.get('Fibonacci435');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci435(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse435"},{"type":"beta","out_nodes":[[1701,-1]],"__id":3884,"parentNodes":[1703,1704]},{"type":"rightadapter","out_nodes":[[1702,647]],"__id":3888,"parentNodes":[37]},{"type":"not","out_nodes":[[1705,-1]],"__id":3889,"parentNodes":[1706,1707],"constraint":{"type":"join-reference","out_nodes":[],"__id":3890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1702,-1]],"__id":3891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1704,648]],"__id":3895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1704,649]],"__id":3899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3900,"parentNodes":[1709],"index":195,"rule":{"name":"Calculate434","pattern":{"type":"composite","id":722,"leftPattern":{"type":"composite","id":721,"leftPattern":{"type":"composite","id":720,"leftPattern":{"type":"object","id":716,"cls":"Fibonacci434","alias":"f1"},"rightPattern":{"type":"object","id":717,"cls":"Fibonacci434","alias":"f2"}},"rightPattern":{"type":"object","id":718,"cls":"Fibonacci434","alias":"f3"}},"rightPattern":{"type":"object","id":719,"cls":"Result434","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate434"},{"type":"beta","out_nodes":[[1708,-1]],"__id":3901,"parentNodes":[1711,1712]},{"type":"type","out_nodes":[[3,650]],"__id":3902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result434"}},{"type":"rightadapter","out_nodes":[[1709,650]],"__id":3905,"parentNodes":[4]},{"type":"join","out_nodes":[[1713,-1]],"__id":3906,"parentNodes":[1715,1716],"constraint":{"type":"join-reference","out_nodes":[],"__id":3907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1709,-1]],"__id":3908,"parentNodes":[]},{"type":"type","out_nodes":[[9,651],[14,652],[20,653],[30,655],[20,657],[30,658]],"__id":3909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci434"}},{"type":"rightadapter","out_nodes":[[1712,651]],"__id":3912,"parentNodes":[10]},{"type":"join","out_nodes":[[1717,-1]],"__id":3913,"parentNodes":[1718,1719],"constraint":{"type":"join-reference","out_nodes":[],"__id":3914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1712,-1]],"__id":3915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1716,652]],"__id":3920,"parentNodes":[16]},{"type":"beta","out_nodes":[[1720,-1]],"__id":3921,"parentNodes":[1721,1722]},{"type":"leftadapter","out_nodes":[[1716,-1]],"__id":3922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1719,653]],"__id":3927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1719,654]],"__id":3931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3932,"parentNodes":[1724],"index":196,"rule":{"name":"Bootstrap434","pattern":{"type":"object","id":723,"cls":"Fibonacci434","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap434"},{"type":"beta","out_nodes":[[1723,-1]],"__id":3933,"parentNodes":[1725,1726]},{"type":"rightadapter","out_nodes":[[1724,655]],"__id":3938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1724,656]],"__id":3942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3943,"parentNodes":[1728],"index":197,"rule":{"name":"Recurse434","pattern":{"type":"composite","id":726,"leftPattern":{"type":"not","id":724,"cls":"Fibonacci434","alias":"f"},"rightPattern":{"type":"object","id":725,"cls":"Fibonacci434","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci434 = defined.get('Fibonacci434');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci434(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse434"},{"type":"beta","out_nodes":[[1727,-1]],"__id":3944,"parentNodes":[1729,1730]},{"type":"rightadapter","out_nodes":[[1728,657]],"__id":3948,"parentNodes":[37]},{"type":"not","out_nodes":[[1731,-1]],"__id":3949,"parentNodes":[1732,1733],"constraint":{"type":"join-reference","out_nodes":[],"__id":3950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1728,-1]],"__id":3951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1730,658]],"__id":3955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1730,659]],"__id":3959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3960,"parentNodes":[1735],"index":198,"rule":{"name":"Calculate433","pattern":{"type":"composite","id":733,"leftPattern":{"type":"composite","id":732,"leftPattern":{"type":"composite","id":731,"leftPattern":{"type":"object","id":727,"cls":"Fibonacci433","alias":"f1"},"rightPattern":{"type":"object","id":728,"cls":"Fibonacci433","alias":"f2"}},"rightPattern":{"type":"object","id":729,"cls":"Fibonacci433","alias":"f3"}},"rightPattern":{"type":"object","id":730,"cls":"Result433","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate433"},{"type":"beta","out_nodes":[[1734,-1]],"__id":3961,"parentNodes":[1737,1738]},{"type":"type","out_nodes":[[3,660]],"__id":3962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result433"}},{"type":"rightadapter","out_nodes":[[1735,660]],"__id":3965,"parentNodes":[4]},{"type":"join","out_nodes":[[1739,-1]],"__id":3966,"parentNodes":[1741,1742],"constraint":{"type":"join-reference","out_nodes":[],"__id":3967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1735,-1]],"__id":3968,"parentNodes":[]},{"type":"type","out_nodes":[[9,661],[14,662],[20,663],[30,665],[20,667],[30,668]],"__id":3969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci433"}},{"type":"rightadapter","out_nodes":[[1738,661]],"__id":3972,"parentNodes":[10]},{"type":"join","out_nodes":[[1743,-1]],"__id":3973,"parentNodes":[1744,1745],"constraint":{"type":"join-reference","out_nodes":[],"__id":3974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1738,-1]],"__id":3975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1742,662]],"__id":3980,"parentNodes":[16]},{"type":"beta","out_nodes":[[1746,-1]],"__id":3981,"parentNodes":[1747,1748]},{"type":"leftadapter","out_nodes":[[1742,-1]],"__id":3982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1745,663]],"__id":3987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1745,664]],"__id":3991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":3992,"parentNodes":[1750],"index":199,"rule":{"name":"Bootstrap433","pattern":{"type":"object","id":734,"cls":"Fibonacci433","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap433"},{"type":"beta","out_nodes":[[1749,-1]],"__id":3993,"parentNodes":[1751,1752]},{"type":"rightadapter","out_nodes":[[1750,665]],"__id":3998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1750,666]],"__id":4002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4003,"parentNodes":[1754],"index":200,"rule":{"name":"Recurse433","pattern":{"type":"composite","id":737,"leftPattern":{"type":"not","id":735,"cls":"Fibonacci433","alias":"f"},"rightPattern":{"type":"object","id":736,"cls":"Fibonacci433","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci433 = defined.get('Fibonacci433');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci433(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse433"},{"type":"beta","out_nodes":[[1753,-1]],"__id":4004,"parentNodes":[1755,1756]},{"type":"rightadapter","out_nodes":[[1754,667]],"__id":4008,"parentNodes":[37]},{"type":"not","out_nodes":[[1757,-1]],"__id":4009,"parentNodes":[1758,1759],"constraint":{"type":"join-reference","out_nodes":[],"__id":4010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1754,-1]],"__id":4011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1756,668]],"__id":4015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1756,669]],"__id":4019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4020,"parentNodes":[1761],"index":201,"rule":{"name":"Calculate432","pattern":{"type":"composite","id":744,"leftPattern":{"type":"composite","id":743,"leftPattern":{"type":"composite","id":742,"leftPattern":{"type":"object","id":738,"cls":"Fibonacci432","alias":"f1"},"rightPattern":{"type":"object","id":739,"cls":"Fibonacci432","alias":"f2"}},"rightPattern":{"type":"object","id":740,"cls":"Fibonacci432","alias":"f3"}},"rightPattern":{"type":"object","id":741,"cls":"Result432","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate432"},{"type":"beta","out_nodes":[[1760,-1]],"__id":4021,"parentNodes":[1763,1764]},{"type":"type","out_nodes":[[3,670]],"__id":4022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result432"}},{"type":"rightadapter","out_nodes":[[1761,670]],"__id":4025,"parentNodes":[4]},{"type":"join","out_nodes":[[1765,-1]],"__id":4026,"parentNodes":[1767,1768],"constraint":{"type":"join-reference","out_nodes":[],"__id":4027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1761,-1]],"__id":4028,"parentNodes":[]},{"type":"type","out_nodes":[[9,671],[14,672],[20,673],[30,675],[20,677],[30,678]],"__id":4029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci432"}},{"type":"rightadapter","out_nodes":[[1764,671]],"__id":4032,"parentNodes":[10]},{"type":"join","out_nodes":[[1769,-1]],"__id":4033,"parentNodes":[1770,1771],"constraint":{"type":"join-reference","out_nodes":[],"__id":4034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1764,-1]],"__id":4035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1768,672]],"__id":4040,"parentNodes":[16]},{"type":"beta","out_nodes":[[1772,-1]],"__id":4041,"parentNodes":[1773,1774]},{"type":"leftadapter","out_nodes":[[1768,-1]],"__id":4042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1771,673]],"__id":4047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1771,674]],"__id":4051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4052,"parentNodes":[1776],"index":202,"rule":{"name":"Bootstrap432","pattern":{"type":"object","id":745,"cls":"Fibonacci432","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap432"},{"type":"beta","out_nodes":[[1775,-1]],"__id":4053,"parentNodes":[1777,1778]},{"type":"rightadapter","out_nodes":[[1776,675]],"__id":4058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1776,676]],"__id":4062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4063,"parentNodes":[1780],"index":203,"rule":{"name":"Recurse432","pattern":{"type":"composite","id":748,"leftPattern":{"type":"not","id":746,"cls":"Fibonacci432","alias":"f"},"rightPattern":{"type":"object","id":747,"cls":"Fibonacci432","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci432 = defined.get('Fibonacci432');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci432(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse432"},{"type":"beta","out_nodes":[[1779,-1]],"__id":4064,"parentNodes":[1781,1782]},{"type":"rightadapter","out_nodes":[[1780,677]],"__id":4068,"parentNodes":[37]},{"type":"not","out_nodes":[[1783,-1]],"__id":4069,"parentNodes":[1784,1785],"constraint":{"type":"join-reference","out_nodes":[],"__id":4070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1780,-1]],"__id":4071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1782,678]],"__id":4075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1782,679]],"__id":4079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4080,"parentNodes":[1787],"index":204,"rule":{"name":"Calculate431","pattern":{"type":"composite","id":755,"leftPattern":{"type":"composite","id":754,"leftPattern":{"type":"composite","id":753,"leftPattern":{"type":"object","id":749,"cls":"Fibonacci431","alias":"f1"},"rightPattern":{"type":"object","id":750,"cls":"Fibonacci431","alias":"f2"}},"rightPattern":{"type":"object","id":751,"cls":"Fibonacci431","alias":"f3"}},"rightPattern":{"type":"object","id":752,"cls":"Result431","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate431"},{"type":"beta","out_nodes":[[1786,-1]],"__id":4081,"parentNodes":[1789,1790]},{"type":"type","out_nodes":[[3,680]],"__id":4082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result431"}},{"type":"rightadapter","out_nodes":[[1787,680]],"__id":4085,"parentNodes":[4]},{"type":"join","out_nodes":[[1791,-1]],"__id":4086,"parentNodes":[1793,1794],"constraint":{"type":"join-reference","out_nodes":[],"__id":4087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1787,-1]],"__id":4088,"parentNodes":[]},{"type":"type","out_nodes":[[9,681],[14,682],[20,683],[30,685],[20,687],[30,688]],"__id":4089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci431"}},{"type":"rightadapter","out_nodes":[[1790,681]],"__id":4092,"parentNodes":[10]},{"type":"join","out_nodes":[[1795,-1]],"__id":4093,"parentNodes":[1796,1797],"constraint":{"type":"join-reference","out_nodes":[],"__id":4094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1790,-1]],"__id":4095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1794,682]],"__id":4100,"parentNodes":[16]},{"type":"beta","out_nodes":[[1798,-1]],"__id":4101,"parentNodes":[1799,1800]},{"type":"leftadapter","out_nodes":[[1794,-1]],"__id":4102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1797,683]],"__id":4107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1797,684]],"__id":4111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4112,"parentNodes":[1802],"index":205,"rule":{"name":"Bootstrap431","pattern":{"type":"object","id":756,"cls":"Fibonacci431","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap431"},{"type":"beta","out_nodes":[[1801,-1]],"__id":4113,"parentNodes":[1803,1804]},{"type":"rightadapter","out_nodes":[[1802,685]],"__id":4118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1802,686]],"__id":4122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4123,"parentNodes":[1806],"index":206,"rule":{"name":"Recurse431","pattern":{"type":"composite","id":759,"leftPattern":{"type":"not","id":757,"cls":"Fibonacci431","alias":"f"},"rightPattern":{"type":"object","id":758,"cls":"Fibonacci431","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci431 = defined.get('Fibonacci431');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci431(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse431"},{"type":"beta","out_nodes":[[1805,-1]],"__id":4124,"parentNodes":[1807,1808]},{"type":"rightadapter","out_nodes":[[1806,687]],"__id":4128,"parentNodes":[37]},{"type":"not","out_nodes":[[1809,-1]],"__id":4129,"parentNodes":[1810,1811],"constraint":{"type":"join-reference","out_nodes":[],"__id":4130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1806,-1]],"__id":4131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1808,688]],"__id":4135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1808,689]],"__id":4139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4140,"parentNodes":[1813],"index":207,"rule":{"name":"Calculate430","pattern":{"type":"composite","id":766,"leftPattern":{"type":"composite","id":765,"leftPattern":{"type":"composite","id":764,"leftPattern":{"type":"object","id":760,"cls":"Fibonacci430","alias":"f1"},"rightPattern":{"type":"object","id":761,"cls":"Fibonacci430","alias":"f2"}},"rightPattern":{"type":"object","id":762,"cls":"Fibonacci430","alias":"f3"}},"rightPattern":{"type":"object","id":763,"cls":"Result430","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate430"},{"type":"beta","out_nodes":[[1812,-1]],"__id":4141,"parentNodes":[1815,1816]},{"type":"type","out_nodes":[[3,690]],"__id":4142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result430"}},{"type":"rightadapter","out_nodes":[[1813,690]],"__id":4145,"parentNodes":[4]},{"type":"join","out_nodes":[[1817,-1]],"__id":4146,"parentNodes":[1819,1820],"constraint":{"type":"join-reference","out_nodes":[],"__id":4147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1813,-1]],"__id":4148,"parentNodes":[]},{"type":"type","out_nodes":[[9,691],[14,692],[20,693],[30,695],[20,697],[30,698]],"__id":4149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci430"}},{"type":"rightadapter","out_nodes":[[1816,691]],"__id":4152,"parentNodes":[10]},{"type":"join","out_nodes":[[1821,-1]],"__id":4153,"parentNodes":[1822,1823],"constraint":{"type":"join-reference","out_nodes":[],"__id":4154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1816,-1]],"__id":4155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1820,692]],"__id":4160,"parentNodes":[16]},{"type":"beta","out_nodes":[[1824,-1]],"__id":4161,"parentNodes":[1825,1826]},{"type":"leftadapter","out_nodes":[[1820,-1]],"__id":4162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1823,693]],"__id":4167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1823,694]],"__id":4171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4172,"parentNodes":[1828],"index":208,"rule":{"name":"Bootstrap430","pattern":{"type":"object","id":767,"cls":"Fibonacci430","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap430"},{"type":"beta","out_nodes":[[1827,-1]],"__id":4173,"parentNodes":[1829,1830]},{"type":"rightadapter","out_nodes":[[1828,695]],"__id":4178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1828,696]],"__id":4182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4183,"parentNodes":[1832],"index":209,"rule":{"name":"Recurse430","pattern":{"type":"composite","id":770,"leftPattern":{"type":"not","id":768,"cls":"Fibonacci430","alias":"f"},"rightPattern":{"type":"object","id":769,"cls":"Fibonacci430","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');let Fibonacci430 = defined.get('Fibonacci430');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci430(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse430"},{"type":"beta","out_nodes":[[1831,-1]],"__id":4184,"parentNodes":[1833,1834]},{"type":"rightadapter","out_nodes":[[1832,697]],"__id":4188,"parentNodes":[37]},{"type":"not","out_nodes":[[1835,-1]],"__id":4189,"parentNodes":[1836,1837],"constraint":{"type":"join-reference","out_nodes":[],"__id":4190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1832,-1]],"__id":4191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1834,698]],"__id":4195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1834,699]],"__id":4199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4200,"parentNodes":[1839],"index":210,"rule":{"name":"Calculate429","pattern":{"type":"composite","id":777,"leftPattern":{"type":"composite","id":776,"leftPattern":{"type":"composite","id":775,"leftPattern":{"type":"object","id":771,"cls":"Fibonacci429","alias":"f1"},"rightPattern":{"type":"object","id":772,"cls":"Fibonacci429","alias":"f2"}},"rightPattern":{"type":"object","id":773,"cls":"Fibonacci429","alias":"f3"}},"rightPattern":{"type":"object","id":774,"cls":"Result429","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate429"},{"type":"beta","out_nodes":[[1838,-1]],"__id":4201,"parentNodes":[1841,1842]},{"type":"type","out_nodes":[[3,700]],"__id":4202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result429"}},{"type":"rightadapter","out_nodes":[[1839,700]],"__id":4205,"parentNodes":[4]},{"type":"join","out_nodes":[[1843,-1]],"__id":4206,"parentNodes":[1845,1846],"constraint":{"type":"join-reference","out_nodes":[],"__id":4207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1839,-1]],"__id":4208,"parentNodes":[]},{"type":"type","out_nodes":[[9,701],[14,702],[20,703],[30,705],[20,707],[30,708]],"__id":4209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci429"}},{"type":"rightadapter","out_nodes":[[1842,701]],"__id":4212,"parentNodes":[10]},{"type":"join","out_nodes":[[1847,-1]],"__id":4213,"parentNodes":[1848,1849],"constraint":{"type":"join-reference","out_nodes":[],"__id":4214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1842,-1]],"__id":4215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1846,702]],"__id":4220,"parentNodes":[16]},{"type":"beta","out_nodes":[[1850,-1]],"__id":4221,"parentNodes":[1851,1852]},{"type":"leftadapter","out_nodes":[[1846,-1]],"__id":4222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1849,703]],"__id":4227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1849,704]],"__id":4231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4232,"parentNodes":[1854],"index":211,"rule":{"name":"Bootstrap429","pattern":{"type":"object","id":778,"cls":"Fibonacci429","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap429"},{"type":"beta","out_nodes":[[1853,-1]],"__id":4233,"parentNodes":[1855,1856]},{"type":"rightadapter","out_nodes":[[1854,705]],"__id":4238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1854,706]],"__id":4242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4243,"parentNodes":[1858],"index":212,"rule":{"name":"Recurse429","pattern":{"type":"composite","id":781,"leftPattern":{"type":"not","id":779,"cls":"Fibonacci429","alias":"f"},"rightPattern":{"type":"object","id":780,"cls":"Fibonacci429","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci429 = defined.get('Fibonacci429');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci429(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse429"},{"type":"beta","out_nodes":[[1857,-1]],"__id":4244,"parentNodes":[1859,1860]},{"type":"rightadapter","out_nodes":[[1858,707]],"__id":4248,"parentNodes":[37]},{"type":"not","out_nodes":[[1861,-1]],"__id":4249,"parentNodes":[1862,1863],"constraint":{"type":"join-reference","out_nodes":[],"__id":4250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1858,-1]],"__id":4251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1860,708]],"__id":4255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1860,709]],"__id":4259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4260,"parentNodes":[1865],"index":213,"rule":{"name":"Calculate428","pattern":{"type":"composite","id":788,"leftPattern":{"type":"composite","id":787,"leftPattern":{"type":"composite","id":786,"leftPattern":{"type":"object","id":782,"cls":"Fibonacci428","alias":"f1"},"rightPattern":{"type":"object","id":783,"cls":"Fibonacci428","alias":"f2"}},"rightPattern":{"type":"object","id":784,"cls":"Fibonacci428","alias":"f3"}},"rightPattern":{"type":"object","id":785,"cls":"Result428","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate428"},{"type":"beta","out_nodes":[[1864,-1]],"__id":4261,"parentNodes":[1867,1868]},{"type":"type","out_nodes":[[3,710]],"__id":4262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result428"}},{"type":"rightadapter","out_nodes":[[1865,710]],"__id":4265,"parentNodes":[4]},{"type":"join","out_nodes":[[1869,-1]],"__id":4266,"parentNodes":[1871,1872],"constraint":{"type":"join-reference","out_nodes":[],"__id":4267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1865,-1]],"__id":4268,"parentNodes":[]},{"type":"type","out_nodes":[[9,711],[14,712],[20,713],[30,715],[20,717],[30,718]],"__id":4269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci428"}},{"type":"rightadapter","out_nodes":[[1868,711]],"__id":4272,"parentNodes":[10]},{"type":"join","out_nodes":[[1873,-1]],"__id":4273,"parentNodes":[1874,1875],"constraint":{"type":"join-reference","out_nodes":[],"__id":4274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1868,-1]],"__id":4275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1872,712]],"__id":4280,"parentNodes":[16]},{"type":"beta","out_nodes":[[1876,-1]],"__id":4281,"parentNodes":[1877,1878]},{"type":"leftadapter","out_nodes":[[1872,-1]],"__id":4282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1875,713]],"__id":4287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1875,714]],"__id":4291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4292,"parentNodes":[1880],"index":214,"rule":{"name":"Bootstrap428","pattern":{"type":"object","id":789,"cls":"Fibonacci428","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap428"},{"type":"beta","out_nodes":[[1879,-1]],"__id":4293,"parentNodes":[1881,1882]},{"type":"rightadapter","out_nodes":[[1880,715]],"__id":4298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1880,716]],"__id":4302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4303,"parentNodes":[1884],"index":215,"rule":{"name":"Recurse428","pattern":{"type":"composite","id":792,"leftPattern":{"type":"not","id":790,"cls":"Fibonacci428","alias":"f"},"rightPattern":{"type":"object","id":791,"cls":"Fibonacci428","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci428 = defined.get('Fibonacci428');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci428(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse428"},{"type":"beta","out_nodes":[[1883,-1]],"__id":4304,"parentNodes":[1885,1886]},{"type":"rightadapter","out_nodes":[[1884,717]],"__id":4308,"parentNodes":[37]},{"type":"not","out_nodes":[[1887,-1]],"__id":4309,"parentNodes":[1888,1889],"constraint":{"type":"join-reference","out_nodes":[],"__id":4310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1884,-1]],"__id":4311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1886,718]],"__id":4315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1886,719]],"__id":4319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4320,"parentNodes":[1891],"index":216,"rule":{"name":"Calculate427","pattern":{"type":"composite","id":799,"leftPattern":{"type":"composite","id":798,"leftPattern":{"type":"composite","id":797,"leftPattern":{"type":"object","id":793,"cls":"Fibonacci427","alias":"f1"},"rightPattern":{"type":"object","id":794,"cls":"Fibonacci427","alias":"f2"}},"rightPattern":{"type":"object","id":795,"cls":"Fibonacci427","alias":"f3"}},"rightPattern":{"type":"object","id":796,"cls":"Result427","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate427"},{"type":"beta","out_nodes":[[1890,-1]],"__id":4321,"parentNodes":[1893,1894]},{"type":"type","out_nodes":[[3,720]],"__id":4322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result427"}},{"type":"rightadapter","out_nodes":[[1891,720]],"__id":4325,"parentNodes":[4]},{"type":"join","out_nodes":[[1895,-1]],"__id":4326,"parentNodes":[1897,1898],"constraint":{"type":"join-reference","out_nodes":[],"__id":4327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1891,-1]],"__id":4328,"parentNodes":[]},{"type":"type","out_nodes":[[9,721],[14,722],[20,723],[30,725],[20,727],[30,728]],"__id":4329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci427"}},{"type":"rightadapter","out_nodes":[[1894,721]],"__id":4332,"parentNodes":[10]},{"type":"join","out_nodes":[[1899,-1]],"__id":4333,"parentNodes":[1900,1901],"constraint":{"type":"join-reference","out_nodes":[],"__id":4334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1894,-1]],"__id":4335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1898,722]],"__id":4340,"parentNodes":[16]},{"type":"beta","out_nodes":[[1902,-1]],"__id":4341,"parentNodes":[1903,1904]},{"type":"leftadapter","out_nodes":[[1898,-1]],"__id":4342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1901,723]],"__id":4347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1901,724]],"__id":4351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4352,"parentNodes":[1906],"index":217,"rule":{"name":"Bootstrap427","pattern":{"type":"object","id":800,"cls":"Fibonacci427","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap427"},{"type":"beta","out_nodes":[[1905,-1]],"__id":4353,"parentNodes":[1907,1908]},{"type":"rightadapter","out_nodes":[[1906,725]],"__id":4358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1906,726]],"__id":4362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4363,"parentNodes":[1910],"index":218,"rule":{"name":"Recurse427","pattern":{"type":"composite","id":803,"leftPattern":{"type":"not","id":801,"cls":"Fibonacci427","alias":"f"},"rightPattern":{"type":"object","id":802,"cls":"Fibonacci427","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci427 = defined.get('Fibonacci427');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci427(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse427"},{"type":"beta","out_nodes":[[1909,-1]],"__id":4364,"parentNodes":[1911,1912]},{"type":"rightadapter","out_nodes":[[1910,727]],"__id":4368,"parentNodes":[37]},{"type":"not","out_nodes":[[1913,-1]],"__id":4369,"parentNodes":[1914,1915],"constraint":{"type":"join-reference","out_nodes":[],"__id":4370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1910,-1]],"__id":4371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1912,728]],"__id":4375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1912,729]],"__id":4379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4380,"parentNodes":[1917],"index":219,"rule":{"name":"Calculate426","pattern":{"type":"composite","id":810,"leftPattern":{"type":"composite","id":809,"leftPattern":{"type":"composite","id":808,"leftPattern":{"type":"object","id":804,"cls":"Fibonacci426","alias":"f1"},"rightPattern":{"type":"object","id":805,"cls":"Fibonacci426","alias":"f2"}},"rightPattern":{"type":"object","id":806,"cls":"Fibonacci426","alias":"f3"}},"rightPattern":{"type":"object","id":807,"cls":"Result426","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate426"},{"type":"beta","out_nodes":[[1916,-1]],"__id":4381,"parentNodes":[1919,1920]},{"type":"type","out_nodes":[[3,730]],"__id":4382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result426"}},{"type":"rightadapter","out_nodes":[[1917,730]],"__id":4385,"parentNodes":[4]},{"type":"join","out_nodes":[[1921,-1]],"__id":4386,"parentNodes":[1923,1924],"constraint":{"type":"join-reference","out_nodes":[],"__id":4387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1917,-1]],"__id":4388,"parentNodes":[]},{"type":"type","out_nodes":[[9,731],[14,732],[20,733],[30,735],[20,737],[30,738]],"__id":4389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci426"}},{"type":"rightadapter","out_nodes":[[1920,731]],"__id":4392,"parentNodes":[10]},{"type":"join","out_nodes":[[1925,-1]],"__id":4393,"parentNodes":[1926,1927],"constraint":{"type":"join-reference","out_nodes":[],"__id":4394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1920,-1]],"__id":4395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1924,732]],"__id":4400,"parentNodes":[16]},{"type":"beta","out_nodes":[[1928,-1]],"__id":4401,"parentNodes":[1929,1930]},{"type":"leftadapter","out_nodes":[[1924,-1]],"__id":4402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1927,733]],"__id":4407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1927,734]],"__id":4411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4412,"parentNodes":[1932],"index":220,"rule":{"name":"Bootstrap426","pattern":{"type":"object","id":811,"cls":"Fibonacci426","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap426"},{"type":"beta","out_nodes":[[1931,-1]],"__id":4413,"parentNodes":[1933,1934]},{"type":"rightadapter","out_nodes":[[1932,735]],"__id":4418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1932,736]],"__id":4422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4423,"parentNodes":[1936],"index":221,"rule":{"name":"Recurse426","pattern":{"type":"composite","id":814,"leftPattern":{"type":"not","id":812,"cls":"Fibonacci426","alias":"f"},"rightPattern":{"type":"object","id":813,"cls":"Fibonacci426","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci426 = defined.get('Fibonacci426');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci426(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse426"},{"type":"beta","out_nodes":[[1935,-1]],"__id":4424,"parentNodes":[1937,1938]},{"type":"rightadapter","out_nodes":[[1936,737]],"__id":4428,"parentNodes":[37]},{"type":"not","out_nodes":[[1939,-1]],"__id":4429,"parentNodes":[1940,1941],"constraint":{"type":"join-reference","out_nodes":[],"__id":4430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1936,-1]],"__id":4431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1938,738]],"__id":4435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1938,739]],"__id":4439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4440,"parentNodes":[1943],"index":222,"rule":{"name":"Calculate425","pattern":{"type":"composite","id":821,"leftPattern":{"type":"composite","id":820,"leftPattern":{"type":"composite","id":819,"leftPattern":{"type":"object","id":815,"cls":"Fibonacci425","alias":"f1"},"rightPattern":{"type":"object","id":816,"cls":"Fibonacci425","alias":"f2"}},"rightPattern":{"type":"object","id":817,"cls":"Fibonacci425","alias":"f3"}},"rightPattern":{"type":"object","id":818,"cls":"Result425","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate425"},{"type":"beta","out_nodes":[[1942,-1]],"__id":4441,"parentNodes":[1945,1946]},{"type":"type","out_nodes":[[3,740]],"__id":4442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result425"}},{"type":"rightadapter","out_nodes":[[1943,740]],"__id":4445,"parentNodes":[4]},{"type":"join","out_nodes":[[1947,-1]],"__id":4446,"parentNodes":[1949,1950],"constraint":{"type":"join-reference","out_nodes":[],"__id":4447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1943,-1]],"__id":4448,"parentNodes":[]},{"type":"type","out_nodes":[[9,741],[14,742],[20,743],[30,745],[20,747],[30,748]],"__id":4449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci425"}},{"type":"rightadapter","out_nodes":[[1946,741]],"__id":4452,"parentNodes":[10]},{"type":"join","out_nodes":[[1951,-1]],"__id":4453,"parentNodes":[1952,1953],"constraint":{"type":"join-reference","out_nodes":[],"__id":4454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1946,-1]],"__id":4455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1950,742]],"__id":4460,"parentNodes":[16]},{"type":"beta","out_nodes":[[1954,-1]],"__id":4461,"parentNodes":[1955,1956]},{"type":"leftadapter","out_nodes":[[1950,-1]],"__id":4462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1953,743]],"__id":4467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1953,744]],"__id":4471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4472,"parentNodes":[1958],"index":223,"rule":{"name":"Bootstrap425","pattern":{"type":"object","id":822,"cls":"Fibonacci425","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap425"},{"type":"beta","out_nodes":[[1957,-1]],"__id":4473,"parentNodes":[1959,1960]},{"type":"rightadapter","out_nodes":[[1958,745]],"__id":4478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1958,746]],"__id":4482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4483,"parentNodes":[1962],"index":224,"rule":{"name":"Recurse425","pattern":{"type":"composite","id":825,"leftPattern":{"type":"not","id":823,"cls":"Fibonacci425","alias":"f"},"rightPattern":{"type":"object","id":824,"cls":"Fibonacci425","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci425 = defined.get('Fibonacci425');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci425(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse425"},{"type":"beta","out_nodes":[[1961,-1]],"__id":4484,"parentNodes":[1963,1964]},{"type":"rightadapter","out_nodes":[[1962,747]],"__id":4488,"parentNodes":[37]},{"type":"not","out_nodes":[[1965,-1]],"__id":4489,"parentNodes":[1966,1967],"constraint":{"type":"join-reference","out_nodes":[],"__id":4490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1962,-1]],"__id":4491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1964,748]],"__id":4495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1964,749]],"__id":4499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4500,"parentNodes":[1969],"index":225,"rule":{"name":"Calculate424","pattern":{"type":"composite","id":832,"leftPattern":{"type":"composite","id":831,"leftPattern":{"type":"composite","id":830,"leftPattern":{"type":"object","id":826,"cls":"Fibonacci424","alias":"f1"},"rightPattern":{"type":"object","id":827,"cls":"Fibonacci424","alias":"f2"}},"rightPattern":{"type":"object","id":828,"cls":"Fibonacci424","alias":"f3"}},"rightPattern":{"type":"object","id":829,"cls":"Result424","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate424"},{"type":"beta","out_nodes":[[1968,-1]],"__id":4501,"parentNodes":[1971,1972]},{"type":"type","out_nodes":[[3,750]],"__id":4502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result424"}},{"type":"rightadapter","out_nodes":[[1969,750]],"__id":4505,"parentNodes":[4]},{"type":"join","out_nodes":[[1973,-1]],"__id":4506,"parentNodes":[1975,1976],"constraint":{"type":"join-reference","out_nodes":[],"__id":4507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1969,-1]],"__id":4508,"parentNodes":[]},{"type":"type","out_nodes":[[9,751],[14,752],[20,753],[30,755],[20,757],[30,758]],"__id":4509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci424"}},{"type":"rightadapter","out_nodes":[[1972,751]],"__id":4512,"parentNodes":[10]},{"type":"join","out_nodes":[[1977,-1]],"__id":4513,"parentNodes":[1978,1979],"constraint":{"type":"join-reference","out_nodes":[],"__id":4514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1972,-1]],"__id":4515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1976,752]],"__id":4520,"parentNodes":[16]},{"type":"beta","out_nodes":[[1980,-1]],"__id":4521,"parentNodes":[1981,1982]},{"type":"leftadapter","out_nodes":[[1976,-1]],"__id":4522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1979,753]],"__id":4527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[1979,754]],"__id":4531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4532,"parentNodes":[1984],"index":226,"rule":{"name":"Bootstrap424","pattern":{"type":"object","id":833,"cls":"Fibonacci424","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap424"},{"type":"beta","out_nodes":[[1983,-1]],"__id":4533,"parentNodes":[1985,1986]},{"type":"rightadapter","out_nodes":[[1984,755]],"__id":4538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[1984,756]],"__id":4542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4543,"parentNodes":[1988],"index":227,"rule":{"name":"Recurse424","pattern":{"type":"composite","id":836,"leftPattern":{"type":"not","id":834,"cls":"Fibonacci424","alias":"f"},"rightPattern":{"type":"object","id":835,"cls":"Fibonacci424","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci424 = defined.get('Fibonacci424');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci424(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse424"},{"type":"beta","out_nodes":[[1987,-1]],"__id":4544,"parentNodes":[1989,1990]},{"type":"rightadapter","out_nodes":[[1988,757]],"__id":4548,"parentNodes":[37]},{"type":"not","out_nodes":[[1991,-1]],"__id":4549,"parentNodes":[1992,1993],"constraint":{"type":"join-reference","out_nodes":[],"__id":4550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[1988,-1]],"__id":4551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[1990,758]],"__id":4555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[1990,759]],"__id":4559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4560,"parentNodes":[1995],"index":228,"rule":{"name":"Calculate423","pattern":{"type":"composite","id":843,"leftPattern":{"type":"composite","id":842,"leftPattern":{"type":"composite","id":841,"leftPattern":{"type":"object","id":837,"cls":"Fibonacci423","alias":"f1"},"rightPattern":{"type":"object","id":838,"cls":"Fibonacci423","alias":"f2"}},"rightPattern":{"type":"object","id":839,"cls":"Fibonacci423","alias":"f3"}},"rightPattern":{"type":"object","id":840,"cls":"Result423","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate423"},{"type":"beta","out_nodes":[[1994,-1]],"__id":4561,"parentNodes":[1997,1998]},{"type":"type","out_nodes":[[3,760]],"__id":4562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result423"}},{"type":"rightadapter","out_nodes":[[1995,760]],"__id":4565,"parentNodes":[4]},{"type":"join","out_nodes":[[1999,-1]],"__id":4566,"parentNodes":[2001,2002],"constraint":{"type":"join-reference","out_nodes":[],"__id":4567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1995,-1]],"__id":4568,"parentNodes":[]},{"type":"type","out_nodes":[[9,761],[14,762],[20,763],[30,765],[20,767],[30,768]],"__id":4569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci423"}},{"type":"rightadapter","out_nodes":[[1998,761]],"__id":4572,"parentNodes":[10]},{"type":"join","out_nodes":[[2003,-1]],"__id":4573,"parentNodes":[2004,2005],"constraint":{"type":"join-reference","out_nodes":[],"__id":4574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[1998,-1]],"__id":4575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2002,762]],"__id":4580,"parentNodes":[16]},{"type":"beta","out_nodes":[[2006,-1]],"__id":4581,"parentNodes":[2007,2008]},{"type":"leftadapter","out_nodes":[[2002,-1]],"__id":4582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2005,763]],"__id":4587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2005,764]],"__id":4591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4592,"parentNodes":[2010],"index":229,"rule":{"name":"Bootstrap423","pattern":{"type":"object","id":844,"cls":"Fibonacci423","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap423"},{"type":"beta","out_nodes":[[2009,-1]],"__id":4593,"parentNodes":[2011,2012]},{"type":"rightadapter","out_nodes":[[2010,765]],"__id":4598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2010,766]],"__id":4602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4603,"parentNodes":[2014],"index":230,"rule":{"name":"Recurse423","pattern":{"type":"composite","id":847,"leftPattern":{"type":"not","id":845,"cls":"Fibonacci423","alias":"f"},"rightPattern":{"type":"object","id":846,"cls":"Fibonacci423","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci423 = defined.get('Fibonacci423');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci423(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse423"},{"type":"beta","out_nodes":[[2013,-1]],"__id":4604,"parentNodes":[2015,2016]},{"type":"rightadapter","out_nodes":[[2014,767]],"__id":4608,"parentNodes":[37]},{"type":"not","out_nodes":[[2017,-1]],"__id":4609,"parentNodes":[2018,2019],"constraint":{"type":"join-reference","out_nodes":[],"__id":4610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2014,-1]],"__id":4611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2016,768]],"__id":4615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2016,769]],"__id":4619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4620,"parentNodes":[2021],"index":231,"rule":{"name":"Calculate422","pattern":{"type":"composite","id":854,"leftPattern":{"type":"composite","id":853,"leftPattern":{"type":"composite","id":852,"leftPattern":{"type":"object","id":848,"cls":"Fibonacci422","alias":"f1"},"rightPattern":{"type":"object","id":849,"cls":"Fibonacci422","alias":"f2"}},"rightPattern":{"type":"object","id":850,"cls":"Fibonacci422","alias":"f3"}},"rightPattern":{"type":"object","id":851,"cls":"Result422","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate422"},{"type":"beta","out_nodes":[[2020,-1]],"__id":4621,"parentNodes":[2023,2024]},{"type":"type","out_nodes":[[3,770]],"__id":4622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result422"}},{"type":"rightadapter","out_nodes":[[2021,770]],"__id":4625,"parentNodes":[4]},{"type":"join","out_nodes":[[2025,-1]],"__id":4626,"parentNodes":[2027,2028],"constraint":{"type":"join-reference","out_nodes":[],"__id":4627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2021,-1]],"__id":4628,"parentNodes":[]},{"type":"type","out_nodes":[[9,771],[14,772],[20,773],[30,775],[20,777],[30,778]],"__id":4629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci422"}},{"type":"rightadapter","out_nodes":[[2024,771]],"__id":4632,"parentNodes":[10]},{"type":"join","out_nodes":[[2029,-1]],"__id":4633,"parentNodes":[2030,2031],"constraint":{"type":"join-reference","out_nodes":[],"__id":4634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2024,-1]],"__id":4635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2028,772]],"__id":4640,"parentNodes":[16]},{"type":"beta","out_nodes":[[2032,-1]],"__id":4641,"parentNodes":[2033,2034]},{"type":"leftadapter","out_nodes":[[2028,-1]],"__id":4642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2031,773]],"__id":4647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2031,774]],"__id":4651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4652,"parentNodes":[2036],"index":232,"rule":{"name":"Bootstrap422","pattern":{"type":"object","id":855,"cls":"Fibonacci422","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap422"},{"type":"beta","out_nodes":[[2035,-1]],"__id":4653,"parentNodes":[2037,2038]},{"type":"rightadapter","out_nodes":[[2036,775]],"__id":4658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2036,776]],"__id":4662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4663,"parentNodes":[2040],"index":233,"rule":{"name":"Recurse422","pattern":{"type":"composite","id":858,"leftPattern":{"type":"not","id":856,"cls":"Fibonacci422","alias":"f"},"rightPattern":{"type":"object","id":857,"cls":"Fibonacci422","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci422 = defined.get('Fibonacci422');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci422(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse422"},{"type":"beta","out_nodes":[[2039,-1]],"__id":4664,"parentNodes":[2041,2042]},{"type":"rightadapter","out_nodes":[[2040,777]],"__id":4668,"parentNodes":[37]},{"type":"not","out_nodes":[[2043,-1]],"__id":4669,"parentNodes":[2044,2045],"constraint":{"type":"join-reference","out_nodes":[],"__id":4670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2040,-1]],"__id":4671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2042,778]],"__id":4675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2042,779]],"__id":4679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4680,"parentNodes":[2047],"index":234,"rule":{"name":"Calculate421","pattern":{"type":"composite","id":865,"leftPattern":{"type":"composite","id":864,"leftPattern":{"type":"composite","id":863,"leftPattern":{"type":"object","id":859,"cls":"Fibonacci421","alias":"f1"},"rightPattern":{"type":"object","id":860,"cls":"Fibonacci421","alias":"f2"}},"rightPattern":{"type":"object","id":861,"cls":"Fibonacci421","alias":"f3"}},"rightPattern":{"type":"object","id":862,"cls":"Result421","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate421"},{"type":"beta","out_nodes":[[2046,-1]],"__id":4681,"parentNodes":[2049,2050]},{"type":"type","out_nodes":[[3,780]],"__id":4682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result421"}},{"type":"rightadapter","out_nodes":[[2047,780]],"__id":4685,"parentNodes":[4]},{"type":"join","out_nodes":[[2051,-1]],"__id":4686,"parentNodes":[2053,2054],"constraint":{"type":"join-reference","out_nodes":[],"__id":4687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2047,-1]],"__id":4688,"parentNodes":[]},{"type":"type","out_nodes":[[9,781],[14,782],[20,783],[30,785],[20,787],[30,788]],"__id":4689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci421"}},{"type":"rightadapter","out_nodes":[[2050,781]],"__id":4692,"parentNodes":[10]},{"type":"join","out_nodes":[[2055,-1]],"__id":4693,"parentNodes":[2056,2057],"constraint":{"type":"join-reference","out_nodes":[],"__id":4694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2050,-1]],"__id":4695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2054,782]],"__id":4700,"parentNodes":[16]},{"type":"beta","out_nodes":[[2058,-1]],"__id":4701,"parentNodes":[2059,2060]},{"type":"leftadapter","out_nodes":[[2054,-1]],"__id":4702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2057,783]],"__id":4707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2057,784]],"__id":4711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4712,"parentNodes":[2062],"index":235,"rule":{"name":"Bootstrap421","pattern":{"type":"object","id":866,"cls":"Fibonacci421","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap421"},{"type":"beta","out_nodes":[[2061,-1]],"__id":4713,"parentNodes":[2063,2064]},{"type":"rightadapter","out_nodes":[[2062,785]],"__id":4718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2062,786]],"__id":4722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4723,"parentNodes":[2066],"index":236,"rule":{"name":"Recurse421","pattern":{"type":"composite","id":869,"leftPattern":{"type":"not","id":867,"cls":"Fibonacci421","alias":"f"},"rightPattern":{"type":"object","id":868,"cls":"Fibonacci421","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci421 = defined.get('Fibonacci421');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci421(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse421"},{"type":"beta","out_nodes":[[2065,-1]],"__id":4724,"parentNodes":[2067,2068]},{"type":"rightadapter","out_nodes":[[2066,787]],"__id":4728,"parentNodes":[37]},{"type":"not","out_nodes":[[2069,-1]],"__id":4729,"parentNodes":[2070,2071],"constraint":{"type":"join-reference","out_nodes":[],"__id":4730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2066,-1]],"__id":4731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2068,788]],"__id":4735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2068,789]],"__id":4739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4740,"parentNodes":[2073],"index":237,"rule":{"name":"Calculate420","pattern":{"type":"composite","id":876,"leftPattern":{"type":"composite","id":875,"leftPattern":{"type":"composite","id":874,"leftPattern":{"type":"object","id":870,"cls":"Fibonacci420","alias":"f1"},"rightPattern":{"type":"object","id":871,"cls":"Fibonacci420","alias":"f2"}},"rightPattern":{"type":"object","id":872,"cls":"Fibonacci420","alias":"f3"}},"rightPattern":{"type":"object","id":873,"cls":"Result420","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate420"},{"type":"beta","out_nodes":[[2072,-1]],"__id":4741,"parentNodes":[2075,2076]},{"type":"type","out_nodes":[[3,790]],"__id":4742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result420"}},{"type":"rightadapter","out_nodes":[[2073,790]],"__id":4745,"parentNodes":[4]},{"type":"join","out_nodes":[[2077,-1]],"__id":4746,"parentNodes":[2079,2080],"constraint":{"type":"join-reference","out_nodes":[],"__id":4747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2073,-1]],"__id":4748,"parentNodes":[]},{"type":"type","out_nodes":[[9,791],[14,792],[20,793],[30,795],[20,797],[30,798]],"__id":4749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci420"}},{"type":"rightadapter","out_nodes":[[2076,791]],"__id":4752,"parentNodes":[10]},{"type":"join","out_nodes":[[2081,-1]],"__id":4753,"parentNodes":[2082,2083],"constraint":{"type":"join-reference","out_nodes":[],"__id":4754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2076,-1]],"__id":4755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2080,792]],"__id":4760,"parentNodes":[16]},{"type":"beta","out_nodes":[[2084,-1]],"__id":4761,"parentNodes":[2085,2086]},{"type":"leftadapter","out_nodes":[[2080,-1]],"__id":4762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2083,793]],"__id":4767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2083,794]],"__id":4771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4772,"parentNodes":[2088],"index":238,"rule":{"name":"Bootstrap420","pattern":{"type":"object","id":877,"cls":"Fibonacci420","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap420"},{"type":"beta","out_nodes":[[2087,-1]],"__id":4773,"parentNodes":[2089,2090]},{"type":"rightadapter","out_nodes":[[2088,795]],"__id":4778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2088,796]],"__id":4782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4783,"parentNodes":[2092],"index":239,"rule":{"name":"Recurse420","pattern":{"type":"composite","id":880,"leftPattern":{"type":"not","id":878,"cls":"Fibonacci420","alias":"f"},"rightPattern":{"type":"object","id":879,"cls":"Fibonacci420","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');let Fibonacci420 = defined.get('Fibonacci420');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci420(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse420"},{"type":"beta","out_nodes":[[2091,-1]],"__id":4784,"parentNodes":[2093,2094]},{"type":"rightadapter","out_nodes":[[2092,797]],"__id":4788,"parentNodes":[37]},{"type":"not","out_nodes":[[2095,-1]],"__id":4789,"parentNodes":[2096,2097],"constraint":{"type":"join-reference","out_nodes":[],"__id":4790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2092,-1]],"__id":4791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2094,798]],"__id":4795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2094,799]],"__id":4799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4800,"parentNodes":[2099],"index":240,"rule":{"name":"Calculate419","pattern":{"type":"composite","id":887,"leftPattern":{"type":"composite","id":886,"leftPattern":{"type":"composite","id":885,"leftPattern":{"type":"object","id":881,"cls":"Fibonacci419","alias":"f1"},"rightPattern":{"type":"object","id":882,"cls":"Fibonacci419","alias":"f2"}},"rightPattern":{"type":"object","id":883,"cls":"Fibonacci419","alias":"f3"}},"rightPattern":{"type":"object","id":884,"cls":"Result419","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate419"},{"type":"beta","out_nodes":[[2098,-1]],"__id":4801,"parentNodes":[2101,2102]},{"type":"type","out_nodes":[[3,800]],"__id":4802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result419"}},{"type":"rightadapter","out_nodes":[[2099,800]],"__id":4805,"parentNodes":[4]},{"type":"join","out_nodes":[[2103,-1]],"__id":4806,"parentNodes":[2105,2106],"constraint":{"type":"join-reference","out_nodes":[],"__id":4807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2099,-1]],"__id":4808,"parentNodes":[]},{"type":"type","out_nodes":[[9,801],[14,802],[20,803],[30,805],[20,807],[30,808]],"__id":4809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci419"}},{"type":"rightadapter","out_nodes":[[2102,801]],"__id":4812,"parentNodes":[10]},{"type":"join","out_nodes":[[2107,-1]],"__id":4813,"parentNodes":[2108,2109],"constraint":{"type":"join-reference","out_nodes":[],"__id":4814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2102,-1]],"__id":4815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2106,802]],"__id":4820,"parentNodes":[16]},{"type":"beta","out_nodes":[[2110,-1]],"__id":4821,"parentNodes":[2111,2112]},{"type":"leftadapter","out_nodes":[[2106,-1]],"__id":4822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2109,803]],"__id":4827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2109,804]],"__id":4831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4832,"parentNodes":[2114],"index":241,"rule":{"name":"Bootstrap419","pattern":{"type":"object","id":888,"cls":"Fibonacci419","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap419"},{"type":"beta","out_nodes":[[2113,-1]],"__id":4833,"parentNodes":[2115,2116]},{"type":"rightadapter","out_nodes":[[2114,805]],"__id":4838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2114,806]],"__id":4842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4843,"parentNodes":[2118],"index":242,"rule":{"name":"Recurse419","pattern":{"type":"composite","id":891,"leftPattern":{"type":"not","id":889,"cls":"Fibonacci419","alias":"f"},"rightPattern":{"type":"object","id":890,"cls":"Fibonacci419","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci419 = defined.get('Fibonacci419');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci419(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse419"},{"type":"beta","out_nodes":[[2117,-1]],"__id":4844,"parentNodes":[2119,2120]},{"type":"rightadapter","out_nodes":[[2118,807]],"__id":4848,"parentNodes":[37]},{"type":"not","out_nodes":[[2121,-1]],"__id":4849,"parentNodes":[2122,2123],"constraint":{"type":"join-reference","out_nodes":[],"__id":4850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2118,-1]],"__id":4851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2120,808]],"__id":4855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2120,809]],"__id":4859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4860,"parentNodes":[2125],"index":243,"rule":{"name":"Calculate418","pattern":{"type":"composite","id":898,"leftPattern":{"type":"composite","id":897,"leftPattern":{"type":"composite","id":896,"leftPattern":{"type":"object","id":892,"cls":"Fibonacci418","alias":"f1"},"rightPattern":{"type":"object","id":893,"cls":"Fibonacci418","alias":"f2"}},"rightPattern":{"type":"object","id":894,"cls":"Fibonacci418","alias":"f3"}},"rightPattern":{"type":"object","id":895,"cls":"Result418","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate418"},{"type":"beta","out_nodes":[[2124,-1]],"__id":4861,"parentNodes":[2127,2128]},{"type":"type","out_nodes":[[3,810]],"__id":4862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result418"}},{"type":"rightadapter","out_nodes":[[2125,810]],"__id":4865,"parentNodes":[4]},{"type":"join","out_nodes":[[2129,-1]],"__id":4866,"parentNodes":[2131,2132],"constraint":{"type":"join-reference","out_nodes":[],"__id":4867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2125,-1]],"__id":4868,"parentNodes":[]},{"type":"type","out_nodes":[[9,811],[14,812],[20,813],[30,815],[20,817],[30,818]],"__id":4869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci418"}},{"type":"rightadapter","out_nodes":[[2128,811]],"__id":4872,"parentNodes":[10]},{"type":"join","out_nodes":[[2133,-1]],"__id":4873,"parentNodes":[2134,2135],"constraint":{"type":"join-reference","out_nodes":[],"__id":4874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2128,-1]],"__id":4875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2132,812]],"__id":4880,"parentNodes":[16]},{"type":"beta","out_nodes":[[2136,-1]],"__id":4881,"parentNodes":[2137,2138]},{"type":"leftadapter","out_nodes":[[2132,-1]],"__id":4882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2135,813]],"__id":4887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2135,814]],"__id":4891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4892,"parentNodes":[2140],"index":244,"rule":{"name":"Bootstrap418","pattern":{"type":"object","id":899,"cls":"Fibonacci418","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap418"},{"type":"beta","out_nodes":[[2139,-1]],"__id":4893,"parentNodes":[2141,2142]},{"type":"rightadapter","out_nodes":[[2140,815]],"__id":4898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2140,816]],"__id":4902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4903,"parentNodes":[2144],"index":245,"rule":{"name":"Recurse418","pattern":{"type":"composite","id":902,"leftPattern":{"type":"not","id":900,"cls":"Fibonacci418","alias":"f"},"rightPattern":{"type":"object","id":901,"cls":"Fibonacci418","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci418 = defined.get('Fibonacci418');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci418(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse418"},{"type":"beta","out_nodes":[[2143,-1]],"__id":4904,"parentNodes":[2145,2146]},{"type":"rightadapter","out_nodes":[[2144,817]],"__id":4908,"parentNodes":[37]},{"type":"not","out_nodes":[[2147,-1]],"__id":4909,"parentNodes":[2148,2149],"constraint":{"type":"join-reference","out_nodes":[],"__id":4910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2144,-1]],"__id":4911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2146,818]],"__id":4915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2146,819]],"__id":4919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4920,"parentNodes":[2151],"index":246,"rule":{"name":"Calculate417","pattern":{"type":"composite","id":909,"leftPattern":{"type":"composite","id":908,"leftPattern":{"type":"composite","id":907,"leftPattern":{"type":"object","id":903,"cls":"Fibonacci417","alias":"f1"},"rightPattern":{"type":"object","id":904,"cls":"Fibonacci417","alias":"f2"}},"rightPattern":{"type":"object","id":905,"cls":"Fibonacci417","alias":"f3"}},"rightPattern":{"type":"object","id":906,"cls":"Result417","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate417"},{"type":"beta","out_nodes":[[2150,-1]],"__id":4921,"parentNodes":[2153,2154]},{"type":"type","out_nodes":[[3,820]],"__id":4922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result417"}},{"type":"rightadapter","out_nodes":[[2151,820]],"__id":4925,"parentNodes":[4]},{"type":"join","out_nodes":[[2155,-1]],"__id":4926,"parentNodes":[2157,2158],"constraint":{"type":"join-reference","out_nodes":[],"__id":4927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2151,-1]],"__id":4928,"parentNodes":[]},{"type":"type","out_nodes":[[9,821],[14,822],[20,823],[30,825],[20,827],[30,828]],"__id":4929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci417"}},{"type":"rightadapter","out_nodes":[[2154,821]],"__id":4932,"parentNodes":[10]},{"type":"join","out_nodes":[[2159,-1]],"__id":4933,"parentNodes":[2160,2161],"constraint":{"type":"join-reference","out_nodes":[],"__id":4934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2154,-1]],"__id":4935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2158,822]],"__id":4940,"parentNodes":[16]},{"type":"beta","out_nodes":[[2162,-1]],"__id":4941,"parentNodes":[2163,2164]},{"type":"leftadapter","out_nodes":[[2158,-1]],"__id":4942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2161,823]],"__id":4947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2161,824]],"__id":4951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4952,"parentNodes":[2166],"index":247,"rule":{"name":"Bootstrap417","pattern":{"type":"object","id":910,"cls":"Fibonacci417","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap417"},{"type":"beta","out_nodes":[[2165,-1]],"__id":4953,"parentNodes":[2167,2168]},{"type":"rightadapter","out_nodes":[[2166,825]],"__id":4958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2166,826]],"__id":4962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4963,"parentNodes":[2170],"index":248,"rule":{"name":"Recurse417","pattern":{"type":"composite","id":913,"leftPattern":{"type":"not","id":911,"cls":"Fibonacci417","alias":"f"},"rightPattern":{"type":"object","id":912,"cls":"Fibonacci417","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci417 = defined.get('Fibonacci417');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci417(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse417"},{"type":"beta","out_nodes":[[2169,-1]],"__id":4964,"parentNodes":[2171,2172]},{"type":"rightadapter","out_nodes":[[2170,827]],"__id":4968,"parentNodes":[37]},{"type":"not","out_nodes":[[2173,-1]],"__id":4969,"parentNodes":[2174,2175],"constraint":{"type":"join-reference","out_nodes":[],"__id":4970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2170,-1]],"__id":4971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2172,828]],"__id":4975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2172,829]],"__id":4979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":4980,"parentNodes":[2177],"index":249,"rule":{"name":"Calculate416","pattern":{"type":"composite","id":920,"leftPattern":{"type":"composite","id":919,"leftPattern":{"type":"composite","id":918,"leftPattern":{"type":"object","id":914,"cls":"Fibonacci416","alias":"f1"},"rightPattern":{"type":"object","id":915,"cls":"Fibonacci416","alias":"f2"}},"rightPattern":{"type":"object","id":916,"cls":"Fibonacci416","alias":"f3"}},"rightPattern":{"type":"object","id":917,"cls":"Result416","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate416"},{"type":"beta","out_nodes":[[2176,-1]],"__id":4981,"parentNodes":[2179,2180]},{"type":"type","out_nodes":[[3,830]],"__id":4982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result416"}},{"type":"rightadapter","out_nodes":[[2177,830]],"__id":4985,"parentNodes":[4]},{"type":"join","out_nodes":[[2181,-1]],"__id":4986,"parentNodes":[2183,2184],"constraint":{"type":"join-reference","out_nodes":[],"__id":4987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2177,-1]],"__id":4988,"parentNodes":[]},{"type":"type","out_nodes":[[9,831],[14,832],[20,833],[30,835],[20,837],[30,838]],"__id":4989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci416"}},{"type":"rightadapter","out_nodes":[[2180,831]],"__id":4992,"parentNodes":[10]},{"type":"join","out_nodes":[[2185,-1]],"__id":4993,"parentNodes":[2186,2187],"constraint":{"type":"join-reference","out_nodes":[],"__id":4994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2180,-1]],"__id":4995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2184,832]],"__id":5000,"parentNodes":[16]},{"type":"beta","out_nodes":[[2188,-1]],"__id":5001,"parentNodes":[2189,2190]},{"type":"leftadapter","out_nodes":[[2184,-1]],"__id":5002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2187,833]],"__id":5007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2187,834]],"__id":5011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5012,"parentNodes":[2192],"index":250,"rule":{"name":"Bootstrap416","pattern":{"type":"object","id":921,"cls":"Fibonacci416","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap416"},{"type":"beta","out_nodes":[[2191,-1]],"__id":5013,"parentNodes":[2193,2194]},{"type":"rightadapter","out_nodes":[[2192,835]],"__id":5018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2192,836]],"__id":5022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5023,"parentNodes":[2196],"index":251,"rule":{"name":"Recurse416","pattern":{"type":"composite","id":924,"leftPattern":{"type":"not","id":922,"cls":"Fibonacci416","alias":"f"},"rightPattern":{"type":"object","id":923,"cls":"Fibonacci416","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci416 = defined.get('Fibonacci416');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci416(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse416"},{"type":"beta","out_nodes":[[2195,-1]],"__id":5024,"parentNodes":[2197,2198]},{"type":"rightadapter","out_nodes":[[2196,837]],"__id":5028,"parentNodes":[37]},{"type":"not","out_nodes":[[2199,-1]],"__id":5029,"parentNodes":[2200,2201],"constraint":{"type":"join-reference","out_nodes":[],"__id":5030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2196,-1]],"__id":5031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2198,838]],"__id":5035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2198,839]],"__id":5039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5040,"parentNodes":[2203],"index":252,"rule":{"name":"Calculate415","pattern":{"type":"composite","id":931,"leftPattern":{"type":"composite","id":930,"leftPattern":{"type":"composite","id":929,"leftPattern":{"type":"object","id":925,"cls":"Fibonacci415","alias":"f1"},"rightPattern":{"type":"object","id":926,"cls":"Fibonacci415","alias":"f2"}},"rightPattern":{"type":"object","id":927,"cls":"Fibonacci415","alias":"f3"}},"rightPattern":{"type":"object","id":928,"cls":"Result415","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate415"},{"type":"beta","out_nodes":[[2202,-1]],"__id":5041,"parentNodes":[2205,2206]},{"type":"type","out_nodes":[[3,840]],"__id":5042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result415"}},{"type":"rightadapter","out_nodes":[[2203,840]],"__id":5045,"parentNodes":[4]},{"type":"join","out_nodes":[[2207,-1]],"__id":5046,"parentNodes":[2209,2210],"constraint":{"type":"join-reference","out_nodes":[],"__id":5047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2203,-1]],"__id":5048,"parentNodes":[]},{"type":"type","out_nodes":[[9,841],[14,842],[20,843],[30,845],[20,847],[30,848]],"__id":5049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci415"}},{"type":"rightadapter","out_nodes":[[2206,841]],"__id":5052,"parentNodes":[10]},{"type":"join","out_nodes":[[2211,-1]],"__id":5053,"parentNodes":[2212,2213],"constraint":{"type":"join-reference","out_nodes":[],"__id":5054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2206,-1]],"__id":5055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2210,842]],"__id":5060,"parentNodes":[16]},{"type":"beta","out_nodes":[[2214,-1]],"__id":5061,"parentNodes":[2215,2216]},{"type":"leftadapter","out_nodes":[[2210,-1]],"__id":5062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2213,843]],"__id":5067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2213,844]],"__id":5071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5072,"parentNodes":[2218],"index":253,"rule":{"name":"Bootstrap415","pattern":{"type":"object","id":932,"cls":"Fibonacci415","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap415"},{"type":"beta","out_nodes":[[2217,-1]],"__id":5073,"parentNodes":[2219,2220]},{"type":"rightadapter","out_nodes":[[2218,845]],"__id":5078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2218,846]],"__id":5082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5083,"parentNodes":[2222],"index":254,"rule":{"name":"Recurse415","pattern":{"type":"composite","id":935,"leftPattern":{"type":"not","id":933,"cls":"Fibonacci415","alias":"f"},"rightPattern":{"type":"object","id":934,"cls":"Fibonacci415","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci415 = defined.get('Fibonacci415');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci415(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse415"},{"type":"beta","out_nodes":[[2221,-1]],"__id":5084,"parentNodes":[2223,2224]},{"type":"rightadapter","out_nodes":[[2222,847]],"__id":5088,"parentNodes":[37]},{"type":"not","out_nodes":[[2225,-1]],"__id":5089,"parentNodes":[2226,2227],"constraint":{"type":"join-reference","out_nodes":[],"__id":5090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2222,-1]],"__id":5091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2224,848]],"__id":5095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2224,849]],"__id":5099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5100,"parentNodes":[2229],"index":255,"rule":{"name":"Calculate414","pattern":{"type":"composite","id":942,"leftPattern":{"type":"composite","id":941,"leftPattern":{"type":"composite","id":940,"leftPattern":{"type":"object","id":936,"cls":"Fibonacci414","alias":"f1"},"rightPattern":{"type":"object","id":937,"cls":"Fibonacci414","alias":"f2"}},"rightPattern":{"type":"object","id":938,"cls":"Fibonacci414","alias":"f3"}},"rightPattern":{"type":"object","id":939,"cls":"Result414","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate414"},{"type":"beta","out_nodes":[[2228,-1]],"__id":5101,"parentNodes":[2231,2232]},{"type":"type","out_nodes":[[3,850]],"__id":5102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result414"}},{"type":"rightadapter","out_nodes":[[2229,850]],"__id":5105,"parentNodes":[4]},{"type":"join","out_nodes":[[2233,-1]],"__id":5106,"parentNodes":[2235,2236],"constraint":{"type":"join-reference","out_nodes":[],"__id":5107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2229,-1]],"__id":5108,"parentNodes":[]},{"type":"type","out_nodes":[[9,851],[14,852],[20,853],[30,855],[20,857],[30,858]],"__id":5109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci414"}},{"type":"rightadapter","out_nodes":[[2232,851]],"__id":5112,"parentNodes":[10]},{"type":"join","out_nodes":[[2237,-1]],"__id":5113,"parentNodes":[2238,2239],"constraint":{"type":"join-reference","out_nodes":[],"__id":5114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2232,-1]],"__id":5115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2236,852]],"__id":5120,"parentNodes":[16]},{"type":"beta","out_nodes":[[2240,-1]],"__id":5121,"parentNodes":[2241,2242]},{"type":"leftadapter","out_nodes":[[2236,-1]],"__id":5122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2239,853]],"__id":5127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2239,854]],"__id":5131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5132,"parentNodes":[2244],"index":256,"rule":{"name":"Bootstrap414","pattern":{"type":"object","id":943,"cls":"Fibonacci414","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap414"},{"type":"beta","out_nodes":[[2243,-1]],"__id":5133,"parentNodes":[2245,2246]},{"type":"rightadapter","out_nodes":[[2244,855]],"__id":5138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2244,856]],"__id":5142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5143,"parentNodes":[2248],"index":257,"rule":{"name":"Recurse414","pattern":{"type":"composite","id":946,"leftPattern":{"type":"not","id":944,"cls":"Fibonacci414","alias":"f"},"rightPattern":{"type":"object","id":945,"cls":"Fibonacci414","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci414 = defined.get('Fibonacci414');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci414(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse414"},{"type":"beta","out_nodes":[[2247,-1]],"__id":5144,"parentNodes":[2249,2250]},{"type":"rightadapter","out_nodes":[[2248,857]],"__id":5148,"parentNodes":[37]},{"type":"not","out_nodes":[[2251,-1]],"__id":5149,"parentNodes":[2252,2253],"constraint":{"type":"join-reference","out_nodes":[],"__id":5150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2248,-1]],"__id":5151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2250,858]],"__id":5155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2250,859]],"__id":5159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5160,"parentNodes":[2255],"index":258,"rule":{"name":"Calculate413","pattern":{"type":"composite","id":953,"leftPattern":{"type":"composite","id":952,"leftPattern":{"type":"composite","id":951,"leftPattern":{"type":"object","id":947,"cls":"Fibonacci413","alias":"f1"},"rightPattern":{"type":"object","id":948,"cls":"Fibonacci413","alias":"f2"}},"rightPattern":{"type":"object","id":949,"cls":"Fibonacci413","alias":"f3"}},"rightPattern":{"type":"object","id":950,"cls":"Result413","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate413"},{"type":"beta","out_nodes":[[2254,-1]],"__id":5161,"parentNodes":[2257,2258]},{"type":"type","out_nodes":[[3,860]],"__id":5162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result413"}},{"type":"rightadapter","out_nodes":[[2255,860]],"__id":5165,"parentNodes":[4]},{"type":"join","out_nodes":[[2259,-1]],"__id":5166,"parentNodes":[2261,2262],"constraint":{"type":"join-reference","out_nodes":[],"__id":5167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2255,-1]],"__id":5168,"parentNodes":[]},{"type":"type","out_nodes":[[9,861],[14,862],[20,863],[30,865],[20,867],[30,868]],"__id":5169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci413"}},{"type":"rightadapter","out_nodes":[[2258,861]],"__id":5172,"parentNodes":[10]},{"type":"join","out_nodes":[[2263,-1]],"__id":5173,"parentNodes":[2264,2265],"constraint":{"type":"join-reference","out_nodes":[],"__id":5174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2258,-1]],"__id":5175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2262,862]],"__id":5180,"parentNodes":[16]},{"type":"beta","out_nodes":[[2266,-1]],"__id":5181,"parentNodes":[2267,2268]},{"type":"leftadapter","out_nodes":[[2262,-1]],"__id":5182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2265,863]],"__id":5187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2265,864]],"__id":5191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5192,"parentNodes":[2270],"index":259,"rule":{"name":"Bootstrap413","pattern":{"type":"object","id":954,"cls":"Fibonacci413","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap413"},{"type":"beta","out_nodes":[[2269,-1]],"__id":5193,"parentNodes":[2271,2272]},{"type":"rightadapter","out_nodes":[[2270,865]],"__id":5198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2270,866]],"__id":5202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5203,"parentNodes":[2274],"index":260,"rule":{"name":"Recurse413","pattern":{"type":"composite","id":957,"leftPattern":{"type":"not","id":955,"cls":"Fibonacci413","alias":"f"},"rightPattern":{"type":"object","id":956,"cls":"Fibonacci413","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci413 = defined.get('Fibonacci413');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci413(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse413"},{"type":"beta","out_nodes":[[2273,-1]],"__id":5204,"parentNodes":[2275,2276]},{"type":"rightadapter","out_nodes":[[2274,867]],"__id":5208,"parentNodes":[37]},{"type":"not","out_nodes":[[2277,-1]],"__id":5209,"parentNodes":[2278,2279],"constraint":{"type":"join-reference","out_nodes":[],"__id":5210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2274,-1]],"__id":5211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2276,868]],"__id":5215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2276,869]],"__id":5219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5220,"parentNodes":[2281],"index":261,"rule":{"name":"Calculate412","pattern":{"type":"composite","id":964,"leftPattern":{"type":"composite","id":963,"leftPattern":{"type":"composite","id":962,"leftPattern":{"type":"object","id":958,"cls":"Fibonacci412","alias":"f1"},"rightPattern":{"type":"object","id":959,"cls":"Fibonacci412","alias":"f2"}},"rightPattern":{"type":"object","id":960,"cls":"Fibonacci412","alias":"f3"}},"rightPattern":{"type":"object","id":961,"cls":"Result412","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate412"},{"type":"beta","out_nodes":[[2280,-1]],"__id":5221,"parentNodes":[2283,2284]},{"type":"type","out_nodes":[[3,870]],"__id":5222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result412"}},{"type":"rightadapter","out_nodes":[[2281,870]],"__id":5225,"parentNodes":[4]},{"type":"join","out_nodes":[[2285,-1]],"__id":5226,"parentNodes":[2287,2288],"constraint":{"type":"join-reference","out_nodes":[],"__id":5227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2281,-1]],"__id":5228,"parentNodes":[]},{"type":"type","out_nodes":[[9,871],[14,872],[20,873],[30,875],[20,877],[30,878]],"__id":5229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci412"}},{"type":"rightadapter","out_nodes":[[2284,871]],"__id":5232,"parentNodes":[10]},{"type":"join","out_nodes":[[2289,-1]],"__id":5233,"parentNodes":[2290,2291],"constraint":{"type":"join-reference","out_nodes":[],"__id":5234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2284,-1]],"__id":5235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2288,872]],"__id":5240,"parentNodes":[16]},{"type":"beta","out_nodes":[[2292,-1]],"__id":5241,"parentNodes":[2293,2294]},{"type":"leftadapter","out_nodes":[[2288,-1]],"__id":5242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2291,873]],"__id":5247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2291,874]],"__id":5251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5252,"parentNodes":[2296],"index":262,"rule":{"name":"Bootstrap412","pattern":{"type":"object","id":965,"cls":"Fibonacci412","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap412"},{"type":"beta","out_nodes":[[2295,-1]],"__id":5253,"parentNodes":[2297,2298]},{"type":"rightadapter","out_nodes":[[2296,875]],"__id":5258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2296,876]],"__id":5262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5263,"parentNodes":[2300],"index":263,"rule":{"name":"Recurse412","pattern":{"type":"composite","id":968,"leftPattern":{"type":"not","id":966,"cls":"Fibonacci412","alias":"f"},"rightPattern":{"type":"object","id":967,"cls":"Fibonacci412","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci412 = defined.get('Fibonacci412');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci412(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse412"},{"type":"beta","out_nodes":[[2299,-1]],"__id":5264,"parentNodes":[2301,2302]},{"type":"rightadapter","out_nodes":[[2300,877]],"__id":5268,"parentNodes":[37]},{"type":"not","out_nodes":[[2303,-1]],"__id":5269,"parentNodes":[2304,2305],"constraint":{"type":"join-reference","out_nodes":[],"__id":5270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2300,-1]],"__id":5271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2302,878]],"__id":5275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2302,879]],"__id":5279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5280,"parentNodes":[2307],"index":264,"rule":{"name":"Calculate411","pattern":{"type":"composite","id":975,"leftPattern":{"type":"composite","id":974,"leftPattern":{"type":"composite","id":973,"leftPattern":{"type":"object","id":969,"cls":"Fibonacci411","alias":"f1"},"rightPattern":{"type":"object","id":970,"cls":"Fibonacci411","alias":"f2"}},"rightPattern":{"type":"object","id":971,"cls":"Fibonacci411","alias":"f3"}},"rightPattern":{"type":"object","id":972,"cls":"Result411","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate411"},{"type":"beta","out_nodes":[[2306,-1]],"__id":5281,"parentNodes":[2309,2310]},{"type":"type","out_nodes":[[3,880]],"__id":5282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result411"}},{"type":"rightadapter","out_nodes":[[2307,880]],"__id":5285,"parentNodes":[4]},{"type":"join","out_nodes":[[2311,-1]],"__id":5286,"parentNodes":[2313,2314],"constraint":{"type":"join-reference","out_nodes":[],"__id":5287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2307,-1]],"__id":5288,"parentNodes":[]},{"type":"type","out_nodes":[[9,881],[14,882],[20,883],[30,885],[20,887],[30,888]],"__id":5289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci411"}},{"type":"rightadapter","out_nodes":[[2310,881]],"__id":5292,"parentNodes":[10]},{"type":"join","out_nodes":[[2315,-1]],"__id":5293,"parentNodes":[2316,2317],"constraint":{"type":"join-reference","out_nodes":[],"__id":5294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2310,-1]],"__id":5295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2314,882]],"__id":5300,"parentNodes":[16]},{"type":"beta","out_nodes":[[2318,-1]],"__id":5301,"parentNodes":[2319,2320]},{"type":"leftadapter","out_nodes":[[2314,-1]],"__id":5302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2317,883]],"__id":5307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2317,884]],"__id":5311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5312,"parentNodes":[2322],"index":265,"rule":{"name":"Bootstrap411","pattern":{"type":"object","id":976,"cls":"Fibonacci411","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap411"},{"type":"beta","out_nodes":[[2321,-1]],"__id":5313,"parentNodes":[2323,2324]},{"type":"rightadapter","out_nodes":[[2322,885]],"__id":5318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2322,886]],"__id":5322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5323,"parentNodes":[2326],"index":266,"rule":{"name":"Recurse411","pattern":{"type":"composite","id":979,"leftPattern":{"type":"not","id":977,"cls":"Fibonacci411","alias":"f"},"rightPattern":{"type":"object","id":978,"cls":"Fibonacci411","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci411 = defined.get('Fibonacci411');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci411(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse411"},{"type":"beta","out_nodes":[[2325,-1]],"__id":5324,"parentNodes":[2327,2328]},{"type":"rightadapter","out_nodes":[[2326,887]],"__id":5328,"parentNodes":[37]},{"type":"not","out_nodes":[[2329,-1]],"__id":5329,"parentNodes":[2330,2331],"constraint":{"type":"join-reference","out_nodes":[],"__id":5330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2326,-1]],"__id":5331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2328,888]],"__id":5335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2328,889]],"__id":5339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5340,"parentNodes":[2333],"index":267,"rule":{"name":"Calculate410","pattern":{"type":"composite","id":986,"leftPattern":{"type":"composite","id":985,"leftPattern":{"type":"composite","id":984,"leftPattern":{"type":"object","id":980,"cls":"Fibonacci410","alias":"f1"},"rightPattern":{"type":"object","id":981,"cls":"Fibonacci410","alias":"f2"}},"rightPattern":{"type":"object","id":982,"cls":"Fibonacci410","alias":"f3"}},"rightPattern":{"type":"object","id":983,"cls":"Result410","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate410"},{"type":"beta","out_nodes":[[2332,-1]],"__id":5341,"parentNodes":[2335,2336]},{"type":"type","out_nodes":[[3,890]],"__id":5342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result410"}},{"type":"rightadapter","out_nodes":[[2333,890]],"__id":5345,"parentNodes":[4]},{"type":"join","out_nodes":[[2337,-1]],"__id":5346,"parentNodes":[2339,2340],"constraint":{"type":"join-reference","out_nodes":[],"__id":5347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2333,-1]],"__id":5348,"parentNodes":[]},{"type":"type","out_nodes":[[9,891],[14,892],[20,893],[30,895],[20,897],[30,898]],"__id":5349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci410"}},{"type":"rightadapter","out_nodes":[[2336,891]],"__id":5352,"parentNodes":[10]},{"type":"join","out_nodes":[[2341,-1]],"__id":5353,"parentNodes":[2342,2343],"constraint":{"type":"join-reference","out_nodes":[],"__id":5354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2336,-1]],"__id":5355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2340,892]],"__id":5360,"parentNodes":[16]},{"type":"beta","out_nodes":[[2344,-1]],"__id":5361,"parentNodes":[2345,2346]},{"type":"leftadapter","out_nodes":[[2340,-1]],"__id":5362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2343,893]],"__id":5367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2343,894]],"__id":5371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5372,"parentNodes":[2348],"index":268,"rule":{"name":"Bootstrap410","pattern":{"type":"object","id":987,"cls":"Fibonacci410","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap410"},{"type":"beta","out_nodes":[[2347,-1]],"__id":5373,"parentNodes":[2349,2350]},{"type":"rightadapter","out_nodes":[[2348,895]],"__id":5378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2348,896]],"__id":5382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5383,"parentNodes":[2352],"index":269,"rule":{"name":"Recurse410","pattern":{"type":"composite","id":990,"leftPattern":{"type":"not","id":988,"cls":"Fibonacci410","alias":"f"},"rightPattern":{"type":"object","id":989,"cls":"Fibonacci410","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');let Fibonacci410 = defined.get('Fibonacci410');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci410(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse410"},{"type":"beta","out_nodes":[[2351,-1]],"__id":5384,"parentNodes":[2353,2354]},{"type":"rightadapter","out_nodes":[[2352,897]],"__id":5388,"parentNodes":[37]},{"type":"not","out_nodes":[[2355,-1]],"__id":5389,"parentNodes":[2356,2357],"constraint":{"type":"join-reference","out_nodes":[],"__id":5390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2352,-1]],"__id":5391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2354,898]],"__id":5395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2354,899]],"__id":5399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5400,"parentNodes":[2359],"index":270,"rule":{"name":"Calculate409","pattern":{"type":"composite","id":997,"leftPattern":{"type":"composite","id":996,"leftPattern":{"type":"composite","id":995,"leftPattern":{"type":"object","id":991,"cls":"Fibonacci409","alias":"f1"},"rightPattern":{"type":"object","id":992,"cls":"Fibonacci409","alias":"f2"}},"rightPattern":{"type":"object","id":993,"cls":"Fibonacci409","alias":"f3"}},"rightPattern":{"type":"object","id":994,"cls":"Result409","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate409"},{"type":"beta","out_nodes":[[2358,-1]],"__id":5401,"parentNodes":[2361,2362]},{"type":"type","out_nodes":[[3,900]],"__id":5402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result409"}},{"type":"rightadapter","out_nodes":[[2359,900]],"__id":5405,"parentNodes":[4]},{"type":"join","out_nodes":[[2363,-1]],"__id":5406,"parentNodes":[2365,2366],"constraint":{"type":"join-reference","out_nodes":[],"__id":5407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2359,-1]],"__id":5408,"parentNodes":[]},{"type":"type","out_nodes":[[9,901],[14,902],[20,903],[30,905],[20,907],[30,908]],"__id":5409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci409"}},{"type":"rightadapter","out_nodes":[[2362,901]],"__id":5412,"parentNodes":[10]},{"type":"join","out_nodes":[[2367,-1]],"__id":5413,"parentNodes":[2368,2369],"constraint":{"type":"join-reference","out_nodes":[],"__id":5414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2362,-1]],"__id":5415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2366,902]],"__id":5420,"parentNodes":[16]},{"type":"beta","out_nodes":[[2370,-1]],"__id":5421,"parentNodes":[2371,2372]},{"type":"leftadapter","out_nodes":[[2366,-1]],"__id":5422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2369,903]],"__id":5427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2369,904]],"__id":5431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5432,"parentNodes":[2374],"index":271,"rule":{"name":"Bootstrap409","pattern":{"type":"object","id":998,"cls":"Fibonacci409","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap409"},{"type":"beta","out_nodes":[[2373,-1]],"__id":5433,"parentNodes":[2375,2376]},{"type":"rightadapter","out_nodes":[[2374,905]],"__id":5438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2374,906]],"__id":5442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5443,"parentNodes":[2378],"index":272,"rule":{"name":"Recurse409","pattern":{"type":"composite","id":1001,"leftPattern":{"type":"not","id":999,"cls":"Fibonacci409","alias":"f"},"rightPattern":{"type":"object","id":1000,"cls":"Fibonacci409","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci409 = defined.get('Fibonacci409');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci409(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse409"},{"type":"beta","out_nodes":[[2377,-1]],"__id":5444,"parentNodes":[2379,2380]},{"type":"rightadapter","out_nodes":[[2378,907]],"__id":5448,"parentNodes":[37]},{"type":"not","out_nodes":[[2381,-1]],"__id":5449,"parentNodes":[2382,2383],"constraint":{"type":"join-reference","out_nodes":[],"__id":5450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2378,-1]],"__id":5451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2380,908]],"__id":5455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2380,909]],"__id":5459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5460,"parentNodes":[2385],"index":273,"rule":{"name":"Calculate408","pattern":{"type":"composite","id":1008,"leftPattern":{"type":"composite","id":1007,"leftPattern":{"type":"composite","id":1006,"leftPattern":{"type":"object","id":1002,"cls":"Fibonacci408","alias":"f1"},"rightPattern":{"type":"object","id":1003,"cls":"Fibonacci408","alias":"f2"}},"rightPattern":{"type":"object","id":1004,"cls":"Fibonacci408","alias":"f3"}},"rightPattern":{"type":"object","id":1005,"cls":"Result408","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate408"},{"type":"beta","out_nodes":[[2384,-1]],"__id":5461,"parentNodes":[2387,2388]},{"type":"type","out_nodes":[[3,910]],"__id":5462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result408"}},{"type":"rightadapter","out_nodes":[[2385,910]],"__id":5465,"parentNodes":[4]},{"type":"join","out_nodes":[[2389,-1]],"__id":5466,"parentNodes":[2391,2392],"constraint":{"type":"join-reference","out_nodes":[],"__id":5467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2385,-1]],"__id":5468,"parentNodes":[]},{"type":"type","out_nodes":[[9,911],[14,912],[20,913],[30,915],[20,917],[30,918]],"__id":5469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci408"}},{"type":"rightadapter","out_nodes":[[2388,911]],"__id":5472,"parentNodes":[10]},{"type":"join","out_nodes":[[2393,-1]],"__id":5473,"parentNodes":[2394,2395],"constraint":{"type":"join-reference","out_nodes":[],"__id":5474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2388,-1]],"__id":5475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2392,912]],"__id":5480,"parentNodes":[16]},{"type":"beta","out_nodes":[[2396,-1]],"__id":5481,"parentNodes":[2397,2398]},{"type":"leftadapter","out_nodes":[[2392,-1]],"__id":5482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2395,913]],"__id":5487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2395,914]],"__id":5491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5492,"parentNodes":[2400],"index":274,"rule":{"name":"Bootstrap408","pattern":{"type":"object","id":1009,"cls":"Fibonacci408","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap408"},{"type":"beta","out_nodes":[[2399,-1]],"__id":5493,"parentNodes":[2401,2402]},{"type":"rightadapter","out_nodes":[[2400,915]],"__id":5498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2400,916]],"__id":5502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5503,"parentNodes":[2404],"index":275,"rule":{"name":"Recurse408","pattern":{"type":"composite","id":1012,"leftPattern":{"type":"not","id":1010,"cls":"Fibonacci408","alias":"f"},"rightPattern":{"type":"object","id":1011,"cls":"Fibonacci408","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci408 = defined.get('Fibonacci408');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci408(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse408"},{"type":"beta","out_nodes":[[2403,-1]],"__id":5504,"parentNodes":[2405,2406]},{"type":"rightadapter","out_nodes":[[2404,917]],"__id":5508,"parentNodes":[37]},{"type":"not","out_nodes":[[2407,-1]],"__id":5509,"parentNodes":[2408,2409],"constraint":{"type":"join-reference","out_nodes":[],"__id":5510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2404,-1]],"__id":5511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2406,918]],"__id":5515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2406,919]],"__id":5519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5520,"parentNodes":[2411],"index":276,"rule":{"name":"Calculate407","pattern":{"type":"composite","id":1019,"leftPattern":{"type":"composite","id":1018,"leftPattern":{"type":"composite","id":1017,"leftPattern":{"type":"object","id":1013,"cls":"Fibonacci407","alias":"f1"},"rightPattern":{"type":"object","id":1014,"cls":"Fibonacci407","alias":"f2"}},"rightPattern":{"type":"object","id":1015,"cls":"Fibonacci407","alias":"f3"}},"rightPattern":{"type":"object","id":1016,"cls":"Result407","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate407"},{"type":"beta","out_nodes":[[2410,-1]],"__id":5521,"parentNodes":[2413,2414]},{"type":"type","out_nodes":[[3,920]],"__id":5522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result407"}},{"type":"rightadapter","out_nodes":[[2411,920]],"__id":5525,"parentNodes":[4]},{"type":"join","out_nodes":[[2415,-1]],"__id":5526,"parentNodes":[2417,2418],"constraint":{"type":"join-reference","out_nodes":[],"__id":5527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2411,-1]],"__id":5528,"parentNodes":[]},{"type":"type","out_nodes":[[9,921],[14,922],[20,923],[30,925],[20,927],[30,928]],"__id":5529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci407"}},{"type":"rightadapter","out_nodes":[[2414,921]],"__id":5532,"parentNodes":[10]},{"type":"join","out_nodes":[[2419,-1]],"__id":5533,"parentNodes":[2420,2421],"constraint":{"type":"join-reference","out_nodes":[],"__id":5534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2414,-1]],"__id":5535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2418,922]],"__id":5540,"parentNodes":[16]},{"type":"beta","out_nodes":[[2422,-1]],"__id":5541,"parentNodes":[2423,2424]},{"type":"leftadapter","out_nodes":[[2418,-1]],"__id":5542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2421,923]],"__id":5547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2421,924]],"__id":5551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5552,"parentNodes":[2426],"index":277,"rule":{"name":"Bootstrap407","pattern":{"type":"object","id":1020,"cls":"Fibonacci407","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap407"},{"type":"beta","out_nodes":[[2425,-1]],"__id":5553,"parentNodes":[2427,2428]},{"type":"rightadapter","out_nodes":[[2426,925]],"__id":5558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2426,926]],"__id":5562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5563,"parentNodes":[2430],"index":278,"rule":{"name":"Recurse407","pattern":{"type":"composite","id":1023,"leftPattern":{"type":"not","id":1021,"cls":"Fibonacci407","alias":"f"},"rightPattern":{"type":"object","id":1022,"cls":"Fibonacci407","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci407 = defined.get('Fibonacci407');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci407(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse407"},{"type":"beta","out_nodes":[[2429,-1]],"__id":5564,"parentNodes":[2431,2432]},{"type":"rightadapter","out_nodes":[[2430,927]],"__id":5568,"parentNodes":[37]},{"type":"not","out_nodes":[[2433,-1]],"__id":5569,"parentNodes":[2434,2435],"constraint":{"type":"join-reference","out_nodes":[],"__id":5570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2430,-1]],"__id":5571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2432,928]],"__id":5575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2432,929]],"__id":5579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5580,"parentNodes":[2437],"index":279,"rule":{"name":"Calculate406","pattern":{"type":"composite","id":1030,"leftPattern":{"type":"composite","id":1029,"leftPattern":{"type":"composite","id":1028,"leftPattern":{"type":"object","id":1024,"cls":"Fibonacci406","alias":"f1"},"rightPattern":{"type":"object","id":1025,"cls":"Fibonacci406","alias":"f2"}},"rightPattern":{"type":"object","id":1026,"cls":"Fibonacci406","alias":"f3"}},"rightPattern":{"type":"object","id":1027,"cls":"Result406","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate406"},{"type":"beta","out_nodes":[[2436,-1]],"__id":5581,"parentNodes":[2439,2440]},{"type":"type","out_nodes":[[3,930]],"__id":5582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result406"}},{"type":"rightadapter","out_nodes":[[2437,930]],"__id":5585,"parentNodes":[4]},{"type":"join","out_nodes":[[2441,-1]],"__id":5586,"parentNodes":[2443,2444],"constraint":{"type":"join-reference","out_nodes":[],"__id":5587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2437,-1]],"__id":5588,"parentNodes":[]},{"type":"type","out_nodes":[[9,931],[14,932],[20,933],[30,935],[20,937],[30,938]],"__id":5589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci406"}},{"type":"rightadapter","out_nodes":[[2440,931]],"__id":5592,"parentNodes":[10]},{"type":"join","out_nodes":[[2445,-1]],"__id":5593,"parentNodes":[2446,2447],"constraint":{"type":"join-reference","out_nodes":[],"__id":5594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2440,-1]],"__id":5595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2444,932]],"__id":5600,"parentNodes":[16]},{"type":"beta","out_nodes":[[2448,-1]],"__id":5601,"parentNodes":[2449,2450]},{"type":"leftadapter","out_nodes":[[2444,-1]],"__id":5602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2447,933]],"__id":5607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2447,934]],"__id":5611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5612,"parentNodes":[2452],"index":280,"rule":{"name":"Bootstrap406","pattern":{"type":"object","id":1031,"cls":"Fibonacci406","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap406"},{"type":"beta","out_nodes":[[2451,-1]],"__id":5613,"parentNodes":[2453,2454]},{"type":"rightadapter","out_nodes":[[2452,935]],"__id":5618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2452,936]],"__id":5622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5623,"parentNodes":[2456],"index":281,"rule":{"name":"Recurse406","pattern":{"type":"composite","id":1034,"leftPattern":{"type":"not","id":1032,"cls":"Fibonacci406","alias":"f"},"rightPattern":{"type":"object","id":1033,"cls":"Fibonacci406","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci406 = defined.get('Fibonacci406');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci406(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse406"},{"type":"beta","out_nodes":[[2455,-1]],"__id":5624,"parentNodes":[2457,2458]},{"type":"rightadapter","out_nodes":[[2456,937]],"__id":5628,"parentNodes":[37]},{"type":"not","out_nodes":[[2459,-1]],"__id":5629,"parentNodes":[2460,2461],"constraint":{"type":"join-reference","out_nodes":[],"__id":5630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2456,-1]],"__id":5631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2458,938]],"__id":5635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2458,939]],"__id":5639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5640,"parentNodes":[2463],"index":282,"rule":{"name":"Calculate405","pattern":{"type":"composite","id":1041,"leftPattern":{"type":"composite","id":1040,"leftPattern":{"type":"composite","id":1039,"leftPattern":{"type":"object","id":1035,"cls":"Fibonacci405","alias":"f1"},"rightPattern":{"type":"object","id":1036,"cls":"Fibonacci405","alias":"f2"}},"rightPattern":{"type":"object","id":1037,"cls":"Fibonacci405","alias":"f3"}},"rightPattern":{"type":"object","id":1038,"cls":"Result405","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate405"},{"type":"beta","out_nodes":[[2462,-1]],"__id":5641,"parentNodes":[2465,2466]},{"type":"type","out_nodes":[[3,940]],"__id":5642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result405"}},{"type":"rightadapter","out_nodes":[[2463,940]],"__id":5645,"parentNodes":[4]},{"type":"join","out_nodes":[[2467,-1]],"__id":5646,"parentNodes":[2469,2470],"constraint":{"type":"join-reference","out_nodes":[],"__id":5647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2463,-1]],"__id":5648,"parentNodes":[]},{"type":"type","out_nodes":[[9,941],[14,942],[20,943],[30,945],[20,947],[30,948]],"__id":5649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci405"}},{"type":"rightadapter","out_nodes":[[2466,941]],"__id":5652,"parentNodes":[10]},{"type":"join","out_nodes":[[2471,-1]],"__id":5653,"parentNodes":[2472,2473],"constraint":{"type":"join-reference","out_nodes":[],"__id":5654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2466,-1]],"__id":5655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2470,942]],"__id":5660,"parentNodes":[16]},{"type":"beta","out_nodes":[[2474,-1]],"__id":5661,"parentNodes":[2475,2476]},{"type":"leftadapter","out_nodes":[[2470,-1]],"__id":5662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2473,943]],"__id":5667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2473,944]],"__id":5671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5672,"parentNodes":[2478],"index":283,"rule":{"name":"Bootstrap405","pattern":{"type":"object","id":1042,"cls":"Fibonacci405","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap405"},{"type":"beta","out_nodes":[[2477,-1]],"__id":5673,"parentNodes":[2479,2480]},{"type":"rightadapter","out_nodes":[[2478,945]],"__id":5678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2478,946]],"__id":5682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5683,"parentNodes":[2482],"index":284,"rule":{"name":"Recurse405","pattern":{"type":"composite","id":1045,"leftPattern":{"type":"not","id":1043,"cls":"Fibonacci405","alias":"f"},"rightPattern":{"type":"object","id":1044,"cls":"Fibonacci405","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci405 = defined.get('Fibonacci405');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci405(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse405"},{"type":"beta","out_nodes":[[2481,-1]],"__id":5684,"parentNodes":[2483,2484]},{"type":"rightadapter","out_nodes":[[2482,947]],"__id":5688,"parentNodes":[37]},{"type":"not","out_nodes":[[2485,-1]],"__id":5689,"parentNodes":[2486,2487],"constraint":{"type":"join-reference","out_nodes":[],"__id":5690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2482,-1]],"__id":5691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2484,948]],"__id":5695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2484,949]],"__id":5699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5700,"parentNodes":[2489],"index":285,"rule":{"name":"Calculate404","pattern":{"type":"composite","id":1052,"leftPattern":{"type":"composite","id":1051,"leftPattern":{"type":"composite","id":1050,"leftPattern":{"type":"object","id":1046,"cls":"Fibonacci404","alias":"f1"},"rightPattern":{"type":"object","id":1047,"cls":"Fibonacci404","alias":"f2"}},"rightPattern":{"type":"object","id":1048,"cls":"Fibonacci404","alias":"f3"}},"rightPattern":{"type":"object","id":1049,"cls":"Result404","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate404"},{"type":"beta","out_nodes":[[2488,-1]],"__id":5701,"parentNodes":[2491,2492]},{"type":"type","out_nodes":[[3,950]],"__id":5702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result404"}},{"type":"rightadapter","out_nodes":[[2489,950]],"__id":5705,"parentNodes":[4]},{"type":"join","out_nodes":[[2493,-1]],"__id":5706,"parentNodes":[2495,2496],"constraint":{"type":"join-reference","out_nodes":[],"__id":5707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2489,-1]],"__id":5708,"parentNodes":[]},{"type":"type","out_nodes":[[9,951],[14,952],[20,953],[30,955],[20,957],[30,958]],"__id":5709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci404"}},{"type":"rightadapter","out_nodes":[[2492,951]],"__id":5712,"parentNodes":[10]},{"type":"join","out_nodes":[[2497,-1]],"__id":5713,"parentNodes":[2498,2499],"constraint":{"type":"join-reference","out_nodes":[],"__id":5714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2492,-1]],"__id":5715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2496,952]],"__id":5720,"parentNodes":[16]},{"type":"beta","out_nodes":[[2500,-1]],"__id":5721,"parentNodes":[2501,2502]},{"type":"leftadapter","out_nodes":[[2496,-1]],"__id":5722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2499,953]],"__id":5727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2499,954]],"__id":5731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5732,"parentNodes":[2504],"index":286,"rule":{"name":"Bootstrap404","pattern":{"type":"object","id":1053,"cls":"Fibonacci404","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap404"},{"type":"beta","out_nodes":[[2503,-1]],"__id":5733,"parentNodes":[2505,2506]},{"type":"rightadapter","out_nodes":[[2504,955]],"__id":5738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2504,956]],"__id":5742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5743,"parentNodes":[2508],"index":287,"rule":{"name":"Recurse404","pattern":{"type":"composite","id":1056,"leftPattern":{"type":"not","id":1054,"cls":"Fibonacci404","alias":"f"},"rightPattern":{"type":"object","id":1055,"cls":"Fibonacci404","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci404 = defined.get('Fibonacci404');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci404(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse404"},{"type":"beta","out_nodes":[[2507,-1]],"__id":5744,"parentNodes":[2509,2510]},{"type":"rightadapter","out_nodes":[[2508,957]],"__id":5748,"parentNodes":[37]},{"type":"not","out_nodes":[[2511,-1]],"__id":5749,"parentNodes":[2512,2513],"constraint":{"type":"join-reference","out_nodes":[],"__id":5750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2508,-1]],"__id":5751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2510,958]],"__id":5755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2510,959]],"__id":5759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5760,"parentNodes":[2515],"index":288,"rule":{"name":"Calculate403","pattern":{"type":"composite","id":1063,"leftPattern":{"type":"composite","id":1062,"leftPattern":{"type":"composite","id":1061,"leftPattern":{"type":"object","id":1057,"cls":"Fibonacci403","alias":"f1"},"rightPattern":{"type":"object","id":1058,"cls":"Fibonacci403","alias":"f2"}},"rightPattern":{"type":"object","id":1059,"cls":"Fibonacci403","alias":"f3"}},"rightPattern":{"type":"object","id":1060,"cls":"Result403","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate403"},{"type":"beta","out_nodes":[[2514,-1]],"__id":5761,"parentNodes":[2517,2518]},{"type":"type","out_nodes":[[3,960]],"__id":5762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result403"}},{"type":"rightadapter","out_nodes":[[2515,960]],"__id":5765,"parentNodes":[4]},{"type":"join","out_nodes":[[2519,-1]],"__id":5766,"parentNodes":[2521,2522],"constraint":{"type":"join-reference","out_nodes":[],"__id":5767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2515,-1]],"__id":5768,"parentNodes":[]},{"type":"type","out_nodes":[[9,961],[14,962],[20,963],[30,965],[20,967],[30,968]],"__id":5769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci403"}},{"type":"rightadapter","out_nodes":[[2518,961]],"__id":5772,"parentNodes":[10]},{"type":"join","out_nodes":[[2523,-1]],"__id":5773,"parentNodes":[2524,2525],"constraint":{"type":"join-reference","out_nodes":[],"__id":5774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2518,-1]],"__id":5775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2522,962]],"__id":5780,"parentNodes":[16]},{"type":"beta","out_nodes":[[2526,-1]],"__id":5781,"parentNodes":[2527,2528]},{"type":"leftadapter","out_nodes":[[2522,-1]],"__id":5782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2525,963]],"__id":5787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2525,964]],"__id":5791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5792,"parentNodes":[2530],"index":289,"rule":{"name":"Bootstrap403","pattern":{"type":"object","id":1064,"cls":"Fibonacci403","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap403"},{"type":"beta","out_nodes":[[2529,-1]],"__id":5793,"parentNodes":[2531,2532]},{"type":"rightadapter","out_nodes":[[2530,965]],"__id":5798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2530,966]],"__id":5802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5803,"parentNodes":[2534],"index":290,"rule":{"name":"Recurse403","pattern":{"type":"composite","id":1067,"leftPattern":{"type":"not","id":1065,"cls":"Fibonacci403","alias":"f"},"rightPattern":{"type":"object","id":1066,"cls":"Fibonacci403","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci403 = defined.get('Fibonacci403');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci403(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse403"},{"type":"beta","out_nodes":[[2533,-1]],"__id":5804,"parentNodes":[2535,2536]},{"type":"rightadapter","out_nodes":[[2534,967]],"__id":5808,"parentNodes":[37]},{"type":"not","out_nodes":[[2537,-1]],"__id":5809,"parentNodes":[2538,2539],"constraint":{"type":"join-reference","out_nodes":[],"__id":5810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2534,-1]],"__id":5811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2536,968]],"__id":5815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2536,969]],"__id":5819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5820,"parentNodes":[2541],"index":291,"rule":{"name":"Calculate402","pattern":{"type":"composite","id":1074,"leftPattern":{"type":"composite","id":1073,"leftPattern":{"type":"composite","id":1072,"leftPattern":{"type":"object","id":1068,"cls":"Fibonacci402","alias":"f1"},"rightPattern":{"type":"object","id":1069,"cls":"Fibonacci402","alias":"f2"}},"rightPattern":{"type":"object","id":1070,"cls":"Fibonacci402","alias":"f3"}},"rightPattern":{"type":"object","id":1071,"cls":"Result402","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate402"},{"type":"beta","out_nodes":[[2540,-1]],"__id":5821,"parentNodes":[2543,2544]},{"type":"type","out_nodes":[[3,970]],"__id":5822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result402"}},{"type":"rightadapter","out_nodes":[[2541,970]],"__id":5825,"parentNodes":[4]},{"type":"join","out_nodes":[[2545,-1]],"__id":5826,"parentNodes":[2547,2548],"constraint":{"type":"join-reference","out_nodes":[],"__id":5827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2541,-1]],"__id":5828,"parentNodes":[]},{"type":"type","out_nodes":[[9,971],[14,972],[20,973],[30,975],[20,977],[30,978]],"__id":5829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci402"}},{"type":"rightadapter","out_nodes":[[2544,971]],"__id":5832,"parentNodes":[10]},{"type":"join","out_nodes":[[2549,-1]],"__id":5833,"parentNodes":[2550,2551],"constraint":{"type":"join-reference","out_nodes":[],"__id":5834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2544,-1]],"__id":5835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2548,972]],"__id":5840,"parentNodes":[16]},{"type":"beta","out_nodes":[[2552,-1]],"__id":5841,"parentNodes":[2553,2554]},{"type":"leftadapter","out_nodes":[[2548,-1]],"__id":5842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2551,973]],"__id":5847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2551,974]],"__id":5851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5852,"parentNodes":[2556],"index":292,"rule":{"name":"Bootstrap402","pattern":{"type":"object","id":1075,"cls":"Fibonacci402","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap402"},{"type":"beta","out_nodes":[[2555,-1]],"__id":5853,"parentNodes":[2557,2558]},{"type":"rightadapter","out_nodes":[[2556,975]],"__id":5858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2556,976]],"__id":5862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5863,"parentNodes":[2560],"index":293,"rule":{"name":"Recurse402","pattern":{"type":"composite","id":1078,"leftPattern":{"type":"not","id":1076,"cls":"Fibonacci402","alias":"f"},"rightPattern":{"type":"object","id":1077,"cls":"Fibonacci402","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci402 = defined.get('Fibonacci402');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci402(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse402"},{"type":"beta","out_nodes":[[2559,-1]],"__id":5864,"parentNodes":[2561,2562]},{"type":"rightadapter","out_nodes":[[2560,977]],"__id":5868,"parentNodes":[37]},{"type":"not","out_nodes":[[2563,-1]],"__id":5869,"parentNodes":[2564,2565],"constraint":{"type":"join-reference","out_nodes":[],"__id":5870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2560,-1]],"__id":5871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2562,978]],"__id":5875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2562,979]],"__id":5879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5880,"parentNodes":[2567],"index":294,"rule":{"name":"Calculate401","pattern":{"type":"composite","id":1085,"leftPattern":{"type":"composite","id":1084,"leftPattern":{"type":"composite","id":1083,"leftPattern":{"type":"object","id":1079,"cls":"Fibonacci401","alias":"f1"},"rightPattern":{"type":"object","id":1080,"cls":"Fibonacci401","alias":"f2"}},"rightPattern":{"type":"object","id":1081,"cls":"Fibonacci401","alias":"f3"}},"rightPattern":{"type":"object","id":1082,"cls":"Result401","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate401"},{"type":"beta","out_nodes":[[2566,-1]],"__id":5881,"parentNodes":[2569,2570]},{"type":"type","out_nodes":[[3,980]],"__id":5882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result401"}},{"type":"rightadapter","out_nodes":[[2567,980]],"__id":5885,"parentNodes":[4]},{"type":"join","out_nodes":[[2571,-1]],"__id":5886,"parentNodes":[2573,2574],"constraint":{"type":"join-reference","out_nodes":[],"__id":5887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2567,-1]],"__id":5888,"parentNodes":[]},{"type":"type","out_nodes":[[9,981],[14,982],[20,983],[30,985],[20,987],[30,988]],"__id":5889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci401"}},{"type":"rightadapter","out_nodes":[[2570,981]],"__id":5892,"parentNodes":[10]},{"type":"join","out_nodes":[[2575,-1]],"__id":5893,"parentNodes":[2576,2577],"constraint":{"type":"join-reference","out_nodes":[],"__id":5894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2570,-1]],"__id":5895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2574,982]],"__id":5900,"parentNodes":[16]},{"type":"beta","out_nodes":[[2578,-1]],"__id":5901,"parentNodes":[2579,2580]},{"type":"leftadapter","out_nodes":[[2574,-1]],"__id":5902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2577,983]],"__id":5907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2577,984]],"__id":5911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5912,"parentNodes":[2582],"index":295,"rule":{"name":"Bootstrap401","pattern":{"type":"object","id":1086,"cls":"Fibonacci401","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap401"},{"type":"beta","out_nodes":[[2581,-1]],"__id":5913,"parentNodes":[2583,2584]},{"type":"rightadapter","out_nodes":[[2582,985]],"__id":5918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2582,986]],"__id":5922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5923,"parentNodes":[2586],"index":296,"rule":{"name":"Recurse401","pattern":{"type":"composite","id":1089,"leftPattern":{"type":"not","id":1087,"cls":"Fibonacci401","alias":"f"},"rightPattern":{"type":"object","id":1088,"cls":"Fibonacci401","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci401 = defined.get('Fibonacci401');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci401(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse401"},{"type":"beta","out_nodes":[[2585,-1]],"__id":5924,"parentNodes":[2587,2588]},{"type":"rightadapter","out_nodes":[[2586,987]],"__id":5928,"parentNodes":[37]},{"type":"not","out_nodes":[[2589,-1]],"__id":5929,"parentNodes":[2590,2591],"constraint":{"type":"join-reference","out_nodes":[],"__id":5930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2586,-1]],"__id":5931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2588,988]],"__id":5935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2588,989]],"__id":5939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5940,"parentNodes":[2593],"index":297,"rule":{"name":"Calculate400","pattern":{"type":"composite","id":1096,"leftPattern":{"type":"composite","id":1095,"leftPattern":{"type":"composite","id":1094,"leftPattern":{"type":"object","id":1090,"cls":"Fibonacci400","alias":"f1"},"rightPattern":{"type":"object","id":1091,"cls":"Fibonacci400","alias":"f2"}},"rightPattern":{"type":"object","id":1092,"cls":"Fibonacci400","alias":"f3"}},"rightPattern":{"type":"object","id":1093,"cls":"Result400","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate400"},{"type":"beta","out_nodes":[[2592,-1]],"__id":5941,"parentNodes":[2595,2596]},{"type":"type","out_nodes":[[3,990]],"__id":5942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result400"}},{"type":"rightadapter","out_nodes":[[2593,990]],"__id":5945,"parentNodes":[4]},{"type":"join","out_nodes":[[2597,-1]],"__id":5946,"parentNodes":[2599,2600],"constraint":{"type":"join-reference","out_nodes":[],"__id":5947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2593,-1]],"__id":5948,"parentNodes":[]},{"type":"type","out_nodes":[[9,991],[14,992],[20,993],[30,995],[20,997],[30,998]],"__id":5949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci400"}},{"type":"rightadapter","out_nodes":[[2596,991]],"__id":5952,"parentNodes":[10]},{"type":"join","out_nodes":[[2601,-1]],"__id":5953,"parentNodes":[2602,2603],"constraint":{"type":"join-reference","out_nodes":[],"__id":5954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2596,-1]],"__id":5955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2600,992]],"__id":5960,"parentNodes":[16]},{"type":"beta","out_nodes":[[2604,-1]],"__id":5961,"parentNodes":[2605,2606]},{"type":"leftadapter","out_nodes":[[2600,-1]],"__id":5962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2603,993]],"__id":5967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2603,994]],"__id":5971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5972,"parentNodes":[2608],"index":298,"rule":{"name":"Bootstrap400","pattern":{"type":"object","id":1097,"cls":"Fibonacci400","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap400"},{"type":"beta","out_nodes":[[2607,-1]],"__id":5973,"parentNodes":[2609,2610]},{"type":"rightadapter","out_nodes":[[2608,995]],"__id":5978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2608,996]],"__id":5982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":5983,"parentNodes":[2612],"index":299,"rule":{"name":"Recurse400","pattern":{"type":"composite","id":1100,"leftPattern":{"type":"not","id":1098,"cls":"Fibonacci400","alias":"f"},"rightPattern":{"type":"object","id":1099,"cls":"Fibonacci400","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');let Fibonacci400 = defined.get('Fibonacci400');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci400(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse400"},{"type":"beta","out_nodes":[[2611,-1]],"__id":5984,"parentNodes":[2613,2614]},{"type":"rightadapter","out_nodes":[[2612,997]],"__id":5988,"parentNodes":[37]},{"type":"not","out_nodes":[[2615,-1]],"__id":5989,"parentNodes":[2616,2617],"constraint":{"type":"join-reference","out_nodes":[],"__id":5990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2612,-1]],"__id":5991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2614,998]],"__id":5995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2614,999]],"__id":5999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6000,"parentNodes":[2619],"index":300,"rule":{"name":"Calculate399","pattern":{"type":"composite","id":1107,"leftPattern":{"type":"composite","id":1106,"leftPattern":{"type":"composite","id":1105,"leftPattern":{"type":"object","id":1101,"cls":"Fibonacci399","alias":"f1"},"rightPattern":{"type":"object","id":1102,"cls":"Fibonacci399","alias":"f2"}},"rightPattern":{"type":"object","id":1103,"cls":"Fibonacci399","alias":"f3"}},"rightPattern":{"type":"object","id":1104,"cls":"Result399","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate399"},{"type":"beta","out_nodes":[[2618,-1]],"__id":6001,"parentNodes":[2621,2622]},{"type":"type","out_nodes":[[3,1000]],"__id":6002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result399"}},{"type":"rightadapter","out_nodes":[[2619,1000]],"__id":6005,"parentNodes":[4]},{"type":"join","out_nodes":[[2623,-1]],"__id":6006,"parentNodes":[2625,2626],"constraint":{"type":"join-reference","out_nodes":[],"__id":6007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2619,-1]],"__id":6008,"parentNodes":[]},{"type":"type","out_nodes":[[9,1001],[14,1002],[20,1003],[30,1005],[20,1007],[30,1008]],"__id":6009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci399"}},{"type":"rightadapter","out_nodes":[[2622,1001]],"__id":6012,"parentNodes":[10]},{"type":"join","out_nodes":[[2627,-1]],"__id":6013,"parentNodes":[2628,2629],"constraint":{"type":"join-reference","out_nodes":[],"__id":6014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2622,-1]],"__id":6015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2626,1002]],"__id":6020,"parentNodes":[16]},{"type":"beta","out_nodes":[[2630,-1]],"__id":6021,"parentNodes":[2631,2632]},{"type":"leftadapter","out_nodes":[[2626,-1]],"__id":6022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2629,1003]],"__id":6027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2629,1004]],"__id":6031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6032,"parentNodes":[2634],"index":301,"rule":{"name":"Bootstrap399","pattern":{"type":"object","id":1108,"cls":"Fibonacci399","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap399"},{"type":"beta","out_nodes":[[2633,-1]],"__id":6033,"parentNodes":[2635,2636]},{"type":"rightadapter","out_nodes":[[2634,1005]],"__id":6038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2634,1006]],"__id":6042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6043,"parentNodes":[2638],"index":302,"rule":{"name":"Recurse399","pattern":{"type":"composite","id":1111,"leftPattern":{"type":"not","id":1109,"cls":"Fibonacci399","alias":"f"},"rightPattern":{"type":"object","id":1110,"cls":"Fibonacci399","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci399 = defined.get('Fibonacci399');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci399(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse399"},{"type":"beta","out_nodes":[[2637,-1]],"__id":6044,"parentNodes":[2639,2640]},{"type":"rightadapter","out_nodes":[[2638,1007]],"__id":6048,"parentNodes":[37]},{"type":"not","out_nodes":[[2641,-1]],"__id":6049,"parentNodes":[2642,2643],"constraint":{"type":"join-reference","out_nodes":[],"__id":6050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2638,-1]],"__id":6051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2640,1008]],"__id":6055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2640,1009]],"__id":6059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6060,"parentNodes":[2645],"index":303,"rule":{"name":"Calculate398","pattern":{"type":"composite","id":1118,"leftPattern":{"type":"composite","id":1117,"leftPattern":{"type":"composite","id":1116,"leftPattern":{"type":"object","id":1112,"cls":"Fibonacci398","alias":"f1"},"rightPattern":{"type":"object","id":1113,"cls":"Fibonacci398","alias":"f2"}},"rightPattern":{"type":"object","id":1114,"cls":"Fibonacci398","alias":"f3"}},"rightPattern":{"type":"object","id":1115,"cls":"Result398","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate398"},{"type":"beta","out_nodes":[[2644,-1]],"__id":6061,"parentNodes":[2647,2648]},{"type":"type","out_nodes":[[3,1010]],"__id":6062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result398"}},{"type":"rightadapter","out_nodes":[[2645,1010]],"__id":6065,"parentNodes":[4]},{"type":"join","out_nodes":[[2649,-1]],"__id":6066,"parentNodes":[2651,2652],"constraint":{"type":"join-reference","out_nodes":[],"__id":6067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2645,-1]],"__id":6068,"parentNodes":[]},{"type":"type","out_nodes":[[9,1011],[14,1012],[20,1013],[30,1015],[20,1017],[30,1018]],"__id":6069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci398"}},{"type":"rightadapter","out_nodes":[[2648,1011]],"__id":6072,"parentNodes":[10]},{"type":"join","out_nodes":[[2653,-1]],"__id":6073,"parentNodes":[2654,2655],"constraint":{"type":"join-reference","out_nodes":[],"__id":6074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2648,-1]],"__id":6075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2652,1012]],"__id":6080,"parentNodes":[16]},{"type":"beta","out_nodes":[[2656,-1]],"__id":6081,"parentNodes":[2657,2658]},{"type":"leftadapter","out_nodes":[[2652,-1]],"__id":6082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2655,1013]],"__id":6087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2655,1014]],"__id":6091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6092,"parentNodes":[2660],"index":304,"rule":{"name":"Bootstrap398","pattern":{"type":"object","id":1119,"cls":"Fibonacci398","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap398"},{"type":"beta","out_nodes":[[2659,-1]],"__id":6093,"parentNodes":[2661,2662]},{"type":"rightadapter","out_nodes":[[2660,1015]],"__id":6098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2660,1016]],"__id":6102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6103,"parentNodes":[2664],"index":305,"rule":{"name":"Recurse398","pattern":{"type":"composite","id":1122,"leftPattern":{"type":"not","id":1120,"cls":"Fibonacci398","alias":"f"},"rightPattern":{"type":"object","id":1121,"cls":"Fibonacci398","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci398 = defined.get('Fibonacci398');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci398(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse398"},{"type":"beta","out_nodes":[[2663,-1]],"__id":6104,"parentNodes":[2665,2666]},{"type":"rightadapter","out_nodes":[[2664,1017]],"__id":6108,"parentNodes":[37]},{"type":"not","out_nodes":[[2667,-1]],"__id":6109,"parentNodes":[2668,2669],"constraint":{"type":"join-reference","out_nodes":[],"__id":6110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2664,-1]],"__id":6111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2666,1018]],"__id":6115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2666,1019]],"__id":6119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6120,"parentNodes":[2671],"index":306,"rule":{"name":"Calculate397","pattern":{"type":"composite","id":1129,"leftPattern":{"type":"composite","id":1128,"leftPattern":{"type":"composite","id":1127,"leftPattern":{"type":"object","id":1123,"cls":"Fibonacci397","alias":"f1"},"rightPattern":{"type":"object","id":1124,"cls":"Fibonacci397","alias":"f2"}},"rightPattern":{"type":"object","id":1125,"cls":"Fibonacci397","alias":"f3"}},"rightPattern":{"type":"object","id":1126,"cls":"Result397","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate397"},{"type":"beta","out_nodes":[[2670,-1]],"__id":6121,"parentNodes":[2673,2674]},{"type":"type","out_nodes":[[3,1020]],"__id":6122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result397"}},{"type":"rightadapter","out_nodes":[[2671,1020]],"__id":6125,"parentNodes":[4]},{"type":"join","out_nodes":[[2675,-1]],"__id":6126,"parentNodes":[2677,2678],"constraint":{"type":"join-reference","out_nodes":[],"__id":6127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2671,-1]],"__id":6128,"parentNodes":[]},{"type":"type","out_nodes":[[9,1021],[14,1022],[20,1023],[30,1025],[20,1027],[30,1028]],"__id":6129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci397"}},{"type":"rightadapter","out_nodes":[[2674,1021]],"__id":6132,"parentNodes":[10]},{"type":"join","out_nodes":[[2679,-1]],"__id":6133,"parentNodes":[2680,2681],"constraint":{"type":"join-reference","out_nodes":[],"__id":6134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2674,-1]],"__id":6135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2678,1022]],"__id":6140,"parentNodes":[16]},{"type":"beta","out_nodes":[[2682,-1]],"__id":6141,"parentNodes":[2683,2684]},{"type":"leftadapter","out_nodes":[[2678,-1]],"__id":6142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2681,1023]],"__id":6147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2681,1024]],"__id":6151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6152,"parentNodes":[2686],"index":307,"rule":{"name":"Bootstrap397","pattern":{"type":"object","id":1130,"cls":"Fibonacci397","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap397"},{"type":"beta","out_nodes":[[2685,-1]],"__id":6153,"parentNodes":[2687,2688]},{"type":"rightadapter","out_nodes":[[2686,1025]],"__id":6158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2686,1026]],"__id":6162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6163,"parentNodes":[2690],"index":308,"rule":{"name":"Recurse397","pattern":{"type":"composite","id":1133,"leftPattern":{"type":"not","id":1131,"cls":"Fibonacci397","alias":"f"},"rightPattern":{"type":"object","id":1132,"cls":"Fibonacci397","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci397 = defined.get('Fibonacci397');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci397(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse397"},{"type":"beta","out_nodes":[[2689,-1]],"__id":6164,"parentNodes":[2691,2692]},{"type":"rightadapter","out_nodes":[[2690,1027]],"__id":6168,"parentNodes":[37]},{"type":"not","out_nodes":[[2693,-1]],"__id":6169,"parentNodes":[2694,2695],"constraint":{"type":"join-reference","out_nodes":[],"__id":6170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2690,-1]],"__id":6171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2692,1028]],"__id":6175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2692,1029]],"__id":6179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6180,"parentNodes":[2697],"index":309,"rule":{"name":"Calculate396","pattern":{"type":"composite","id":1140,"leftPattern":{"type":"composite","id":1139,"leftPattern":{"type":"composite","id":1138,"leftPattern":{"type":"object","id":1134,"cls":"Fibonacci396","alias":"f1"},"rightPattern":{"type":"object","id":1135,"cls":"Fibonacci396","alias":"f2"}},"rightPattern":{"type":"object","id":1136,"cls":"Fibonacci396","alias":"f3"}},"rightPattern":{"type":"object","id":1137,"cls":"Result396","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate396"},{"type":"beta","out_nodes":[[2696,-1]],"__id":6181,"parentNodes":[2699,2700]},{"type":"type","out_nodes":[[3,1030]],"__id":6182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result396"}},{"type":"rightadapter","out_nodes":[[2697,1030]],"__id":6185,"parentNodes":[4]},{"type":"join","out_nodes":[[2701,-1]],"__id":6186,"parentNodes":[2703,2704],"constraint":{"type":"join-reference","out_nodes":[],"__id":6187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2697,-1]],"__id":6188,"parentNodes":[]},{"type":"type","out_nodes":[[9,1031],[14,1032],[20,1033],[30,1035],[20,1037],[30,1038]],"__id":6189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci396"}},{"type":"rightadapter","out_nodes":[[2700,1031]],"__id":6192,"parentNodes":[10]},{"type":"join","out_nodes":[[2705,-1]],"__id":6193,"parentNodes":[2706,2707],"constraint":{"type":"join-reference","out_nodes":[],"__id":6194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2700,-1]],"__id":6195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2704,1032]],"__id":6200,"parentNodes":[16]},{"type":"beta","out_nodes":[[2708,-1]],"__id":6201,"parentNodes":[2709,2710]},{"type":"leftadapter","out_nodes":[[2704,-1]],"__id":6202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2707,1033]],"__id":6207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2707,1034]],"__id":6211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6212,"parentNodes":[2712],"index":310,"rule":{"name":"Bootstrap396","pattern":{"type":"object","id":1141,"cls":"Fibonacci396","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap396"},{"type":"beta","out_nodes":[[2711,-1]],"__id":6213,"parentNodes":[2713,2714]},{"type":"rightadapter","out_nodes":[[2712,1035]],"__id":6218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2712,1036]],"__id":6222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6223,"parentNodes":[2716],"index":311,"rule":{"name":"Recurse396","pattern":{"type":"composite","id":1144,"leftPattern":{"type":"not","id":1142,"cls":"Fibonacci396","alias":"f"},"rightPattern":{"type":"object","id":1143,"cls":"Fibonacci396","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci396 = defined.get('Fibonacci396');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci396(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse396"},{"type":"beta","out_nodes":[[2715,-1]],"__id":6224,"parentNodes":[2717,2718]},{"type":"rightadapter","out_nodes":[[2716,1037]],"__id":6228,"parentNodes":[37]},{"type":"not","out_nodes":[[2719,-1]],"__id":6229,"parentNodes":[2720,2721],"constraint":{"type":"join-reference","out_nodes":[],"__id":6230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2716,-1]],"__id":6231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2718,1038]],"__id":6235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2718,1039]],"__id":6239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6240,"parentNodes":[2723],"index":312,"rule":{"name":"Calculate395","pattern":{"type":"composite","id":1151,"leftPattern":{"type":"composite","id":1150,"leftPattern":{"type":"composite","id":1149,"leftPattern":{"type":"object","id":1145,"cls":"Fibonacci395","alias":"f1"},"rightPattern":{"type":"object","id":1146,"cls":"Fibonacci395","alias":"f2"}},"rightPattern":{"type":"object","id":1147,"cls":"Fibonacci395","alias":"f3"}},"rightPattern":{"type":"object","id":1148,"cls":"Result395","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate395"},{"type":"beta","out_nodes":[[2722,-1]],"__id":6241,"parentNodes":[2725,2726]},{"type":"type","out_nodes":[[3,1040]],"__id":6242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result395"}},{"type":"rightadapter","out_nodes":[[2723,1040]],"__id":6245,"parentNodes":[4]},{"type":"join","out_nodes":[[2727,-1]],"__id":6246,"parentNodes":[2729,2730],"constraint":{"type":"join-reference","out_nodes":[],"__id":6247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2723,-1]],"__id":6248,"parentNodes":[]},{"type":"type","out_nodes":[[9,1041],[14,1042],[20,1043],[30,1045],[20,1047],[30,1048]],"__id":6249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci395"}},{"type":"rightadapter","out_nodes":[[2726,1041]],"__id":6252,"parentNodes":[10]},{"type":"join","out_nodes":[[2731,-1]],"__id":6253,"parentNodes":[2732,2733],"constraint":{"type":"join-reference","out_nodes":[],"__id":6254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2726,-1]],"__id":6255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2730,1042]],"__id":6260,"parentNodes":[16]},{"type":"beta","out_nodes":[[2734,-1]],"__id":6261,"parentNodes":[2735,2736]},{"type":"leftadapter","out_nodes":[[2730,-1]],"__id":6262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2733,1043]],"__id":6267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2733,1044]],"__id":6271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6272,"parentNodes":[2738],"index":313,"rule":{"name":"Bootstrap395","pattern":{"type":"object","id":1152,"cls":"Fibonacci395","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap395"},{"type":"beta","out_nodes":[[2737,-1]],"__id":6273,"parentNodes":[2739,2740]},{"type":"rightadapter","out_nodes":[[2738,1045]],"__id":6278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2738,1046]],"__id":6282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6283,"parentNodes":[2742],"index":314,"rule":{"name":"Recurse395","pattern":{"type":"composite","id":1155,"leftPattern":{"type":"not","id":1153,"cls":"Fibonacci395","alias":"f"},"rightPattern":{"type":"object","id":1154,"cls":"Fibonacci395","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci395 = defined.get('Fibonacci395');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci395(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse395"},{"type":"beta","out_nodes":[[2741,-1]],"__id":6284,"parentNodes":[2743,2744]},{"type":"rightadapter","out_nodes":[[2742,1047]],"__id":6288,"parentNodes":[37]},{"type":"not","out_nodes":[[2745,-1]],"__id":6289,"parentNodes":[2746,2747],"constraint":{"type":"join-reference","out_nodes":[],"__id":6290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2742,-1]],"__id":6291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2744,1048]],"__id":6295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2744,1049]],"__id":6299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6300,"parentNodes":[2749],"index":315,"rule":{"name":"Calculate394","pattern":{"type":"composite","id":1162,"leftPattern":{"type":"composite","id":1161,"leftPattern":{"type":"composite","id":1160,"leftPattern":{"type":"object","id":1156,"cls":"Fibonacci394","alias":"f1"},"rightPattern":{"type":"object","id":1157,"cls":"Fibonacci394","alias":"f2"}},"rightPattern":{"type":"object","id":1158,"cls":"Fibonacci394","alias":"f3"}},"rightPattern":{"type":"object","id":1159,"cls":"Result394","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate394"},{"type":"beta","out_nodes":[[2748,-1]],"__id":6301,"parentNodes":[2751,2752]},{"type":"type","out_nodes":[[3,1050]],"__id":6302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result394"}},{"type":"rightadapter","out_nodes":[[2749,1050]],"__id":6305,"parentNodes":[4]},{"type":"join","out_nodes":[[2753,-1]],"__id":6306,"parentNodes":[2755,2756],"constraint":{"type":"join-reference","out_nodes":[],"__id":6307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2749,-1]],"__id":6308,"parentNodes":[]},{"type":"type","out_nodes":[[9,1051],[14,1052],[20,1053],[30,1055],[20,1057],[30,1058]],"__id":6309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci394"}},{"type":"rightadapter","out_nodes":[[2752,1051]],"__id":6312,"parentNodes":[10]},{"type":"join","out_nodes":[[2757,-1]],"__id":6313,"parentNodes":[2758,2759],"constraint":{"type":"join-reference","out_nodes":[],"__id":6314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2752,-1]],"__id":6315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2756,1052]],"__id":6320,"parentNodes":[16]},{"type":"beta","out_nodes":[[2760,-1]],"__id":6321,"parentNodes":[2761,2762]},{"type":"leftadapter","out_nodes":[[2756,-1]],"__id":6322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2759,1053]],"__id":6327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2759,1054]],"__id":6331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6332,"parentNodes":[2764],"index":316,"rule":{"name":"Bootstrap394","pattern":{"type":"object","id":1163,"cls":"Fibonacci394","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap394"},{"type":"beta","out_nodes":[[2763,-1]],"__id":6333,"parentNodes":[2765,2766]},{"type":"rightadapter","out_nodes":[[2764,1055]],"__id":6338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2764,1056]],"__id":6342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6343,"parentNodes":[2768],"index":317,"rule":{"name":"Recurse394","pattern":{"type":"composite","id":1166,"leftPattern":{"type":"not","id":1164,"cls":"Fibonacci394","alias":"f"},"rightPattern":{"type":"object","id":1165,"cls":"Fibonacci394","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci394 = defined.get('Fibonacci394');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci394(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse394"},{"type":"beta","out_nodes":[[2767,-1]],"__id":6344,"parentNodes":[2769,2770]},{"type":"rightadapter","out_nodes":[[2768,1057]],"__id":6348,"parentNodes":[37]},{"type":"not","out_nodes":[[2771,-1]],"__id":6349,"parentNodes":[2772,2773],"constraint":{"type":"join-reference","out_nodes":[],"__id":6350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2768,-1]],"__id":6351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2770,1058]],"__id":6355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2770,1059]],"__id":6359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6360,"parentNodes":[2775],"index":318,"rule":{"name":"Calculate393","pattern":{"type":"composite","id":1173,"leftPattern":{"type":"composite","id":1172,"leftPattern":{"type":"composite","id":1171,"leftPattern":{"type":"object","id":1167,"cls":"Fibonacci393","alias":"f1"},"rightPattern":{"type":"object","id":1168,"cls":"Fibonacci393","alias":"f2"}},"rightPattern":{"type":"object","id":1169,"cls":"Fibonacci393","alias":"f3"}},"rightPattern":{"type":"object","id":1170,"cls":"Result393","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate393"},{"type":"beta","out_nodes":[[2774,-1]],"__id":6361,"parentNodes":[2777,2778]},{"type":"type","out_nodes":[[3,1060]],"__id":6362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result393"}},{"type":"rightadapter","out_nodes":[[2775,1060]],"__id":6365,"parentNodes":[4]},{"type":"join","out_nodes":[[2779,-1]],"__id":6366,"parentNodes":[2781,2782],"constraint":{"type":"join-reference","out_nodes":[],"__id":6367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2775,-1]],"__id":6368,"parentNodes":[]},{"type":"type","out_nodes":[[9,1061],[14,1062],[20,1063],[30,1065],[20,1067],[30,1068]],"__id":6369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci393"}},{"type":"rightadapter","out_nodes":[[2778,1061]],"__id":6372,"parentNodes":[10]},{"type":"join","out_nodes":[[2783,-1]],"__id":6373,"parentNodes":[2784,2785],"constraint":{"type":"join-reference","out_nodes":[],"__id":6374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2778,-1]],"__id":6375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2782,1062]],"__id":6380,"parentNodes":[16]},{"type":"beta","out_nodes":[[2786,-1]],"__id":6381,"parentNodes":[2787,2788]},{"type":"leftadapter","out_nodes":[[2782,-1]],"__id":6382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2785,1063]],"__id":6387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2785,1064]],"__id":6391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6392,"parentNodes":[2790],"index":319,"rule":{"name":"Bootstrap393","pattern":{"type":"object","id":1174,"cls":"Fibonacci393","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap393"},{"type":"beta","out_nodes":[[2789,-1]],"__id":6393,"parentNodes":[2791,2792]},{"type":"rightadapter","out_nodes":[[2790,1065]],"__id":6398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2790,1066]],"__id":6402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6403,"parentNodes":[2794],"index":320,"rule":{"name":"Recurse393","pattern":{"type":"composite","id":1177,"leftPattern":{"type":"not","id":1175,"cls":"Fibonacci393","alias":"f"},"rightPattern":{"type":"object","id":1176,"cls":"Fibonacci393","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci393 = defined.get('Fibonacci393');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci393(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse393"},{"type":"beta","out_nodes":[[2793,-1]],"__id":6404,"parentNodes":[2795,2796]},{"type":"rightadapter","out_nodes":[[2794,1067]],"__id":6408,"parentNodes":[37]},{"type":"not","out_nodes":[[2797,-1]],"__id":6409,"parentNodes":[2798,2799],"constraint":{"type":"join-reference","out_nodes":[],"__id":6410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2794,-1]],"__id":6411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2796,1068]],"__id":6415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2796,1069]],"__id":6419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6420,"parentNodes":[2801],"index":321,"rule":{"name":"Calculate392","pattern":{"type":"composite","id":1184,"leftPattern":{"type":"composite","id":1183,"leftPattern":{"type":"composite","id":1182,"leftPattern":{"type":"object","id":1178,"cls":"Fibonacci392","alias":"f1"},"rightPattern":{"type":"object","id":1179,"cls":"Fibonacci392","alias":"f2"}},"rightPattern":{"type":"object","id":1180,"cls":"Fibonacci392","alias":"f3"}},"rightPattern":{"type":"object","id":1181,"cls":"Result392","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate392"},{"type":"beta","out_nodes":[[2800,-1]],"__id":6421,"parentNodes":[2803,2804]},{"type":"type","out_nodes":[[3,1070]],"__id":6422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result392"}},{"type":"rightadapter","out_nodes":[[2801,1070]],"__id":6425,"parentNodes":[4]},{"type":"join","out_nodes":[[2805,-1]],"__id":6426,"parentNodes":[2807,2808],"constraint":{"type":"join-reference","out_nodes":[],"__id":6427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2801,-1]],"__id":6428,"parentNodes":[]},{"type":"type","out_nodes":[[9,1071],[14,1072],[20,1073],[30,1075],[20,1077],[30,1078]],"__id":6429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci392"}},{"type":"rightadapter","out_nodes":[[2804,1071]],"__id":6432,"parentNodes":[10]},{"type":"join","out_nodes":[[2809,-1]],"__id":6433,"parentNodes":[2810,2811],"constraint":{"type":"join-reference","out_nodes":[],"__id":6434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2804,-1]],"__id":6435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2808,1072]],"__id":6440,"parentNodes":[16]},{"type":"beta","out_nodes":[[2812,-1]],"__id":6441,"parentNodes":[2813,2814]},{"type":"leftadapter","out_nodes":[[2808,-1]],"__id":6442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2811,1073]],"__id":6447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2811,1074]],"__id":6451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6452,"parentNodes":[2816],"index":322,"rule":{"name":"Bootstrap392","pattern":{"type":"object","id":1185,"cls":"Fibonacci392","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap392"},{"type":"beta","out_nodes":[[2815,-1]],"__id":6453,"parentNodes":[2817,2818]},{"type":"rightadapter","out_nodes":[[2816,1075]],"__id":6458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2816,1076]],"__id":6462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6463,"parentNodes":[2820],"index":323,"rule":{"name":"Recurse392","pattern":{"type":"composite","id":1188,"leftPattern":{"type":"not","id":1186,"cls":"Fibonacci392","alias":"f"},"rightPattern":{"type":"object","id":1187,"cls":"Fibonacci392","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci392 = defined.get('Fibonacci392');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci392(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse392"},{"type":"beta","out_nodes":[[2819,-1]],"__id":6464,"parentNodes":[2821,2822]},{"type":"rightadapter","out_nodes":[[2820,1077]],"__id":6468,"parentNodes":[37]},{"type":"not","out_nodes":[[2823,-1]],"__id":6469,"parentNodes":[2824,2825],"constraint":{"type":"join-reference","out_nodes":[],"__id":6470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2820,-1]],"__id":6471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2822,1078]],"__id":6475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2822,1079]],"__id":6479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6480,"parentNodes":[2827],"index":324,"rule":{"name":"Calculate391","pattern":{"type":"composite","id":1195,"leftPattern":{"type":"composite","id":1194,"leftPattern":{"type":"composite","id":1193,"leftPattern":{"type":"object","id":1189,"cls":"Fibonacci391","alias":"f1"},"rightPattern":{"type":"object","id":1190,"cls":"Fibonacci391","alias":"f2"}},"rightPattern":{"type":"object","id":1191,"cls":"Fibonacci391","alias":"f3"}},"rightPattern":{"type":"object","id":1192,"cls":"Result391","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate391"},{"type":"beta","out_nodes":[[2826,-1]],"__id":6481,"parentNodes":[2829,2830]},{"type":"type","out_nodes":[[3,1080]],"__id":6482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result391"}},{"type":"rightadapter","out_nodes":[[2827,1080]],"__id":6485,"parentNodes":[4]},{"type":"join","out_nodes":[[2831,-1]],"__id":6486,"parentNodes":[2833,2834],"constraint":{"type":"join-reference","out_nodes":[],"__id":6487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2827,-1]],"__id":6488,"parentNodes":[]},{"type":"type","out_nodes":[[9,1081],[14,1082],[20,1083],[30,1085],[20,1087],[30,1088]],"__id":6489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci391"}},{"type":"rightadapter","out_nodes":[[2830,1081]],"__id":6492,"parentNodes":[10]},{"type":"join","out_nodes":[[2835,-1]],"__id":6493,"parentNodes":[2836,2837],"constraint":{"type":"join-reference","out_nodes":[],"__id":6494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2830,-1]],"__id":6495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2834,1082]],"__id":6500,"parentNodes":[16]},{"type":"beta","out_nodes":[[2838,-1]],"__id":6501,"parentNodes":[2839,2840]},{"type":"leftadapter","out_nodes":[[2834,-1]],"__id":6502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2837,1083]],"__id":6507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2837,1084]],"__id":6511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6512,"parentNodes":[2842],"index":325,"rule":{"name":"Bootstrap391","pattern":{"type":"object","id":1196,"cls":"Fibonacci391","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap391"},{"type":"beta","out_nodes":[[2841,-1]],"__id":6513,"parentNodes":[2843,2844]},{"type":"rightadapter","out_nodes":[[2842,1085]],"__id":6518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2842,1086]],"__id":6522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6523,"parentNodes":[2846],"index":326,"rule":{"name":"Recurse391","pattern":{"type":"composite","id":1199,"leftPattern":{"type":"not","id":1197,"cls":"Fibonacci391","alias":"f"},"rightPattern":{"type":"object","id":1198,"cls":"Fibonacci391","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci391 = defined.get('Fibonacci391');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci391(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse391"},{"type":"beta","out_nodes":[[2845,-1]],"__id":6524,"parentNodes":[2847,2848]},{"type":"rightadapter","out_nodes":[[2846,1087]],"__id":6528,"parentNodes":[37]},{"type":"not","out_nodes":[[2849,-1]],"__id":6529,"parentNodes":[2850,2851],"constraint":{"type":"join-reference","out_nodes":[],"__id":6530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2846,-1]],"__id":6531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2848,1088]],"__id":6535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2848,1089]],"__id":6539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6540,"parentNodes":[2853],"index":327,"rule":{"name":"Calculate390","pattern":{"type":"composite","id":1206,"leftPattern":{"type":"composite","id":1205,"leftPattern":{"type":"composite","id":1204,"leftPattern":{"type":"object","id":1200,"cls":"Fibonacci390","alias":"f1"},"rightPattern":{"type":"object","id":1201,"cls":"Fibonacci390","alias":"f2"}},"rightPattern":{"type":"object","id":1202,"cls":"Fibonacci390","alias":"f3"}},"rightPattern":{"type":"object","id":1203,"cls":"Result390","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate390"},{"type":"beta","out_nodes":[[2852,-1]],"__id":6541,"parentNodes":[2855,2856]},{"type":"type","out_nodes":[[3,1090]],"__id":6542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result390"}},{"type":"rightadapter","out_nodes":[[2853,1090]],"__id":6545,"parentNodes":[4]},{"type":"join","out_nodes":[[2857,-1]],"__id":6546,"parentNodes":[2859,2860],"constraint":{"type":"join-reference","out_nodes":[],"__id":6547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2853,-1]],"__id":6548,"parentNodes":[]},{"type":"type","out_nodes":[[9,1091],[14,1092],[20,1093],[30,1095],[20,1097],[30,1098]],"__id":6549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci390"}},{"type":"rightadapter","out_nodes":[[2856,1091]],"__id":6552,"parentNodes":[10]},{"type":"join","out_nodes":[[2861,-1]],"__id":6553,"parentNodes":[2862,2863],"constraint":{"type":"join-reference","out_nodes":[],"__id":6554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2856,-1]],"__id":6555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2860,1092]],"__id":6560,"parentNodes":[16]},{"type":"beta","out_nodes":[[2864,-1]],"__id":6561,"parentNodes":[2865,2866]},{"type":"leftadapter","out_nodes":[[2860,-1]],"__id":6562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2863,1093]],"__id":6567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2863,1094]],"__id":6571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6572,"parentNodes":[2868],"index":328,"rule":{"name":"Bootstrap390","pattern":{"type":"object","id":1207,"cls":"Fibonacci390","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap390"},{"type":"beta","out_nodes":[[2867,-1]],"__id":6573,"parentNodes":[2869,2870]},{"type":"rightadapter","out_nodes":[[2868,1095]],"__id":6578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2868,1096]],"__id":6582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6583,"parentNodes":[2872],"index":329,"rule":{"name":"Recurse390","pattern":{"type":"composite","id":1210,"leftPattern":{"type":"not","id":1208,"cls":"Fibonacci390","alias":"f"},"rightPattern":{"type":"object","id":1209,"cls":"Fibonacci390","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');let Fibonacci390 = defined.get('Fibonacci390');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci390(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse390"},{"type":"beta","out_nodes":[[2871,-1]],"__id":6584,"parentNodes":[2873,2874]},{"type":"rightadapter","out_nodes":[[2872,1097]],"__id":6588,"parentNodes":[37]},{"type":"not","out_nodes":[[2875,-1]],"__id":6589,"parentNodes":[2876,2877],"constraint":{"type":"join-reference","out_nodes":[],"__id":6590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2872,-1]],"__id":6591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2874,1098]],"__id":6595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2874,1099]],"__id":6599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6600,"parentNodes":[2879],"index":330,"rule":{"name":"Calculate389","pattern":{"type":"composite","id":1217,"leftPattern":{"type":"composite","id":1216,"leftPattern":{"type":"composite","id":1215,"leftPattern":{"type":"object","id":1211,"cls":"Fibonacci389","alias":"f1"},"rightPattern":{"type":"object","id":1212,"cls":"Fibonacci389","alias":"f2"}},"rightPattern":{"type":"object","id":1213,"cls":"Fibonacci389","alias":"f3"}},"rightPattern":{"type":"object","id":1214,"cls":"Result389","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate389"},{"type":"beta","out_nodes":[[2878,-1]],"__id":6601,"parentNodes":[2881,2882]},{"type":"type","out_nodes":[[3,1100]],"__id":6602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result389"}},{"type":"rightadapter","out_nodes":[[2879,1100]],"__id":6605,"parentNodes":[4]},{"type":"join","out_nodes":[[2883,-1]],"__id":6606,"parentNodes":[2885,2886],"constraint":{"type":"join-reference","out_nodes":[],"__id":6607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2879,-1]],"__id":6608,"parentNodes":[]},{"type":"type","out_nodes":[[9,1101],[14,1102],[20,1103],[30,1105],[20,1107],[30,1108]],"__id":6609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci389"}},{"type":"rightadapter","out_nodes":[[2882,1101]],"__id":6612,"parentNodes":[10]},{"type":"join","out_nodes":[[2887,-1]],"__id":6613,"parentNodes":[2888,2889],"constraint":{"type":"join-reference","out_nodes":[],"__id":6614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2882,-1]],"__id":6615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2886,1102]],"__id":6620,"parentNodes":[16]},{"type":"beta","out_nodes":[[2890,-1]],"__id":6621,"parentNodes":[2891,2892]},{"type":"leftadapter","out_nodes":[[2886,-1]],"__id":6622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2889,1103]],"__id":6627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2889,1104]],"__id":6631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6632,"parentNodes":[2894],"index":331,"rule":{"name":"Bootstrap389","pattern":{"type":"object","id":1218,"cls":"Fibonacci389","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap389"},{"type":"beta","out_nodes":[[2893,-1]],"__id":6633,"parentNodes":[2895,2896]},{"type":"rightadapter","out_nodes":[[2894,1105]],"__id":6638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2894,1106]],"__id":6642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6643,"parentNodes":[2898],"index":332,"rule":{"name":"Recurse389","pattern":{"type":"composite","id":1221,"leftPattern":{"type":"not","id":1219,"cls":"Fibonacci389","alias":"f"},"rightPattern":{"type":"object","id":1220,"cls":"Fibonacci389","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci389 = defined.get('Fibonacci389');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci389(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse389"},{"type":"beta","out_nodes":[[2897,-1]],"__id":6644,"parentNodes":[2899,2900]},{"type":"rightadapter","out_nodes":[[2898,1107]],"__id":6648,"parentNodes":[37]},{"type":"not","out_nodes":[[2901,-1]],"__id":6649,"parentNodes":[2902,2903],"constraint":{"type":"join-reference","out_nodes":[],"__id":6650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2898,-1]],"__id":6651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2900,1108]],"__id":6655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2900,1109]],"__id":6659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6660,"parentNodes":[2905],"index":333,"rule":{"name":"Calculate388","pattern":{"type":"composite","id":1228,"leftPattern":{"type":"composite","id":1227,"leftPattern":{"type":"composite","id":1226,"leftPattern":{"type":"object","id":1222,"cls":"Fibonacci388","alias":"f1"},"rightPattern":{"type":"object","id":1223,"cls":"Fibonacci388","alias":"f2"}},"rightPattern":{"type":"object","id":1224,"cls":"Fibonacci388","alias":"f3"}},"rightPattern":{"type":"object","id":1225,"cls":"Result388","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate388"},{"type":"beta","out_nodes":[[2904,-1]],"__id":6661,"parentNodes":[2907,2908]},{"type":"type","out_nodes":[[3,1110]],"__id":6662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result388"}},{"type":"rightadapter","out_nodes":[[2905,1110]],"__id":6665,"parentNodes":[4]},{"type":"join","out_nodes":[[2909,-1]],"__id":6666,"parentNodes":[2911,2912],"constraint":{"type":"join-reference","out_nodes":[],"__id":6667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2905,-1]],"__id":6668,"parentNodes":[]},{"type":"type","out_nodes":[[9,1111],[14,1112],[20,1113],[30,1115],[20,1117],[30,1118]],"__id":6669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci388"}},{"type":"rightadapter","out_nodes":[[2908,1111]],"__id":6672,"parentNodes":[10]},{"type":"join","out_nodes":[[2913,-1]],"__id":6673,"parentNodes":[2914,2915],"constraint":{"type":"join-reference","out_nodes":[],"__id":6674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2908,-1]],"__id":6675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2912,1112]],"__id":6680,"parentNodes":[16]},{"type":"beta","out_nodes":[[2916,-1]],"__id":6681,"parentNodes":[2917,2918]},{"type":"leftadapter","out_nodes":[[2912,-1]],"__id":6682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2915,1113]],"__id":6687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2915,1114]],"__id":6691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6692,"parentNodes":[2920],"index":334,"rule":{"name":"Bootstrap388","pattern":{"type":"object","id":1229,"cls":"Fibonacci388","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap388"},{"type":"beta","out_nodes":[[2919,-1]],"__id":6693,"parentNodes":[2921,2922]},{"type":"rightadapter","out_nodes":[[2920,1115]],"__id":6698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2920,1116]],"__id":6702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6703,"parentNodes":[2924],"index":335,"rule":{"name":"Recurse388","pattern":{"type":"composite","id":1232,"leftPattern":{"type":"not","id":1230,"cls":"Fibonacci388","alias":"f"},"rightPattern":{"type":"object","id":1231,"cls":"Fibonacci388","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci388 = defined.get('Fibonacci388');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci388(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse388"},{"type":"beta","out_nodes":[[2923,-1]],"__id":6704,"parentNodes":[2925,2926]},{"type":"rightadapter","out_nodes":[[2924,1117]],"__id":6708,"parentNodes":[37]},{"type":"not","out_nodes":[[2927,-1]],"__id":6709,"parentNodes":[2928,2929],"constraint":{"type":"join-reference","out_nodes":[],"__id":6710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2924,-1]],"__id":6711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2926,1118]],"__id":6715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2926,1119]],"__id":6719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6720,"parentNodes":[2931],"index":336,"rule":{"name":"Calculate387","pattern":{"type":"composite","id":1239,"leftPattern":{"type":"composite","id":1238,"leftPattern":{"type":"composite","id":1237,"leftPattern":{"type":"object","id":1233,"cls":"Fibonacci387","alias":"f1"},"rightPattern":{"type":"object","id":1234,"cls":"Fibonacci387","alias":"f2"}},"rightPattern":{"type":"object","id":1235,"cls":"Fibonacci387","alias":"f3"}},"rightPattern":{"type":"object","id":1236,"cls":"Result387","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate387"},{"type":"beta","out_nodes":[[2930,-1]],"__id":6721,"parentNodes":[2933,2934]},{"type":"type","out_nodes":[[3,1120]],"__id":6722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result387"}},{"type":"rightadapter","out_nodes":[[2931,1120]],"__id":6725,"parentNodes":[4]},{"type":"join","out_nodes":[[2935,-1]],"__id":6726,"parentNodes":[2937,2938],"constraint":{"type":"join-reference","out_nodes":[],"__id":6727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2931,-1]],"__id":6728,"parentNodes":[]},{"type":"type","out_nodes":[[9,1121],[14,1122],[20,1123],[30,1125],[20,1127],[30,1128]],"__id":6729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci387"}},{"type":"rightadapter","out_nodes":[[2934,1121]],"__id":6732,"parentNodes":[10]},{"type":"join","out_nodes":[[2939,-1]],"__id":6733,"parentNodes":[2940,2941],"constraint":{"type":"join-reference","out_nodes":[],"__id":6734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2934,-1]],"__id":6735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2938,1122]],"__id":6740,"parentNodes":[16]},{"type":"beta","out_nodes":[[2942,-1]],"__id":6741,"parentNodes":[2943,2944]},{"type":"leftadapter","out_nodes":[[2938,-1]],"__id":6742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2941,1123]],"__id":6747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2941,1124]],"__id":6751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6752,"parentNodes":[2946],"index":337,"rule":{"name":"Bootstrap387","pattern":{"type":"object","id":1240,"cls":"Fibonacci387","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap387"},{"type":"beta","out_nodes":[[2945,-1]],"__id":6753,"parentNodes":[2947,2948]},{"type":"rightadapter","out_nodes":[[2946,1125]],"__id":6758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2946,1126]],"__id":6762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6763,"parentNodes":[2950],"index":338,"rule":{"name":"Recurse387","pattern":{"type":"composite","id":1243,"leftPattern":{"type":"not","id":1241,"cls":"Fibonacci387","alias":"f"},"rightPattern":{"type":"object","id":1242,"cls":"Fibonacci387","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci387 = defined.get('Fibonacci387');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci387(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse387"},{"type":"beta","out_nodes":[[2949,-1]],"__id":6764,"parentNodes":[2951,2952]},{"type":"rightadapter","out_nodes":[[2950,1127]],"__id":6768,"parentNodes":[37]},{"type":"not","out_nodes":[[2953,-1]],"__id":6769,"parentNodes":[2954,2955],"constraint":{"type":"join-reference","out_nodes":[],"__id":6770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2950,-1]],"__id":6771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2952,1128]],"__id":6775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2952,1129]],"__id":6779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6780,"parentNodes":[2957],"index":339,"rule":{"name":"Calculate386","pattern":{"type":"composite","id":1250,"leftPattern":{"type":"composite","id":1249,"leftPattern":{"type":"composite","id":1248,"leftPattern":{"type":"object","id":1244,"cls":"Fibonacci386","alias":"f1"},"rightPattern":{"type":"object","id":1245,"cls":"Fibonacci386","alias":"f2"}},"rightPattern":{"type":"object","id":1246,"cls":"Fibonacci386","alias":"f3"}},"rightPattern":{"type":"object","id":1247,"cls":"Result386","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate386"},{"type":"beta","out_nodes":[[2956,-1]],"__id":6781,"parentNodes":[2959,2960]},{"type":"type","out_nodes":[[3,1130]],"__id":6782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result386"}},{"type":"rightadapter","out_nodes":[[2957,1130]],"__id":6785,"parentNodes":[4]},{"type":"join","out_nodes":[[2961,-1]],"__id":6786,"parentNodes":[2963,2964],"constraint":{"type":"join-reference","out_nodes":[],"__id":6787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2957,-1]],"__id":6788,"parentNodes":[]},{"type":"type","out_nodes":[[9,1131],[14,1132],[20,1133],[30,1135],[20,1137],[30,1138]],"__id":6789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci386"}},{"type":"rightadapter","out_nodes":[[2960,1131]],"__id":6792,"parentNodes":[10]},{"type":"join","out_nodes":[[2965,-1]],"__id":6793,"parentNodes":[2966,2967],"constraint":{"type":"join-reference","out_nodes":[],"__id":6794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2960,-1]],"__id":6795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2964,1132]],"__id":6800,"parentNodes":[16]},{"type":"beta","out_nodes":[[2968,-1]],"__id":6801,"parentNodes":[2969,2970]},{"type":"leftadapter","out_nodes":[[2964,-1]],"__id":6802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2967,1133]],"__id":6807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2967,1134]],"__id":6811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6812,"parentNodes":[2972],"index":340,"rule":{"name":"Bootstrap386","pattern":{"type":"object","id":1251,"cls":"Fibonacci386","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap386"},{"type":"beta","out_nodes":[[2971,-1]],"__id":6813,"parentNodes":[2973,2974]},{"type":"rightadapter","out_nodes":[[2972,1135]],"__id":6818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2972,1136]],"__id":6822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6823,"parentNodes":[2976],"index":341,"rule":{"name":"Recurse386","pattern":{"type":"composite","id":1254,"leftPattern":{"type":"not","id":1252,"cls":"Fibonacci386","alias":"f"},"rightPattern":{"type":"object","id":1253,"cls":"Fibonacci386","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci386 = defined.get('Fibonacci386');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci386(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse386"},{"type":"beta","out_nodes":[[2975,-1]],"__id":6824,"parentNodes":[2977,2978]},{"type":"rightadapter","out_nodes":[[2976,1137]],"__id":6828,"parentNodes":[37]},{"type":"not","out_nodes":[[2979,-1]],"__id":6829,"parentNodes":[2980,2981],"constraint":{"type":"join-reference","out_nodes":[],"__id":6830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[2976,-1]],"__id":6831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2978,1138]],"__id":6835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[2978,1139]],"__id":6839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6840,"parentNodes":[2983],"index":342,"rule":{"name":"Calculate385","pattern":{"type":"composite","id":1261,"leftPattern":{"type":"composite","id":1260,"leftPattern":{"type":"composite","id":1259,"leftPattern":{"type":"object","id":1255,"cls":"Fibonacci385","alias":"f1"},"rightPattern":{"type":"object","id":1256,"cls":"Fibonacci385","alias":"f2"}},"rightPattern":{"type":"object","id":1257,"cls":"Fibonacci385","alias":"f3"}},"rightPattern":{"type":"object","id":1258,"cls":"Result385","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate385"},{"type":"beta","out_nodes":[[2982,-1]],"__id":6841,"parentNodes":[2985,2986]},{"type":"type","out_nodes":[[3,1140]],"__id":6842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result385"}},{"type":"rightadapter","out_nodes":[[2983,1140]],"__id":6845,"parentNodes":[4]},{"type":"join","out_nodes":[[2987,-1]],"__id":6846,"parentNodes":[2989,2990],"constraint":{"type":"join-reference","out_nodes":[],"__id":6847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2983,-1]],"__id":6848,"parentNodes":[]},{"type":"type","out_nodes":[[9,1141],[14,1142],[20,1143],[30,1145],[20,1147],[30,1148]],"__id":6849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci385"}},{"type":"rightadapter","out_nodes":[[2986,1141]],"__id":6852,"parentNodes":[10]},{"type":"join","out_nodes":[[2991,-1]],"__id":6853,"parentNodes":[2992,2993],"constraint":{"type":"join-reference","out_nodes":[],"__id":6854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[2986,-1]],"__id":6855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2990,1142]],"__id":6860,"parentNodes":[16]},{"type":"beta","out_nodes":[[2994,-1]],"__id":6861,"parentNodes":[2995,2996]},{"type":"leftadapter","out_nodes":[[2990,-1]],"__id":6862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[2993,1143]],"__id":6867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[2993,1144]],"__id":6871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6872,"parentNodes":[2998],"index":343,"rule":{"name":"Bootstrap385","pattern":{"type":"object","id":1262,"cls":"Fibonacci385","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap385"},{"type":"beta","out_nodes":[[2997,-1]],"__id":6873,"parentNodes":[2999,3000]},{"type":"rightadapter","out_nodes":[[2998,1145]],"__id":6878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[2998,1146]],"__id":6882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6883,"parentNodes":[3002],"index":344,"rule":{"name":"Recurse385","pattern":{"type":"composite","id":1265,"leftPattern":{"type":"not","id":1263,"cls":"Fibonacci385","alias":"f"},"rightPattern":{"type":"object","id":1264,"cls":"Fibonacci385","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci385 = defined.get('Fibonacci385');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci385(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse385"},{"type":"beta","out_nodes":[[3001,-1]],"__id":6884,"parentNodes":[3003,3004]},{"type":"rightadapter","out_nodes":[[3002,1147]],"__id":6888,"parentNodes":[37]},{"type":"not","out_nodes":[[3005,-1]],"__id":6889,"parentNodes":[3006,3007],"constraint":{"type":"join-reference","out_nodes":[],"__id":6890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3002,-1]],"__id":6891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3004,1148]],"__id":6895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3004,1149]],"__id":6899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6900,"parentNodes":[3009],"index":345,"rule":{"name":"Calculate384","pattern":{"type":"composite","id":1272,"leftPattern":{"type":"composite","id":1271,"leftPattern":{"type":"composite","id":1270,"leftPattern":{"type":"object","id":1266,"cls":"Fibonacci384","alias":"f1"},"rightPattern":{"type":"object","id":1267,"cls":"Fibonacci384","alias":"f2"}},"rightPattern":{"type":"object","id":1268,"cls":"Fibonacci384","alias":"f3"}},"rightPattern":{"type":"object","id":1269,"cls":"Result384","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate384"},{"type":"beta","out_nodes":[[3008,-1]],"__id":6901,"parentNodes":[3011,3012]},{"type":"type","out_nodes":[[3,1150]],"__id":6902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result384"}},{"type":"rightadapter","out_nodes":[[3009,1150]],"__id":6905,"parentNodes":[4]},{"type":"join","out_nodes":[[3013,-1]],"__id":6906,"parentNodes":[3015,3016],"constraint":{"type":"join-reference","out_nodes":[],"__id":6907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3009,-1]],"__id":6908,"parentNodes":[]},{"type":"type","out_nodes":[[9,1151],[14,1152],[20,1153],[30,1155],[20,1157],[30,1158]],"__id":6909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci384"}},{"type":"rightadapter","out_nodes":[[3012,1151]],"__id":6912,"parentNodes":[10]},{"type":"join","out_nodes":[[3017,-1]],"__id":6913,"parentNodes":[3018,3019],"constraint":{"type":"join-reference","out_nodes":[],"__id":6914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3012,-1]],"__id":6915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3016,1152]],"__id":6920,"parentNodes":[16]},{"type":"beta","out_nodes":[[3020,-1]],"__id":6921,"parentNodes":[3021,3022]},{"type":"leftadapter","out_nodes":[[3016,-1]],"__id":6922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3019,1153]],"__id":6927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3019,1154]],"__id":6931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6932,"parentNodes":[3024],"index":346,"rule":{"name":"Bootstrap384","pattern":{"type":"object","id":1273,"cls":"Fibonacci384","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap384"},{"type":"beta","out_nodes":[[3023,-1]],"__id":6933,"parentNodes":[3025,3026]},{"type":"rightadapter","out_nodes":[[3024,1155]],"__id":6938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3024,1156]],"__id":6942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6943,"parentNodes":[3028],"index":347,"rule":{"name":"Recurse384","pattern":{"type":"composite","id":1276,"leftPattern":{"type":"not","id":1274,"cls":"Fibonacci384","alias":"f"},"rightPattern":{"type":"object","id":1275,"cls":"Fibonacci384","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci384 = defined.get('Fibonacci384');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci384(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse384"},{"type":"beta","out_nodes":[[3027,-1]],"__id":6944,"parentNodes":[3029,3030]},{"type":"rightadapter","out_nodes":[[3028,1157]],"__id":6948,"parentNodes":[37]},{"type":"not","out_nodes":[[3031,-1]],"__id":6949,"parentNodes":[3032,3033],"constraint":{"type":"join-reference","out_nodes":[],"__id":6950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3028,-1]],"__id":6951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3030,1158]],"__id":6955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3030,1159]],"__id":6959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6960,"parentNodes":[3035],"index":348,"rule":{"name":"Calculate383","pattern":{"type":"composite","id":1283,"leftPattern":{"type":"composite","id":1282,"leftPattern":{"type":"composite","id":1281,"leftPattern":{"type":"object","id":1277,"cls":"Fibonacci383","alias":"f1"},"rightPattern":{"type":"object","id":1278,"cls":"Fibonacci383","alias":"f2"}},"rightPattern":{"type":"object","id":1279,"cls":"Fibonacci383","alias":"f3"}},"rightPattern":{"type":"object","id":1280,"cls":"Result383","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate383"},{"type":"beta","out_nodes":[[3034,-1]],"__id":6961,"parentNodes":[3037,3038]},{"type":"type","out_nodes":[[3,1160]],"__id":6962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result383"}},{"type":"rightadapter","out_nodes":[[3035,1160]],"__id":6965,"parentNodes":[4]},{"type":"join","out_nodes":[[3039,-1]],"__id":6966,"parentNodes":[3041,3042],"constraint":{"type":"join-reference","out_nodes":[],"__id":6967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3035,-1]],"__id":6968,"parentNodes":[]},{"type":"type","out_nodes":[[9,1161],[14,1162],[20,1163],[30,1165],[20,1167],[30,1168]],"__id":6969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci383"}},{"type":"rightadapter","out_nodes":[[3038,1161]],"__id":6972,"parentNodes":[10]},{"type":"join","out_nodes":[[3043,-1]],"__id":6973,"parentNodes":[3044,3045],"constraint":{"type":"join-reference","out_nodes":[],"__id":6974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3038,-1]],"__id":6975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3042,1162]],"__id":6980,"parentNodes":[16]},{"type":"beta","out_nodes":[[3046,-1]],"__id":6981,"parentNodes":[3047,3048]},{"type":"leftadapter","out_nodes":[[3042,-1]],"__id":6982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3045,1163]],"__id":6987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3045,1164]],"__id":6991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":6992,"parentNodes":[3050],"index":349,"rule":{"name":"Bootstrap383","pattern":{"type":"object","id":1284,"cls":"Fibonacci383","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap383"},{"type":"beta","out_nodes":[[3049,-1]],"__id":6993,"parentNodes":[3051,3052]},{"type":"rightadapter","out_nodes":[[3050,1165]],"__id":6998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3050,1166]],"__id":7002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7003,"parentNodes":[3054],"index":350,"rule":{"name":"Recurse383","pattern":{"type":"composite","id":1287,"leftPattern":{"type":"not","id":1285,"cls":"Fibonacci383","alias":"f"},"rightPattern":{"type":"object","id":1286,"cls":"Fibonacci383","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci383 = defined.get('Fibonacci383');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci383(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse383"},{"type":"beta","out_nodes":[[3053,-1]],"__id":7004,"parentNodes":[3055,3056]},{"type":"rightadapter","out_nodes":[[3054,1167]],"__id":7008,"parentNodes":[37]},{"type":"not","out_nodes":[[3057,-1]],"__id":7009,"parentNodes":[3058,3059],"constraint":{"type":"join-reference","out_nodes":[],"__id":7010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3054,-1]],"__id":7011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3056,1168]],"__id":7015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3056,1169]],"__id":7019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7020,"parentNodes":[3061],"index":351,"rule":{"name":"Calculate382","pattern":{"type":"composite","id":1294,"leftPattern":{"type":"composite","id":1293,"leftPattern":{"type":"composite","id":1292,"leftPattern":{"type":"object","id":1288,"cls":"Fibonacci382","alias":"f1"},"rightPattern":{"type":"object","id":1289,"cls":"Fibonacci382","alias":"f2"}},"rightPattern":{"type":"object","id":1290,"cls":"Fibonacci382","alias":"f3"}},"rightPattern":{"type":"object","id":1291,"cls":"Result382","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate382"},{"type":"beta","out_nodes":[[3060,-1]],"__id":7021,"parentNodes":[3063,3064]},{"type":"type","out_nodes":[[3,1170]],"__id":7022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result382"}},{"type":"rightadapter","out_nodes":[[3061,1170]],"__id":7025,"parentNodes":[4]},{"type":"join","out_nodes":[[3065,-1]],"__id":7026,"parentNodes":[3067,3068],"constraint":{"type":"join-reference","out_nodes":[],"__id":7027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3061,-1]],"__id":7028,"parentNodes":[]},{"type":"type","out_nodes":[[9,1171],[14,1172],[20,1173],[30,1175],[20,1177],[30,1178]],"__id":7029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci382"}},{"type":"rightadapter","out_nodes":[[3064,1171]],"__id":7032,"parentNodes":[10]},{"type":"join","out_nodes":[[3069,-1]],"__id":7033,"parentNodes":[3070,3071],"constraint":{"type":"join-reference","out_nodes":[],"__id":7034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3064,-1]],"__id":7035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3068,1172]],"__id":7040,"parentNodes":[16]},{"type":"beta","out_nodes":[[3072,-1]],"__id":7041,"parentNodes":[3073,3074]},{"type":"leftadapter","out_nodes":[[3068,-1]],"__id":7042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3071,1173]],"__id":7047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3071,1174]],"__id":7051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7052,"parentNodes":[3076],"index":352,"rule":{"name":"Bootstrap382","pattern":{"type":"object","id":1295,"cls":"Fibonacci382","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap382"},{"type":"beta","out_nodes":[[3075,-1]],"__id":7053,"parentNodes":[3077,3078]},{"type":"rightadapter","out_nodes":[[3076,1175]],"__id":7058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3076,1176]],"__id":7062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7063,"parentNodes":[3080],"index":353,"rule":{"name":"Recurse382","pattern":{"type":"composite","id":1298,"leftPattern":{"type":"not","id":1296,"cls":"Fibonacci382","alias":"f"},"rightPattern":{"type":"object","id":1297,"cls":"Fibonacci382","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci382 = defined.get('Fibonacci382');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci382(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse382"},{"type":"beta","out_nodes":[[3079,-1]],"__id":7064,"parentNodes":[3081,3082]},{"type":"rightadapter","out_nodes":[[3080,1177]],"__id":7068,"parentNodes":[37]},{"type":"not","out_nodes":[[3083,-1]],"__id":7069,"parentNodes":[3084,3085],"constraint":{"type":"join-reference","out_nodes":[],"__id":7070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3080,-1]],"__id":7071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3082,1178]],"__id":7075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3082,1179]],"__id":7079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7080,"parentNodes":[3087],"index":354,"rule":{"name":"Calculate381","pattern":{"type":"composite","id":1305,"leftPattern":{"type":"composite","id":1304,"leftPattern":{"type":"composite","id":1303,"leftPattern":{"type":"object","id":1299,"cls":"Fibonacci381","alias":"f1"},"rightPattern":{"type":"object","id":1300,"cls":"Fibonacci381","alias":"f2"}},"rightPattern":{"type":"object","id":1301,"cls":"Fibonacci381","alias":"f3"}},"rightPattern":{"type":"object","id":1302,"cls":"Result381","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate381"},{"type":"beta","out_nodes":[[3086,-1]],"__id":7081,"parentNodes":[3089,3090]},{"type":"type","out_nodes":[[3,1180]],"__id":7082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result381"}},{"type":"rightadapter","out_nodes":[[3087,1180]],"__id":7085,"parentNodes":[4]},{"type":"join","out_nodes":[[3091,-1]],"__id":7086,"parentNodes":[3093,3094],"constraint":{"type":"join-reference","out_nodes":[],"__id":7087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3087,-1]],"__id":7088,"parentNodes":[]},{"type":"type","out_nodes":[[9,1181],[14,1182],[20,1183],[30,1185],[20,1187],[30,1188]],"__id":7089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci381"}},{"type":"rightadapter","out_nodes":[[3090,1181]],"__id":7092,"parentNodes":[10]},{"type":"join","out_nodes":[[3095,-1]],"__id":7093,"parentNodes":[3096,3097],"constraint":{"type":"join-reference","out_nodes":[],"__id":7094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3090,-1]],"__id":7095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3094,1182]],"__id":7100,"parentNodes":[16]},{"type":"beta","out_nodes":[[3098,-1]],"__id":7101,"parentNodes":[3099,3100]},{"type":"leftadapter","out_nodes":[[3094,-1]],"__id":7102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3097,1183]],"__id":7107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3097,1184]],"__id":7111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7112,"parentNodes":[3102],"index":355,"rule":{"name":"Bootstrap381","pattern":{"type":"object","id":1306,"cls":"Fibonacci381","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap381"},{"type":"beta","out_nodes":[[3101,-1]],"__id":7113,"parentNodes":[3103,3104]},{"type":"rightadapter","out_nodes":[[3102,1185]],"__id":7118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3102,1186]],"__id":7122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7123,"parentNodes":[3106],"index":356,"rule":{"name":"Recurse381","pattern":{"type":"composite","id":1309,"leftPattern":{"type":"not","id":1307,"cls":"Fibonacci381","alias":"f"},"rightPattern":{"type":"object","id":1308,"cls":"Fibonacci381","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci381 = defined.get('Fibonacci381');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci381(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse381"},{"type":"beta","out_nodes":[[3105,-1]],"__id":7124,"parentNodes":[3107,3108]},{"type":"rightadapter","out_nodes":[[3106,1187]],"__id":7128,"parentNodes":[37]},{"type":"not","out_nodes":[[3109,-1]],"__id":7129,"parentNodes":[3110,3111],"constraint":{"type":"join-reference","out_nodes":[],"__id":7130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3106,-1]],"__id":7131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3108,1188]],"__id":7135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3108,1189]],"__id":7139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7140,"parentNodes":[3113],"index":357,"rule":{"name":"Calculate380","pattern":{"type":"composite","id":1316,"leftPattern":{"type":"composite","id":1315,"leftPattern":{"type":"composite","id":1314,"leftPattern":{"type":"object","id":1310,"cls":"Fibonacci380","alias":"f1"},"rightPattern":{"type":"object","id":1311,"cls":"Fibonacci380","alias":"f2"}},"rightPattern":{"type":"object","id":1312,"cls":"Fibonacci380","alias":"f3"}},"rightPattern":{"type":"object","id":1313,"cls":"Result380","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate380"},{"type":"beta","out_nodes":[[3112,-1]],"__id":7141,"parentNodes":[3115,3116]},{"type":"type","out_nodes":[[3,1190]],"__id":7142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result380"}},{"type":"rightadapter","out_nodes":[[3113,1190]],"__id":7145,"parentNodes":[4]},{"type":"join","out_nodes":[[3117,-1]],"__id":7146,"parentNodes":[3119,3120],"constraint":{"type":"join-reference","out_nodes":[],"__id":7147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3113,-1]],"__id":7148,"parentNodes":[]},{"type":"type","out_nodes":[[9,1191],[14,1192],[20,1193],[30,1195],[20,1197],[30,1198]],"__id":7149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci380"}},{"type":"rightadapter","out_nodes":[[3116,1191]],"__id":7152,"parentNodes":[10]},{"type":"join","out_nodes":[[3121,-1]],"__id":7153,"parentNodes":[3122,3123],"constraint":{"type":"join-reference","out_nodes":[],"__id":7154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3116,-1]],"__id":7155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3120,1192]],"__id":7160,"parentNodes":[16]},{"type":"beta","out_nodes":[[3124,-1]],"__id":7161,"parentNodes":[3125,3126]},{"type":"leftadapter","out_nodes":[[3120,-1]],"__id":7162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3123,1193]],"__id":7167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3123,1194]],"__id":7171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7172,"parentNodes":[3128],"index":358,"rule":{"name":"Bootstrap380","pattern":{"type":"object","id":1317,"cls":"Fibonacci380","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap380"},{"type":"beta","out_nodes":[[3127,-1]],"__id":7173,"parentNodes":[3129,3130]},{"type":"rightadapter","out_nodes":[[3128,1195]],"__id":7178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3128,1196]],"__id":7182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7183,"parentNodes":[3132],"index":359,"rule":{"name":"Recurse380","pattern":{"type":"composite","id":1320,"leftPattern":{"type":"not","id":1318,"cls":"Fibonacci380","alias":"f"},"rightPattern":{"type":"object","id":1319,"cls":"Fibonacci380","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');let Fibonacci380 = defined.get('Fibonacci380');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci380(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse380"},{"type":"beta","out_nodes":[[3131,-1]],"__id":7184,"parentNodes":[3133,3134]},{"type":"rightadapter","out_nodes":[[3132,1197]],"__id":7188,"parentNodes":[37]},{"type":"not","out_nodes":[[3135,-1]],"__id":7189,"parentNodes":[3136,3137],"constraint":{"type":"join-reference","out_nodes":[],"__id":7190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3132,-1]],"__id":7191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3134,1198]],"__id":7195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3134,1199]],"__id":7199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7200,"parentNodes":[3139],"index":360,"rule":{"name":"Calculate379","pattern":{"type":"composite","id":1327,"leftPattern":{"type":"composite","id":1326,"leftPattern":{"type":"composite","id":1325,"leftPattern":{"type":"object","id":1321,"cls":"Fibonacci379","alias":"f1"},"rightPattern":{"type":"object","id":1322,"cls":"Fibonacci379","alias":"f2"}},"rightPattern":{"type":"object","id":1323,"cls":"Fibonacci379","alias":"f3"}},"rightPattern":{"type":"object","id":1324,"cls":"Result379","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate379"},{"type":"beta","out_nodes":[[3138,-1]],"__id":7201,"parentNodes":[3141,3142]},{"type":"type","out_nodes":[[3,1200]],"__id":7202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result379"}},{"type":"rightadapter","out_nodes":[[3139,1200]],"__id":7205,"parentNodes":[4]},{"type":"join","out_nodes":[[3143,-1]],"__id":7206,"parentNodes":[3145,3146],"constraint":{"type":"join-reference","out_nodes":[],"__id":7207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3139,-1]],"__id":7208,"parentNodes":[]},{"type":"type","out_nodes":[[9,1201],[14,1202],[20,1203],[30,1205],[20,1207],[30,1208]],"__id":7209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci379"}},{"type":"rightadapter","out_nodes":[[3142,1201]],"__id":7212,"parentNodes":[10]},{"type":"join","out_nodes":[[3147,-1]],"__id":7213,"parentNodes":[3148,3149],"constraint":{"type":"join-reference","out_nodes":[],"__id":7214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3142,-1]],"__id":7215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3146,1202]],"__id":7220,"parentNodes":[16]},{"type":"beta","out_nodes":[[3150,-1]],"__id":7221,"parentNodes":[3151,3152]},{"type":"leftadapter","out_nodes":[[3146,-1]],"__id":7222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3149,1203]],"__id":7227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3149,1204]],"__id":7231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7232,"parentNodes":[3154],"index":361,"rule":{"name":"Bootstrap379","pattern":{"type":"object","id":1328,"cls":"Fibonacci379","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap379"},{"type":"beta","out_nodes":[[3153,-1]],"__id":7233,"parentNodes":[3155,3156]},{"type":"rightadapter","out_nodes":[[3154,1205]],"__id":7238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3154,1206]],"__id":7242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7243,"parentNodes":[3158],"index":362,"rule":{"name":"Recurse379","pattern":{"type":"composite","id":1331,"leftPattern":{"type":"not","id":1329,"cls":"Fibonacci379","alias":"f"},"rightPattern":{"type":"object","id":1330,"cls":"Fibonacci379","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci379 = defined.get('Fibonacci379');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci379(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse379"},{"type":"beta","out_nodes":[[3157,-1]],"__id":7244,"parentNodes":[3159,3160]},{"type":"rightadapter","out_nodes":[[3158,1207]],"__id":7248,"parentNodes":[37]},{"type":"not","out_nodes":[[3161,-1]],"__id":7249,"parentNodes":[3162,3163],"constraint":{"type":"join-reference","out_nodes":[],"__id":7250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3158,-1]],"__id":7251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3160,1208]],"__id":7255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3160,1209]],"__id":7259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7260,"parentNodes":[3165],"index":363,"rule":{"name":"Calculate378","pattern":{"type":"composite","id":1338,"leftPattern":{"type":"composite","id":1337,"leftPattern":{"type":"composite","id":1336,"leftPattern":{"type":"object","id":1332,"cls":"Fibonacci378","alias":"f1"},"rightPattern":{"type":"object","id":1333,"cls":"Fibonacci378","alias":"f2"}},"rightPattern":{"type":"object","id":1334,"cls":"Fibonacci378","alias":"f3"}},"rightPattern":{"type":"object","id":1335,"cls":"Result378","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate378"},{"type":"beta","out_nodes":[[3164,-1]],"__id":7261,"parentNodes":[3167,3168]},{"type":"type","out_nodes":[[3,1210]],"__id":7262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result378"}},{"type":"rightadapter","out_nodes":[[3165,1210]],"__id":7265,"parentNodes":[4]},{"type":"join","out_nodes":[[3169,-1]],"__id":7266,"parentNodes":[3171,3172],"constraint":{"type":"join-reference","out_nodes":[],"__id":7267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3165,-1]],"__id":7268,"parentNodes":[]},{"type":"type","out_nodes":[[9,1211],[14,1212],[20,1213],[30,1215],[20,1217],[30,1218]],"__id":7269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci378"}},{"type":"rightadapter","out_nodes":[[3168,1211]],"__id":7272,"parentNodes":[10]},{"type":"join","out_nodes":[[3173,-1]],"__id":7273,"parentNodes":[3174,3175],"constraint":{"type":"join-reference","out_nodes":[],"__id":7274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3168,-1]],"__id":7275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3172,1212]],"__id":7280,"parentNodes":[16]},{"type":"beta","out_nodes":[[3176,-1]],"__id":7281,"parentNodes":[3177,3178]},{"type":"leftadapter","out_nodes":[[3172,-1]],"__id":7282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3175,1213]],"__id":7287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3175,1214]],"__id":7291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7292,"parentNodes":[3180],"index":364,"rule":{"name":"Bootstrap378","pattern":{"type":"object","id":1339,"cls":"Fibonacci378","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap378"},{"type":"beta","out_nodes":[[3179,-1]],"__id":7293,"parentNodes":[3181,3182]},{"type":"rightadapter","out_nodes":[[3180,1215]],"__id":7298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3180,1216]],"__id":7302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7303,"parentNodes":[3184],"index":365,"rule":{"name":"Recurse378","pattern":{"type":"composite","id":1342,"leftPattern":{"type":"not","id":1340,"cls":"Fibonacci378","alias":"f"},"rightPattern":{"type":"object","id":1341,"cls":"Fibonacci378","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci378 = defined.get('Fibonacci378');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci378(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse378"},{"type":"beta","out_nodes":[[3183,-1]],"__id":7304,"parentNodes":[3185,3186]},{"type":"rightadapter","out_nodes":[[3184,1217]],"__id":7308,"parentNodes":[37]},{"type":"not","out_nodes":[[3187,-1]],"__id":7309,"parentNodes":[3188,3189],"constraint":{"type":"join-reference","out_nodes":[],"__id":7310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3184,-1]],"__id":7311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3186,1218]],"__id":7315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3186,1219]],"__id":7319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7320,"parentNodes":[3191],"index":366,"rule":{"name":"Calculate377","pattern":{"type":"composite","id":1349,"leftPattern":{"type":"composite","id":1348,"leftPattern":{"type":"composite","id":1347,"leftPattern":{"type":"object","id":1343,"cls":"Fibonacci377","alias":"f1"},"rightPattern":{"type":"object","id":1344,"cls":"Fibonacci377","alias":"f2"}},"rightPattern":{"type":"object","id":1345,"cls":"Fibonacci377","alias":"f3"}},"rightPattern":{"type":"object","id":1346,"cls":"Result377","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate377"},{"type":"beta","out_nodes":[[3190,-1]],"__id":7321,"parentNodes":[3193,3194]},{"type":"type","out_nodes":[[3,1220]],"__id":7322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result377"}},{"type":"rightadapter","out_nodes":[[3191,1220]],"__id":7325,"parentNodes":[4]},{"type":"join","out_nodes":[[3195,-1]],"__id":7326,"parentNodes":[3197,3198],"constraint":{"type":"join-reference","out_nodes":[],"__id":7327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3191,-1]],"__id":7328,"parentNodes":[]},{"type":"type","out_nodes":[[9,1221],[14,1222],[20,1223],[30,1225],[20,1227],[30,1228]],"__id":7329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci377"}},{"type":"rightadapter","out_nodes":[[3194,1221]],"__id":7332,"parentNodes":[10]},{"type":"join","out_nodes":[[3199,-1]],"__id":7333,"parentNodes":[3200,3201],"constraint":{"type":"join-reference","out_nodes":[],"__id":7334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3194,-1]],"__id":7335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3198,1222]],"__id":7340,"parentNodes":[16]},{"type":"beta","out_nodes":[[3202,-1]],"__id":7341,"parentNodes":[3203,3204]},{"type":"leftadapter","out_nodes":[[3198,-1]],"__id":7342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3201,1223]],"__id":7347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3201,1224]],"__id":7351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7352,"parentNodes":[3206],"index":367,"rule":{"name":"Bootstrap377","pattern":{"type":"object","id":1350,"cls":"Fibonacci377","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap377"},{"type":"beta","out_nodes":[[3205,-1]],"__id":7353,"parentNodes":[3207,3208]},{"type":"rightadapter","out_nodes":[[3206,1225]],"__id":7358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3206,1226]],"__id":7362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7363,"parentNodes":[3210],"index":368,"rule":{"name":"Recurse377","pattern":{"type":"composite","id":1353,"leftPattern":{"type":"not","id":1351,"cls":"Fibonacci377","alias":"f"},"rightPattern":{"type":"object","id":1352,"cls":"Fibonacci377","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci377 = defined.get('Fibonacci377');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci377(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse377"},{"type":"beta","out_nodes":[[3209,-1]],"__id":7364,"parentNodes":[3211,3212]},{"type":"rightadapter","out_nodes":[[3210,1227]],"__id":7368,"parentNodes":[37]},{"type":"not","out_nodes":[[3213,-1]],"__id":7369,"parentNodes":[3214,3215],"constraint":{"type":"join-reference","out_nodes":[],"__id":7370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3210,-1]],"__id":7371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3212,1228]],"__id":7375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3212,1229]],"__id":7379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7380,"parentNodes":[3217],"index":369,"rule":{"name":"Calculate376","pattern":{"type":"composite","id":1360,"leftPattern":{"type":"composite","id":1359,"leftPattern":{"type":"composite","id":1358,"leftPattern":{"type":"object","id":1354,"cls":"Fibonacci376","alias":"f1"},"rightPattern":{"type":"object","id":1355,"cls":"Fibonacci376","alias":"f2"}},"rightPattern":{"type":"object","id":1356,"cls":"Fibonacci376","alias":"f3"}},"rightPattern":{"type":"object","id":1357,"cls":"Result376","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate376"},{"type":"beta","out_nodes":[[3216,-1]],"__id":7381,"parentNodes":[3219,3220]},{"type":"type","out_nodes":[[3,1230]],"__id":7382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result376"}},{"type":"rightadapter","out_nodes":[[3217,1230]],"__id":7385,"parentNodes":[4]},{"type":"join","out_nodes":[[3221,-1]],"__id":7386,"parentNodes":[3223,3224],"constraint":{"type":"join-reference","out_nodes":[],"__id":7387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3217,-1]],"__id":7388,"parentNodes":[]},{"type":"type","out_nodes":[[9,1231],[14,1232],[20,1233],[30,1235],[20,1237],[30,1238]],"__id":7389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci376"}},{"type":"rightadapter","out_nodes":[[3220,1231]],"__id":7392,"parentNodes":[10]},{"type":"join","out_nodes":[[3225,-1]],"__id":7393,"parentNodes":[3226,3227],"constraint":{"type":"join-reference","out_nodes":[],"__id":7394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3220,-1]],"__id":7395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3224,1232]],"__id":7400,"parentNodes":[16]},{"type":"beta","out_nodes":[[3228,-1]],"__id":7401,"parentNodes":[3229,3230]},{"type":"leftadapter","out_nodes":[[3224,-1]],"__id":7402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3227,1233]],"__id":7407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3227,1234]],"__id":7411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7412,"parentNodes":[3232],"index":370,"rule":{"name":"Bootstrap376","pattern":{"type":"object","id":1361,"cls":"Fibonacci376","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap376"},{"type":"beta","out_nodes":[[3231,-1]],"__id":7413,"parentNodes":[3233,3234]},{"type":"rightadapter","out_nodes":[[3232,1235]],"__id":7418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3232,1236]],"__id":7422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7423,"parentNodes":[3236],"index":371,"rule":{"name":"Recurse376","pattern":{"type":"composite","id":1364,"leftPattern":{"type":"not","id":1362,"cls":"Fibonacci376","alias":"f"},"rightPattern":{"type":"object","id":1363,"cls":"Fibonacci376","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci376 = defined.get('Fibonacci376');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci376(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse376"},{"type":"beta","out_nodes":[[3235,-1]],"__id":7424,"parentNodes":[3237,3238]},{"type":"rightadapter","out_nodes":[[3236,1237]],"__id":7428,"parentNodes":[37]},{"type":"not","out_nodes":[[3239,-1]],"__id":7429,"parentNodes":[3240,3241],"constraint":{"type":"join-reference","out_nodes":[],"__id":7430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3236,-1]],"__id":7431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3238,1238]],"__id":7435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3238,1239]],"__id":7439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7440,"parentNodes":[3243],"index":372,"rule":{"name":"Calculate375","pattern":{"type":"composite","id":1371,"leftPattern":{"type":"composite","id":1370,"leftPattern":{"type":"composite","id":1369,"leftPattern":{"type":"object","id":1365,"cls":"Fibonacci375","alias":"f1"},"rightPattern":{"type":"object","id":1366,"cls":"Fibonacci375","alias":"f2"}},"rightPattern":{"type":"object","id":1367,"cls":"Fibonacci375","alias":"f3"}},"rightPattern":{"type":"object","id":1368,"cls":"Result375","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate375"},{"type":"beta","out_nodes":[[3242,-1]],"__id":7441,"parentNodes":[3245,3246]},{"type":"type","out_nodes":[[3,1240]],"__id":7442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result375"}},{"type":"rightadapter","out_nodes":[[3243,1240]],"__id":7445,"parentNodes":[4]},{"type":"join","out_nodes":[[3247,-1]],"__id":7446,"parentNodes":[3249,3250],"constraint":{"type":"join-reference","out_nodes":[],"__id":7447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3243,-1]],"__id":7448,"parentNodes":[]},{"type":"type","out_nodes":[[9,1241],[14,1242],[20,1243],[30,1245],[20,1247],[30,1248]],"__id":7449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci375"}},{"type":"rightadapter","out_nodes":[[3246,1241]],"__id":7452,"parentNodes":[10]},{"type":"join","out_nodes":[[3251,-1]],"__id":7453,"parentNodes":[3252,3253],"constraint":{"type":"join-reference","out_nodes":[],"__id":7454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3246,-1]],"__id":7455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3250,1242]],"__id":7460,"parentNodes":[16]},{"type":"beta","out_nodes":[[3254,-1]],"__id":7461,"parentNodes":[3255,3256]},{"type":"leftadapter","out_nodes":[[3250,-1]],"__id":7462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3253,1243]],"__id":7467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3253,1244]],"__id":7471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7472,"parentNodes":[3258],"index":373,"rule":{"name":"Bootstrap375","pattern":{"type":"object","id":1372,"cls":"Fibonacci375","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap375"},{"type":"beta","out_nodes":[[3257,-1]],"__id":7473,"parentNodes":[3259,3260]},{"type":"rightadapter","out_nodes":[[3258,1245]],"__id":7478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3258,1246]],"__id":7482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7483,"parentNodes":[3262],"index":374,"rule":{"name":"Recurse375","pattern":{"type":"composite","id":1375,"leftPattern":{"type":"not","id":1373,"cls":"Fibonacci375","alias":"f"},"rightPattern":{"type":"object","id":1374,"cls":"Fibonacci375","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci375 = defined.get('Fibonacci375');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci375(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse375"},{"type":"beta","out_nodes":[[3261,-1]],"__id":7484,"parentNodes":[3263,3264]},{"type":"rightadapter","out_nodes":[[3262,1247]],"__id":7488,"parentNodes":[37]},{"type":"not","out_nodes":[[3265,-1]],"__id":7489,"parentNodes":[3266,3267],"constraint":{"type":"join-reference","out_nodes":[],"__id":7490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3262,-1]],"__id":7491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3264,1248]],"__id":7495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3264,1249]],"__id":7499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7500,"parentNodes":[3269],"index":375,"rule":{"name":"Calculate374","pattern":{"type":"composite","id":1382,"leftPattern":{"type":"composite","id":1381,"leftPattern":{"type":"composite","id":1380,"leftPattern":{"type":"object","id":1376,"cls":"Fibonacci374","alias":"f1"},"rightPattern":{"type":"object","id":1377,"cls":"Fibonacci374","alias":"f2"}},"rightPattern":{"type":"object","id":1378,"cls":"Fibonacci374","alias":"f3"}},"rightPattern":{"type":"object","id":1379,"cls":"Result374","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate374"},{"type":"beta","out_nodes":[[3268,-1]],"__id":7501,"parentNodes":[3271,3272]},{"type":"type","out_nodes":[[3,1250]],"__id":7502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result374"}},{"type":"rightadapter","out_nodes":[[3269,1250]],"__id":7505,"parentNodes":[4]},{"type":"join","out_nodes":[[3273,-1]],"__id":7506,"parentNodes":[3275,3276],"constraint":{"type":"join-reference","out_nodes":[],"__id":7507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3269,-1]],"__id":7508,"parentNodes":[]},{"type":"type","out_nodes":[[9,1251],[14,1252],[20,1253],[30,1255],[20,1257],[30,1258]],"__id":7509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci374"}},{"type":"rightadapter","out_nodes":[[3272,1251]],"__id":7512,"parentNodes":[10]},{"type":"join","out_nodes":[[3277,-1]],"__id":7513,"parentNodes":[3278,3279],"constraint":{"type":"join-reference","out_nodes":[],"__id":7514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3272,-1]],"__id":7515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3276,1252]],"__id":7520,"parentNodes":[16]},{"type":"beta","out_nodes":[[3280,-1]],"__id":7521,"parentNodes":[3281,3282]},{"type":"leftadapter","out_nodes":[[3276,-1]],"__id":7522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3279,1253]],"__id":7527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3279,1254]],"__id":7531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7532,"parentNodes":[3284],"index":376,"rule":{"name":"Bootstrap374","pattern":{"type":"object","id":1383,"cls":"Fibonacci374","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap374"},{"type":"beta","out_nodes":[[3283,-1]],"__id":7533,"parentNodes":[3285,3286]},{"type":"rightadapter","out_nodes":[[3284,1255]],"__id":7538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3284,1256]],"__id":7542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7543,"parentNodes":[3288],"index":377,"rule":{"name":"Recurse374","pattern":{"type":"composite","id":1386,"leftPattern":{"type":"not","id":1384,"cls":"Fibonacci374","alias":"f"},"rightPattern":{"type":"object","id":1385,"cls":"Fibonacci374","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci374 = defined.get('Fibonacci374');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci374(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse374"},{"type":"beta","out_nodes":[[3287,-1]],"__id":7544,"parentNodes":[3289,3290]},{"type":"rightadapter","out_nodes":[[3288,1257]],"__id":7548,"parentNodes":[37]},{"type":"not","out_nodes":[[3291,-1]],"__id":7549,"parentNodes":[3292,3293],"constraint":{"type":"join-reference","out_nodes":[],"__id":7550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3288,-1]],"__id":7551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3290,1258]],"__id":7555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3290,1259]],"__id":7559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7560,"parentNodes":[3295],"index":378,"rule":{"name":"Calculate373","pattern":{"type":"composite","id":1393,"leftPattern":{"type":"composite","id":1392,"leftPattern":{"type":"composite","id":1391,"leftPattern":{"type":"object","id":1387,"cls":"Fibonacci373","alias":"f1"},"rightPattern":{"type":"object","id":1388,"cls":"Fibonacci373","alias":"f2"}},"rightPattern":{"type":"object","id":1389,"cls":"Fibonacci373","alias":"f3"}},"rightPattern":{"type":"object","id":1390,"cls":"Result373","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate373"},{"type":"beta","out_nodes":[[3294,-1]],"__id":7561,"parentNodes":[3297,3298]},{"type":"type","out_nodes":[[3,1260]],"__id":7562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result373"}},{"type":"rightadapter","out_nodes":[[3295,1260]],"__id":7565,"parentNodes":[4]},{"type":"join","out_nodes":[[3299,-1]],"__id":7566,"parentNodes":[3301,3302],"constraint":{"type":"join-reference","out_nodes":[],"__id":7567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3295,-1]],"__id":7568,"parentNodes":[]},{"type":"type","out_nodes":[[9,1261],[14,1262],[20,1263],[30,1265],[20,1267],[30,1268]],"__id":7569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci373"}},{"type":"rightadapter","out_nodes":[[3298,1261]],"__id":7572,"parentNodes":[10]},{"type":"join","out_nodes":[[3303,-1]],"__id":7573,"parentNodes":[3304,3305],"constraint":{"type":"join-reference","out_nodes":[],"__id":7574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3298,-1]],"__id":7575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3302,1262]],"__id":7580,"parentNodes":[16]},{"type":"beta","out_nodes":[[3306,-1]],"__id":7581,"parentNodes":[3307,3308]},{"type":"leftadapter","out_nodes":[[3302,-1]],"__id":7582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3305,1263]],"__id":7587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3305,1264]],"__id":7591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7592,"parentNodes":[3310],"index":379,"rule":{"name":"Bootstrap373","pattern":{"type":"object","id":1394,"cls":"Fibonacci373","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap373"},{"type":"beta","out_nodes":[[3309,-1]],"__id":7593,"parentNodes":[3311,3312]},{"type":"rightadapter","out_nodes":[[3310,1265]],"__id":7598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3310,1266]],"__id":7602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7603,"parentNodes":[3314],"index":380,"rule":{"name":"Recurse373","pattern":{"type":"composite","id":1397,"leftPattern":{"type":"not","id":1395,"cls":"Fibonacci373","alias":"f"},"rightPattern":{"type":"object","id":1396,"cls":"Fibonacci373","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci373 = defined.get('Fibonacci373');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci373(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse373"},{"type":"beta","out_nodes":[[3313,-1]],"__id":7604,"parentNodes":[3315,3316]},{"type":"rightadapter","out_nodes":[[3314,1267]],"__id":7608,"parentNodes":[37]},{"type":"not","out_nodes":[[3317,-1]],"__id":7609,"parentNodes":[3318,3319],"constraint":{"type":"join-reference","out_nodes":[],"__id":7610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3314,-1]],"__id":7611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3316,1268]],"__id":7615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3316,1269]],"__id":7619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7620,"parentNodes":[3321],"index":381,"rule":{"name":"Calculate372","pattern":{"type":"composite","id":1404,"leftPattern":{"type":"composite","id":1403,"leftPattern":{"type":"composite","id":1402,"leftPattern":{"type":"object","id":1398,"cls":"Fibonacci372","alias":"f1"},"rightPattern":{"type":"object","id":1399,"cls":"Fibonacci372","alias":"f2"}},"rightPattern":{"type":"object","id":1400,"cls":"Fibonacci372","alias":"f3"}},"rightPattern":{"type":"object","id":1401,"cls":"Result372","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate372"},{"type":"beta","out_nodes":[[3320,-1]],"__id":7621,"parentNodes":[3323,3324]},{"type":"type","out_nodes":[[3,1270]],"__id":7622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result372"}},{"type":"rightadapter","out_nodes":[[3321,1270]],"__id":7625,"parentNodes":[4]},{"type":"join","out_nodes":[[3325,-1]],"__id":7626,"parentNodes":[3327,3328],"constraint":{"type":"join-reference","out_nodes":[],"__id":7627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3321,-1]],"__id":7628,"parentNodes":[]},{"type":"type","out_nodes":[[9,1271],[14,1272],[20,1273],[30,1275],[20,1277],[30,1278]],"__id":7629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci372"}},{"type":"rightadapter","out_nodes":[[3324,1271]],"__id":7632,"parentNodes":[10]},{"type":"join","out_nodes":[[3329,-1]],"__id":7633,"parentNodes":[3330,3331],"constraint":{"type":"join-reference","out_nodes":[],"__id":7634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3324,-1]],"__id":7635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3328,1272]],"__id":7640,"parentNodes":[16]},{"type":"beta","out_nodes":[[3332,-1]],"__id":7641,"parentNodes":[3333,3334]},{"type":"leftadapter","out_nodes":[[3328,-1]],"__id":7642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3331,1273]],"__id":7647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3331,1274]],"__id":7651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7652,"parentNodes":[3336],"index":382,"rule":{"name":"Bootstrap372","pattern":{"type":"object","id":1405,"cls":"Fibonacci372","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap372"},{"type":"beta","out_nodes":[[3335,-1]],"__id":7653,"parentNodes":[3337,3338]},{"type":"rightadapter","out_nodes":[[3336,1275]],"__id":7658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3336,1276]],"__id":7662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7663,"parentNodes":[3340],"index":383,"rule":{"name":"Recurse372","pattern":{"type":"composite","id":1408,"leftPattern":{"type":"not","id":1406,"cls":"Fibonacci372","alias":"f"},"rightPattern":{"type":"object","id":1407,"cls":"Fibonacci372","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci372 = defined.get('Fibonacci372');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci372(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse372"},{"type":"beta","out_nodes":[[3339,-1]],"__id":7664,"parentNodes":[3341,3342]},{"type":"rightadapter","out_nodes":[[3340,1277]],"__id":7668,"parentNodes":[37]},{"type":"not","out_nodes":[[3343,-1]],"__id":7669,"parentNodes":[3344,3345],"constraint":{"type":"join-reference","out_nodes":[],"__id":7670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3340,-1]],"__id":7671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3342,1278]],"__id":7675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3342,1279]],"__id":7679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7680,"parentNodes":[3347],"index":384,"rule":{"name":"Calculate371","pattern":{"type":"composite","id":1415,"leftPattern":{"type":"composite","id":1414,"leftPattern":{"type":"composite","id":1413,"leftPattern":{"type":"object","id":1409,"cls":"Fibonacci371","alias":"f1"},"rightPattern":{"type":"object","id":1410,"cls":"Fibonacci371","alias":"f2"}},"rightPattern":{"type":"object","id":1411,"cls":"Fibonacci371","alias":"f3"}},"rightPattern":{"type":"object","id":1412,"cls":"Result371","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate371"},{"type":"beta","out_nodes":[[3346,-1]],"__id":7681,"parentNodes":[3349,3350]},{"type":"type","out_nodes":[[3,1280]],"__id":7682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result371"}},{"type":"rightadapter","out_nodes":[[3347,1280]],"__id":7685,"parentNodes":[4]},{"type":"join","out_nodes":[[3351,-1]],"__id":7686,"parentNodes":[3353,3354],"constraint":{"type":"join-reference","out_nodes":[],"__id":7687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3347,-1]],"__id":7688,"parentNodes":[]},{"type":"type","out_nodes":[[9,1281],[14,1282],[20,1283],[30,1285],[20,1287],[30,1288]],"__id":7689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci371"}},{"type":"rightadapter","out_nodes":[[3350,1281]],"__id":7692,"parentNodes":[10]},{"type":"join","out_nodes":[[3355,-1]],"__id":7693,"parentNodes":[3356,3357],"constraint":{"type":"join-reference","out_nodes":[],"__id":7694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3350,-1]],"__id":7695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3354,1282]],"__id":7700,"parentNodes":[16]},{"type":"beta","out_nodes":[[3358,-1]],"__id":7701,"parentNodes":[3359,3360]},{"type":"leftadapter","out_nodes":[[3354,-1]],"__id":7702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3357,1283]],"__id":7707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3357,1284]],"__id":7711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7712,"parentNodes":[3362],"index":385,"rule":{"name":"Bootstrap371","pattern":{"type":"object","id":1416,"cls":"Fibonacci371","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap371"},{"type":"beta","out_nodes":[[3361,-1]],"__id":7713,"parentNodes":[3363,3364]},{"type":"rightadapter","out_nodes":[[3362,1285]],"__id":7718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3362,1286]],"__id":7722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7723,"parentNodes":[3366],"index":386,"rule":{"name":"Recurse371","pattern":{"type":"composite","id":1419,"leftPattern":{"type":"not","id":1417,"cls":"Fibonacci371","alias":"f"},"rightPattern":{"type":"object","id":1418,"cls":"Fibonacci371","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci371 = defined.get('Fibonacci371');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci371(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse371"},{"type":"beta","out_nodes":[[3365,-1]],"__id":7724,"parentNodes":[3367,3368]},{"type":"rightadapter","out_nodes":[[3366,1287]],"__id":7728,"parentNodes":[37]},{"type":"not","out_nodes":[[3369,-1]],"__id":7729,"parentNodes":[3370,3371],"constraint":{"type":"join-reference","out_nodes":[],"__id":7730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3366,-1]],"__id":7731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3368,1288]],"__id":7735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3368,1289]],"__id":7739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7740,"parentNodes":[3373],"index":387,"rule":{"name":"Calculate370","pattern":{"type":"composite","id":1426,"leftPattern":{"type":"composite","id":1425,"leftPattern":{"type":"composite","id":1424,"leftPattern":{"type":"object","id":1420,"cls":"Fibonacci370","alias":"f1"},"rightPattern":{"type":"object","id":1421,"cls":"Fibonacci370","alias":"f2"}},"rightPattern":{"type":"object","id":1422,"cls":"Fibonacci370","alias":"f3"}},"rightPattern":{"type":"object","id":1423,"cls":"Result370","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate370"},{"type":"beta","out_nodes":[[3372,-1]],"__id":7741,"parentNodes":[3375,3376]},{"type":"type","out_nodes":[[3,1290]],"__id":7742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result370"}},{"type":"rightadapter","out_nodes":[[3373,1290]],"__id":7745,"parentNodes":[4]},{"type":"join","out_nodes":[[3377,-1]],"__id":7746,"parentNodes":[3379,3380],"constraint":{"type":"join-reference","out_nodes":[],"__id":7747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3373,-1]],"__id":7748,"parentNodes":[]},{"type":"type","out_nodes":[[9,1291],[14,1292],[20,1293],[30,1295],[20,1297],[30,1298]],"__id":7749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci370"}},{"type":"rightadapter","out_nodes":[[3376,1291]],"__id":7752,"parentNodes":[10]},{"type":"join","out_nodes":[[3381,-1]],"__id":7753,"parentNodes":[3382,3383],"constraint":{"type":"join-reference","out_nodes":[],"__id":7754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3376,-1]],"__id":7755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3380,1292]],"__id":7760,"parentNodes":[16]},{"type":"beta","out_nodes":[[3384,-1]],"__id":7761,"parentNodes":[3385,3386]},{"type":"leftadapter","out_nodes":[[3380,-1]],"__id":7762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3383,1293]],"__id":7767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3383,1294]],"__id":7771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7772,"parentNodes":[3388],"index":388,"rule":{"name":"Bootstrap370","pattern":{"type":"object","id":1427,"cls":"Fibonacci370","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap370"},{"type":"beta","out_nodes":[[3387,-1]],"__id":7773,"parentNodes":[3389,3390]},{"type":"rightadapter","out_nodes":[[3388,1295]],"__id":7778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3388,1296]],"__id":7782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7783,"parentNodes":[3392],"index":389,"rule":{"name":"Recurse370","pattern":{"type":"composite","id":1430,"leftPattern":{"type":"not","id":1428,"cls":"Fibonacci370","alias":"f"},"rightPattern":{"type":"object","id":1429,"cls":"Fibonacci370","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');let Fibonacci370 = defined.get('Fibonacci370');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci370(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse370"},{"type":"beta","out_nodes":[[3391,-1]],"__id":7784,"parentNodes":[3393,3394]},{"type":"rightadapter","out_nodes":[[3392,1297]],"__id":7788,"parentNodes":[37]},{"type":"not","out_nodes":[[3395,-1]],"__id":7789,"parentNodes":[3396,3397],"constraint":{"type":"join-reference","out_nodes":[],"__id":7790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3392,-1]],"__id":7791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3394,1298]],"__id":7795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3394,1299]],"__id":7799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7800,"parentNodes":[3399],"index":390,"rule":{"name":"Calculate369","pattern":{"type":"composite","id":1437,"leftPattern":{"type":"composite","id":1436,"leftPattern":{"type":"composite","id":1435,"leftPattern":{"type":"object","id":1431,"cls":"Fibonacci369","alias":"f1"},"rightPattern":{"type":"object","id":1432,"cls":"Fibonacci369","alias":"f2"}},"rightPattern":{"type":"object","id":1433,"cls":"Fibonacci369","alias":"f3"}},"rightPattern":{"type":"object","id":1434,"cls":"Result369","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate369"},{"type":"beta","out_nodes":[[3398,-1]],"__id":7801,"parentNodes":[3401,3402]},{"type":"type","out_nodes":[[3,1300]],"__id":7802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result369"}},{"type":"rightadapter","out_nodes":[[3399,1300]],"__id":7805,"parentNodes":[4]},{"type":"join","out_nodes":[[3403,-1]],"__id":7806,"parentNodes":[3405,3406],"constraint":{"type":"join-reference","out_nodes":[],"__id":7807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3399,-1]],"__id":7808,"parentNodes":[]},{"type":"type","out_nodes":[[9,1301],[14,1302],[20,1303],[30,1305],[20,1307],[30,1308]],"__id":7809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci369"}},{"type":"rightadapter","out_nodes":[[3402,1301]],"__id":7812,"parentNodes":[10]},{"type":"join","out_nodes":[[3407,-1]],"__id":7813,"parentNodes":[3408,3409],"constraint":{"type":"join-reference","out_nodes":[],"__id":7814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3402,-1]],"__id":7815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3406,1302]],"__id":7820,"parentNodes":[16]},{"type":"beta","out_nodes":[[3410,-1]],"__id":7821,"parentNodes":[3411,3412]},{"type":"leftadapter","out_nodes":[[3406,-1]],"__id":7822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3409,1303]],"__id":7827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3409,1304]],"__id":7831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7832,"parentNodes":[3414],"index":391,"rule":{"name":"Bootstrap369","pattern":{"type":"object","id":1438,"cls":"Fibonacci369","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap369"},{"type":"beta","out_nodes":[[3413,-1]],"__id":7833,"parentNodes":[3415,3416]},{"type":"rightadapter","out_nodes":[[3414,1305]],"__id":7838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3414,1306]],"__id":7842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7843,"parentNodes":[3418],"index":392,"rule":{"name":"Recurse369","pattern":{"type":"composite","id":1441,"leftPattern":{"type":"not","id":1439,"cls":"Fibonacci369","alias":"f"},"rightPattern":{"type":"object","id":1440,"cls":"Fibonacci369","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci369 = defined.get('Fibonacci369');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci369(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse369"},{"type":"beta","out_nodes":[[3417,-1]],"__id":7844,"parentNodes":[3419,3420]},{"type":"rightadapter","out_nodes":[[3418,1307]],"__id":7848,"parentNodes":[37]},{"type":"not","out_nodes":[[3421,-1]],"__id":7849,"parentNodes":[3422,3423],"constraint":{"type":"join-reference","out_nodes":[],"__id":7850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3418,-1]],"__id":7851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3420,1308]],"__id":7855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3420,1309]],"__id":7859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7860,"parentNodes":[3425],"index":393,"rule":{"name":"Calculate368","pattern":{"type":"composite","id":1448,"leftPattern":{"type":"composite","id":1447,"leftPattern":{"type":"composite","id":1446,"leftPattern":{"type":"object","id":1442,"cls":"Fibonacci368","alias":"f1"},"rightPattern":{"type":"object","id":1443,"cls":"Fibonacci368","alias":"f2"}},"rightPattern":{"type":"object","id":1444,"cls":"Fibonacci368","alias":"f3"}},"rightPattern":{"type":"object","id":1445,"cls":"Result368","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate368"},{"type":"beta","out_nodes":[[3424,-1]],"__id":7861,"parentNodes":[3427,3428]},{"type":"type","out_nodes":[[3,1310]],"__id":7862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result368"}},{"type":"rightadapter","out_nodes":[[3425,1310]],"__id":7865,"parentNodes":[4]},{"type":"join","out_nodes":[[3429,-1]],"__id":7866,"parentNodes":[3431,3432],"constraint":{"type":"join-reference","out_nodes":[],"__id":7867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3425,-1]],"__id":7868,"parentNodes":[]},{"type":"type","out_nodes":[[9,1311],[14,1312],[20,1313],[30,1315],[20,1317],[30,1318]],"__id":7869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci368"}},{"type":"rightadapter","out_nodes":[[3428,1311]],"__id":7872,"parentNodes":[10]},{"type":"join","out_nodes":[[3433,-1]],"__id":7873,"parentNodes":[3434,3435],"constraint":{"type":"join-reference","out_nodes":[],"__id":7874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3428,-1]],"__id":7875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3432,1312]],"__id":7880,"parentNodes":[16]},{"type":"beta","out_nodes":[[3436,-1]],"__id":7881,"parentNodes":[3437,3438]},{"type":"leftadapter","out_nodes":[[3432,-1]],"__id":7882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3435,1313]],"__id":7887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3435,1314]],"__id":7891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7892,"parentNodes":[3440],"index":394,"rule":{"name":"Bootstrap368","pattern":{"type":"object","id":1449,"cls":"Fibonacci368","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap368"},{"type":"beta","out_nodes":[[3439,-1]],"__id":7893,"parentNodes":[3441,3442]},{"type":"rightadapter","out_nodes":[[3440,1315]],"__id":7898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3440,1316]],"__id":7902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7903,"parentNodes":[3444],"index":395,"rule":{"name":"Recurse368","pattern":{"type":"composite","id":1452,"leftPattern":{"type":"not","id":1450,"cls":"Fibonacci368","alias":"f"},"rightPattern":{"type":"object","id":1451,"cls":"Fibonacci368","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci368 = defined.get('Fibonacci368');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci368(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse368"},{"type":"beta","out_nodes":[[3443,-1]],"__id":7904,"parentNodes":[3445,3446]},{"type":"rightadapter","out_nodes":[[3444,1317]],"__id":7908,"parentNodes":[37]},{"type":"not","out_nodes":[[3447,-1]],"__id":7909,"parentNodes":[3448,3449],"constraint":{"type":"join-reference","out_nodes":[],"__id":7910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3444,-1]],"__id":7911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3446,1318]],"__id":7915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3446,1319]],"__id":7919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7920,"parentNodes":[3451],"index":396,"rule":{"name":"Calculate367","pattern":{"type":"composite","id":1459,"leftPattern":{"type":"composite","id":1458,"leftPattern":{"type":"composite","id":1457,"leftPattern":{"type":"object","id":1453,"cls":"Fibonacci367","alias":"f1"},"rightPattern":{"type":"object","id":1454,"cls":"Fibonacci367","alias":"f2"}},"rightPattern":{"type":"object","id":1455,"cls":"Fibonacci367","alias":"f3"}},"rightPattern":{"type":"object","id":1456,"cls":"Result367","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate367"},{"type":"beta","out_nodes":[[3450,-1]],"__id":7921,"parentNodes":[3453,3454]},{"type":"type","out_nodes":[[3,1320]],"__id":7922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result367"}},{"type":"rightadapter","out_nodes":[[3451,1320]],"__id":7925,"parentNodes":[4]},{"type":"join","out_nodes":[[3455,-1]],"__id":7926,"parentNodes":[3457,3458],"constraint":{"type":"join-reference","out_nodes":[],"__id":7927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3451,-1]],"__id":7928,"parentNodes":[]},{"type":"type","out_nodes":[[9,1321],[14,1322],[20,1323],[30,1325],[20,1327],[30,1328]],"__id":7929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci367"}},{"type":"rightadapter","out_nodes":[[3454,1321]],"__id":7932,"parentNodes":[10]},{"type":"join","out_nodes":[[3459,-1]],"__id":7933,"parentNodes":[3460,3461],"constraint":{"type":"join-reference","out_nodes":[],"__id":7934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3454,-1]],"__id":7935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3458,1322]],"__id":7940,"parentNodes":[16]},{"type":"beta","out_nodes":[[3462,-1]],"__id":7941,"parentNodes":[3463,3464]},{"type":"leftadapter","out_nodes":[[3458,-1]],"__id":7942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3461,1323]],"__id":7947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3461,1324]],"__id":7951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7952,"parentNodes":[3466],"index":397,"rule":{"name":"Bootstrap367","pattern":{"type":"object","id":1460,"cls":"Fibonacci367","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap367"},{"type":"beta","out_nodes":[[3465,-1]],"__id":7953,"parentNodes":[3467,3468]},{"type":"rightadapter","out_nodes":[[3466,1325]],"__id":7958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3466,1326]],"__id":7962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7963,"parentNodes":[3470],"index":398,"rule":{"name":"Recurse367","pattern":{"type":"composite","id":1463,"leftPattern":{"type":"not","id":1461,"cls":"Fibonacci367","alias":"f"},"rightPattern":{"type":"object","id":1462,"cls":"Fibonacci367","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci367 = defined.get('Fibonacci367');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci367(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse367"},{"type":"beta","out_nodes":[[3469,-1]],"__id":7964,"parentNodes":[3471,3472]},{"type":"rightadapter","out_nodes":[[3470,1327]],"__id":7968,"parentNodes":[37]},{"type":"not","out_nodes":[[3473,-1]],"__id":7969,"parentNodes":[3474,3475],"constraint":{"type":"join-reference","out_nodes":[],"__id":7970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3470,-1]],"__id":7971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3472,1328]],"__id":7975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3472,1329]],"__id":7979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":7980,"parentNodes":[3477],"index":399,"rule":{"name":"Calculate366","pattern":{"type":"composite","id":1470,"leftPattern":{"type":"composite","id":1469,"leftPattern":{"type":"composite","id":1468,"leftPattern":{"type":"object","id":1464,"cls":"Fibonacci366","alias":"f1"},"rightPattern":{"type":"object","id":1465,"cls":"Fibonacci366","alias":"f2"}},"rightPattern":{"type":"object","id":1466,"cls":"Fibonacci366","alias":"f3"}},"rightPattern":{"type":"object","id":1467,"cls":"Result366","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate366"},{"type":"beta","out_nodes":[[3476,-1]],"__id":7981,"parentNodes":[3479,3480]},{"type":"type","out_nodes":[[3,1330]],"__id":7982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result366"}},{"type":"rightadapter","out_nodes":[[3477,1330]],"__id":7985,"parentNodes":[4]},{"type":"join","out_nodes":[[3481,-1]],"__id":7986,"parentNodes":[3483,3484],"constraint":{"type":"join-reference","out_nodes":[],"__id":7987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3477,-1]],"__id":7988,"parentNodes":[]},{"type":"type","out_nodes":[[9,1331],[14,1332],[20,1333],[30,1335],[20,1337],[30,1338]],"__id":7989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci366"}},{"type":"rightadapter","out_nodes":[[3480,1331]],"__id":7992,"parentNodes":[10]},{"type":"join","out_nodes":[[3485,-1]],"__id":7993,"parentNodes":[3486,3487],"constraint":{"type":"join-reference","out_nodes":[],"__id":7994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3480,-1]],"__id":7995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3484,1332]],"__id":8000,"parentNodes":[16]},{"type":"beta","out_nodes":[[3488,-1]],"__id":8001,"parentNodes":[3489,3490]},{"type":"leftadapter","out_nodes":[[3484,-1]],"__id":8002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3487,1333]],"__id":8007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3487,1334]],"__id":8011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8012,"parentNodes":[3492],"index":400,"rule":{"name":"Bootstrap366","pattern":{"type":"object","id":1471,"cls":"Fibonacci366","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap366"},{"type":"beta","out_nodes":[[3491,-1]],"__id":8013,"parentNodes":[3493,3494]},{"type":"rightadapter","out_nodes":[[3492,1335]],"__id":8018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3492,1336]],"__id":8022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8023,"parentNodes":[3496],"index":401,"rule":{"name":"Recurse366","pattern":{"type":"composite","id":1474,"leftPattern":{"type":"not","id":1472,"cls":"Fibonacci366","alias":"f"},"rightPattern":{"type":"object","id":1473,"cls":"Fibonacci366","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci366 = defined.get('Fibonacci366');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci366(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse366"},{"type":"beta","out_nodes":[[3495,-1]],"__id":8024,"parentNodes":[3497,3498]},{"type":"rightadapter","out_nodes":[[3496,1337]],"__id":8028,"parentNodes":[37]},{"type":"not","out_nodes":[[3499,-1]],"__id":8029,"parentNodes":[3500,3501],"constraint":{"type":"join-reference","out_nodes":[],"__id":8030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3496,-1]],"__id":8031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3498,1338]],"__id":8035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3498,1339]],"__id":8039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8040,"parentNodes":[3503],"index":402,"rule":{"name":"Calculate365","pattern":{"type":"composite","id":1481,"leftPattern":{"type":"composite","id":1480,"leftPattern":{"type":"composite","id":1479,"leftPattern":{"type":"object","id":1475,"cls":"Fibonacci365","alias":"f1"},"rightPattern":{"type":"object","id":1476,"cls":"Fibonacci365","alias":"f2"}},"rightPattern":{"type":"object","id":1477,"cls":"Fibonacci365","alias":"f3"}},"rightPattern":{"type":"object","id":1478,"cls":"Result365","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate365"},{"type":"beta","out_nodes":[[3502,-1]],"__id":8041,"parentNodes":[3505,3506]},{"type":"type","out_nodes":[[3,1340]],"__id":8042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result365"}},{"type":"rightadapter","out_nodes":[[3503,1340]],"__id":8045,"parentNodes":[4]},{"type":"join","out_nodes":[[3507,-1]],"__id":8046,"parentNodes":[3509,3510],"constraint":{"type":"join-reference","out_nodes":[],"__id":8047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3503,-1]],"__id":8048,"parentNodes":[]},{"type":"type","out_nodes":[[9,1341],[14,1342],[20,1343],[30,1345],[20,1347],[30,1348]],"__id":8049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci365"}},{"type":"rightadapter","out_nodes":[[3506,1341]],"__id":8052,"parentNodes":[10]},{"type":"join","out_nodes":[[3511,-1]],"__id":8053,"parentNodes":[3512,3513],"constraint":{"type":"join-reference","out_nodes":[],"__id":8054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3506,-1]],"__id":8055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3510,1342]],"__id":8060,"parentNodes":[16]},{"type":"beta","out_nodes":[[3514,-1]],"__id":8061,"parentNodes":[3515,3516]},{"type":"leftadapter","out_nodes":[[3510,-1]],"__id":8062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3513,1343]],"__id":8067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3513,1344]],"__id":8071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8072,"parentNodes":[3518],"index":403,"rule":{"name":"Bootstrap365","pattern":{"type":"object","id":1482,"cls":"Fibonacci365","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap365"},{"type":"beta","out_nodes":[[3517,-1]],"__id":8073,"parentNodes":[3519,3520]},{"type":"rightadapter","out_nodes":[[3518,1345]],"__id":8078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3518,1346]],"__id":8082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8083,"parentNodes":[3522],"index":404,"rule":{"name":"Recurse365","pattern":{"type":"composite","id":1485,"leftPattern":{"type":"not","id":1483,"cls":"Fibonacci365","alias":"f"},"rightPattern":{"type":"object","id":1484,"cls":"Fibonacci365","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci365 = defined.get('Fibonacci365');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci365(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse365"},{"type":"beta","out_nodes":[[3521,-1]],"__id":8084,"parentNodes":[3523,3524]},{"type":"rightadapter","out_nodes":[[3522,1347]],"__id":8088,"parentNodes":[37]},{"type":"not","out_nodes":[[3525,-1]],"__id":8089,"parentNodes":[3526,3527],"constraint":{"type":"join-reference","out_nodes":[],"__id":8090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3522,-1]],"__id":8091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3524,1348]],"__id":8095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3524,1349]],"__id":8099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8100,"parentNodes":[3529],"index":405,"rule":{"name":"Calculate364","pattern":{"type":"composite","id":1492,"leftPattern":{"type":"composite","id":1491,"leftPattern":{"type":"composite","id":1490,"leftPattern":{"type":"object","id":1486,"cls":"Fibonacci364","alias":"f1"},"rightPattern":{"type":"object","id":1487,"cls":"Fibonacci364","alias":"f2"}},"rightPattern":{"type":"object","id":1488,"cls":"Fibonacci364","alias":"f3"}},"rightPattern":{"type":"object","id":1489,"cls":"Result364","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate364"},{"type":"beta","out_nodes":[[3528,-1]],"__id":8101,"parentNodes":[3531,3532]},{"type":"type","out_nodes":[[3,1350]],"__id":8102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result364"}},{"type":"rightadapter","out_nodes":[[3529,1350]],"__id":8105,"parentNodes":[4]},{"type":"join","out_nodes":[[3533,-1]],"__id":8106,"parentNodes":[3535,3536],"constraint":{"type":"join-reference","out_nodes":[],"__id":8107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3529,-1]],"__id":8108,"parentNodes":[]},{"type":"type","out_nodes":[[9,1351],[14,1352],[20,1353],[30,1355],[20,1357],[30,1358]],"__id":8109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci364"}},{"type":"rightadapter","out_nodes":[[3532,1351]],"__id":8112,"parentNodes":[10]},{"type":"join","out_nodes":[[3537,-1]],"__id":8113,"parentNodes":[3538,3539],"constraint":{"type":"join-reference","out_nodes":[],"__id":8114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3532,-1]],"__id":8115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3536,1352]],"__id":8120,"parentNodes":[16]},{"type":"beta","out_nodes":[[3540,-1]],"__id":8121,"parentNodes":[3541,3542]},{"type":"leftadapter","out_nodes":[[3536,-1]],"__id":8122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3539,1353]],"__id":8127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3539,1354]],"__id":8131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8132,"parentNodes":[3544],"index":406,"rule":{"name":"Bootstrap364","pattern":{"type":"object","id":1493,"cls":"Fibonacci364","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap364"},{"type":"beta","out_nodes":[[3543,-1]],"__id":8133,"parentNodes":[3545,3546]},{"type":"rightadapter","out_nodes":[[3544,1355]],"__id":8138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3544,1356]],"__id":8142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8143,"parentNodes":[3548],"index":407,"rule":{"name":"Recurse364","pattern":{"type":"composite","id":1496,"leftPattern":{"type":"not","id":1494,"cls":"Fibonacci364","alias":"f"},"rightPattern":{"type":"object","id":1495,"cls":"Fibonacci364","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci364 = defined.get('Fibonacci364');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci364(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse364"},{"type":"beta","out_nodes":[[3547,-1]],"__id":8144,"parentNodes":[3549,3550]},{"type":"rightadapter","out_nodes":[[3548,1357]],"__id":8148,"parentNodes":[37]},{"type":"not","out_nodes":[[3551,-1]],"__id":8149,"parentNodes":[3552,3553],"constraint":{"type":"join-reference","out_nodes":[],"__id":8150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3548,-1]],"__id":8151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3550,1358]],"__id":8155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3550,1359]],"__id":8159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8160,"parentNodes":[3555],"index":408,"rule":{"name":"Calculate363","pattern":{"type":"composite","id":1503,"leftPattern":{"type":"composite","id":1502,"leftPattern":{"type":"composite","id":1501,"leftPattern":{"type":"object","id":1497,"cls":"Fibonacci363","alias":"f1"},"rightPattern":{"type":"object","id":1498,"cls":"Fibonacci363","alias":"f2"}},"rightPattern":{"type":"object","id":1499,"cls":"Fibonacci363","alias":"f3"}},"rightPattern":{"type":"object","id":1500,"cls":"Result363","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate363"},{"type":"beta","out_nodes":[[3554,-1]],"__id":8161,"parentNodes":[3557,3558]},{"type":"type","out_nodes":[[3,1360]],"__id":8162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result363"}},{"type":"rightadapter","out_nodes":[[3555,1360]],"__id":8165,"parentNodes":[4]},{"type":"join","out_nodes":[[3559,-1]],"__id":8166,"parentNodes":[3561,3562],"constraint":{"type":"join-reference","out_nodes":[],"__id":8167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3555,-1]],"__id":8168,"parentNodes":[]},{"type":"type","out_nodes":[[9,1361],[14,1362],[20,1363],[30,1365],[20,1367],[30,1368]],"__id":8169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci363"}},{"type":"rightadapter","out_nodes":[[3558,1361]],"__id":8172,"parentNodes":[10]},{"type":"join","out_nodes":[[3563,-1]],"__id":8173,"parentNodes":[3564,3565],"constraint":{"type":"join-reference","out_nodes":[],"__id":8174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3558,-1]],"__id":8175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3562,1362]],"__id":8180,"parentNodes":[16]},{"type":"beta","out_nodes":[[3566,-1]],"__id":8181,"parentNodes":[3567,3568]},{"type":"leftadapter","out_nodes":[[3562,-1]],"__id":8182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3565,1363]],"__id":8187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3565,1364]],"__id":8191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8192,"parentNodes":[3570],"index":409,"rule":{"name":"Bootstrap363","pattern":{"type":"object","id":1504,"cls":"Fibonacci363","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap363"},{"type":"beta","out_nodes":[[3569,-1]],"__id":8193,"parentNodes":[3571,3572]},{"type":"rightadapter","out_nodes":[[3570,1365]],"__id":8198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3570,1366]],"__id":8202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8203,"parentNodes":[3574],"index":410,"rule":{"name":"Recurse363","pattern":{"type":"composite","id":1507,"leftPattern":{"type":"not","id":1505,"cls":"Fibonacci363","alias":"f"},"rightPattern":{"type":"object","id":1506,"cls":"Fibonacci363","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci363 = defined.get('Fibonacci363');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci363(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse363"},{"type":"beta","out_nodes":[[3573,-1]],"__id":8204,"parentNodes":[3575,3576]},{"type":"rightadapter","out_nodes":[[3574,1367]],"__id":8208,"parentNodes":[37]},{"type":"not","out_nodes":[[3577,-1]],"__id":8209,"parentNodes":[3578,3579],"constraint":{"type":"join-reference","out_nodes":[],"__id":8210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3574,-1]],"__id":8211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3576,1368]],"__id":8215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3576,1369]],"__id":8219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8220,"parentNodes":[3581],"index":411,"rule":{"name":"Calculate362","pattern":{"type":"composite","id":1514,"leftPattern":{"type":"composite","id":1513,"leftPattern":{"type":"composite","id":1512,"leftPattern":{"type":"object","id":1508,"cls":"Fibonacci362","alias":"f1"},"rightPattern":{"type":"object","id":1509,"cls":"Fibonacci362","alias":"f2"}},"rightPattern":{"type":"object","id":1510,"cls":"Fibonacci362","alias":"f3"}},"rightPattern":{"type":"object","id":1511,"cls":"Result362","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate362"},{"type":"beta","out_nodes":[[3580,-1]],"__id":8221,"parentNodes":[3583,3584]},{"type":"type","out_nodes":[[3,1370]],"__id":8222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result362"}},{"type":"rightadapter","out_nodes":[[3581,1370]],"__id":8225,"parentNodes":[4]},{"type":"join","out_nodes":[[3585,-1]],"__id":8226,"parentNodes":[3587,3588],"constraint":{"type":"join-reference","out_nodes":[],"__id":8227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3581,-1]],"__id":8228,"parentNodes":[]},{"type":"type","out_nodes":[[9,1371],[14,1372],[20,1373],[30,1375],[20,1377],[30,1378]],"__id":8229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci362"}},{"type":"rightadapter","out_nodes":[[3584,1371]],"__id":8232,"parentNodes":[10]},{"type":"join","out_nodes":[[3589,-1]],"__id":8233,"parentNodes":[3590,3591],"constraint":{"type":"join-reference","out_nodes":[],"__id":8234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3584,-1]],"__id":8235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3588,1372]],"__id":8240,"parentNodes":[16]},{"type":"beta","out_nodes":[[3592,-1]],"__id":8241,"parentNodes":[3593,3594]},{"type":"leftadapter","out_nodes":[[3588,-1]],"__id":8242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3591,1373]],"__id":8247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3591,1374]],"__id":8251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8252,"parentNodes":[3596],"index":412,"rule":{"name":"Bootstrap362","pattern":{"type":"object","id":1515,"cls":"Fibonacci362","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap362"},{"type":"beta","out_nodes":[[3595,-1]],"__id":8253,"parentNodes":[3597,3598]},{"type":"rightadapter","out_nodes":[[3596,1375]],"__id":8258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3596,1376]],"__id":8262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8263,"parentNodes":[3600],"index":413,"rule":{"name":"Recurse362","pattern":{"type":"composite","id":1518,"leftPattern":{"type":"not","id":1516,"cls":"Fibonacci362","alias":"f"},"rightPattern":{"type":"object","id":1517,"cls":"Fibonacci362","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci362 = defined.get('Fibonacci362');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci362(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse362"},{"type":"beta","out_nodes":[[3599,-1]],"__id":8264,"parentNodes":[3601,3602]},{"type":"rightadapter","out_nodes":[[3600,1377]],"__id":8268,"parentNodes":[37]},{"type":"not","out_nodes":[[3603,-1]],"__id":8269,"parentNodes":[3604,3605],"constraint":{"type":"join-reference","out_nodes":[],"__id":8270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3600,-1]],"__id":8271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3602,1378]],"__id":8275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3602,1379]],"__id":8279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8280,"parentNodes":[3607],"index":414,"rule":{"name":"Calculate361","pattern":{"type":"composite","id":1525,"leftPattern":{"type":"composite","id":1524,"leftPattern":{"type":"composite","id":1523,"leftPattern":{"type":"object","id":1519,"cls":"Fibonacci361","alias":"f1"},"rightPattern":{"type":"object","id":1520,"cls":"Fibonacci361","alias":"f2"}},"rightPattern":{"type":"object","id":1521,"cls":"Fibonacci361","alias":"f3"}},"rightPattern":{"type":"object","id":1522,"cls":"Result361","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate361"},{"type":"beta","out_nodes":[[3606,-1]],"__id":8281,"parentNodes":[3609,3610]},{"type":"type","out_nodes":[[3,1380]],"__id":8282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result361"}},{"type":"rightadapter","out_nodes":[[3607,1380]],"__id":8285,"parentNodes":[4]},{"type":"join","out_nodes":[[3611,-1]],"__id":8286,"parentNodes":[3613,3614],"constraint":{"type":"join-reference","out_nodes":[],"__id":8287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3607,-1]],"__id":8288,"parentNodes":[]},{"type":"type","out_nodes":[[9,1381],[14,1382],[20,1383],[30,1385],[20,1387],[30,1388]],"__id":8289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci361"}},{"type":"rightadapter","out_nodes":[[3610,1381]],"__id":8292,"parentNodes":[10]},{"type":"join","out_nodes":[[3615,-1]],"__id":8293,"parentNodes":[3616,3617],"constraint":{"type":"join-reference","out_nodes":[],"__id":8294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3610,-1]],"__id":8295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3614,1382]],"__id":8300,"parentNodes":[16]},{"type":"beta","out_nodes":[[3618,-1]],"__id":8301,"parentNodes":[3619,3620]},{"type":"leftadapter","out_nodes":[[3614,-1]],"__id":8302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3617,1383]],"__id":8307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3617,1384]],"__id":8311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8312,"parentNodes":[3622],"index":415,"rule":{"name":"Bootstrap361","pattern":{"type":"object","id":1526,"cls":"Fibonacci361","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap361"},{"type":"beta","out_nodes":[[3621,-1]],"__id":8313,"parentNodes":[3623,3624]},{"type":"rightadapter","out_nodes":[[3622,1385]],"__id":8318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3622,1386]],"__id":8322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8323,"parentNodes":[3626],"index":416,"rule":{"name":"Recurse361","pattern":{"type":"composite","id":1529,"leftPattern":{"type":"not","id":1527,"cls":"Fibonacci361","alias":"f"},"rightPattern":{"type":"object","id":1528,"cls":"Fibonacci361","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci361 = defined.get('Fibonacci361');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci361(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse361"},{"type":"beta","out_nodes":[[3625,-1]],"__id":8324,"parentNodes":[3627,3628]},{"type":"rightadapter","out_nodes":[[3626,1387]],"__id":8328,"parentNodes":[37]},{"type":"not","out_nodes":[[3629,-1]],"__id":8329,"parentNodes":[3630,3631],"constraint":{"type":"join-reference","out_nodes":[],"__id":8330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3626,-1]],"__id":8331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3628,1388]],"__id":8335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3628,1389]],"__id":8339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8340,"parentNodes":[3633],"index":417,"rule":{"name":"Calculate360","pattern":{"type":"composite","id":1536,"leftPattern":{"type":"composite","id":1535,"leftPattern":{"type":"composite","id":1534,"leftPattern":{"type":"object","id":1530,"cls":"Fibonacci360","alias":"f1"},"rightPattern":{"type":"object","id":1531,"cls":"Fibonacci360","alias":"f2"}},"rightPattern":{"type":"object","id":1532,"cls":"Fibonacci360","alias":"f3"}},"rightPattern":{"type":"object","id":1533,"cls":"Result360","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate360"},{"type":"beta","out_nodes":[[3632,-1]],"__id":8341,"parentNodes":[3635,3636]},{"type":"type","out_nodes":[[3,1390]],"__id":8342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result360"}},{"type":"rightadapter","out_nodes":[[3633,1390]],"__id":8345,"parentNodes":[4]},{"type":"join","out_nodes":[[3637,-1]],"__id":8346,"parentNodes":[3639,3640],"constraint":{"type":"join-reference","out_nodes":[],"__id":8347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3633,-1]],"__id":8348,"parentNodes":[]},{"type":"type","out_nodes":[[9,1391],[14,1392],[20,1393],[30,1395],[20,1397],[30,1398]],"__id":8349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci360"}},{"type":"rightadapter","out_nodes":[[3636,1391]],"__id":8352,"parentNodes":[10]},{"type":"join","out_nodes":[[3641,-1]],"__id":8353,"parentNodes":[3642,3643],"constraint":{"type":"join-reference","out_nodes":[],"__id":8354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3636,-1]],"__id":8355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3640,1392]],"__id":8360,"parentNodes":[16]},{"type":"beta","out_nodes":[[3644,-1]],"__id":8361,"parentNodes":[3645,3646]},{"type":"leftadapter","out_nodes":[[3640,-1]],"__id":8362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3643,1393]],"__id":8367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3643,1394]],"__id":8371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8372,"parentNodes":[3648],"index":418,"rule":{"name":"Bootstrap360","pattern":{"type":"object","id":1537,"cls":"Fibonacci360","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap360"},{"type":"beta","out_nodes":[[3647,-1]],"__id":8373,"parentNodes":[3649,3650]},{"type":"rightadapter","out_nodes":[[3648,1395]],"__id":8378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3648,1396]],"__id":8382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8383,"parentNodes":[3652],"index":419,"rule":{"name":"Recurse360","pattern":{"type":"composite","id":1540,"leftPattern":{"type":"not","id":1538,"cls":"Fibonacci360","alias":"f"},"rightPattern":{"type":"object","id":1539,"cls":"Fibonacci360","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');let Fibonacci360 = defined.get('Fibonacci360');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci360(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse360"},{"type":"beta","out_nodes":[[3651,-1]],"__id":8384,"parentNodes":[3653,3654]},{"type":"rightadapter","out_nodes":[[3652,1397]],"__id":8388,"parentNodes":[37]},{"type":"not","out_nodes":[[3655,-1]],"__id":8389,"parentNodes":[3656,3657],"constraint":{"type":"join-reference","out_nodes":[],"__id":8390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3652,-1]],"__id":8391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3654,1398]],"__id":8395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3654,1399]],"__id":8399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8400,"parentNodes":[3659],"index":420,"rule":{"name":"Calculate359","pattern":{"type":"composite","id":1547,"leftPattern":{"type":"composite","id":1546,"leftPattern":{"type":"composite","id":1545,"leftPattern":{"type":"object","id":1541,"cls":"Fibonacci359","alias":"f1"},"rightPattern":{"type":"object","id":1542,"cls":"Fibonacci359","alias":"f2"}},"rightPattern":{"type":"object","id":1543,"cls":"Fibonacci359","alias":"f3"}},"rightPattern":{"type":"object","id":1544,"cls":"Result359","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate359"},{"type":"beta","out_nodes":[[3658,-1]],"__id":8401,"parentNodes":[3661,3662]},{"type":"type","out_nodes":[[3,1400]],"__id":8402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result359"}},{"type":"rightadapter","out_nodes":[[3659,1400]],"__id":8405,"parentNodes":[4]},{"type":"join","out_nodes":[[3663,-1]],"__id":8406,"parentNodes":[3665,3666],"constraint":{"type":"join-reference","out_nodes":[],"__id":8407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3659,-1]],"__id":8408,"parentNodes":[]},{"type":"type","out_nodes":[[9,1401],[14,1402],[20,1403],[30,1405],[20,1407],[30,1408]],"__id":8409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci359"}},{"type":"rightadapter","out_nodes":[[3662,1401]],"__id":8412,"parentNodes":[10]},{"type":"join","out_nodes":[[3667,-1]],"__id":8413,"parentNodes":[3668,3669],"constraint":{"type":"join-reference","out_nodes":[],"__id":8414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3662,-1]],"__id":8415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3666,1402]],"__id":8420,"parentNodes":[16]},{"type":"beta","out_nodes":[[3670,-1]],"__id":8421,"parentNodes":[3671,3672]},{"type":"leftadapter","out_nodes":[[3666,-1]],"__id":8422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3669,1403]],"__id":8427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3669,1404]],"__id":8431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8432,"parentNodes":[3674],"index":421,"rule":{"name":"Bootstrap359","pattern":{"type":"object","id":1548,"cls":"Fibonacci359","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap359"},{"type":"beta","out_nodes":[[3673,-1]],"__id":8433,"parentNodes":[3675,3676]},{"type":"rightadapter","out_nodes":[[3674,1405]],"__id":8438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3674,1406]],"__id":8442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8443,"parentNodes":[3678],"index":422,"rule":{"name":"Recurse359","pattern":{"type":"composite","id":1551,"leftPattern":{"type":"not","id":1549,"cls":"Fibonacci359","alias":"f"},"rightPattern":{"type":"object","id":1550,"cls":"Fibonacci359","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci359 = defined.get('Fibonacci359');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci359(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse359"},{"type":"beta","out_nodes":[[3677,-1]],"__id":8444,"parentNodes":[3679,3680]},{"type":"rightadapter","out_nodes":[[3678,1407]],"__id":8448,"parentNodes":[37]},{"type":"not","out_nodes":[[3681,-1]],"__id":8449,"parentNodes":[3682,3683],"constraint":{"type":"join-reference","out_nodes":[],"__id":8450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3678,-1]],"__id":8451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3680,1408]],"__id":8455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3680,1409]],"__id":8459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8460,"parentNodes":[3685],"index":423,"rule":{"name":"Calculate358","pattern":{"type":"composite","id":1558,"leftPattern":{"type":"composite","id":1557,"leftPattern":{"type":"composite","id":1556,"leftPattern":{"type":"object","id":1552,"cls":"Fibonacci358","alias":"f1"},"rightPattern":{"type":"object","id":1553,"cls":"Fibonacci358","alias":"f2"}},"rightPattern":{"type":"object","id":1554,"cls":"Fibonacci358","alias":"f3"}},"rightPattern":{"type":"object","id":1555,"cls":"Result358","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate358"},{"type":"beta","out_nodes":[[3684,-1]],"__id":8461,"parentNodes":[3687,3688]},{"type":"type","out_nodes":[[3,1410]],"__id":8462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result358"}},{"type":"rightadapter","out_nodes":[[3685,1410]],"__id":8465,"parentNodes":[4]},{"type":"join","out_nodes":[[3689,-1]],"__id":8466,"parentNodes":[3691,3692],"constraint":{"type":"join-reference","out_nodes":[],"__id":8467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3685,-1]],"__id":8468,"parentNodes":[]},{"type":"type","out_nodes":[[9,1411],[14,1412],[20,1413],[30,1415],[20,1417],[30,1418]],"__id":8469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci358"}},{"type":"rightadapter","out_nodes":[[3688,1411]],"__id":8472,"parentNodes":[10]},{"type":"join","out_nodes":[[3693,-1]],"__id":8473,"parentNodes":[3694,3695],"constraint":{"type":"join-reference","out_nodes":[],"__id":8474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3688,-1]],"__id":8475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3692,1412]],"__id":8480,"parentNodes":[16]},{"type":"beta","out_nodes":[[3696,-1]],"__id":8481,"parentNodes":[3697,3698]},{"type":"leftadapter","out_nodes":[[3692,-1]],"__id":8482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3695,1413]],"__id":8487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3695,1414]],"__id":8491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8492,"parentNodes":[3700],"index":424,"rule":{"name":"Bootstrap358","pattern":{"type":"object","id":1559,"cls":"Fibonacci358","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap358"},{"type":"beta","out_nodes":[[3699,-1]],"__id":8493,"parentNodes":[3701,3702]},{"type":"rightadapter","out_nodes":[[3700,1415]],"__id":8498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3700,1416]],"__id":8502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8503,"parentNodes":[3704],"index":425,"rule":{"name":"Recurse358","pattern":{"type":"composite","id":1562,"leftPattern":{"type":"not","id":1560,"cls":"Fibonacci358","alias":"f"},"rightPattern":{"type":"object","id":1561,"cls":"Fibonacci358","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci358 = defined.get('Fibonacci358');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci358(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse358"},{"type":"beta","out_nodes":[[3703,-1]],"__id":8504,"parentNodes":[3705,3706]},{"type":"rightadapter","out_nodes":[[3704,1417]],"__id":8508,"parentNodes":[37]},{"type":"not","out_nodes":[[3707,-1]],"__id":8509,"parentNodes":[3708,3709],"constraint":{"type":"join-reference","out_nodes":[],"__id":8510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3704,-1]],"__id":8511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3706,1418]],"__id":8515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3706,1419]],"__id":8519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8520,"parentNodes":[3711],"index":426,"rule":{"name":"Calculate357","pattern":{"type":"composite","id":1569,"leftPattern":{"type":"composite","id":1568,"leftPattern":{"type":"composite","id":1567,"leftPattern":{"type":"object","id":1563,"cls":"Fibonacci357","alias":"f1"},"rightPattern":{"type":"object","id":1564,"cls":"Fibonacci357","alias":"f2"}},"rightPattern":{"type":"object","id":1565,"cls":"Fibonacci357","alias":"f3"}},"rightPattern":{"type":"object","id":1566,"cls":"Result357","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate357"},{"type":"beta","out_nodes":[[3710,-1]],"__id":8521,"parentNodes":[3713,3714]},{"type":"type","out_nodes":[[3,1420]],"__id":8522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result357"}},{"type":"rightadapter","out_nodes":[[3711,1420]],"__id":8525,"parentNodes":[4]},{"type":"join","out_nodes":[[3715,-1]],"__id":8526,"parentNodes":[3717,3718],"constraint":{"type":"join-reference","out_nodes":[],"__id":8527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3711,-1]],"__id":8528,"parentNodes":[]},{"type":"type","out_nodes":[[9,1421],[14,1422],[20,1423],[30,1425],[20,1427],[30,1428]],"__id":8529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci357"}},{"type":"rightadapter","out_nodes":[[3714,1421]],"__id":8532,"parentNodes":[10]},{"type":"join","out_nodes":[[3719,-1]],"__id":8533,"parentNodes":[3720,3721],"constraint":{"type":"join-reference","out_nodes":[],"__id":8534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3714,-1]],"__id":8535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3718,1422]],"__id":8540,"parentNodes":[16]},{"type":"beta","out_nodes":[[3722,-1]],"__id":8541,"parentNodes":[3723,3724]},{"type":"leftadapter","out_nodes":[[3718,-1]],"__id":8542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3721,1423]],"__id":8547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3721,1424]],"__id":8551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8552,"parentNodes":[3726],"index":427,"rule":{"name":"Bootstrap357","pattern":{"type":"object","id":1570,"cls":"Fibonacci357","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap357"},{"type":"beta","out_nodes":[[3725,-1]],"__id":8553,"parentNodes":[3727,3728]},{"type":"rightadapter","out_nodes":[[3726,1425]],"__id":8558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3726,1426]],"__id":8562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8563,"parentNodes":[3730],"index":428,"rule":{"name":"Recurse357","pattern":{"type":"composite","id":1573,"leftPattern":{"type":"not","id":1571,"cls":"Fibonacci357","alias":"f"},"rightPattern":{"type":"object","id":1572,"cls":"Fibonacci357","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci357 = defined.get('Fibonacci357');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci357(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse357"},{"type":"beta","out_nodes":[[3729,-1]],"__id":8564,"parentNodes":[3731,3732]},{"type":"rightadapter","out_nodes":[[3730,1427]],"__id":8568,"parentNodes":[37]},{"type":"not","out_nodes":[[3733,-1]],"__id":8569,"parentNodes":[3734,3735],"constraint":{"type":"join-reference","out_nodes":[],"__id":8570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3730,-1]],"__id":8571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3732,1428]],"__id":8575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3732,1429]],"__id":8579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8580,"parentNodes":[3737],"index":429,"rule":{"name":"Calculate356","pattern":{"type":"composite","id":1580,"leftPattern":{"type":"composite","id":1579,"leftPattern":{"type":"composite","id":1578,"leftPattern":{"type":"object","id":1574,"cls":"Fibonacci356","alias":"f1"},"rightPattern":{"type":"object","id":1575,"cls":"Fibonacci356","alias":"f2"}},"rightPattern":{"type":"object","id":1576,"cls":"Fibonacci356","alias":"f3"}},"rightPattern":{"type":"object","id":1577,"cls":"Result356","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate356"},{"type":"beta","out_nodes":[[3736,-1]],"__id":8581,"parentNodes":[3739,3740]},{"type":"type","out_nodes":[[3,1430]],"__id":8582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result356"}},{"type":"rightadapter","out_nodes":[[3737,1430]],"__id":8585,"parentNodes":[4]},{"type":"join","out_nodes":[[3741,-1]],"__id":8586,"parentNodes":[3743,3744],"constraint":{"type":"join-reference","out_nodes":[],"__id":8587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3737,-1]],"__id":8588,"parentNodes":[]},{"type":"type","out_nodes":[[9,1431],[14,1432],[20,1433],[30,1435],[20,1437],[30,1438]],"__id":8589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci356"}},{"type":"rightadapter","out_nodes":[[3740,1431]],"__id":8592,"parentNodes":[10]},{"type":"join","out_nodes":[[3745,-1]],"__id":8593,"parentNodes":[3746,3747],"constraint":{"type":"join-reference","out_nodes":[],"__id":8594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3740,-1]],"__id":8595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3744,1432]],"__id":8600,"parentNodes":[16]},{"type":"beta","out_nodes":[[3748,-1]],"__id":8601,"parentNodes":[3749,3750]},{"type":"leftadapter","out_nodes":[[3744,-1]],"__id":8602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3747,1433]],"__id":8607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3747,1434]],"__id":8611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8612,"parentNodes":[3752],"index":430,"rule":{"name":"Bootstrap356","pattern":{"type":"object","id":1581,"cls":"Fibonacci356","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap356"},{"type":"beta","out_nodes":[[3751,-1]],"__id":8613,"parentNodes":[3753,3754]},{"type":"rightadapter","out_nodes":[[3752,1435]],"__id":8618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3752,1436]],"__id":8622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8623,"parentNodes":[3756],"index":431,"rule":{"name":"Recurse356","pattern":{"type":"composite","id":1584,"leftPattern":{"type":"not","id":1582,"cls":"Fibonacci356","alias":"f"},"rightPattern":{"type":"object","id":1583,"cls":"Fibonacci356","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci356 = defined.get('Fibonacci356');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci356(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse356"},{"type":"beta","out_nodes":[[3755,-1]],"__id":8624,"parentNodes":[3757,3758]},{"type":"rightadapter","out_nodes":[[3756,1437]],"__id":8628,"parentNodes":[37]},{"type":"not","out_nodes":[[3759,-1]],"__id":8629,"parentNodes":[3760,3761],"constraint":{"type":"join-reference","out_nodes":[],"__id":8630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3756,-1]],"__id":8631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3758,1438]],"__id":8635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3758,1439]],"__id":8639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8640,"parentNodes":[3763],"index":432,"rule":{"name":"Calculate355","pattern":{"type":"composite","id":1591,"leftPattern":{"type":"composite","id":1590,"leftPattern":{"type":"composite","id":1589,"leftPattern":{"type":"object","id":1585,"cls":"Fibonacci355","alias":"f1"},"rightPattern":{"type":"object","id":1586,"cls":"Fibonacci355","alias":"f2"}},"rightPattern":{"type":"object","id":1587,"cls":"Fibonacci355","alias":"f3"}},"rightPattern":{"type":"object","id":1588,"cls":"Result355","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate355"},{"type":"beta","out_nodes":[[3762,-1]],"__id":8641,"parentNodes":[3765,3766]},{"type":"type","out_nodes":[[3,1440]],"__id":8642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result355"}},{"type":"rightadapter","out_nodes":[[3763,1440]],"__id":8645,"parentNodes":[4]},{"type":"join","out_nodes":[[3767,-1]],"__id":8646,"parentNodes":[3769,3770],"constraint":{"type":"join-reference","out_nodes":[],"__id":8647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3763,-1]],"__id":8648,"parentNodes":[]},{"type":"type","out_nodes":[[9,1441],[14,1442],[20,1443],[30,1445],[20,1447],[30,1448]],"__id":8649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci355"}},{"type":"rightadapter","out_nodes":[[3766,1441]],"__id":8652,"parentNodes":[10]},{"type":"join","out_nodes":[[3771,-1]],"__id":8653,"parentNodes":[3772,3773],"constraint":{"type":"join-reference","out_nodes":[],"__id":8654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3766,-1]],"__id":8655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3770,1442]],"__id":8660,"parentNodes":[16]},{"type":"beta","out_nodes":[[3774,-1]],"__id":8661,"parentNodes":[3775,3776]},{"type":"leftadapter","out_nodes":[[3770,-1]],"__id":8662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3773,1443]],"__id":8667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3773,1444]],"__id":8671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8672,"parentNodes":[3778],"index":433,"rule":{"name":"Bootstrap355","pattern":{"type":"object","id":1592,"cls":"Fibonacci355","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap355"},{"type":"beta","out_nodes":[[3777,-1]],"__id":8673,"parentNodes":[3779,3780]},{"type":"rightadapter","out_nodes":[[3778,1445]],"__id":8678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3778,1446]],"__id":8682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8683,"parentNodes":[3782],"index":434,"rule":{"name":"Recurse355","pattern":{"type":"composite","id":1595,"leftPattern":{"type":"not","id":1593,"cls":"Fibonacci355","alias":"f"},"rightPattern":{"type":"object","id":1594,"cls":"Fibonacci355","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci355 = defined.get('Fibonacci355');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci355(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse355"},{"type":"beta","out_nodes":[[3781,-1]],"__id":8684,"parentNodes":[3783,3784]},{"type":"rightadapter","out_nodes":[[3782,1447]],"__id":8688,"parentNodes":[37]},{"type":"not","out_nodes":[[3785,-1]],"__id":8689,"parentNodes":[3786,3787],"constraint":{"type":"join-reference","out_nodes":[],"__id":8690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3782,-1]],"__id":8691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3784,1448]],"__id":8695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3784,1449]],"__id":8699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8700,"parentNodes":[3789],"index":435,"rule":{"name":"Calculate354","pattern":{"type":"composite","id":1602,"leftPattern":{"type":"composite","id":1601,"leftPattern":{"type":"composite","id":1600,"leftPattern":{"type":"object","id":1596,"cls":"Fibonacci354","alias":"f1"},"rightPattern":{"type":"object","id":1597,"cls":"Fibonacci354","alias":"f2"}},"rightPattern":{"type":"object","id":1598,"cls":"Fibonacci354","alias":"f3"}},"rightPattern":{"type":"object","id":1599,"cls":"Result354","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate354"},{"type":"beta","out_nodes":[[3788,-1]],"__id":8701,"parentNodes":[3791,3792]},{"type":"type","out_nodes":[[3,1450]],"__id":8702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result354"}},{"type":"rightadapter","out_nodes":[[3789,1450]],"__id":8705,"parentNodes":[4]},{"type":"join","out_nodes":[[3793,-1]],"__id":8706,"parentNodes":[3795,3796],"constraint":{"type":"join-reference","out_nodes":[],"__id":8707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3789,-1]],"__id":8708,"parentNodes":[]},{"type":"type","out_nodes":[[9,1451],[14,1452],[20,1453],[30,1455],[20,1457],[30,1458]],"__id":8709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci354"}},{"type":"rightadapter","out_nodes":[[3792,1451]],"__id":8712,"parentNodes":[10]},{"type":"join","out_nodes":[[3797,-1]],"__id":8713,"parentNodes":[3798,3799],"constraint":{"type":"join-reference","out_nodes":[],"__id":8714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3792,-1]],"__id":8715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3796,1452]],"__id":8720,"parentNodes":[16]},{"type":"beta","out_nodes":[[3800,-1]],"__id":8721,"parentNodes":[3801,3802]},{"type":"leftadapter","out_nodes":[[3796,-1]],"__id":8722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3799,1453]],"__id":8727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3799,1454]],"__id":8731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8732,"parentNodes":[3804],"index":436,"rule":{"name":"Bootstrap354","pattern":{"type":"object","id":1603,"cls":"Fibonacci354","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap354"},{"type":"beta","out_nodes":[[3803,-1]],"__id":8733,"parentNodes":[3805,3806]},{"type":"rightadapter","out_nodes":[[3804,1455]],"__id":8738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3804,1456]],"__id":8742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8743,"parentNodes":[3808],"index":437,"rule":{"name":"Recurse354","pattern":{"type":"composite","id":1606,"leftPattern":{"type":"not","id":1604,"cls":"Fibonacci354","alias":"f"},"rightPattern":{"type":"object","id":1605,"cls":"Fibonacci354","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci354 = defined.get('Fibonacci354');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci354(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse354"},{"type":"beta","out_nodes":[[3807,-1]],"__id":8744,"parentNodes":[3809,3810]},{"type":"rightadapter","out_nodes":[[3808,1457]],"__id":8748,"parentNodes":[37]},{"type":"not","out_nodes":[[3811,-1]],"__id":8749,"parentNodes":[3812,3813],"constraint":{"type":"join-reference","out_nodes":[],"__id":8750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3808,-1]],"__id":8751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3810,1458]],"__id":8755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3810,1459]],"__id":8759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8760,"parentNodes":[3815],"index":438,"rule":{"name":"Calculate353","pattern":{"type":"composite","id":1613,"leftPattern":{"type":"composite","id":1612,"leftPattern":{"type":"composite","id":1611,"leftPattern":{"type":"object","id":1607,"cls":"Fibonacci353","alias":"f1"},"rightPattern":{"type":"object","id":1608,"cls":"Fibonacci353","alias":"f2"}},"rightPattern":{"type":"object","id":1609,"cls":"Fibonacci353","alias":"f3"}},"rightPattern":{"type":"object","id":1610,"cls":"Result353","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate353"},{"type":"beta","out_nodes":[[3814,-1]],"__id":8761,"parentNodes":[3817,3818]},{"type":"type","out_nodes":[[3,1460]],"__id":8762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result353"}},{"type":"rightadapter","out_nodes":[[3815,1460]],"__id":8765,"parentNodes":[4]},{"type":"join","out_nodes":[[3819,-1]],"__id":8766,"parentNodes":[3821,3822],"constraint":{"type":"join-reference","out_nodes":[],"__id":8767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3815,-1]],"__id":8768,"parentNodes":[]},{"type":"type","out_nodes":[[9,1461],[14,1462],[20,1463],[30,1465],[20,1467],[30,1468]],"__id":8769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci353"}},{"type":"rightadapter","out_nodes":[[3818,1461]],"__id":8772,"parentNodes":[10]},{"type":"join","out_nodes":[[3823,-1]],"__id":8773,"parentNodes":[3824,3825],"constraint":{"type":"join-reference","out_nodes":[],"__id":8774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3818,-1]],"__id":8775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3822,1462]],"__id":8780,"parentNodes":[16]},{"type":"beta","out_nodes":[[3826,-1]],"__id":8781,"parentNodes":[3827,3828]},{"type":"leftadapter","out_nodes":[[3822,-1]],"__id":8782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3825,1463]],"__id":8787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3825,1464]],"__id":8791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8792,"parentNodes":[3830],"index":439,"rule":{"name":"Bootstrap353","pattern":{"type":"object","id":1614,"cls":"Fibonacci353","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap353"},{"type":"beta","out_nodes":[[3829,-1]],"__id":8793,"parentNodes":[3831,3832]},{"type":"rightadapter","out_nodes":[[3830,1465]],"__id":8798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3830,1466]],"__id":8802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8803,"parentNodes":[3834],"index":440,"rule":{"name":"Recurse353","pattern":{"type":"composite","id":1617,"leftPattern":{"type":"not","id":1615,"cls":"Fibonacci353","alias":"f"},"rightPattern":{"type":"object","id":1616,"cls":"Fibonacci353","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci353 = defined.get('Fibonacci353');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci353(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse353"},{"type":"beta","out_nodes":[[3833,-1]],"__id":8804,"parentNodes":[3835,3836]},{"type":"rightadapter","out_nodes":[[3834,1467]],"__id":8808,"parentNodes":[37]},{"type":"not","out_nodes":[[3837,-1]],"__id":8809,"parentNodes":[3838,3839],"constraint":{"type":"join-reference","out_nodes":[],"__id":8810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3834,-1]],"__id":8811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3836,1468]],"__id":8815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3836,1469]],"__id":8819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8820,"parentNodes":[3841],"index":441,"rule":{"name":"Calculate352","pattern":{"type":"composite","id":1624,"leftPattern":{"type":"composite","id":1623,"leftPattern":{"type":"composite","id":1622,"leftPattern":{"type":"object","id":1618,"cls":"Fibonacci352","alias":"f1"},"rightPattern":{"type":"object","id":1619,"cls":"Fibonacci352","alias":"f2"}},"rightPattern":{"type":"object","id":1620,"cls":"Fibonacci352","alias":"f3"}},"rightPattern":{"type":"object","id":1621,"cls":"Result352","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate352"},{"type":"beta","out_nodes":[[3840,-1]],"__id":8821,"parentNodes":[3843,3844]},{"type":"type","out_nodes":[[3,1470]],"__id":8822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result352"}},{"type":"rightadapter","out_nodes":[[3841,1470]],"__id":8825,"parentNodes":[4]},{"type":"join","out_nodes":[[3845,-1]],"__id":8826,"parentNodes":[3847,3848],"constraint":{"type":"join-reference","out_nodes":[],"__id":8827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3841,-1]],"__id":8828,"parentNodes":[]},{"type":"type","out_nodes":[[9,1471],[14,1472],[20,1473],[30,1475],[20,1477],[30,1478]],"__id":8829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci352"}},{"type":"rightadapter","out_nodes":[[3844,1471]],"__id":8832,"parentNodes":[10]},{"type":"join","out_nodes":[[3849,-1]],"__id":8833,"parentNodes":[3850,3851],"constraint":{"type":"join-reference","out_nodes":[],"__id":8834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3844,-1]],"__id":8835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3848,1472]],"__id":8840,"parentNodes":[16]},{"type":"beta","out_nodes":[[3852,-1]],"__id":8841,"parentNodes":[3853,3854]},{"type":"leftadapter","out_nodes":[[3848,-1]],"__id":8842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3851,1473]],"__id":8847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3851,1474]],"__id":8851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8852,"parentNodes":[3856],"index":442,"rule":{"name":"Bootstrap352","pattern":{"type":"object","id":1625,"cls":"Fibonacci352","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap352"},{"type":"beta","out_nodes":[[3855,-1]],"__id":8853,"parentNodes":[3857,3858]},{"type":"rightadapter","out_nodes":[[3856,1475]],"__id":8858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3856,1476]],"__id":8862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8863,"parentNodes":[3860],"index":443,"rule":{"name":"Recurse352","pattern":{"type":"composite","id":1628,"leftPattern":{"type":"not","id":1626,"cls":"Fibonacci352","alias":"f"},"rightPattern":{"type":"object","id":1627,"cls":"Fibonacci352","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci352 = defined.get('Fibonacci352');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci352(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse352"},{"type":"beta","out_nodes":[[3859,-1]],"__id":8864,"parentNodes":[3861,3862]},{"type":"rightadapter","out_nodes":[[3860,1477]],"__id":8868,"parentNodes":[37]},{"type":"not","out_nodes":[[3863,-1]],"__id":8869,"parentNodes":[3864,3865],"constraint":{"type":"join-reference","out_nodes":[],"__id":8870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3860,-1]],"__id":8871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3862,1478]],"__id":8875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3862,1479]],"__id":8879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8880,"parentNodes":[3867],"index":444,"rule":{"name":"Calculate351","pattern":{"type":"composite","id":1635,"leftPattern":{"type":"composite","id":1634,"leftPattern":{"type":"composite","id":1633,"leftPattern":{"type":"object","id":1629,"cls":"Fibonacci351","alias":"f1"},"rightPattern":{"type":"object","id":1630,"cls":"Fibonacci351","alias":"f2"}},"rightPattern":{"type":"object","id":1631,"cls":"Fibonacci351","alias":"f3"}},"rightPattern":{"type":"object","id":1632,"cls":"Result351","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate351"},{"type":"beta","out_nodes":[[3866,-1]],"__id":8881,"parentNodes":[3869,3870]},{"type":"type","out_nodes":[[3,1480]],"__id":8882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result351"}},{"type":"rightadapter","out_nodes":[[3867,1480]],"__id":8885,"parentNodes":[4]},{"type":"join","out_nodes":[[3871,-1]],"__id":8886,"parentNodes":[3873,3874],"constraint":{"type":"join-reference","out_nodes":[],"__id":8887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3867,-1]],"__id":8888,"parentNodes":[]},{"type":"type","out_nodes":[[9,1481],[14,1482],[20,1483],[30,1485],[20,1487],[30,1488]],"__id":8889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci351"}},{"type":"rightadapter","out_nodes":[[3870,1481]],"__id":8892,"parentNodes":[10]},{"type":"join","out_nodes":[[3875,-1]],"__id":8893,"parentNodes":[3876,3877],"constraint":{"type":"join-reference","out_nodes":[],"__id":8894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3870,-1]],"__id":8895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3874,1482]],"__id":8900,"parentNodes":[16]},{"type":"beta","out_nodes":[[3878,-1]],"__id":8901,"parentNodes":[3879,3880]},{"type":"leftadapter","out_nodes":[[3874,-1]],"__id":8902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3877,1483]],"__id":8907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3877,1484]],"__id":8911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8912,"parentNodes":[3882],"index":445,"rule":{"name":"Bootstrap351","pattern":{"type":"object","id":1636,"cls":"Fibonacci351","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap351"},{"type":"beta","out_nodes":[[3881,-1]],"__id":8913,"parentNodes":[3883,3884]},{"type":"rightadapter","out_nodes":[[3882,1485]],"__id":8918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3882,1486]],"__id":8922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8923,"parentNodes":[3886],"index":446,"rule":{"name":"Recurse351","pattern":{"type":"composite","id":1639,"leftPattern":{"type":"not","id":1637,"cls":"Fibonacci351","alias":"f"},"rightPattern":{"type":"object","id":1638,"cls":"Fibonacci351","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci351 = defined.get('Fibonacci351');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci351(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse351"},{"type":"beta","out_nodes":[[3885,-1]],"__id":8924,"parentNodes":[3887,3888]},{"type":"rightadapter","out_nodes":[[3886,1487]],"__id":8928,"parentNodes":[37]},{"type":"not","out_nodes":[[3889,-1]],"__id":8929,"parentNodes":[3890,3891],"constraint":{"type":"join-reference","out_nodes":[],"__id":8930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3886,-1]],"__id":8931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3888,1488]],"__id":8935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3888,1489]],"__id":8939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8940,"parentNodes":[3893],"index":447,"rule":{"name":"Calculate350","pattern":{"type":"composite","id":1646,"leftPattern":{"type":"composite","id":1645,"leftPattern":{"type":"composite","id":1644,"leftPattern":{"type":"object","id":1640,"cls":"Fibonacci350","alias":"f1"},"rightPattern":{"type":"object","id":1641,"cls":"Fibonacci350","alias":"f2"}},"rightPattern":{"type":"object","id":1642,"cls":"Fibonacci350","alias":"f3"}},"rightPattern":{"type":"object","id":1643,"cls":"Result350","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate350"},{"type":"beta","out_nodes":[[3892,-1]],"__id":8941,"parentNodes":[3895,3896]},{"type":"type","out_nodes":[[3,1490]],"__id":8942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result350"}},{"type":"rightadapter","out_nodes":[[3893,1490]],"__id":8945,"parentNodes":[4]},{"type":"join","out_nodes":[[3897,-1]],"__id":8946,"parentNodes":[3899,3900],"constraint":{"type":"join-reference","out_nodes":[],"__id":8947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3893,-1]],"__id":8948,"parentNodes":[]},{"type":"type","out_nodes":[[9,1491],[14,1492],[20,1493],[30,1495],[20,1497],[30,1498]],"__id":8949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci350"}},{"type":"rightadapter","out_nodes":[[3896,1491]],"__id":8952,"parentNodes":[10]},{"type":"join","out_nodes":[[3901,-1]],"__id":8953,"parentNodes":[3902,3903],"constraint":{"type":"join-reference","out_nodes":[],"__id":8954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3896,-1]],"__id":8955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3900,1492]],"__id":8960,"parentNodes":[16]},{"type":"beta","out_nodes":[[3904,-1]],"__id":8961,"parentNodes":[3905,3906]},{"type":"leftadapter","out_nodes":[[3900,-1]],"__id":8962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3903,1493]],"__id":8967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3903,1494]],"__id":8971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8972,"parentNodes":[3908],"index":448,"rule":{"name":"Bootstrap350","pattern":{"type":"object","id":1647,"cls":"Fibonacci350","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap350"},{"type":"beta","out_nodes":[[3907,-1]],"__id":8973,"parentNodes":[3909,3910]},{"type":"rightadapter","out_nodes":[[3908,1495]],"__id":8978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3908,1496]],"__id":8982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":8983,"parentNodes":[3912],"index":449,"rule":{"name":"Recurse350","pattern":{"type":"composite","id":1650,"leftPattern":{"type":"not","id":1648,"cls":"Fibonacci350","alias":"f"},"rightPattern":{"type":"object","id":1649,"cls":"Fibonacci350","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');let Fibonacci350 = defined.get('Fibonacci350');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci350(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse350"},{"type":"beta","out_nodes":[[3911,-1]],"__id":8984,"parentNodes":[3913,3914]},{"type":"rightadapter","out_nodes":[[3912,1497]],"__id":8988,"parentNodes":[37]},{"type":"not","out_nodes":[[3915,-1]],"__id":8989,"parentNodes":[3916,3917],"constraint":{"type":"join-reference","out_nodes":[],"__id":8990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3912,-1]],"__id":8991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3914,1498]],"__id":8995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3914,1499]],"__id":8999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9000,"parentNodes":[3919],"index":450,"rule":{"name":"Calculate349","pattern":{"type":"composite","id":1657,"leftPattern":{"type":"composite","id":1656,"leftPattern":{"type":"composite","id":1655,"leftPattern":{"type":"object","id":1651,"cls":"Fibonacci349","alias":"f1"},"rightPattern":{"type":"object","id":1652,"cls":"Fibonacci349","alias":"f2"}},"rightPattern":{"type":"object","id":1653,"cls":"Fibonacci349","alias":"f3"}},"rightPattern":{"type":"object","id":1654,"cls":"Result349","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate349"},{"type":"beta","out_nodes":[[3918,-1]],"__id":9001,"parentNodes":[3921,3922]},{"type":"type","out_nodes":[[3,1500]],"__id":9002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result349"}},{"type":"rightadapter","out_nodes":[[3919,1500]],"__id":9005,"parentNodes":[4]},{"type":"join","out_nodes":[[3923,-1]],"__id":9006,"parentNodes":[3925,3926],"constraint":{"type":"join-reference","out_nodes":[],"__id":9007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3919,-1]],"__id":9008,"parentNodes":[]},{"type":"type","out_nodes":[[9,1501],[14,1502],[20,1503],[30,1505],[20,1507],[30,1508]],"__id":9009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci349"}},{"type":"rightadapter","out_nodes":[[3922,1501]],"__id":9012,"parentNodes":[10]},{"type":"join","out_nodes":[[3927,-1]],"__id":9013,"parentNodes":[3928,3929],"constraint":{"type":"join-reference","out_nodes":[],"__id":9014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3922,-1]],"__id":9015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3926,1502]],"__id":9020,"parentNodes":[16]},{"type":"beta","out_nodes":[[3930,-1]],"__id":9021,"parentNodes":[3931,3932]},{"type":"leftadapter","out_nodes":[[3926,-1]],"__id":9022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3929,1503]],"__id":9027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3929,1504]],"__id":9031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9032,"parentNodes":[3934],"index":451,"rule":{"name":"Bootstrap349","pattern":{"type":"object","id":1658,"cls":"Fibonacci349","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap349"},{"type":"beta","out_nodes":[[3933,-1]],"__id":9033,"parentNodes":[3935,3936]},{"type":"rightadapter","out_nodes":[[3934,1505]],"__id":9038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3934,1506]],"__id":9042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9043,"parentNodes":[3938],"index":452,"rule":{"name":"Recurse349","pattern":{"type":"composite","id":1661,"leftPattern":{"type":"not","id":1659,"cls":"Fibonacci349","alias":"f"},"rightPattern":{"type":"object","id":1660,"cls":"Fibonacci349","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci349 = defined.get('Fibonacci349');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci349(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse349"},{"type":"beta","out_nodes":[[3937,-1]],"__id":9044,"parentNodes":[3939,3940]},{"type":"rightadapter","out_nodes":[[3938,1507]],"__id":9048,"parentNodes":[37]},{"type":"not","out_nodes":[[3941,-1]],"__id":9049,"parentNodes":[3942,3943],"constraint":{"type":"join-reference","out_nodes":[],"__id":9050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3938,-1]],"__id":9051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3940,1508]],"__id":9055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3940,1509]],"__id":9059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9060,"parentNodes":[3945],"index":453,"rule":{"name":"Calculate348","pattern":{"type":"composite","id":1668,"leftPattern":{"type":"composite","id":1667,"leftPattern":{"type":"composite","id":1666,"leftPattern":{"type":"object","id":1662,"cls":"Fibonacci348","alias":"f1"},"rightPattern":{"type":"object","id":1663,"cls":"Fibonacci348","alias":"f2"}},"rightPattern":{"type":"object","id":1664,"cls":"Fibonacci348","alias":"f3"}},"rightPattern":{"type":"object","id":1665,"cls":"Result348","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate348"},{"type":"beta","out_nodes":[[3944,-1]],"__id":9061,"parentNodes":[3947,3948]},{"type":"type","out_nodes":[[3,1510]],"__id":9062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result348"}},{"type":"rightadapter","out_nodes":[[3945,1510]],"__id":9065,"parentNodes":[4]},{"type":"join","out_nodes":[[3949,-1]],"__id":9066,"parentNodes":[3951,3952],"constraint":{"type":"join-reference","out_nodes":[],"__id":9067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3945,-1]],"__id":9068,"parentNodes":[]},{"type":"type","out_nodes":[[9,1511],[14,1512],[20,1513],[30,1515],[20,1517],[30,1518]],"__id":9069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci348"}},{"type":"rightadapter","out_nodes":[[3948,1511]],"__id":9072,"parentNodes":[10]},{"type":"join","out_nodes":[[3953,-1]],"__id":9073,"parentNodes":[3954,3955],"constraint":{"type":"join-reference","out_nodes":[],"__id":9074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3948,-1]],"__id":9075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3952,1512]],"__id":9080,"parentNodes":[16]},{"type":"beta","out_nodes":[[3956,-1]],"__id":9081,"parentNodes":[3957,3958]},{"type":"leftadapter","out_nodes":[[3952,-1]],"__id":9082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3955,1513]],"__id":9087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3955,1514]],"__id":9091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9092,"parentNodes":[3960],"index":454,"rule":{"name":"Bootstrap348","pattern":{"type":"object","id":1669,"cls":"Fibonacci348","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap348"},{"type":"beta","out_nodes":[[3959,-1]],"__id":9093,"parentNodes":[3961,3962]},{"type":"rightadapter","out_nodes":[[3960,1515]],"__id":9098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3960,1516]],"__id":9102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9103,"parentNodes":[3964],"index":455,"rule":{"name":"Recurse348","pattern":{"type":"composite","id":1672,"leftPattern":{"type":"not","id":1670,"cls":"Fibonacci348","alias":"f"},"rightPattern":{"type":"object","id":1671,"cls":"Fibonacci348","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci348 = defined.get('Fibonacci348');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci348(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse348"},{"type":"beta","out_nodes":[[3963,-1]],"__id":9104,"parentNodes":[3965,3966]},{"type":"rightadapter","out_nodes":[[3964,1517]],"__id":9108,"parentNodes":[37]},{"type":"not","out_nodes":[[3967,-1]],"__id":9109,"parentNodes":[3968,3969],"constraint":{"type":"join-reference","out_nodes":[],"__id":9110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3964,-1]],"__id":9111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3966,1518]],"__id":9115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3966,1519]],"__id":9119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9120,"parentNodes":[3971],"index":456,"rule":{"name":"Calculate347","pattern":{"type":"composite","id":1679,"leftPattern":{"type":"composite","id":1678,"leftPattern":{"type":"composite","id":1677,"leftPattern":{"type":"object","id":1673,"cls":"Fibonacci347","alias":"f1"},"rightPattern":{"type":"object","id":1674,"cls":"Fibonacci347","alias":"f2"}},"rightPattern":{"type":"object","id":1675,"cls":"Fibonacci347","alias":"f3"}},"rightPattern":{"type":"object","id":1676,"cls":"Result347","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate347"},{"type":"beta","out_nodes":[[3970,-1]],"__id":9121,"parentNodes":[3973,3974]},{"type":"type","out_nodes":[[3,1520]],"__id":9122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result347"}},{"type":"rightadapter","out_nodes":[[3971,1520]],"__id":9125,"parentNodes":[4]},{"type":"join","out_nodes":[[3975,-1]],"__id":9126,"parentNodes":[3977,3978],"constraint":{"type":"join-reference","out_nodes":[],"__id":9127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3971,-1]],"__id":9128,"parentNodes":[]},{"type":"type","out_nodes":[[9,1521],[14,1522],[20,1523],[30,1525],[20,1527],[30,1528]],"__id":9129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci347"}},{"type":"rightadapter","out_nodes":[[3974,1521]],"__id":9132,"parentNodes":[10]},{"type":"join","out_nodes":[[3979,-1]],"__id":9133,"parentNodes":[3980,3981],"constraint":{"type":"join-reference","out_nodes":[],"__id":9134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3974,-1]],"__id":9135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3978,1522]],"__id":9140,"parentNodes":[16]},{"type":"beta","out_nodes":[[3982,-1]],"__id":9141,"parentNodes":[3983,3984]},{"type":"leftadapter","out_nodes":[[3978,-1]],"__id":9142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3981,1523]],"__id":9147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[3981,1524]],"__id":9151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9152,"parentNodes":[3986],"index":457,"rule":{"name":"Bootstrap347","pattern":{"type":"object","id":1680,"cls":"Fibonacci347","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap347"},{"type":"beta","out_nodes":[[3985,-1]],"__id":9153,"parentNodes":[3987,3988]},{"type":"rightadapter","out_nodes":[[3986,1525]],"__id":9158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[3986,1526]],"__id":9162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9163,"parentNodes":[3990],"index":458,"rule":{"name":"Recurse347","pattern":{"type":"composite","id":1683,"leftPattern":{"type":"not","id":1681,"cls":"Fibonacci347","alias":"f"},"rightPattern":{"type":"object","id":1682,"cls":"Fibonacci347","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci347 = defined.get('Fibonacci347');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci347(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse347"},{"type":"beta","out_nodes":[[3989,-1]],"__id":9164,"parentNodes":[3991,3992]},{"type":"rightadapter","out_nodes":[[3990,1527]],"__id":9168,"parentNodes":[37]},{"type":"not","out_nodes":[[3993,-1]],"__id":9169,"parentNodes":[3994,3995],"constraint":{"type":"join-reference","out_nodes":[],"__id":9170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[3990,-1]],"__id":9171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[3992,1528]],"__id":9175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[3992,1529]],"__id":9179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9180,"parentNodes":[3997],"index":459,"rule":{"name":"Calculate346","pattern":{"type":"composite","id":1690,"leftPattern":{"type":"composite","id":1689,"leftPattern":{"type":"composite","id":1688,"leftPattern":{"type":"object","id":1684,"cls":"Fibonacci346","alias":"f1"},"rightPattern":{"type":"object","id":1685,"cls":"Fibonacci346","alias":"f2"}},"rightPattern":{"type":"object","id":1686,"cls":"Fibonacci346","alias":"f3"}},"rightPattern":{"type":"object","id":1687,"cls":"Result346","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate346"},{"type":"beta","out_nodes":[[3996,-1]],"__id":9181,"parentNodes":[3999,4000]},{"type":"type","out_nodes":[[3,1530]],"__id":9182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result346"}},{"type":"rightadapter","out_nodes":[[3997,1530]],"__id":9185,"parentNodes":[4]},{"type":"join","out_nodes":[[4001,-1]],"__id":9186,"parentNodes":[4003,4004],"constraint":{"type":"join-reference","out_nodes":[],"__id":9187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[3997,-1]],"__id":9188,"parentNodes":[]},{"type":"type","out_nodes":[[9,1531],[14,1532],[20,1533],[30,1535],[20,1537],[30,1538]],"__id":9189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci346"}},{"type":"rightadapter","out_nodes":[[4000,1531]],"__id":9192,"parentNodes":[10]},{"type":"join","out_nodes":[[4005,-1]],"__id":9193,"parentNodes":[4006,4007],"constraint":{"type":"join-reference","out_nodes":[],"__id":9194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4000,-1]],"__id":9195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4004,1532]],"__id":9200,"parentNodes":[16]},{"type":"beta","out_nodes":[[4008,-1]],"__id":9201,"parentNodes":[4009,4010]},{"type":"leftadapter","out_nodes":[[4004,-1]],"__id":9202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4007,1533]],"__id":9207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4007,1534]],"__id":9211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9212,"parentNodes":[4012],"index":460,"rule":{"name":"Bootstrap346","pattern":{"type":"object","id":1691,"cls":"Fibonacci346","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap346"},{"type":"beta","out_nodes":[[4011,-1]],"__id":9213,"parentNodes":[4013,4014]},{"type":"rightadapter","out_nodes":[[4012,1535]],"__id":9218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4012,1536]],"__id":9222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9223,"parentNodes":[4016],"index":461,"rule":{"name":"Recurse346","pattern":{"type":"composite","id":1694,"leftPattern":{"type":"not","id":1692,"cls":"Fibonacci346","alias":"f"},"rightPattern":{"type":"object","id":1693,"cls":"Fibonacci346","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci346 = defined.get('Fibonacci346');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci346(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse346"},{"type":"beta","out_nodes":[[4015,-1]],"__id":9224,"parentNodes":[4017,4018]},{"type":"rightadapter","out_nodes":[[4016,1537]],"__id":9228,"parentNodes":[37]},{"type":"not","out_nodes":[[4019,-1]],"__id":9229,"parentNodes":[4020,4021],"constraint":{"type":"join-reference","out_nodes":[],"__id":9230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4016,-1]],"__id":9231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4018,1538]],"__id":9235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4018,1539]],"__id":9239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9240,"parentNodes":[4023],"index":462,"rule":{"name":"Calculate345","pattern":{"type":"composite","id":1701,"leftPattern":{"type":"composite","id":1700,"leftPattern":{"type":"composite","id":1699,"leftPattern":{"type":"object","id":1695,"cls":"Fibonacci345","alias":"f1"},"rightPattern":{"type":"object","id":1696,"cls":"Fibonacci345","alias":"f2"}},"rightPattern":{"type":"object","id":1697,"cls":"Fibonacci345","alias":"f3"}},"rightPattern":{"type":"object","id":1698,"cls":"Result345","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate345"},{"type":"beta","out_nodes":[[4022,-1]],"__id":9241,"parentNodes":[4025,4026]},{"type":"type","out_nodes":[[3,1540]],"__id":9242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result345"}},{"type":"rightadapter","out_nodes":[[4023,1540]],"__id":9245,"parentNodes":[4]},{"type":"join","out_nodes":[[4027,-1]],"__id":9246,"parentNodes":[4029,4030],"constraint":{"type":"join-reference","out_nodes":[],"__id":9247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4023,-1]],"__id":9248,"parentNodes":[]},{"type":"type","out_nodes":[[9,1541],[14,1542],[20,1543],[30,1545],[20,1547],[30,1548]],"__id":9249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci345"}},{"type":"rightadapter","out_nodes":[[4026,1541]],"__id":9252,"parentNodes":[10]},{"type":"join","out_nodes":[[4031,-1]],"__id":9253,"parentNodes":[4032,4033],"constraint":{"type":"join-reference","out_nodes":[],"__id":9254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4026,-1]],"__id":9255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4030,1542]],"__id":9260,"parentNodes":[16]},{"type":"beta","out_nodes":[[4034,-1]],"__id":9261,"parentNodes":[4035,4036]},{"type":"leftadapter","out_nodes":[[4030,-1]],"__id":9262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4033,1543]],"__id":9267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4033,1544]],"__id":9271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9272,"parentNodes":[4038],"index":463,"rule":{"name":"Bootstrap345","pattern":{"type":"object","id":1702,"cls":"Fibonacci345","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap345"},{"type":"beta","out_nodes":[[4037,-1]],"__id":9273,"parentNodes":[4039,4040]},{"type":"rightadapter","out_nodes":[[4038,1545]],"__id":9278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4038,1546]],"__id":9282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9283,"parentNodes":[4042],"index":464,"rule":{"name":"Recurse345","pattern":{"type":"composite","id":1705,"leftPattern":{"type":"not","id":1703,"cls":"Fibonacci345","alias":"f"},"rightPattern":{"type":"object","id":1704,"cls":"Fibonacci345","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci345 = defined.get('Fibonacci345');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci345(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse345"},{"type":"beta","out_nodes":[[4041,-1]],"__id":9284,"parentNodes":[4043,4044]},{"type":"rightadapter","out_nodes":[[4042,1547]],"__id":9288,"parentNodes":[37]},{"type":"not","out_nodes":[[4045,-1]],"__id":9289,"parentNodes":[4046,4047],"constraint":{"type":"join-reference","out_nodes":[],"__id":9290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4042,-1]],"__id":9291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4044,1548]],"__id":9295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4044,1549]],"__id":9299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9300,"parentNodes":[4049],"index":465,"rule":{"name":"Calculate344","pattern":{"type":"composite","id":1712,"leftPattern":{"type":"composite","id":1711,"leftPattern":{"type":"composite","id":1710,"leftPattern":{"type":"object","id":1706,"cls":"Fibonacci344","alias":"f1"},"rightPattern":{"type":"object","id":1707,"cls":"Fibonacci344","alias":"f2"}},"rightPattern":{"type":"object","id":1708,"cls":"Fibonacci344","alias":"f3"}},"rightPattern":{"type":"object","id":1709,"cls":"Result344","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate344"},{"type":"beta","out_nodes":[[4048,-1]],"__id":9301,"parentNodes":[4051,4052]},{"type":"type","out_nodes":[[3,1550]],"__id":9302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result344"}},{"type":"rightadapter","out_nodes":[[4049,1550]],"__id":9305,"parentNodes":[4]},{"type":"join","out_nodes":[[4053,-1]],"__id":9306,"parentNodes":[4055,4056],"constraint":{"type":"join-reference","out_nodes":[],"__id":9307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4049,-1]],"__id":9308,"parentNodes":[]},{"type":"type","out_nodes":[[9,1551],[14,1552],[20,1553],[30,1555],[20,1557],[30,1558]],"__id":9309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci344"}},{"type":"rightadapter","out_nodes":[[4052,1551]],"__id":9312,"parentNodes":[10]},{"type":"join","out_nodes":[[4057,-1]],"__id":9313,"parentNodes":[4058,4059],"constraint":{"type":"join-reference","out_nodes":[],"__id":9314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4052,-1]],"__id":9315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4056,1552]],"__id":9320,"parentNodes":[16]},{"type":"beta","out_nodes":[[4060,-1]],"__id":9321,"parentNodes":[4061,4062]},{"type":"leftadapter","out_nodes":[[4056,-1]],"__id":9322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4059,1553]],"__id":9327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4059,1554]],"__id":9331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9332,"parentNodes":[4064],"index":466,"rule":{"name":"Bootstrap344","pattern":{"type":"object","id":1713,"cls":"Fibonacci344","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap344"},{"type":"beta","out_nodes":[[4063,-1]],"__id":9333,"parentNodes":[4065,4066]},{"type":"rightadapter","out_nodes":[[4064,1555]],"__id":9338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4064,1556]],"__id":9342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9343,"parentNodes":[4068],"index":467,"rule":{"name":"Recurse344","pattern":{"type":"composite","id":1716,"leftPattern":{"type":"not","id":1714,"cls":"Fibonacci344","alias":"f"},"rightPattern":{"type":"object","id":1715,"cls":"Fibonacci344","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci344 = defined.get('Fibonacci344');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci344(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse344"},{"type":"beta","out_nodes":[[4067,-1]],"__id":9344,"parentNodes":[4069,4070]},{"type":"rightadapter","out_nodes":[[4068,1557]],"__id":9348,"parentNodes":[37]},{"type":"not","out_nodes":[[4071,-1]],"__id":9349,"parentNodes":[4072,4073],"constraint":{"type":"join-reference","out_nodes":[],"__id":9350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4068,-1]],"__id":9351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4070,1558]],"__id":9355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4070,1559]],"__id":9359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9360,"parentNodes":[4075],"index":468,"rule":{"name":"Calculate343","pattern":{"type":"composite","id":1723,"leftPattern":{"type":"composite","id":1722,"leftPattern":{"type":"composite","id":1721,"leftPattern":{"type":"object","id":1717,"cls":"Fibonacci343","alias":"f1"},"rightPattern":{"type":"object","id":1718,"cls":"Fibonacci343","alias":"f2"}},"rightPattern":{"type":"object","id":1719,"cls":"Fibonacci343","alias":"f3"}},"rightPattern":{"type":"object","id":1720,"cls":"Result343","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate343"},{"type":"beta","out_nodes":[[4074,-1]],"__id":9361,"parentNodes":[4077,4078]},{"type":"type","out_nodes":[[3,1560]],"__id":9362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result343"}},{"type":"rightadapter","out_nodes":[[4075,1560]],"__id":9365,"parentNodes":[4]},{"type":"join","out_nodes":[[4079,-1]],"__id":9366,"parentNodes":[4081,4082],"constraint":{"type":"join-reference","out_nodes":[],"__id":9367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4075,-1]],"__id":9368,"parentNodes":[]},{"type":"type","out_nodes":[[9,1561],[14,1562],[20,1563],[30,1565],[20,1567],[30,1568]],"__id":9369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci343"}},{"type":"rightadapter","out_nodes":[[4078,1561]],"__id":9372,"parentNodes":[10]},{"type":"join","out_nodes":[[4083,-1]],"__id":9373,"parentNodes":[4084,4085],"constraint":{"type":"join-reference","out_nodes":[],"__id":9374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4078,-1]],"__id":9375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4082,1562]],"__id":9380,"parentNodes":[16]},{"type":"beta","out_nodes":[[4086,-1]],"__id":9381,"parentNodes":[4087,4088]},{"type":"leftadapter","out_nodes":[[4082,-1]],"__id":9382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4085,1563]],"__id":9387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4085,1564]],"__id":9391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9392,"parentNodes":[4090],"index":469,"rule":{"name":"Bootstrap343","pattern":{"type":"object","id":1724,"cls":"Fibonacci343","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap343"},{"type":"beta","out_nodes":[[4089,-1]],"__id":9393,"parentNodes":[4091,4092]},{"type":"rightadapter","out_nodes":[[4090,1565]],"__id":9398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4090,1566]],"__id":9402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9403,"parentNodes":[4094],"index":470,"rule":{"name":"Recurse343","pattern":{"type":"composite","id":1727,"leftPattern":{"type":"not","id":1725,"cls":"Fibonacci343","alias":"f"},"rightPattern":{"type":"object","id":1726,"cls":"Fibonacci343","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci343 = defined.get('Fibonacci343');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci343(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse343"},{"type":"beta","out_nodes":[[4093,-1]],"__id":9404,"parentNodes":[4095,4096]},{"type":"rightadapter","out_nodes":[[4094,1567]],"__id":9408,"parentNodes":[37]},{"type":"not","out_nodes":[[4097,-1]],"__id":9409,"parentNodes":[4098,4099],"constraint":{"type":"join-reference","out_nodes":[],"__id":9410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4094,-1]],"__id":9411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4096,1568]],"__id":9415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4096,1569]],"__id":9419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9420,"parentNodes":[4101],"index":471,"rule":{"name":"Calculate342","pattern":{"type":"composite","id":1734,"leftPattern":{"type":"composite","id":1733,"leftPattern":{"type":"composite","id":1732,"leftPattern":{"type":"object","id":1728,"cls":"Fibonacci342","alias":"f1"},"rightPattern":{"type":"object","id":1729,"cls":"Fibonacci342","alias":"f2"}},"rightPattern":{"type":"object","id":1730,"cls":"Fibonacci342","alias":"f3"}},"rightPattern":{"type":"object","id":1731,"cls":"Result342","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate342"},{"type":"beta","out_nodes":[[4100,-1]],"__id":9421,"parentNodes":[4103,4104]},{"type":"type","out_nodes":[[3,1570]],"__id":9422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result342"}},{"type":"rightadapter","out_nodes":[[4101,1570]],"__id":9425,"parentNodes":[4]},{"type":"join","out_nodes":[[4105,-1]],"__id":9426,"parentNodes":[4107,4108],"constraint":{"type":"join-reference","out_nodes":[],"__id":9427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4101,-1]],"__id":9428,"parentNodes":[]},{"type":"type","out_nodes":[[9,1571],[14,1572],[20,1573],[30,1575],[20,1577],[30,1578]],"__id":9429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci342"}},{"type":"rightadapter","out_nodes":[[4104,1571]],"__id":9432,"parentNodes":[10]},{"type":"join","out_nodes":[[4109,-1]],"__id":9433,"parentNodes":[4110,4111],"constraint":{"type":"join-reference","out_nodes":[],"__id":9434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4104,-1]],"__id":9435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4108,1572]],"__id":9440,"parentNodes":[16]},{"type":"beta","out_nodes":[[4112,-1]],"__id":9441,"parentNodes":[4113,4114]},{"type":"leftadapter","out_nodes":[[4108,-1]],"__id":9442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4111,1573]],"__id":9447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4111,1574]],"__id":9451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9452,"parentNodes":[4116],"index":472,"rule":{"name":"Bootstrap342","pattern":{"type":"object","id":1735,"cls":"Fibonacci342","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap342"},{"type":"beta","out_nodes":[[4115,-1]],"__id":9453,"parentNodes":[4117,4118]},{"type":"rightadapter","out_nodes":[[4116,1575]],"__id":9458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4116,1576]],"__id":9462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9463,"parentNodes":[4120],"index":473,"rule":{"name":"Recurse342","pattern":{"type":"composite","id":1738,"leftPattern":{"type":"not","id":1736,"cls":"Fibonacci342","alias":"f"},"rightPattern":{"type":"object","id":1737,"cls":"Fibonacci342","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci342 = defined.get('Fibonacci342');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci342(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse342"},{"type":"beta","out_nodes":[[4119,-1]],"__id":9464,"parentNodes":[4121,4122]},{"type":"rightadapter","out_nodes":[[4120,1577]],"__id":9468,"parentNodes":[37]},{"type":"not","out_nodes":[[4123,-1]],"__id":9469,"parentNodes":[4124,4125],"constraint":{"type":"join-reference","out_nodes":[],"__id":9470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4120,-1]],"__id":9471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4122,1578]],"__id":9475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4122,1579]],"__id":9479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9480,"parentNodes":[4127],"index":474,"rule":{"name":"Calculate341","pattern":{"type":"composite","id":1745,"leftPattern":{"type":"composite","id":1744,"leftPattern":{"type":"composite","id":1743,"leftPattern":{"type":"object","id":1739,"cls":"Fibonacci341","alias":"f1"},"rightPattern":{"type":"object","id":1740,"cls":"Fibonacci341","alias":"f2"}},"rightPattern":{"type":"object","id":1741,"cls":"Fibonacci341","alias":"f3"}},"rightPattern":{"type":"object","id":1742,"cls":"Result341","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate341"},{"type":"beta","out_nodes":[[4126,-1]],"__id":9481,"parentNodes":[4129,4130]},{"type":"type","out_nodes":[[3,1580]],"__id":9482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result341"}},{"type":"rightadapter","out_nodes":[[4127,1580]],"__id":9485,"parentNodes":[4]},{"type":"join","out_nodes":[[4131,-1]],"__id":9486,"parentNodes":[4133,4134],"constraint":{"type":"join-reference","out_nodes":[],"__id":9487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4127,-1]],"__id":9488,"parentNodes":[]},{"type":"type","out_nodes":[[9,1581],[14,1582],[20,1583],[30,1585],[20,1587],[30,1588]],"__id":9489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci341"}},{"type":"rightadapter","out_nodes":[[4130,1581]],"__id":9492,"parentNodes":[10]},{"type":"join","out_nodes":[[4135,-1]],"__id":9493,"parentNodes":[4136,4137],"constraint":{"type":"join-reference","out_nodes":[],"__id":9494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4130,-1]],"__id":9495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4134,1582]],"__id":9500,"parentNodes":[16]},{"type":"beta","out_nodes":[[4138,-1]],"__id":9501,"parentNodes":[4139,4140]},{"type":"leftadapter","out_nodes":[[4134,-1]],"__id":9502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4137,1583]],"__id":9507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4137,1584]],"__id":9511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9512,"parentNodes":[4142],"index":475,"rule":{"name":"Bootstrap341","pattern":{"type":"object","id":1746,"cls":"Fibonacci341","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap341"},{"type":"beta","out_nodes":[[4141,-1]],"__id":9513,"parentNodes":[4143,4144]},{"type":"rightadapter","out_nodes":[[4142,1585]],"__id":9518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4142,1586]],"__id":9522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9523,"parentNodes":[4146],"index":476,"rule":{"name":"Recurse341","pattern":{"type":"composite","id":1749,"leftPattern":{"type":"not","id":1747,"cls":"Fibonacci341","alias":"f"},"rightPattern":{"type":"object","id":1748,"cls":"Fibonacci341","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci341 = defined.get('Fibonacci341');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci341(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse341"},{"type":"beta","out_nodes":[[4145,-1]],"__id":9524,"parentNodes":[4147,4148]},{"type":"rightadapter","out_nodes":[[4146,1587]],"__id":9528,"parentNodes":[37]},{"type":"not","out_nodes":[[4149,-1]],"__id":9529,"parentNodes":[4150,4151],"constraint":{"type":"join-reference","out_nodes":[],"__id":9530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4146,-1]],"__id":9531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4148,1588]],"__id":9535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4148,1589]],"__id":9539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9540,"parentNodes":[4153],"index":477,"rule":{"name":"Calculate340","pattern":{"type":"composite","id":1756,"leftPattern":{"type":"composite","id":1755,"leftPattern":{"type":"composite","id":1754,"leftPattern":{"type":"object","id":1750,"cls":"Fibonacci340","alias":"f1"},"rightPattern":{"type":"object","id":1751,"cls":"Fibonacci340","alias":"f2"}},"rightPattern":{"type":"object","id":1752,"cls":"Fibonacci340","alias":"f3"}},"rightPattern":{"type":"object","id":1753,"cls":"Result340","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate340"},{"type":"beta","out_nodes":[[4152,-1]],"__id":9541,"parentNodes":[4155,4156]},{"type":"type","out_nodes":[[3,1590]],"__id":9542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result340"}},{"type":"rightadapter","out_nodes":[[4153,1590]],"__id":9545,"parentNodes":[4]},{"type":"join","out_nodes":[[4157,-1]],"__id":9546,"parentNodes":[4159,4160],"constraint":{"type":"join-reference","out_nodes":[],"__id":9547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4153,-1]],"__id":9548,"parentNodes":[]},{"type":"type","out_nodes":[[9,1591],[14,1592],[20,1593],[30,1595],[20,1597],[30,1598]],"__id":9549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci340"}},{"type":"rightadapter","out_nodes":[[4156,1591]],"__id":9552,"parentNodes":[10]},{"type":"join","out_nodes":[[4161,-1]],"__id":9553,"parentNodes":[4162,4163],"constraint":{"type":"join-reference","out_nodes":[],"__id":9554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4156,-1]],"__id":9555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4160,1592]],"__id":9560,"parentNodes":[16]},{"type":"beta","out_nodes":[[4164,-1]],"__id":9561,"parentNodes":[4165,4166]},{"type":"leftadapter","out_nodes":[[4160,-1]],"__id":9562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4163,1593]],"__id":9567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4163,1594]],"__id":9571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9572,"parentNodes":[4168],"index":478,"rule":{"name":"Bootstrap340","pattern":{"type":"object","id":1757,"cls":"Fibonacci340","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap340"},{"type":"beta","out_nodes":[[4167,-1]],"__id":9573,"parentNodes":[4169,4170]},{"type":"rightadapter","out_nodes":[[4168,1595]],"__id":9578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4168,1596]],"__id":9582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9583,"parentNodes":[4172],"index":479,"rule":{"name":"Recurse340","pattern":{"type":"composite","id":1760,"leftPattern":{"type":"not","id":1758,"cls":"Fibonacci340","alias":"f"},"rightPattern":{"type":"object","id":1759,"cls":"Fibonacci340","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');let Fibonacci340 = defined.get('Fibonacci340');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci340(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse340"},{"type":"beta","out_nodes":[[4171,-1]],"__id":9584,"parentNodes":[4173,4174]},{"type":"rightadapter","out_nodes":[[4172,1597]],"__id":9588,"parentNodes":[37]},{"type":"not","out_nodes":[[4175,-1]],"__id":9589,"parentNodes":[4176,4177],"constraint":{"type":"join-reference","out_nodes":[],"__id":9590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4172,-1]],"__id":9591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4174,1598]],"__id":9595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4174,1599]],"__id":9599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9600,"parentNodes":[4179],"index":480,"rule":{"name":"Calculate339","pattern":{"type":"composite","id":1767,"leftPattern":{"type":"composite","id":1766,"leftPattern":{"type":"composite","id":1765,"leftPattern":{"type":"object","id":1761,"cls":"Fibonacci339","alias":"f1"},"rightPattern":{"type":"object","id":1762,"cls":"Fibonacci339","alias":"f2"}},"rightPattern":{"type":"object","id":1763,"cls":"Fibonacci339","alias":"f3"}},"rightPattern":{"type":"object","id":1764,"cls":"Result339","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate339"},{"type":"beta","out_nodes":[[4178,-1]],"__id":9601,"parentNodes":[4181,4182]},{"type":"type","out_nodes":[[3,1600]],"__id":9602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result339"}},{"type":"rightadapter","out_nodes":[[4179,1600]],"__id":9605,"parentNodes":[4]},{"type":"join","out_nodes":[[4183,-1]],"__id":9606,"parentNodes":[4185,4186],"constraint":{"type":"join-reference","out_nodes":[],"__id":9607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4179,-1]],"__id":9608,"parentNodes":[]},{"type":"type","out_nodes":[[9,1601],[14,1602],[20,1603],[30,1605],[20,1607],[30,1608]],"__id":9609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci339"}},{"type":"rightadapter","out_nodes":[[4182,1601]],"__id":9612,"parentNodes":[10]},{"type":"join","out_nodes":[[4187,-1]],"__id":9613,"parentNodes":[4188,4189],"constraint":{"type":"join-reference","out_nodes":[],"__id":9614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4182,-1]],"__id":9615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4186,1602]],"__id":9620,"parentNodes":[16]},{"type":"beta","out_nodes":[[4190,-1]],"__id":9621,"parentNodes":[4191,4192]},{"type":"leftadapter","out_nodes":[[4186,-1]],"__id":9622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4189,1603]],"__id":9627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4189,1604]],"__id":9631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9632,"parentNodes":[4194],"index":481,"rule":{"name":"Bootstrap339","pattern":{"type":"object","id":1768,"cls":"Fibonacci339","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap339"},{"type":"beta","out_nodes":[[4193,-1]],"__id":9633,"parentNodes":[4195,4196]},{"type":"rightadapter","out_nodes":[[4194,1605]],"__id":9638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4194,1606]],"__id":9642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9643,"parentNodes":[4198],"index":482,"rule":{"name":"Recurse339","pattern":{"type":"composite","id":1771,"leftPattern":{"type":"not","id":1769,"cls":"Fibonacci339","alias":"f"},"rightPattern":{"type":"object","id":1770,"cls":"Fibonacci339","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci339 = defined.get('Fibonacci339');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci339(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse339"},{"type":"beta","out_nodes":[[4197,-1]],"__id":9644,"parentNodes":[4199,4200]},{"type":"rightadapter","out_nodes":[[4198,1607]],"__id":9648,"parentNodes":[37]},{"type":"not","out_nodes":[[4201,-1]],"__id":9649,"parentNodes":[4202,4203],"constraint":{"type":"join-reference","out_nodes":[],"__id":9650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4198,-1]],"__id":9651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4200,1608]],"__id":9655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4200,1609]],"__id":9659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9660,"parentNodes":[4205],"index":483,"rule":{"name":"Calculate338","pattern":{"type":"composite","id":1778,"leftPattern":{"type":"composite","id":1777,"leftPattern":{"type":"composite","id":1776,"leftPattern":{"type":"object","id":1772,"cls":"Fibonacci338","alias":"f1"},"rightPattern":{"type":"object","id":1773,"cls":"Fibonacci338","alias":"f2"}},"rightPattern":{"type":"object","id":1774,"cls":"Fibonacci338","alias":"f3"}},"rightPattern":{"type":"object","id":1775,"cls":"Result338","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate338"},{"type":"beta","out_nodes":[[4204,-1]],"__id":9661,"parentNodes":[4207,4208]},{"type":"type","out_nodes":[[3,1610]],"__id":9662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result338"}},{"type":"rightadapter","out_nodes":[[4205,1610]],"__id":9665,"parentNodes":[4]},{"type":"join","out_nodes":[[4209,-1]],"__id":9666,"parentNodes":[4211,4212],"constraint":{"type":"join-reference","out_nodes":[],"__id":9667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4205,-1]],"__id":9668,"parentNodes":[]},{"type":"type","out_nodes":[[9,1611],[14,1612],[20,1613],[30,1615],[20,1617],[30,1618]],"__id":9669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci338"}},{"type":"rightadapter","out_nodes":[[4208,1611]],"__id":9672,"parentNodes":[10]},{"type":"join","out_nodes":[[4213,-1]],"__id":9673,"parentNodes":[4214,4215],"constraint":{"type":"join-reference","out_nodes":[],"__id":9674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4208,-1]],"__id":9675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4212,1612]],"__id":9680,"parentNodes":[16]},{"type":"beta","out_nodes":[[4216,-1]],"__id":9681,"parentNodes":[4217,4218]},{"type":"leftadapter","out_nodes":[[4212,-1]],"__id":9682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4215,1613]],"__id":9687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4215,1614]],"__id":9691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9692,"parentNodes":[4220],"index":484,"rule":{"name":"Bootstrap338","pattern":{"type":"object","id":1779,"cls":"Fibonacci338","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap338"},{"type":"beta","out_nodes":[[4219,-1]],"__id":9693,"parentNodes":[4221,4222]},{"type":"rightadapter","out_nodes":[[4220,1615]],"__id":9698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4220,1616]],"__id":9702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9703,"parentNodes":[4224],"index":485,"rule":{"name":"Recurse338","pattern":{"type":"composite","id":1782,"leftPattern":{"type":"not","id":1780,"cls":"Fibonacci338","alias":"f"},"rightPattern":{"type":"object","id":1781,"cls":"Fibonacci338","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci338 = defined.get('Fibonacci338');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci338(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse338"},{"type":"beta","out_nodes":[[4223,-1]],"__id":9704,"parentNodes":[4225,4226]},{"type":"rightadapter","out_nodes":[[4224,1617]],"__id":9708,"parentNodes":[37]},{"type":"not","out_nodes":[[4227,-1]],"__id":9709,"parentNodes":[4228,4229],"constraint":{"type":"join-reference","out_nodes":[],"__id":9710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4224,-1]],"__id":9711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4226,1618]],"__id":9715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4226,1619]],"__id":9719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9720,"parentNodes":[4231],"index":486,"rule":{"name":"Calculate337","pattern":{"type":"composite","id":1789,"leftPattern":{"type":"composite","id":1788,"leftPattern":{"type":"composite","id":1787,"leftPattern":{"type":"object","id":1783,"cls":"Fibonacci337","alias":"f1"},"rightPattern":{"type":"object","id":1784,"cls":"Fibonacci337","alias":"f2"}},"rightPattern":{"type":"object","id":1785,"cls":"Fibonacci337","alias":"f3"}},"rightPattern":{"type":"object","id":1786,"cls":"Result337","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate337"},{"type":"beta","out_nodes":[[4230,-1]],"__id":9721,"parentNodes":[4233,4234]},{"type":"type","out_nodes":[[3,1620]],"__id":9722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result337"}},{"type":"rightadapter","out_nodes":[[4231,1620]],"__id":9725,"parentNodes":[4]},{"type":"join","out_nodes":[[4235,-1]],"__id":9726,"parentNodes":[4237,4238],"constraint":{"type":"join-reference","out_nodes":[],"__id":9727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4231,-1]],"__id":9728,"parentNodes":[]},{"type":"type","out_nodes":[[9,1621],[14,1622],[20,1623],[30,1625],[20,1627],[30,1628]],"__id":9729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci337"}},{"type":"rightadapter","out_nodes":[[4234,1621]],"__id":9732,"parentNodes":[10]},{"type":"join","out_nodes":[[4239,-1]],"__id":9733,"parentNodes":[4240,4241],"constraint":{"type":"join-reference","out_nodes":[],"__id":9734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4234,-1]],"__id":9735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4238,1622]],"__id":9740,"parentNodes":[16]},{"type":"beta","out_nodes":[[4242,-1]],"__id":9741,"parentNodes":[4243,4244]},{"type":"leftadapter","out_nodes":[[4238,-1]],"__id":9742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4241,1623]],"__id":9747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4241,1624]],"__id":9751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9752,"parentNodes":[4246],"index":487,"rule":{"name":"Bootstrap337","pattern":{"type":"object","id":1790,"cls":"Fibonacci337","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap337"},{"type":"beta","out_nodes":[[4245,-1]],"__id":9753,"parentNodes":[4247,4248]},{"type":"rightadapter","out_nodes":[[4246,1625]],"__id":9758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4246,1626]],"__id":9762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9763,"parentNodes":[4250],"index":488,"rule":{"name":"Recurse337","pattern":{"type":"composite","id":1793,"leftPattern":{"type":"not","id":1791,"cls":"Fibonacci337","alias":"f"},"rightPattern":{"type":"object","id":1792,"cls":"Fibonacci337","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci337 = defined.get('Fibonacci337');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci337(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse337"},{"type":"beta","out_nodes":[[4249,-1]],"__id":9764,"parentNodes":[4251,4252]},{"type":"rightadapter","out_nodes":[[4250,1627]],"__id":9768,"parentNodes":[37]},{"type":"not","out_nodes":[[4253,-1]],"__id":9769,"parentNodes":[4254,4255],"constraint":{"type":"join-reference","out_nodes":[],"__id":9770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4250,-1]],"__id":9771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4252,1628]],"__id":9775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4252,1629]],"__id":9779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9780,"parentNodes":[4257],"index":489,"rule":{"name":"Calculate336","pattern":{"type":"composite","id":1800,"leftPattern":{"type":"composite","id":1799,"leftPattern":{"type":"composite","id":1798,"leftPattern":{"type":"object","id":1794,"cls":"Fibonacci336","alias":"f1"},"rightPattern":{"type":"object","id":1795,"cls":"Fibonacci336","alias":"f2"}},"rightPattern":{"type":"object","id":1796,"cls":"Fibonacci336","alias":"f3"}},"rightPattern":{"type":"object","id":1797,"cls":"Result336","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate336"},{"type":"beta","out_nodes":[[4256,-1]],"__id":9781,"parentNodes":[4259,4260]},{"type":"type","out_nodes":[[3,1630]],"__id":9782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result336"}},{"type":"rightadapter","out_nodes":[[4257,1630]],"__id":9785,"parentNodes":[4]},{"type":"join","out_nodes":[[4261,-1]],"__id":9786,"parentNodes":[4263,4264],"constraint":{"type":"join-reference","out_nodes":[],"__id":9787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4257,-1]],"__id":9788,"parentNodes":[]},{"type":"type","out_nodes":[[9,1631],[14,1632],[20,1633],[30,1635],[20,1637],[30,1638]],"__id":9789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci336"}},{"type":"rightadapter","out_nodes":[[4260,1631]],"__id":9792,"parentNodes":[10]},{"type":"join","out_nodes":[[4265,-1]],"__id":9793,"parentNodes":[4266,4267],"constraint":{"type":"join-reference","out_nodes":[],"__id":9794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4260,-1]],"__id":9795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4264,1632]],"__id":9800,"parentNodes":[16]},{"type":"beta","out_nodes":[[4268,-1]],"__id":9801,"parentNodes":[4269,4270]},{"type":"leftadapter","out_nodes":[[4264,-1]],"__id":9802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4267,1633]],"__id":9807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4267,1634]],"__id":9811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9812,"parentNodes":[4272],"index":490,"rule":{"name":"Bootstrap336","pattern":{"type":"object","id":1801,"cls":"Fibonacci336","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap336"},{"type":"beta","out_nodes":[[4271,-1]],"__id":9813,"parentNodes":[4273,4274]},{"type":"rightadapter","out_nodes":[[4272,1635]],"__id":9818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4272,1636]],"__id":9822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9823,"parentNodes":[4276],"index":491,"rule":{"name":"Recurse336","pattern":{"type":"composite","id":1804,"leftPattern":{"type":"not","id":1802,"cls":"Fibonacci336","alias":"f"},"rightPattern":{"type":"object","id":1803,"cls":"Fibonacci336","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci336 = defined.get('Fibonacci336');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci336(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse336"},{"type":"beta","out_nodes":[[4275,-1]],"__id":9824,"parentNodes":[4277,4278]},{"type":"rightadapter","out_nodes":[[4276,1637]],"__id":9828,"parentNodes":[37]},{"type":"not","out_nodes":[[4279,-1]],"__id":9829,"parentNodes":[4280,4281],"constraint":{"type":"join-reference","out_nodes":[],"__id":9830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4276,-1]],"__id":9831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4278,1638]],"__id":9835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4278,1639]],"__id":9839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9840,"parentNodes":[4283],"index":492,"rule":{"name":"Calculate335","pattern":{"type":"composite","id":1811,"leftPattern":{"type":"composite","id":1810,"leftPattern":{"type":"composite","id":1809,"leftPattern":{"type":"object","id":1805,"cls":"Fibonacci335","alias":"f1"},"rightPattern":{"type":"object","id":1806,"cls":"Fibonacci335","alias":"f2"}},"rightPattern":{"type":"object","id":1807,"cls":"Fibonacci335","alias":"f3"}},"rightPattern":{"type":"object","id":1808,"cls":"Result335","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate335"},{"type":"beta","out_nodes":[[4282,-1]],"__id":9841,"parentNodes":[4285,4286]},{"type":"type","out_nodes":[[3,1640]],"__id":9842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result335"}},{"type":"rightadapter","out_nodes":[[4283,1640]],"__id":9845,"parentNodes":[4]},{"type":"join","out_nodes":[[4287,-1]],"__id":9846,"parentNodes":[4289,4290],"constraint":{"type":"join-reference","out_nodes":[],"__id":9847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4283,-1]],"__id":9848,"parentNodes":[]},{"type":"type","out_nodes":[[9,1641],[14,1642],[20,1643],[30,1645],[20,1647],[30,1648]],"__id":9849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci335"}},{"type":"rightadapter","out_nodes":[[4286,1641]],"__id":9852,"parentNodes":[10]},{"type":"join","out_nodes":[[4291,-1]],"__id":9853,"parentNodes":[4292,4293],"constraint":{"type":"join-reference","out_nodes":[],"__id":9854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4286,-1]],"__id":9855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4290,1642]],"__id":9860,"parentNodes":[16]},{"type":"beta","out_nodes":[[4294,-1]],"__id":9861,"parentNodes":[4295,4296]},{"type":"leftadapter","out_nodes":[[4290,-1]],"__id":9862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4293,1643]],"__id":9867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4293,1644]],"__id":9871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9872,"parentNodes":[4298],"index":493,"rule":{"name":"Bootstrap335","pattern":{"type":"object","id":1812,"cls":"Fibonacci335","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap335"},{"type":"beta","out_nodes":[[4297,-1]],"__id":9873,"parentNodes":[4299,4300]},{"type":"rightadapter","out_nodes":[[4298,1645]],"__id":9878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4298,1646]],"__id":9882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9883,"parentNodes":[4302],"index":494,"rule":{"name":"Recurse335","pattern":{"type":"composite","id":1815,"leftPattern":{"type":"not","id":1813,"cls":"Fibonacci335","alias":"f"},"rightPattern":{"type":"object","id":1814,"cls":"Fibonacci335","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci335 = defined.get('Fibonacci335');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci335(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse335"},{"type":"beta","out_nodes":[[4301,-1]],"__id":9884,"parentNodes":[4303,4304]},{"type":"rightadapter","out_nodes":[[4302,1647]],"__id":9888,"parentNodes":[37]},{"type":"not","out_nodes":[[4305,-1]],"__id":9889,"parentNodes":[4306,4307],"constraint":{"type":"join-reference","out_nodes":[],"__id":9890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4302,-1]],"__id":9891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4304,1648]],"__id":9895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4304,1649]],"__id":9899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9900,"parentNodes":[4309],"index":495,"rule":{"name":"Calculate334","pattern":{"type":"composite","id":1822,"leftPattern":{"type":"composite","id":1821,"leftPattern":{"type":"composite","id":1820,"leftPattern":{"type":"object","id":1816,"cls":"Fibonacci334","alias":"f1"},"rightPattern":{"type":"object","id":1817,"cls":"Fibonacci334","alias":"f2"}},"rightPattern":{"type":"object","id":1818,"cls":"Fibonacci334","alias":"f3"}},"rightPattern":{"type":"object","id":1819,"cls":"Result334","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate334"},{"type":"beta","out_nodes":[[4308,-1]],"__id":9901,"parentNodes":[4311,4312]},{"type":"type","out_nodes":[[3,1650]],"__id":9902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result334"}},{"type":"rightadapter","out_nodes":[[4309,1650]],"__id":9905,"parentNodes":[4]},{"type":"join","out_nodes":[[4313,-1]],"__id":9906,"parentNodes":[4315,4316],"constraint":{"type":"join-reference","out_nodes":[],"__id":9907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4309,-1]],"__id":9908,"parentNodes":[]},{"type":"type","out_nodes":[[9,1651],[14,1652],[20,1653],[30,1655],[20,1657],[30,1658]],"__id":9909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci334"}},{"type":"rightadapter","out_nodes":[[4312,1651]],"__id":9912,"parentNodes":[10]},{"type":"join","out_nodes":[[4317,-1]],"__id":9913,"parentNodes":[4318,4319],"constraint":{"type":"join-reference","out_nodes":[],"__id":9914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4312,-1]],"__id":9915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4316,1652]],"__id":9920,"parentNodes":[16]},{"type":"beta","out_nodes":[[4320,-1]],"__id":9921,"parentNodes":[4321,4322]},{"type":"leftadapter","out_nodes":[[4316,-1]],"__id":9922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4319,1653]],"__id":9927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4319,1654]],"__id":9931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9932,"parentNodes":[4324],"index":496,"rule":{"name":"Bootstrap334","pattern":{"type":"object","id":1823,"cls":"Fibonacci334","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap334"},{"type":"beta","out_nodes":[[4323,-1]],"__id":9933,"parentNodes":[4325,4326]},{"type":"rightadapter","out_nodes":[[4324,1655]],"__id":9938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4324,1656]],"__id":9942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9943,"parentNodes":[4328],"index":497,"rule":{"name":"Recurse334","pattern":{"type":"composite","id":1826,"leftPattern":{"type":"not","id":1824,"cls":"Fibonacci334","alias":"f"},"rightPattern":{"type":"object","id":1825,"cls":"Fibonacci334","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci334 = defined.get('Fibonacci334');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci334(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse334"},{"type":"beta","out_nodes":[[4327,-1]],"__id":9944,"parentNodes":[4329,4330]},{"type":"rightadapter","out_nodes":[[4328,1657]],"__id":9948,"parentNodes":[37]},{"type":"not","out_nodes":[[4331,-1]],"__id":9949,"parentNodes":[4332,4333],"constraint":{"type":"join-reference","out_nodes":[],"__id":9950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4328,-1]],"__id":9951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4330,1658]],"__id":9955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4330,1659]],"__id":9959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9960,"parentNodes":[4335],"index":498,"rule":{"name":"Calculate333","pattern":{"type":"composite","id":1833,"leftPattern":{"type":"composite","id":1832,"leftPattern":{"type":"composite","id":1831,"leftPattern":{"type":"object","id":1827,"cls":"Fibonacci333","alias":"f1"},"rightPattern":{"type":"object","id":1828,"cls":"Fibonacci333","alias":"f2"}},"rightPattern":{"type":"object","id":1829,"cls":"Fibonacci333","alias":"f3"}},"rightPattern":{"type":"object","id":1830,"cls":"Result333","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate333"},{"type":"beta","out_nodes":[[4334,-1]],"__id":9961,"parentNodes":[4337,4338]},{"type":"type","out_nodes":[[3,1660]],"__id":9962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result333"}},{"type":"rightadapter","out_nodes":[[4335,1660]],"__id":9965,"parentNodes":[4]},{"type":"join","out_nodes":[[4339,-1]],"__id":9966,"parentNodes":[4341,4342],"constraint":{"type":"join-reference","out_nodes":[],"__id":9967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4335,-1]],"__id":9968,"parentNodes":[]},{"type":"type","out_nodes":[[9,1661],[14,1662],[20,1663],[30,1665],[20,1667],[30,1668]],"__id":9969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci333"}},{"type":"rightadapter","out_nodes":[[4338,1661]],"__id":9972,"parentNodes":[10]},{"type":"join","out_nodes":[[4343,-1]],"__id":9973,"parentNodes":[4344,4345],"constraint":{"type":"join-reference","out_nodes":[],"__id":9974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4338,-1]],"__id":9975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4342,1662]],"__id":9980,"parentNodes":[16]},{"type":"beta","out_nodes":[[4346,-1]],"__id":9981,"parentNodes":[4347,4348]},{"type":"leftadapter","out_nodes":[[4342,-1]],"__id":9982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4345,1663]],"__id":9987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4345,1664]],"__id":9991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":9992,"parentNodes":[4350],"index":499,"rule":{"name":"Bootstrap333","pattern":{"type":"object","id":1834,"cls":"Fibonacci333","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap333"},{"type":"beta","out_nodes":[[4349,-1]],"__id":9993,"parentNodes":[4351,4352]},{"type":"rightadapter","out_nodes":[[4350,1665]],"__id":9998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4350,1666]],"__id":10002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10003,"parentNodes":[4354],"index":500,"rule":{"name":"Recurse333","pattern":{"type":"composite","id":1837,"leftPattern":{"type":"not","id":1835,"cls":"Fibonacci333","alias":"f"},"rightPattern":{"type":"object","id":1836,"cls":"Fibonacci333","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci333 = defined.get('Fibonacci333');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci333(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse333"},{"type":"beta","out_nodes":[[4353,-1]],"__id":10004,"parentNodes":[4355,4356]},{"type":"rightadapter","out_nodes":[[4354,1667]],"__id":10008,"parentNodes":[37]},{"type":"not","out_nodes":[[4357,-1]],"__id":10009,"parentNodes":[4358,4359],"constraint":{"type":"join-reference","out_nodes":[],"__id":10010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4354,-1]],"__id":10011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4356,1668]],"__id":10015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4356,1669]],"__id":10019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10020,"parentNodes":[4361],"index":501,"rule":{"name":"Calculate332","pattern":{"type":"composite","id":1844,"leftPattern":{"type":"composite","id":1843,"leftPattern":{"type":"composite","id":1842,"leftPattern":{"type":"object","id":1838,"cls":"Fibonacci332","alias":"f1"},"rightPattern":{"type":"object","id":1839,"cls":"Fibonacci332","alias":"f2"}},"rightPattern":{"type":"object","id":1840,"cls":"Fibonacci332","alias":"f3"}},"rightPattern":{"type":"object","id":1841,"cls":"Result332","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate332"},{"type":"beta","out_nodes":[[4360,-1]],"__id":10021,"parentNodes":[4363,4364]},{"type":"type","out_nodes":[[3,1670]],"__id":10022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result332"}},{"type":"rightadapter","out_nodes":[[4361,1670]],"__id":10025,"parentNodes":[4]},{"type":"join","out_nodes":[[4365,-1]],"__id":10026,"parentNodes":[4367,4368],"constraint":{"type":"join-reference","out_nodes":[],"__id":10027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4361,-1]],"__id":10028,"parentNodes":[]},{"type":"type","out_nodes":[[9,1671],[14,1672],[20,1673],[30,1675],[20,1677],[30,1678]],"__id":10029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci332"}},{"type":"rightadapter","out_nodes":[[4364,1671]],"__id":10032,"parentNodes":[10]},{"type":"join","out_nodes":[[4369,-1]],"__id":10033,"parentNodes":[4370,4371],"constraint":{"type":"join-reference","out_nodes":[],"__id":10034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4364,-1]],"__id":10035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4368,1672]],"__id":10040,"parentNodes":[16]},{"type":"beta","out_nodes":[[4372,-1]],"__id":10041,"parentNodes":[4373,4374]},{"type":"leftadapter","out_nodes":[[4368,-1]],"__id":10042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4371,1673]],"__id":10047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4371,1674]],"__id":10051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10052,"parentNodes":[4376],"index":502,"rule":{"name":"Bootstrap332","pattern":{"type":"object","id":1845,"cls":"Fibonacci332","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap332"},{"type":"beta","out_nodes":[[4375,-1]],"__id":10053,"parentNodes":[4377,4378]},{"type":"rightadapter","out_nodes":[[4376,1675]],"__id":10058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4376,1676]],"__id":10062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10063,"parentNodes":[4380],"index":503,"rule":{"name":"Recurse332","pattern":{"type":"composite","id":1848,"leftPattern":{"type":"not","id":1846,"cls":"Fibonacci332","alias":"f"},"rightPattern":{"type":"object","id":1847,"cls":"Fibonacci332","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci332 = defined.get('Fibonacci332');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci332(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse332"},{"type":"beta","out_nodes":[[4379,-1]],"__id":10064,"parentNodes":[4381,4382]},{"type":"rightadapter","out_nodes":[[4380,1677]],"__id":10068,"parentNodes":[37]},{"type":"not","out_nodes":[[4383,-1]],"__id":10069,"parentNodes":[4384,4385],"constraint":{"type":"join-reference","out_nodes":[],"__id":10070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4380,-1]],"__id":10071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4382,1678]],"__id":10075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4382,1679]],"__id":10079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10080,"parentNodes":[4387],"index":504,"rule":{"name":"Calculate331","pattern":{"type":"composite","id":1855,"leftPattern":{"type":"composite","id":1854,"leftPattern":{"type":"composite","id":1853,"leftPattern":{"type":"object","id":1849,"cls":"Fibonacci331","alias":"f1"},"rightPattern":{"type":"object","id":1850,"cls":"Fibonacci331","alias":"f2"}},"rightPattern":{"type":"object","id":1851,"cls":"Fibonacci331","alias":"f3"}},"rightPattern":{"type":"object","id":1852,"cls":"Result331","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate331"},{"type":"beta","out_nodes":[[4386,-1]],"__id":10081,"parentNodes":[4389,4390]},{"type":"type","out_nodes":[[3,1680]],"__id":10082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result331"}},{"type":"rightadapter","out_nodes":[[4387,1680]],"__id":10085,"parentNodes":[4]},{"type":"join","out_nodes":[[4391,-1]],"__id":10086,"parentNodes":[4393,4394],"constraint":{"type":"join-reference","out_nodes":[],"__id":10087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4387,-1]],"__id":10088,"parentNodes":[]},{"type":"type","out_nodes":[[9,1681],[14,1682],[20,1683],[30,1685],[20,1687],[30,1688]],"__id":10089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci331"}},{"type":"rightadapter","out_nodes":[[4390,1681]],"__id":10092,"parentNodes":[10]},{"type":"join","out_nodes":[[4395,-1]],"__id":10093,"parentNodes":[4396,4397],"constraint":{"type":"join-reference","out_nodes":[],"__id":10094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4390,-1]],"__id":10095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4394,1682]],"__id":10100,"parentNodes":[16]},{"type":"beta","out_nodes":[[4398,-1]],"__id":10101,"parentNodes":[4399,4400]},{"type":"leftadapter","out_nodes":[[4394,-1]],"__id":10102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4397,1683]],"__id":10107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4397,1684]],"__id":10111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10112,"parentNodes":[4402],"index":505,"rule":{"name":"Bootstrap331","pattern":{"type":"object","id":1856,"cls":"Fibonacci331","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap331"},{"type":"beta","out_nodes":[[4401,-1]],"__id":10113,"parentNodes":[4403,4404]},{"type":"rightadapter","out_nodes":[[4402,1685]],"__id":10118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4402,1686]],"__id":10122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10123,"parentNodes":[4406],"index":506,"rule":{"name":"Recurse331","pattern":{"type":"composite","id":1859,"leftPattern":{"type":"not","id":1857,"cls":"Fibonacci331","alias":"f"},"rightPattern":{"type":"object","id":1858,"cls":"Fibonacci331","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci331 = defined.get('Fibonacci331');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci331(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse331"},{"type":"beta","out_nodes":[[4405,-1]],"__id":10124,"parentNodes":[4407,4408]},{"type":"rightadapter","out_nodes":[[4406,1687]],"__id":10128,"parentNodes":[37]},{"type":"not","out_nodes":[[4409,-1]],"__id":10129,"parentNodes":[4410,4411],"constraint":{"type":"join-reference","out_nodes":[],"__id":10130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4406,-1]],"__id":10131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4408,1688]],"__id":10135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4408,1689]],"__id":10139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10140,"parentNodes":[4413],"index":507,"rule":{"name":"Calculate330","pattern":{"type":"composite","id":1866,"leftPattern":{"type":"composite","id":1865,"leftPattern":{"type":"composite","id":1864,"leftPattern":{"type":"object","id":1860,"cls":"Fibonacci330","alias":"f1"},"rightPattern":{"type":"object","id":1861,"cls":"Fibonacci330","alias":"f2"}},"rightPattern":{"type":"object","id":1862,"cls":"Fibonacci330","alias":"f3"}},"rightPattern":{"type":"object","id":1863,"cls":"Result330","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate330"},{"type":"beta","out_nodes":[[4412,-1]],"__id":10141,"parentNodes":[4415,4416]},{"type":"type","out_nodes":[[3,1690]],"__id":10142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result330"}},{"type":"rightadapter","out_nodes":[[4413,1690]],"__id":10145,"parentNodes":[4]},{"type":"join","out_nodes":[[4417,-1]],"__id":10146,"parentNodes":[4419,4420],"constraint":{"type":"join-reference","out_nodes":[],"__id":10147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4413,-1]],"__id":10148,"parentNodes":[]},{"type":"type","out_nodes":[[9,1691],[14,1692],[20,1693],[30,1695],[20,1697],[30,1698]],"__id":10149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci330"}},{"type":"rightadapter","out_nodes":[[4416,1691]],"__id":10152,"parentNodes":[10]},{"type":"join","out_nodes":[[4421,-1]],"__id":10153,"parentNodes":[4422,4423],"constraint":{"type":"join-reference","out_nodes":[],"__id":10154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4416,-1]],"__id":10155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4420,1692]],"__id":10160,"parentNodes":[16]},{"type":"beta","out_nodes":[[4424,-1]],"__id":10161,"parentNodes":[4425,4426]},{"type":"leftadapter","out_nodes":[[4420,-1]],"__id":10162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4423,1693]],"__id":10167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4423,1694]],"__id":10171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10172,"parentNodes":[4428],"index":508,"rule":{"name":"Bootstrap330","pattern":{"type":"object","id":1867,"cls":"Fibonacci330","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap330"},{"type":"beta","out_nodes":[[4427,-1]],"__id":10173,"parentNodes":[4429,4430]},{"type":"rightadapter","out_nodes":[[4428,1695]],"__id":10178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4428,1696]],"__id":10182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10183,"parentNodes":[4432],"index":509,"rule":{"name":"Recurse330","pattern":{"type":"composite","id":1870,"leftPattern":{"type":"not","id":1868,"cls":"Fibonacci330","alias":"f"},"rightPattern":{"type":"object","id":1869,"cls":"Fibonacci330","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');let Fibonacci330 = defined.get('Fibonacci330');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci330(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse330"},{"type":"beta","out_nodes":[[4431,-1]],"__id":10184,"parentNodes":[4433,4434]},{"type":"rightadapter","out_nodes":[[4432,1697]],"__id":10188,"parentNodes":[37]},{"type":"not","out_nodes":[[4435,-1]],"__id":10189,"parentNodes":[4436,4437],"constraint":{"type":"join-reference","out_nodes":[],"__id":10190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4432,-1]],"__id":10191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4434,1698]],"__id":10195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4434,1699]],"__id":10199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10200,"parentNodes":[4439],"index":510,"rule":{"name":"Calculate329","pattern":{"type":"composite","id":1877,"leftPattern":{"type":"composite","id":1876,"leftPattern":{"type":"composite","id":1875,"leftPattern":{"type":"object","id":1871,"cls":"Fibonacci329","alias":"f1"},"rightPattern":{"type":"object","id":1872,"cls":"Fibonacci329","alias":"f2"}},"rightPattern":{"type":"object","id":1873,"cls":"Fibonacci329","alias":"f3"}},"rightPattern":{"type":"object","id":1874,"cls":"Result329","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate329"},{"type":"beta","out_nodes":[[4438,-1]],"__id":10201,"parentNodes":[4441,4442]},{"type":"type","out_nodes":[[3,1700]],"__id":10202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result329"}},{"type":"rightadapter","out_nodes":[[4439,1700]],"__id":10205,"parentNodes":[4]},{"type":"join","out_nodes":[[4443,-1]],"__id":10206,"parentNodes":[4445,4446],"constraint":{"type":"join-reference","out_nodes":[],"__id":10207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4439,-1]],"__id":10208,"parentNodes":[]},{"type":"type","out_nodes":[[9,1701],[14,1702],[20,1703],[30,1705],[20,1707],[30,1708]],"__id":10209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci329"}},{"type":"rightadapter","out_nodes":[[4442,1701]],"__id":10212,"parentNodes":[10]},{"type":"join","out_nodes":[[4447,-1]],"__id":10213,"parentNodes":[4448,4449],"constraint":{"type":"join-reference","out_nodes":[],"__id":10214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4442,-1]],"__id":10215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4446,1702]],"__id":10220,"parentNodes":[16]},{"type":"beta","out_nodes":[[4450,-1]],"__id":10221,"parentNodes":[4451,4452]},{"type":"leftadapter","out_nodes":[[4446,-1]],"__id":10222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4449,1703]],"__id":10227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4449,1704]],"__id":10231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10232,"parentNodes":[4454],"index":511,"rule":{"name":"Bootstrap329","pattern":{"type":"object","id":1878,"cls":"Fibonacci329","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap329"},{"type":"beta","out_nodes":[[4453,-1]],"__id":10233,"parentNodes":[4455,4456]},{"type":"rightadapter","out_nodes":[[4454,1705]],"__id":10238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4454,1706]],"__id":10242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10243,"parentNodes":[4458],"index":512,"rule":{"name":"Recurse329","pattern":{"type":"composite","id":1881,"leftPattern":{"type":"not","id":1879,"cls":"Fibonacci329","alias":"f"},"rightPattern":{"type":"object","id":1880,"cls":"Fibonacci329","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci329 = defined.get('Fibonacci329');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci329(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse329"},{"type":"beta","out_nodes":[[4457,-1]],"__id":10244,"parentNodes":[4459,4460]},{"type":"rightadapter","out_nodes":[[4458,1707]],"__id":10248,"parentNodes":[37]},{"type":"not","out_nodes":[[4461,-1]],"__id":10249,"parentNodes":[4462,4463],"constraint":{"type":"join-reference","out_nodes":[],"__id":10250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4458,-1]],"__id":10251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4460,1708]],"__id":10255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4460,1709]],"__id":10259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10260,"parentNodes":[4465],"index":513,"rule":{"name":"Calculate328","pattern":{"type":"composite","id":1888,"leftPattern":{"type":"composite","id":1887,"leftPattern":{"type":"composite","id":1886,"leftPattern":{"type":"object","id":1882,"cls":"Fibonacci328","alias":"f1"},"rightPattern":{"type":"object","id":1883,"cls":"Fibonacci328","alias":"f2"}},"rightPattern":{"type":"object","id":1884,"cls":"Fibonacci328","alias":"f3"}},"rightPattern":{"type":"object","id":1885,"cls":"Result328","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate328"},{"type":"beta","out_nodes":[[4464,-1]],"__id":10261,"parentNodes":[4467,4468]},{"type":"type","out_nodes":[[3,1710]],"__id":10262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result328"}},{"type":"rightadapter","out_nodes":[[4465,1710]],"__id":10265,"parentNodes":[4]},{"type":"join","out_nodes":[[4469,-1]],"__id":10266,"parentNodes":[4471,4472],"constraint":{"type":"join-reference","out_nodes":[],"__id":10267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4465,-1]],"__id":10268,"parentNodes":[]},{"type":"type","out_nodes":[[9,1711],[14,1712],[20,1713],[30,1715],[20,1717],[30,1718]],"__id":10269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci328"}},{"type":"rightadapter","out_nodes":[[4468,1711]],"__id":10272,"parentNodes":[10]},{"type":"join","out_nodes":[[4473,-1]],"__id":10273,"parentNodes":[4474,4475],"constraint":{"type":"join-reference","out_nodes":[],"__id":10274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4468,-1]],"__id":10275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4472,1712]],"__id":10280,"parentNodes":[16]},{"type":"beta","out_nodes":[[4476,-1]],"__id":10281,"parentNodes":[4477,4478]},{"type":"leftadapter","out_nodes":[[4472,-1]],"__id":10282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4475,1713]],"__id":10287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4475,1714]],"__id":10291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10292,"parentNodes":[4480],"index":514,"rule":{"name":"Bootstrap328","pattern":{"type":"object","id":1889,"cls":"Fibonacci328","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap328"},{"type":"beta","out_nodes":[[4479,-1]],"__id":10293,"parentNodes":[4481,4482]},{"type":"rightadapter","out_nodes":[[4480,1715]],"__id":10298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4480,1716]],"__id":10302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10303,"parentNodes":[4484],"index":515,"rule":{"name":"Recurse328","pattern":{"type":"composite","id":1892,"leftPattern":{"type":"not","id":1890,"cls":"Fibonacci328","alias":"f"},"rightPattern":{"type":"object","id":1891,"cls":"Fibonacci328","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci328 = defined.get('Fibonacci328');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci328(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse328"},{"type":"beta","out_nodes":[[4483,-1]],"__id":10304,"parentNodes":[4485,4486]},{"type":"rightadapter","out_nodes":[[4484,1717]],"__id":10308,"parentNodes":[37]},{"type":"not","out_nodes":[[4487,-1]],"__id":10309,"parentNodes":[4488,4489],"constraint":{"type":"join-reference","out_nodes":[],"__id":10310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4484,-1]],"__id":10311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4486,1718]],"__id":10315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4486,1719]],"__id":10319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10320,"parentNodes":[4491],"index":516,"rule":{"name":"Calculate327","pattern":{"type":"composite","id":1899,"leftPattern":{"type":"composite","id":1898,"leftPattern":{"type":"composite","id":1897,"leftPattern":{"type":"object","id":1893,"cls":"Fibonacci327","alias":"f1"},"rightPattern":{"type":"object","id":1894,"cls":"Fibonacci327","alias":"f2"}},"rightPattern":{"type":"object","id":1895,"cls":"Fibonacci327","alias":"f3"}},"rightPattern":{"type":"object","id":1896,"cls":"Result327","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate327"},{"type":"beta","out_nodes":[[4490,-1]],"__id":10321,"parentNodes":[4493,4494]},{"type":"type","out_nodes":[[3,1720]],"__id":10322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result327"}},{"type":"rightadapter","out_nodes":[[4491,1720]],"__id":10325,"parentNodes":[4]},{"type":"join","out_nodes":[[4495,-1]],"__id":10326,"parentNodes":[4497,4498],"constraint":{"type":"join-reference","out_nodes":[],"__id":10327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4491,-1]],"__id":10328,"parentNodes":[]},{"type":"type","out_nodes":[[9,1721],[14,1722],[20,1723],[30,1725],[20,1727],[30,1728]],"__id":10329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci327"}},{"type":"rightadapter","out_nodes":[[4494,1721]],"__id":10332,"parentNodes":[10]},{"type":"join","out_nodes":[[4499,-1]],"__id":10333,"parentNodes":[4500,4501],"constraint":{"type":"join-reference","out_nodes":[],"__id":10334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4494,-1]],"__id":10335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4498,1722]],"__id":10340,"parentNodes":[16]},{"type":"beta","out_nodes":[[4502,-1]],"__id":10341,"parentNodes":[4503,4504]},{"type":"leftadapter","out_nodes":[[4498,-1]],"__id":10342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4501,1723]],"__id":10347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4501,1724]],"__id":10351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10352,"parentNodes":[4506],"index":517,"rule":{"name":"Bootstrap327","pattern":{"type":"object","id":1900,"cls":"Fibonacci327","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap327"},{"type":"beta","out_nodes":[[4505,-1]],"__id":10353,"parentNodes":[4507,4508]},{"type":"rightadapter","out_nodes":[[4506,1725]],"__id":10358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4506,1726]],"__id":10362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10363,"parentNodes":[4510],"index":518,"rule":{"name":"Recurse327","pattern":{"type":"composite","id":1903,"leftPattern":{"type":"not","id":1901,"cls":"Fibonacci327","alias":"f"},"rightPattern":{"type":"object","id":1902,"cls":"Fibonacci327","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci327 = defined.get('Fibonacci327');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci327(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse327"},{"type":"beta","out_nodes":[[4509,-1]],"__id":10364,"parentNodes":[4511,4512]},{"type":"rightadapter","out_nodes":[[4510,1727]],"__id":10368,"parentNodes":[37]},{"type":"not","out_nodes":[[4513,-1]],"__id":10369,"parentNodes":[4514,4515],"constraint":{"type":"join-reference","out_nodes":[],"__id":10370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4510,-1]],"__id":10371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4512,1728]],"__id":10375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4512,1729]],"__id":10379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10380,"parentNodes":[4517],"index":519,"rule":{"name":"Calculate326","pattern":{"type":"composite","id":1910,"leftPattern":{"type":"composite","id":1909,"leftPattern":{"type":"composite","id":1908,"leftPattern":{"type":"object","id":1904,"cls":"Fibonacci326","alias":"f1"},"rightPattern":{"type":"object","id":1905,"cls":"Fibonacci326","alias":"f2"}},"rightPattern":{"type":"object","id":1906,"cls":"Fibonacci326","alias":"f3"}},"rightPattern":{"type":"object","id":1907,"cls":"Result326","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate326"},{"type":"beta","out_nodes":[[4516,-1]],"__id":10381,"parentNodes":[4519,4520]},{"type":"type","out_nodes":[[3,1730]],"__id":10382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result326"}},{"type":"rightadapter","out_nodes":[[4517,1730]],"__id":10385,"parentNodes":[4]},{"type":"join","out_nodes":[[4521,-1]],"__id":10386,"parentNodes":[4523,4524],"constraint":{"type":"join-reference","out_nodes":[],"__id":10387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4517,-1]],"__id":10388,"parentNodes":[]},{"type":"type","out_nodes":[[9,1731],[14,1732],[20,1733],[30,1735],[20,1737],[30,1738]],"__id":10389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci326"}},{"type":"rightadapter","out_nodes":[[4520,1731]],"__id":10392,"parentNodes":[10]},{"type":"join","out_nodes":[[4525,-1]],"__id":10393,"parentNodes":[4526,4527],"constraint":{"type":"join-reference","out_nodes":[],"__id":10394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4520,-1]],"__id":10395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4524,1732]],"__id":10400,"parentNodes":[16]},{"type":"beta","out_nodes":[[4528,-1]],"__id":10401,"parentNodes":[4529,4530]},{"type":"leftadapter","out_nodes":[[4524,-1]],"__id":10402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4527,1733]],"__id":10407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4527,1734]],"__id":10411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10412,"parentNodes":[4532],"index":520,"rule":{"name":"Bootstrap326","pattern":{"type":"object","id":1911,"cls":"Fibonacci326","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap326"},{"type":"beta","out_nodes":[[4531,-1]],"__id":10413,"parentNodes":[4533,4534]},{"type":"rightadapter","out_nodes":[[4532,1735]],"__id":10418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4532,1736]],"__id":10422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10423,"parentNodes":[4536],"index":521,"rule":{"name":"Recurse326","pattern":{"type":"composite","id":1914,"leftPattern":{"type":"not","id":1912,"cls":"Fibonacci326","alias":"f"},"rightPattern":{"type":"object","id":1913,"cls":"Fibonacci326","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci326 = defined.get('Fibonacci326');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci326(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse326"},{"type":"beta","out_nodes":[[4535,-1]],"__id":10424,"parentNodes":[4537,4538]},{"type":"rightadapter","out_nodes":[[4536,1737]],"__id":10428,"parentNodes":[37]},{"type":"not","out_nodes":[[4539,-1]],"__id":10429,"parentNodes":[4540,4541],"constraint":{"type":"join-reference","out_nodes":[],"__id":10430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4536,-1]],"__id":10431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4538,1738]],"__id":10435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4538,1739]],"__id":10439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10440,"parentNodes":[4543],"index":522,"rule":{"name":"Calculate325","pattern":{"type":"composite","id":1921,"leftPattern":{"type":"composite","id":1920,"leftPattern":{"type":"composite","id":1919,"leftPattern":{"type":"object","id":1915,"cls":"Fibonacci325","alias":"f1"},"rightPattern":{"type":"object","id":1916,"cls":"Fibonacci325","alias":"f2"}},"rightPattern":{"type":"object","id":1917,"cls":"Fibonacci325","alias":"f3"}},"rightPattern":{"type":"object","id":1918,"cls":"Result325","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate325"},{"type":"beta","out_nodes":[[4542,-1]],"__id":10441,"parentNodes":[4545,4546]},{"type":"type","out_nodes":[[3,1740]],"__id":10442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result325"}},{"type":"rightadapter","out_nodes":[[4543,1740]],"__id":10445,"parentNodes":[4]},{"type":"join","out_nodes":[[4547,-1]],"__id":10446,"parentNodes":[4549,4550],"constraint":{"type":"join-reference","out_nodes":[],"__id":10447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4543,-1]],"__id":10448,"parentNodes":[]},{"type":"type","out_nodes":[[9,1741],[14,1742],[20,1743],[30,1745],[20,1747],[30,1748]],"__id":10449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci325"}},{"type":"rightadapter","out_nodes":[[4546,1741]],"__id":10452,"parentNodes":[10]},{"type":"join","out_nodes":[[4551,-1]],"__id":10453,"parentNodes":[4552,4553],"constraint":{"type":"join-reference","out_nodes":[],"__id":10454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4546,-1]],"__id":10455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4550,1742]],"__id":10460,"parentNodes":[16]},{"type":"beta","out_nodes":[[4554,-1]],"__id":10461,"parentNodes":[4555,4556]},{"type":"leftadapter","out_nodes":[[4550,-1]],"__id":10462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4553,1743]],"__id":10467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4553,1744]],"__id":10471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10472,"parentNodes":[4558],"index":523,"rule":{"name":"Bootstrap325","pattern":{"type":"object","id":1922,"cls":"Fibonacci325","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap325"},{"type":"beta","out_nodes":[[4557,-1]],"__id":10473,"parentNodes":[4559,4560]},{"type":"rightadapter","out_nodes":[[4558,1745]],"__id":10478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4558,1746]],"__id":10482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10483,"parentNodes":[4562],"index":524,"rule":{"name":"Recurse325","pattern":{"type":"composite","id":1925,"leftPattern":{"type":"not","id":1923,"cls":"Fibonacci325","alias":"f"},"rightPattern":{"type":"object","id":1924,"cls":"Fibonacci325","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci325 = defined.get('Fibonacci325');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci325(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse325"},{"type":"beta","out_nodes":[[4561,-1]],"__id":10484,"parentNodes":[4563,4564]},{"type":"rightadapter","out_nodes":[[4562,1747]],"__id":10488,"parentNodes":[37]},{"type":"not","out_nodes":[[4565,-1]],"__id":10489,"parentNodes":[4566,4567],"constraint":{"type":"join-reference","out_nodes":[],"__id":10490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4562,-1]],"__id":10491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4564,1748]],"__id":10495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4564,1749]],"__id":10499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10500,"parentNodes":[4569],"index":525,"rule":{"name":"Calculate324","pattern":{"type":"composite","id":1932,"leftPattern":{"type":"composite","id":1931,"leftPattern":{"type":"composite","id":1930,"leftPattern":{"type":"object","id":1926,"cls":"Fibonacci324","alias":"f1"},"rightPattern":{"type":"object","id":1927,"cls":"Fibonacci324","alias":"f2"}},"rightPattern":{"type":"object","id":1928,"cls":"Fibonacci324","alias":"f3"}},"rightPattern":{"type":"object","id":1929,"cls":"Result324","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate324"},{"type":"beta","out_nodes":[[4568,-1]],"__id":10501,"parentNodes":[4571,4572]},{"type":"type","out_nodes":[[3,1750]],"__id":10502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result324"}},{"type":"rightadapter","out_nodes":[[4569,1750]],"__id":10505,"parentNodes":[4]},{"type":"join","out_nodes":[[4573,-1]],"__id":10506,"parentNodes":[4575,4576],"constraint":{"type":"join-reference","out_nodes":[],"__id":10507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4569,-1]],"__id":10508,"parentNodes":[]},{"type":"type","out_nodes":[[9,1751],[14,1752],[20,1753],[30,1755],[20,1757],[30,1758]],"__id":10509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci324"}},{"type":"rightadapter","out_nodes":[[4572,1751]],"__id":10512,"parentNodes":[10]},{"type":"join","out_nodes":[[4577,-1]],"__id":10513,"parentNodes":[4578,4579],"constraint":{"type":"join-reference","out_nodes":[],"__id":10514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4572,-1]],"__id":10515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4576,1752]],"__id":10520,"parentNodes":[16]},{"type":"beta","out_nodes":[[4580,-1]],"__id":10521,"parentNodes":[4581,4582]},{"type":"leftadapter","out_nodes":[[4576,-1]],"__id":10522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4579,1753]],"__id":10527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4579,1754]],"__id":10531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10532,"parentNodes":[4584],"index":526,"rule":{"name":"Bootstrap324","pattern":{"type":"object","id":1933,"cls":"Fibonacci324","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap324"},{"type":"beta","out_nodes":[[4583,-1]],"__id":10533,"parentNodes":[4585,4586]},{"type":"rightadapter","out_nodes":[[4584,1755]],"__id":10538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4584,1756]],"__id":10542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10543,"parentNodes":[4588],"index":527,"rule":{"name":"Recurse324","pattern":{"type":"composite","id":1936,"leftPattern":{"type":"not","id":1934,"cls":"Fibonacci324","alias":"f"},"rightPattern":{"type":"object","id":1935,"cls":"Fibonacci324","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci324 = defined.get('Fibonacci324');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci324(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse324"},{"type":"beta","out_nodes":[[4587,-1]],"__id":10544,"parentNodes":[4589,4590]},{"type":"rightadapter","out_nodes":[[4588,1757]],"__id":10548,"parentNodes":[37]},{"type":"not","out_nodes":[[4591,-1]],"__id":10549,"parentNodes":[4592,4593],"constraint":{"type":"join-reference","out_nodes":[],"__id":10550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4588,-1]],"__id":10551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4590,1758]],"__id":10555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4590,1759]],"__id":10559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10560,"parentNodes":[4595],"index":528,"rule":{"name":"Calculate323","pattern":{"type":"composite","id":1943,"leftPattern":{"type":"composite","id":1942,"leftPattern":{"type":"composite","id":1941,"leftPattern":{"type":"object","id":1937,"cls":"Fibonacci323","alias":"f1"},"rightPattern":{"type":"object","id":1938,"cls":"Fibonacci323","alias":"f2"}},"rightPattern":{"type":"object","id":1939,"cls":"Fibonacci323","alias":"f3"}},"rightPattern":{"type":"object","id":1940,"cls":"Result323","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate323"},{"type":"beta","out_nodes":[[4594,-1]],"__id":10561,"parentNodes":[4597,4598]},{"type":"type","out_nodes":[[3,1760]],"__id":10562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result323"}},{"type":"rightadapter","out_nodes":[[4595,1760]],"__id":10565,"parentNodes":[4]},{"type":"join","out_nodes":[[4599,-1]],"__id":10566,"parentNodes":[4601,4602],"constraint":{"type":"join-reference","out_nodes":[],"__id":10567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4595,-1]],"__id":10568,"parentNodes":[]},{"type":"type","out_nodes":[[9,1761],[14,1762],[20,1763],[30,1765],[20,1767],[30,1768]],"__id":10569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci323"}},{"type":"rightadapter","out_nodes":[[4598,1761]],"__id":10572,"parentNodes":[10]},{"type":"join","out_nodes":[[4603,-1]],"__id":10573,"parentNodes":[4604,4605],"constraint":{"type":"join-reference","out_nodes":[],"__id":10574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4598,-1]],"__id":10575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4602,1762]],"__id":10580,"parentNodes":[16]},{"type":"beta","out_nodes":[[4606,-1]],"__id":10581,"parentNodes":[4607,4608]},{"type":"leftadapter","out_nodes":[[4602,-1]],"__id":10582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4605,1763]],"__id":10587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4605,1764]],"__id":10591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10592,"parentNodes":[4610],"index":529,"rule":{"name":"Bootstrap323","pattern":{"type":"object","id":1944,"cls":"Fibonacci323","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap323"},{"type":"beta","out_nodes":[[4609,-1]],"__id":10593,"parentNodes":[4611,4612]},{"type":"rightadapter","out_nodes":[[4610,1765]],"__id":10598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4610,1766]],"__id":10602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10603,"parentNodes":[4614],"index":530,"rule":{"name":"Recurse323","pattern":{"type":"composite","id":1947,"leftPattern":{"type":"not","id":1945,"cls":"Fibonacci323","alias":"f"},"rightPattern":{"type":"object","id":1946,"cls":"Fibonacci323","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci323 = defined.get('Fibonacci323');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci323(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse323"},{"type":"beta","out_nodes":[[4613,-1]],"__id":10604,"parentNodes":[4615,4616]},{"type":"rightadapter","out_nodes":[[4614,1767]],"__id":10608,"parentNodes":[37]},{"type":"not","out_nodes":[[4617,-1]],"__id":10609,"parentNodes":[4618,4619],"constraint":{"type":"join-reference","out_nodes":[],"__id":10610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4614,-1]],"__id":10611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4616,1768]],"__id":10615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4616,1769]],"__id":10619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10620,"parentNodes":[4621],"index":531,"rule":{"name":"Calculate322","pattern":{"type":"composite","id":1954,"leftPattern":{"type":"composite","id":1953,"leftPattern":{"type":"composite","id":1952,"leftPattern":{"type":"object","id":1948,"cls":"Fibonacci322","alias":"f1"},"rightPattern":{"type":"object","id":1949,"cls":"Fibonacci322","alias":"f2"}},"rightPattern":{"type":"object","id":1950,"cls":"Fibonacci322","alias":"f3"}},"rightPattern":{"type":"object","id":1951,"cls":"Result322","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate322"},{"type":"beta","out_nodes":[[4620,-1]],"__id":10621,"parentNodes":[4623,4624]},{"type":"type","out_nodes":[[3,1770]],"__id":10622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result322"}},{"type":"rightadapter","out_nodes":[[4621,1770]],"__id":10625,"parentNodes":[4]},{"type":"join","out_nodes":[[4625,-1]],"__id":10626,"parentNodes":[4627,4628],"constraint":{"type":"join-reference","out_nodes":[],"__id":10627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4621,-1]],"__id":10628,"parentNodes":[]},{"type":"type","out_nodes":[[9,1771],[14,1772],[20,1773],[30,1775],[20,1777],[30,1778]],"__id":10629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci322"}},{"type":"rightadapter","out_nodes":[[4624,1771]],"__id":10632,"parentNodes":[10]},{"type":"join","out_nodes":[[4629,-1]],"__id":10633,"parentNodes":[4630,4631],"constraint":{"type":"join-reference","out_nodes":[],"__id":10634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4624,-1]],"__id":10635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4628,1772]],"__id":10640,"parentNodes":[16]},{"type":"beta","out_nodes":[[4632,-1]],"__id":10641,"parentNodes":[4633,4634]},{"type":"leftadapter","out_nodes":[[4628,-1]],"__id":10642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4631,1773]],"__id":10647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4631,1774]],"__id":10651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10652,"parentNodes":[4636],"index":532,"rule":{"name":"Bootstrap322","pattern":{"type":"object","id":1955,"cls":"Fibonacci322","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap322"},{"type":"beta","out_nodes":[[4635,-1]],"__id":10653,"parentNodes":[4637,4638]},{"type":"rightadapter","out_nodes":[[4636,1775]],"__id":10658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4636,1776]],"__id":10662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10663,"parentNodes":[4640],"index":533,"rule":{"name":"Recurse322","pattern":{"type":"composite","id":1958,"leftPattern":{"type":"not","id":1956,"cls":"Fibonacci322","alias":"f"},"rightPattern":{"type":"object","id":1957,"cls":"Fibonacci322","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci322 = defined.get('Fibonacci322');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci322(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse322"},{"type":"beta","out_nodes":[[4639,-1]],"__id":10664,"parentNodes":[4641,4642]},{"type":"rightadapter","out_nodes":[[4640,1777]],"__id":10668,"parentNodes":[37]},{"type":"not","out_nodes":[[4643,-1]],"__id":10669,"parentNodes":[4644,4645],"constraint":{"type":"join-reference","out_nodes":[],"__id":10670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4640,-1]],"__id":10671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4642,1778]],"__id":10675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4642,1779]],"__id":10679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10680,"parentNodes":[4647],"index":534,"rule":{"name":"Calculate321","pattern":{"type":"composite","id":1965,"leftPattern":{"type":"composite","id":1964,"leftPattern":{"type":"composite","id":1963,"leftPattern":{"type":"object","id":1959,"cls":"Fibonacci321","alias":"f1"},"rightPattern":{"type":"object","id":1960,"cls":"Fibonacci321","alias":"f2"}},"rightPattern":{"type":"object","id":1961,"cls":"Fibonacci321","alias":"f3"}},"rightPattern":{"type":"object","id":1962,"cls":"Result321","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate321"},{"type":"beta","out_nodes":[[4646,-1]],"__id":10681,"parentNodes":[4649,4650]},{"type":"type","out_nodes":[[3,1780]],"__id":10682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result321"}},{"type":"rightadapter","out_nodes":[[4647,1780]],"__id":10685,"parentNodes":[4]},{"type":"join","out_nodes":[[4651,-1]],"__id":10686,"parentNodes":[4653,4654],"constraint":{"type":"join-reference","out_nodes":[],"__id":10687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4647,-1]],"__id":10688,"parentNodes":[]},{"type":"type","out_nodes":[[9,1781],[14,1782],[20,1783],[30,1785],[20,1787],[30,1788]],"__id":10689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci321"}},{"type":"rightadapter","out_nodes":[[4650,1781]],"__id":10692,"parentNodes":[10]},{"type":"join","out_nodes":[[4655,-1]],"__id":10693,"parentNodes":[4656,4657],"constraint":{"type":"join-reference","out_nodes":[],"__id":10694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4650,-1]],"__id":10695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4654,1782]],"__id":10700,"parentNodes":[16]},{"type":"beta","out_nodes":[[4658,-1]],"__id":10701,"parentNodes":[4659,4660]},{"type":"leftadapter","out_nodes":[[4654,-1]],"__id":10702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4657,1783]],"__id":10707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4657,1784]],"__id":10711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10712,"parentNodes":[4662],"index":535,"rule":{"name":"Bootstrap321","pattern":{"type":"object","id":1966,"cls":"Fibonacci321","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap321"},{"type":"beta","out_nodes":[[4661,-1]],"__id":10713,"parentNodes":[4663,4664]},{"type":"rightadapter","out_nodes":[[4662,1785]],"__id":10718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4662,1786]],"__id":10722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10723,"parentNodes":[4666],"index":536,"rule":{"name":"Recurse321","pattern":{"type":"composite","id":1969,"leftPattern":{"type":"not","id":1967,"cls":"Fibonacci321","alias":"f"},"rightPattern":{"type":"object","id":1968,"cls":"Fibonacci321","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci321 = defined.get('Fibonacci321');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci321(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse321"},{"type":"beta","out_nodes":[[4665,-1]],"__id":10724,"parentNodes":[4667,4668]},{"type":"rightadapter","out_nodes":[[4666,1787]],"__id":10728,"parentNodes":[37]},{"type":"not","out_nodes":[[4669,-1]],"__id":10729,"parentNodes":[4670,4671],"constraint":{"type":"join-reference","out_nodes":[],"__id":10730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4666,-1]],"__id":10731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4668,1788]],"__id":10735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4668,1789]],"__id":10739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10740,"parentNodes":[4673],"index":537,"rule":{"name":"Calculate320","pattern":{"type":"composite","id":1976,"leftPattern":{"type":"composite","id":1975,"leftPattern":{"type":"composite","id":1974,"leftPattern":{"type":"object","id":1970,"cls":"Fibonacci320","alias":"f1"},"rightPattern":{"type":"object","id":1971,"cls":"Fibonacci320","alias":"f2"}},"rightPattern":{"type":"object","id":1972,"cls":"Fibonacci320","alias":"f3"}},"rightPattern":{"type":"object","id":1973,"cls":"Result320","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate320"},{"type":"beta","out_nodes":[[4672,-1]],"__id":10741,"parentNodes":[4675,4676]},{"type":"type","out_nodes":[[3,1790]],"__id":10742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result320"}},{"type":"rightadapter","out_nodes":[[4673,1790]],"__id":10745,"parentNodes":[4]},{"type":"join","out_nodes":[[4677,-1]],"__id":10746,"parentNodes":[4679,4680],"constraint":{"type":"join-reference","out_nodes":[],"__id":10747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4673,-1]],"__id":10748,"parentNodes":[]},{"type":"type","out_nodes":[[9,1791],[14,1792],[20,1793],[30,1795],[20,1797],[30,1798]],"__id":10749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci320"}},{"type":"rightadapter","out_nodes":[[4676,1791]],"__id":10752,"parentNodes":[10]},{"type":"join","out_nodes":[[4681,-1]],"__id":10753,"parentNodes":[4682,4683],"constraint":{"type":"join-reference","out_nodes":[],"__id":10754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4676,-1]],"__id":10755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4680,1792]],"__id":10760,"parentNodes":[16]},{"type":"beta","out_nodes":[[4684,-1]],"__id":10761,"parentNodes":[4685,4686]},{"type":"leftadapter","out_nodes":[[4680,-1]],"__id":10762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4683,1793]],"__id":10767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4683,1794]],"__id":10771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10772,"parentNodes":[4688],"index":538,"rule":{"name":"Bootstrap320","pattern":{"type":"object","id":1977,"cls":"Fibonacci320","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap320"},{"type":"beta","out_nodes":[[4687,-1]],"__id":10773,"parentNodes":[4689,4690]},{"type":"rightadapter","out_nodes":[[4688,1795]],"__id":10778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4688,1796]],"__id":10782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10783,"parentNodes":[4692],"index":539,"rule":{"name":"Recurse320","pattern":{"type":"composite","id":1980,"leftPattern":{"type":"not","id":1978,"cls":"Fibonacci320","alias":"f"},"rightPattern":{"type":"object","id":1979,"cls":"Fibonacci320","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');let Fibonacci320 = defined.get('Fibonacci320');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci320(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse320"},{"type":"beta","out_nodes":[[4691,-1]],"__id":10784,"parentNodes":[4693,4694]},{"type":"rightadapter","out_nodes":[[4692,1797]],"__id":10788,"parentNodes":[37]},{"type":"not","out_nodes":[[4695,-1]],"__id":10789,"parentNodes":[4696,4697],"constraint":{"type":"join-reference","out_nodes":[],"__id":10790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4692,-1]],"__id":10791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4694,1798]],"__id":10795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4694,1799]],"__id":10799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10800,"parentNodes":[4699],"index":540,"rule":{"name":"Calculate319","pattern":{"type":"composite","id":1987,"leftPattern":{"type":"composite","id":1986,"leftPattern":{"type":"composite","id":1985,"leftPattern":{"type":"object","id":1981,"cls":"Fibonacci319","alias":"f1"},"rightPattern":{"type":"object","id":1982,"cls":"Fibonacci319","alias":"f2"}},"rightPattern":{"type":"object","id":1983,"cls":"Fibonacci319","alias":"f3"}},"rightPattern":{"type":"object","id":1984,"cls":"Result319","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate319"},{"type":"beta","out_nodes":[[4698,-1]],"__id":10801,"parentNodes":[4701,4702]},{"type":"type","out_nodes":[[3,1800]],"__id":10802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result319"}},{"type":"rightadapter","out_nodes":[[4699,1800]],"__id":10805,"parentNodes":[4]},{"type":"join","out_nodes":[[4703,-1]],"__id":10806,"parentNodes":[4705,4706],"constraint":{"type":"join-reference","out_nodes":[],"__id":10807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4699,-1]],"__id":10808,"parentNodes":[]},{"type":"type","out_nodes":[[9,1801],[14,1802],[20,1803],[30,1805],[20,1807],[30,1808]],"__id":10809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci319"}},{"type":"rightadapter","out_nodes":[[4702,1801]],"__id":10812,"parentNodes":[10]},{"type":"join","out_nodes":[[4707,-1]],"__id":10813,"parentNodes":[4708,4709],"constraint":{"type":"join-reference","out_nodes":[],"__id":10814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4702,-1]],"__id":10815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4706,1802]],"__id":10820,"parentNodes":[16]},{"type":"beta","out_nodes":[[4710,-1]],"__id":10821,"parentNodes":[4711,4712]},{"type":"leftadapter","out_nodes":[[4706,-1]],"__id":10822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4709,1803]],"__id":10827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4709,1804]],"__id":10831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10832,"parentNodes":[4714],"index":541,"rule":{"name":"Bootstrap319","pattern":{"type":"object","id":1988,"cls":"Fibonacci319","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap319"},{"type":"beta","out_nodes":[[4713,-1]],"__id":10833,"parentNodes":[4715,4716]},{"type":"rightadapter","out_nodes":[[4714,1805]],"__id":10838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4714,1806]],"__id":10842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10843,"parentNodes":[4718],"index":542,"rule":{"name":"Recurse319","pattern":{"type":"composite","id":1991,"leftPattern":{"type":"not","id":1989,"cls":"Fibonacci319","alias":"f"},"rightPattern":{"type":"object","id":1990,"cls":"Fibonacci319","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci319 = defined.get('Fibonacci319');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci319(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse319"},{"type":"beta","out_nodes":[[4717,-1]],"__id":10844,"parentNodes":[4719,4720]},{"type":"rightadapter","out_nodes":[[4718,1807]],"__id":10848,"parentNodes":[37]},{"type":"not","out_nodes":[[4721,-1]],"__id":10849,"parentNodes":[4722,4723],"constraint":{"type":"join-reference","out_nodes":[],"__id":10850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4718,-1]],"__id":10851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4720,1808]],"__id":10855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4720,1809]],"__id":10859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10860,"parentNodes":[4725],"index":543,"rule":{"name":"Calculate318","pattern":{"type":"composite","id":1998,"leftPattern":{"type":"composite","id":1997,"leftPattern":{"type":"composite","id":1996,"leftPattern":{"type":"object","id":1992,"cls":"Fibonacci318","alias":"f1"},"rightPattern":{"type":"object","id":1993,"cls":"Fibonacci318","alias":"f2"}},"rightPattern":{"type":"object","id":1994,"cls":"Fibonacci318","alias":"f3"}},"rightPattern":{"type":"object","id":1995,"cls":"Result318","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate318"},{"type":"beta","out_nodes":[[4724,-1]],"__id":10861,"parentNodes":[4727,4728]},{"type":"type","out_nodes":[[3,1810]],"__id":10862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result318"}},{"type":"rightadapter","out_nodes":[[4725,1810]],"__id":10865,"parentNodes":[4]},{"type":"join","out_nodes":[[4729,-1]],"__id":10866,"parentNodes":[4731,4732],"constraint":{"type":"join-reference","out_nodes":[],"__id":10867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4725,-1]],"__id":10868,"parentNodes":[]},{"type":"type","out_nodes":[[9,1811],[14,1812],[20,1813],[30,1815],[20,1817],[30,1818]],"__id":10869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci318"}},{"type":"rightadapter","out_nodes":[[4728,1811]],"__id":10872,"parentNodes":[10]},{"type":"join","out_nodes":[[4733,-1]],"__id":10873,"parentNodes":[4734,4735],"constraint":{"type":"join-reference","out_nodes":[],"__id":10874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4728,-1]],"__id":10875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4732,1812]],"__id":10880,"parentNodes":[16]},{"type":"beta","out_nodes":[[4736,-1]],"__id":10881,"parentNodes":[4737,4738]},{"type":"leftadapter","out_nodes":[[4732,-1]],"__id":10882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4735,1813]],"__id":10887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4735,1814]],"__id":10891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10892,"parentNodes":[4740],"index":544,"rule":{"name":"Bootstrap318","pattern":{"type":"object","id":1999,"cls":"Fibonacci318","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap318"},{"type":"beta","out_nodes":[[4739,-1]],"__id":10893,"parentNodes":[4741,4742]},{"type":"rightadapter","out_nodes":[[4740,1815]],"__id":10898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4740,1816]],"__id":10902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10903,"parentNodes":[4744],"index":545,"rule":{"name":"Recurse318","pattern":{"type":"composite","id":2002,"leftPattern":{"type":"not","id":2000,"cls":"Fibonacci318","alias":"f"},"rightPattern":{"type":"object","id":2001,"cls":"Fibonacci318","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci318 = defined.get('Fibonacci318');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci318(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse318"},{"type":"beta","out_nodes":[[4743,-1]],"__id":10904,"parentNodes":[4745,4746]},{"type":"rightadapter","out_nodes":[[4744,1817]],"__id":10908,"parentNodes":[37]},{"type":"not","out_nodes":[[4747,-1]],"__id":10909,"parentNodes":[4748,4749],"constraint":{"type":"join-reference","out_nodes":[],"__id":10910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4744,-1]],"__id":10911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4746,1818]],"__id":10915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4746,1819]],"__id":10919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10920,"parentNodes":[4751],"index":546,"rule":{"name":"Calculate317","pattern":{"type":"composite","id":2009,"leftPattern":{"type":"composite","id":2008,"leftPattern":{"type":"composite","id":2007,"leftPattern":{"type":"object","id":2003,"cls":"Fibonacci317","alias":"f1"},"rightPattern":{"type":"object","id":2004,"cls":"Fibonacci317","alias":"f2"}},"rightPattern":{"type":"object","id":2005,"cls":"Fibonacci317","alias":"f3"}},"rightPattern":{"type":"object","id":2006,"cls":"Result317","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate317"},{"type":"beta","out_nodes":[[4750,-1]],"__id":10921,"parentNodes":[4753,4754]},{"type":"type","out_nodes":[[3,1820]],"__id":10922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result317"}},{"type":"rightadapter","out_nodes":[[4751,1820]],"__id":10925,"parentNodes":[4]},{"type":"join","out_nodes":[[4755,-1]],"__id":10926,"parentNodes":[4757,4758],"constraint":{"type":"join-reference","out_nodes":[],"__id":10927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4751,-1]],"__id":10928,"parentNodes":[]},{"type":"type","out_nodes":[[9,1821],[14,1822],[20,1823],[30,1825],[20,1827],[30,1828]],"__id":10929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci317"}},{"type":"rightadapter","out_nodes":[[4754,1821]],"__id":10932,"parentNodes":[10]},{"type":"join","out_nodes":[[4759,-1]],"__id":10933,"parentNodes":[4760,4761],"constraint":{"type":"join-reference","out_nodes":[],"__id":10934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4754,-1]],"__id":10935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4758,1822]],"__id":10940,"parentNodes":[16]},{"type":"beta","out_nodes":[[4762,-1]],"__id":10941,"parentNodes":[4763,4764]},{"type":"leftadapter","out_nodes":[[4758,-1]],"__id":10942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4761,1823]],"__id":10947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4761,1824]],"__id":10951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10952,"parentNodes":[4766],"index":547,"rule":{"name":"Bootstrap317","pattern":{"type":"object","id":2010,"cls":"Fibonacci317","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap317"},{"type":"beta","out_nodes":[[4765,-1]],"__id":10953,"parentNodes":[4767,4768]},{"type":"rightadapter","out_nodes":[[4766,1825]],"__id":10958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4766,1826]],"__id":10962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10963,"parentNodes":[4770],"index":548,"rule":{"name":"Recurse317","pattern":{"type":"composite","id":2013,"leftPattern":{"type":"not","id":2011,"cls":"Fibonacci317","alias":"f"},"rightPattern":{"type":"object","id":2012,"cls":"Fibonacci317","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci317 = defined.get('Fibonacci317');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci317(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse317"},{"type":"beta","out_nodes":[[4769,-1]],"__id":10964,"parentNodes":[4771,4772]},{"type":"rightadapter","out_nodes":[[4770,1827]],"__id":10968,"parentNodes":[37]},{"type":"not","out_nodes":[[4773,-1]],"__id":10969,"parentNodes":[4774,4775],"constraint":{"type":"join-reference","out_nodes":[],"__id":10970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4770,-1]],"__id":10971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4772,1828]],"__id":10975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4772,1829]],"__id":10979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":10980,"parentNodes":[4777],"index":549,"rule":{"name":"Calculate316","pattern":{"type":"composite","id":2020,"leftPattern":{"type":"composite","id":2019,"leftPattern":{"type":"composite","id":2018,"leftPattern":{"type":"object","id":2014,"cls":"Fibonacci316","alias":"f1"},"rightPattern":{"type":"object","id":2015,"cls":"Fibonacci316","alias":"f2"}},"rightPattern":{"type":"object","id":2016,"cls":"Fibonacci316","alias":"f3"}},"rightPattern":{"type":"object","id":2017,"cls":"Result316","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate316"},{"type":"beta","out_nodes":[[4776,-1]],"__id":10981,"parentNodes":[4779,4780]},{"type":"type","out_nodes":[[3,1830]],"__id":10982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result316"}},{"type":"rightadapter","out_nodes":[[4777,1830]],"__id":10985,"parentNodes":[4]},{"type":"join","out_nodes":[[4781,-1]],"__id":10986,"parentNodes":[4783,4784],"constraint":{"type":"join-reference","out_nodes":[],"__id":10987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4777,-1]],"__id":10988,"parentNodes":[]},{"type":"type","out_nodes":[[9,1831],[14,1832],[20,1833],[30,1835],[20,1837],[30,1838]],"__id":10989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci316"}},{"type":"rightadapter","out_nodes":[[4780,1831]],"__id":10992,"parentNodes":[10]},{"type":"join","out_nodes":[[4785,-1]],"__id":10993,"parentNodes":[4786,4787],"constraint":{"type":"join-reference","out_nodes":[],"__id":10994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4780,-1]],"__id":10995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4784,1832]],"__id":11000,"parentNodes":[16]},{"type":"beta","out_nodes":[[4788,-1]],"__id":11001,"parentNodes":[4789,4790]},{"type":"leftadapter","out_nodes":[[4784,-1]],"__id":11002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4787,1833]],"__id":11007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4787,1834]],"__id":11011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11012,"parentNodes":[4792],"index":550,"rule":{"name":"Bootstrap316","pattern":{"type":"object","id":2021,"cls":"Fibonacci316","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap316"},{"type":"beta","out_nodes":[[4791,-1]],"__id":11013,"parentNodes":[4793,4794]},{"type":"rightadapter","out_nodes":[[4792,1835]],"__id":11018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4792,1836]],"__id":11022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11023,"parentNodes":[4796],"index":551,"rule":{"name":"Recurse316","pattern":{"type":"composite","id":2024,"leftPattern":{"type":"not","id":2022,"cls":"Fibonacci316","alias":"f"},"rightPattern":{"type":"object","id":2023,"cls":"Fibonacci316","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci316 = defined.get('Fibonacci316');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci316(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse316"},{"type":"beta","out_nodes":[[4795,-1]],"__id":11024,"parentNodes":[4797,4798]},{"type":"rightadapter","out_nodes":[[4796,1837]],"__id":11028,"parentNodes":[37]},{"type":"not","out_nodes":[[4799,-1]],"__id":11029,"parentNodes":[4800,4801],"constraint":{"type":"join-reference","out_nodes":[],"__id":11030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4796,-1]],"__id":11031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4798,1838]],"__id":11035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4798,1839]],"__id":11039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11040,"parentNodes":[4803],"index":552,"rule":{"name":"Calculate315","pattern":{"type":"composite","id":2031,"leftPattern":{"type":"composite","id":2030,"leftPattern":{"type":"composite","id":2029,"leftPattern":{"type":"object","id":2025,"cls":"Fibonacci315","alias":"f1"},"rightPattern":{"type":"object","id":2026,"cls":"Fibonacci315","alias":"f2"}},"rightPattern":{"type":"object","id":2027,"cls":"Fibonacci315","alias":"f3"}},"rightPattern":{"type":"object","id":2028,"cls":"Result315","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate315"},{"type":"beta","out_nodes":[[4802,-1]],"__id":11041,"parentNodes":[4805,4806]},{"type":"type","out_nodes":[[3,1840]],"__id":11042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result315"}},{"type":"rightadapter","out_nodes":[[4803,1840]],"__id":11045,"parentNodes":[4]},{"type":"join","out_nodes":[[4807,-1]],"__id":11046,"parentNodes":[4809,4810],"constraint":{"type":"join-reference","out_nodes":[],"__id":11047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4803,-1]],"__id":11048,"parentNodes":[]},{"type":"type","out_nodes":[[9,1841],[14,1842],[20,1843],[30,1845],[20,1847],[30,1848]],"__id":11049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci315"}},{"type":"rightadapter","out_nodes":[[4806,1841]],"__id":11052,"parentNodes":[10]},{"type":"join","out_nodes":[[4811,-1]],"__id":11053,"parentNodes":[4812,4813],"constraint":{"type":"join-reference","out_nodes":[],"__id":11054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4806,-1]],"__id":11055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4810,1842]],"__id":11060,"parentNodes":[16]},{"type":"beta","out_nodes":[[4814,-1]],"__id":11061,"parentNodes":[4815,4816]},{"type":"leftadapter","out_nodes":[[4810,-1]],"__id":11062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4813,1843]],"__id":11067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4813,1844]],"__id":11071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11072,"parentNodes":[4818],"index":553,"rule":{"name":"Bootstrap315","pattern":{"type":"object","id":2032,"cls":"Fibonacci315","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap315"},{"type":"beta","out_nodes":[[4817,-1]],"__id":11073,"parentNodes":[4819,4820]},{"type":"rightadapter","out_nodes":[[4818,1845]],"__id":11078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4818,1846]],"__id":11082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11083,"parentNodes":[4822],"index":554,"rule":{"name":"Recurse315","pattern":{"type":"composite","id":2035,"leftPattern":{"type":"not","id":2033,"cls":"Fibonacci315","alias":"f"},"rightPattern":{"type":"object","id":2034,"cls":"Fibonacci315","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci315 = defined.get('Fibonacci315');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci315(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse315"},{"type":"beta","out_nodes":[[4821,-1]],"__id":11084,"parentNodes":[4823,4824]},{"type":"rightadapter","out_nodes":[[4822,1847]],"__id":11088,"parentNodes":[37]},{"type":"not","out_nodes":[[4825,-1]],"__id":11089,"parentNodes":[4826,4827],"constraint":{"type":"join-reference","out_nodes":[],"__id":11090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4822,-1]],"__id":11091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4824,1848]],"__id":11095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4824,1849]],"__id":11099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11100,"parentNodes":[4829],"index":555,"rule":{"name":"Calculate314","pattern":{"type":"composite","id":2042,"leftPattern":{"type":"composite","id":2041,"leftPattern":{"type":"composite","id":2040,"leftPattern":{"type":"object","id":2036,"cls":"Fibonacci314","alias":"f1"},"rightPattern":{"type":"object","id":2037,"cls":"Fibonacci314","alias":"f2"}},"rightPattern":{"type":"object","id":2038,"cls":"Fibonacci314","alias":"f3"}},"rightPattern":{"type":"object","id":2039,"cls":"Result314","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate314"},{"type":"beta","out_nodes":[[4828,-1]],"__id":11101,"parentNodes":[4831,4832]},{"type":"type","out_nodes":[[3,1850]],"__id":11102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result314"}},{"type":"rightadapter","out_nodes":[[4829,1850]],"__id":11105,"parentNodes":[4]},{"type":"join","out_nodes":[[4833,-1]],"__id":11106,"parentNodes":[4835,4836],"constraint":{"type":"join-reference","out_nodes":[],"__id":11107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4829,-1]],"__id":11108,"parentNodes":[]},{"type":"type","out_nodes":[[9,1851],[14,1852],[20,1853],[30,1855],[20,1857],[30,1858]],"__id":11109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci314"}},{"type":"rightadapter","out_nodes":[[4832,1851]],"__id":11112,"parentNodes":[10]},{"type":"join","out_nodes":[[4837,-1]],"__id":11113,"parentNodes":[4838,4839],"constraint":{"type":"join-reference","out_nodes":[],"__id":11114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4832,-1]],"__id":11115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4836,1852]],"__id":11120,"parentNodes":[16]},{"type":"beta","out_nodes":[[4840,-1]],"__id":11121,"parentNodes":[4841,4842]},{"type":"leftadapter","out_nodes":[[4836,-1]],"__id":11122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4839,1853]],"__id":11127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4839,1854]],"__id":11131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11132,"parentNodes":[4844],"index":556,"rule":{"name":"Bootstrap314","pattern":{"type":"object","id":2043,"cls":"Fibonacci314","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap314"},{"type":"beta","out_nodes":[[4843,-1]],"__id":11133,"parentNodes":[4845,4846]},{"type":"rightadapter","out_nodes":[[4844,1855]],"__id":11138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4844,1856]],"__id":11142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11143,"parentNodes":[4848],"index":557,"rule":{"name":"Recurse314","pattern":{"type":"composite","id":2046,"leftPattern":{"type":"not","id":2044,"cls":"Fibonacci314","alias":"f"},"rightPattern":{"type":"object","id":2045,"cls":"Fibonacci314","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci314 = defined.get('Fibonacci314');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci314(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse314"},{"type":"beta","out_nodes":[[4847,-1]],"__id":11144,"parentNodes":[4849,4850]},{"type":"rightadapter","out_nodes":[[4848,1857]],"__id":11148,"parentNodes":[37]},{"type":"not","out_nodes":[[4851,-1]],"__id":11149,"parentNodes":[4852,4853],"constraint":{"type":"join-reference","out_nodes":[],"__id":11150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4848,-1]],"__id":11151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4850,1858]],"__id":11155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4850,1859]],"__id":11159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11160,"parentNodes":[4855],"index":558,"rule":{"name":"Calculate313","pattern":{"type":"composite","id":2053,"leftPattern":{"type":"composite","id":2052,"leftPattern":{"type":"composite","id":2051,"leftPattern":{"type":"object","id":2047,"cls":"Fibonacci313","alias":"f1"},"rightPattern":{"type":"object","id":2048,"cls":"Fibonacci313","alias":"f2"}},"rightPattern":{"type":"object","id":2049,"cls":"Fibonacci313","alias":"f3"}},"rightPattern":{"type":"object","id":2050,"cls":"Result313","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate313"},{"type":"beta","out_nodes":[[4854,-1]],"__id":11161,"parentNodes":[4857,4858]},{"type":"type","out_nodes":[[3,1860]],"__id":11162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result313"}},{"type":"rightadapter","out_nodes":[[4855,1860]],"__id":11165,"parentNodes":[4]},{"type":"join","out_nodes":[[4859,-1]],"__id":11166,"parentNodes":[4861,4862],"constraint":{"type":"join-reference","out_nodes":[],"__id":11167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4855,-1]],"__id":11168,"parentNodes":[]},{"type":"type","out_nodes":[[9,1861],[14,1862],[20,1863],[30,1865],[20,1867],[30,1868]],"__id":11169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci313"}},{"type":"rightadapter","out_nodes":[[4858,1861]],"__id":11172,"parentNodes":[10]},{"type":"join","out_nodes":[[4863,-1]],"__id":11173,"parentNodes":[4864,4865],"constraint":{"type":"join-reference","out_nodes":[],"__id":11174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4858,-1]],"__id":11175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4862,1862]],"__id":11180,"parentNodes":[16]},{"type":"beta","out_nodes":[[4866,-1]],"__id":11181,"parentNodes":[4867,4868]},{"type":"leftadapter","out_nodes":[[4862,-1]],"__id":11182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4865,1863]],"__id":11187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4865,1864]],"__id":11191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11192,"parentNodes":[4870],"index":559,"rule":{"name":"Bootstrap313","pattern":{"type":"object","id":2054,"cls":"Fibonacci313","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap313"},{"type":"beta","out_nodes":[[4869,-1]],"__id":11193,"parentNodes":[4871,4872]},{"type":"rightadapter","out_nodes":[[4870,1865]],"__id":11198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4870,1866]],"__id":11202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11203,"parentNodes":[4874],"index":560,"rule":{"name":"Recurse313","pattern":{"type":"composite","id":2057,"leftPattern":{"type":"not","id":2055,"cls":"Fibonacci313","alias":"f"},"rightPattern":{"type":"object","id":2056,"cls":"Fibonacci313","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci313 = defined.get('Fibonacci313');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci313(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse313"},{"type":"beta","out_nodes":[[4873,-1]],"__id":11204,"parentNodes":[4875,4876]},{"type":"rightadapter","out_nodes":[[4874,1867]],"__id":11208,"parentNodes":[37]},{"type":"not","out_nodes":[[4877,-1]],"__id":11209,"parentNodes":[4878,4879],"constraint":{"type":"join-reference","out_nodes":[],"__id":11210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4874,-1]],"__id":11211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4876,1868]],"__id":11215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4876,1869]],"__id":11219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11220,"parentNodes":[4881],"index":561,"rule":{"name":"Calculate312","pattern":{"type":"composite","id":2064,"leftPattern":{"type":"composite","id":2063,"leftPattern":{"type":"composite","id":2062,"leftPattern":{"type":"object","id":2058,"cls":"Fibonacci312","alias":"f1"},"rightPattern":{"type":"object","id":2059,"cls":"Fibonacci312","alias":"f2"}},"rightPattern":{"type":"object","id":2060,"cls":"Fibonacci312","alias":"f3"}},"rightPattern":{"type":"object","id":2061,"cls":"Result312","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate312"},{"type":"beta","out_nodes":[[4880,-1]],"__id":11221,"parentNodes":[4883,4884]},{"type":"type","out_nodes":[[3,1870]],"__id":11222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result312"}},{"type":"rightadapter","out_nodes":[[4881,1870]],"__id":11225,"parentNodes":[4]},{"type":"join","out_nodes":[[4885,-1]],"__id":11226,"parentNodes":[4887,4888],"constraint":{"type":"join-reference","out_nodes":[],"__id":11227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4881,-1]],"__id":11228,"parentNodes":[]},{"type":"type","out_nodes":[[9,1871],[14,1872],[20,1873],[30,1875],[20,1877],[30,1878]],"__id":11229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci312"}},{"type":"rightadapter","out_nodes":[[4884,1871]],"__id":11232,"parentNodes":[10]},{"type":"join","out_nodes":[[4889,-1]],"__id":11233,"parentNodes":[4890,4891],"constraint":{"type":"join-reference","out_nodes":[],"__id":11234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4884,-1]],"__id":11235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4888,1872]],"__id":11240,"parentNodes":[16]},{"type":"beta","out_nodes":[[4892,-1]],"__id":11241,"parentNodes":[4893,4894]},{"type":"leftadapter","out_nodes":[[4888,-1]],"__id":11242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4891,1873]],"__id":11247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4891,1874]],"__id":11251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11252,"parentNodes":[4896],"index":562,"rule":{"name":"Bootstrap312","pattern":{"type":"object","id":2065,"cls":"Fibonacci312","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap312"},{"type":"beta","out_nodes":[[4895,-1]],"__id":11253,"parentNodes":[4897,4898]},{"type":"rightadapter","out_nodes":[[4896,1875]],"__id":11258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4896,1876]],"__id":11262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11263,"parentNodes":[4900],"index":563,"rule":{"name":"Recurse312","pattern":{"type":"composite","id":2068,"leftPattern":{"type":"not","id":2066,"cls":"Fibonacci312","alias":"f"},"rightPattern":{"type":"object","id":2067,"cls":"Fibonacci312","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci312 = defined.get('Fibonacci312');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci312(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse312"},{"type":"beta","out_nodes":[[4899,-1]],"__id":11264,"parentNodes":[4901,4902]},{"type":"rightadapter","out_nodes":[[4900,1877]],"__id":11268,"parentNodes":[37]},{"type":"not","out_nodes":[[4903,-1]],"__id":11269,"parentNodes":[4904,4905],"constraint":{"type":"join-reference","out_nodes":[],"__id":11270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4900,-1]],"__id":11271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4902,1878]],"__id":11275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4902,1879]],"__id":11279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11280,"parentNodes":[4907],"index":564,"rule":{"name":"Calculate311","pattern":{"type":"composite","id":2075,"leftPattern":{"type":"composite","id":2074,"leftPattern":{"type":"composite","id":2073,"leftPattern":{"type":"object","id":2069,"cls":"Fibonacci311","alias":"f1"},"rightPattern":{"type":"object","id":2070,"cls":"Fibonacci311","alias":"f2"}},"rightPattern":{"type":"object","id":2071,"cls":"Fibonacci311","alias":"f3"}},"rightPattern":{"type":"object","id":2072,"cls":"Result311","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate311"},{"type":"beta","out_nodes":[[4906,-1]],"__id":11281,"parentNodes":[4909,4910]},{"type":"type","out_nodes":[[3,1880]],"__id":11282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result311"}},{"type":"rightadapter","out_nodes":[[4907,1880]],"__id":11285,"parentNodes":[4]},{"type":"join","out_nodes":[[4911,-1]],"__id":11286,"parentNodes":[4913,4914],"constraint":{"type":"join-reference","out_nodes":[],"__id":11287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4907,-1]],"__id":11288,"parentNodes":[]},{"type":"type","out_nodes":[[9,1881],[14,1882],[20,1883],[30,1885],[20,1887],[30,1888]],"__id":11289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci311"}},{"type":"rightadapter","out_nodes":[[4910,1881]],"__id":11292,"parentNodes":[10]},{"type":"join","out_nodes":[[4915,-1]],"__id":11293,"parentNodes":[4916,4917],"constraint":{"type":"join-reference","out_nodes":[],"__id":11294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4910,-1]],"__id":11295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4914,1882]],"__id":11300,"parentNodes":[16]},{"type":"beta","out_nodes":[[4918,-1]],"__id":11301,"parentNodes":[4919,4920]},{"type":"leftadapter","out_nodes":[[4914,-1]],"__id":11302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4917,1883]],"__id":11307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4917,1884]],"__id":11311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11312,"parentNodes":[4922],"index":565,"rule":{"name":"Bootstrap311","pattern":{"type":"object","id":2076,"cls":"Fibonacci311","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap311"},{"type":"beta","out_nodes":[[4921,-1]],"__id":11313,"parentNodes":[4923,4924]},{"type":"rightadapter","out_nodes":[[4922,1885]],"__id":11318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4922,1886]],"__id":11322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11323,"parentNodes":[4926],"index":566,"rule":{"name":"Recurse311","pattern":{"type":"composite","id":2079,"leftPattern":{"type":"not","id":2077,"cls":"Fibonacci311","alias":"f"},"rightPattern":{"type":"object","id":2078,"cls":"Fibonacci311","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci311 = defined.get('Fibonacci311');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci311(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse311"},{"type":"beta","out_nodes":[[4925,-1]],"__id":11324,"parentNodes":[4927,4928]},{"type":"rightadapter","out_nodes":[[4926,1887]],"__id":11328,"parentNodes":[37]},{"type":"not","out_nodes":[[4929,-1]],"__id":11329,"parentNodes":[4930,4931],"constraint":{"type":"join-reference","out_nodes":[],"__id":11330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4926,-1]],"__id":11331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4928,1888]],"__id":11335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4928,1889]],"__id":11339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11340,"parentNodes":[4933],"index":567,"rule":{"name":"Calculate310","pattern":{"type":"composite","id":2086,"leftPattern":{"type":"composite","id":2085,"leftPattern":{"type":"composite","id":2084,"leftPattern":{"type":"object","id":2080,"cls":"Fibonacci310","alias":"f1"},"rightPattern":{"type":"object","id":2081,"cls":"Fibonacci310","alias":"f2"}},"rightPattern":{"type":"object","id":2082,"cls":"Fibonacci310","alias":"f3"}},"rightPattern":{"type":"object","id":2083,"cls":"Result310","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate310"},{"type":"beta","out_nodes":[[4932,-1]],"__id":11341,"parentNodes":[4935,4936]},{"type":"type","out_nodes":[[3,1890]],"__id":11342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result310"}},{"type":"rightadapter","out_nodes":[[4933,1890]],"__id":11345,"parentNodes":[4]},{"type":"join","out_nodes":[[4937,-1]],"__id":11346,"parentNodes":[4939,4940],"constraint":{"type":"join-reference","out_nodes":[],"__id":11347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4933,-1]],"__id":11348,"parentNodes":[]},{"type":"type","out_nodes":[[9,1891],[14,1892],[20,1893],[30,1895],[20,1897],[30,1898]],"__id":11349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci310"}},{"type":"rightadapter","out_nodes":[[4936,1891]],"__id":11352,"parentNodes":[10]},{"type":"join","out_nodes":[[4941,-1]],"__id":11353,"parentNodes":[4942,4943],"constraint":{"type":"join-reference","out_nodes":[],"__id":11354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4936,-1]],"__id":11355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4940,1892]],"__id":11360,"parentNodes":[16]},{"type":"beta","out_nodes":[[4944,-1]],"__id":11361,"parentNodes":[4945,4946]},{"type":"leftadapter","out_nodes":[[4940,-1]],"__id":11362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4943,1893]],"__id":11367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4943,1894]],"__id":11371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11372,"parentNodes":[4948],"index":568,"rule":{"name":"Bootstrap310","pattern":{"type":"object","id":2087,"cls":"Fibonacci310","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap310"},{"type":"beta","out_nodes":[[4947,-1]],"__id":11373,"parentNodes":[4949,4950]},{"type":"rightadapter","out_nodes":[[4948,1895]],"__id":11378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4948,1896]],"__id":11382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11383,"parentNodes":[4952],"index":569,"rule":{"name":"Recurse310","pattern":{"type":"composite","id":2090,"leftPattern":{"type":"not","id":2088,"cls":"Fibonacci310","alias":"f"},"rightPattern":{"type":"object","id":2089,"cls":"Fibonacci310","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');let Fibonacci310 = defined.get('Fibonacci310');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci310(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse310"},{"type":"beta","out_nodes":[[4951,-1]],"__id":11384,"parentNodes":[4953,4954]},{"type":"rightadapter","out_nodes":[[4952,1897]],"__id":11388,"parentNodes":[37]},{"type":"not","out_nodes":[[4955,-1]],"__id":11389,"parentNodes":[4956,4957],"constraint":{"type":"join-reference","out_nodes":[],"__id":11390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4952,-1]],"__id":11391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4954,1898]],"__id":11395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4954,1899]],"__id":11399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11400,"parentNodes":[4959],"index":570,"rule":{"name":"Calculate309","pattern":{"type":"composite","id":2097,"leftPattern":{"type":"composite","id":2096,"leftPattern":{"type":"composite","id":2095,"leftPattern":{"type":"object","id":2091,"cls":"Fibonacci309","alias":"f1"},"rightPattern":{"type":"object","id":2092,"cls":"Fibonacci309","alias":"f2"}},"rightPattern":{"type":"object","id":2093,"cls":"Fibonacci309","alias":"f3"}},"rightPattern":{"type":"object","id":2094,"cls":"Result309","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate309"},{"type":"beta","out_nodes":[[4958,-1]],"__id":11401,"parentNodes":[4961,4962]},{"type":"type","out_nodes":[[3,1900]],"__id":11402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result309"}},{"type":"rightadapter","out_nodes":[[4959,1900]],"__id":11405,"parentNodes":[4]},{"type":"join","out_nodes":[[4963,-1]],"__id":11406,"parentNodes":[4965,4966],"constraint":{"type":"join-reference","out_nodes":[],"__id":11407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4959,-1]],"__id":11408,"parentNodes":[]},{"type":"type","out_nodes":[[9,1901],[14,1902],[20,1903],[30,1905],[20,1907],[30,1908]],"__id":11409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci309"}},{"type":"rightadapter","out_nodes":[[4962,1901]],"__id":11412,"parentNodes":[10]},{"type":"join","out_nodes":[[4967,-1]],"__id":11413,"parentNodes":[4968,4969],"constraint":{"type":"join-reference","out_nodes":[],"__id":11414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4962,-1]],"__id":11415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4966,1902]],"__id":11420,"parentNodes":[16]},{"type":"beta","out_nodes":[[4970,-1]],"__id":11421,"parentNodes":[4971,4972]},{"type":"leftadapter","out_nodes":[[4966,-1]],"__id":11422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4969,1903]],"__id":11427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4969,1904]],"__id":11431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11432,"parentNodes":[4974],"index":571,"rule":{"name":"Bootstrap309","pattern":{"type":"object","id":2098,"cls":"Fibonacci309","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap309"},{"type":"beta","out_nodes":[[4973,-1]],"__id":11433,"parentNodes":[4975,4976]},{"type":"rightadapter","out_nodes":[[4974,1905]],"__id":11438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[4974,1906]],"__id":11442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11443,"parentNodes":[4978],"index":572,"rule":{"name":"Recurse309","pattern":{"type":"composite","id":2101,"leftPattern":{"type":"not","id":2099,"cls":"Fibonacci309","alias":"f"},"rightPattern":{"type":"object","id":2100,"cls":"Fibonacci309","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci309 = defined.get('Fibonacci309');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci309(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse309"},{"type":"beta","out_nodes":[[4977,-1]],"__id":11444,"parentNodes":[4979,4980]},{"type":"rightadapter","out_nodes":[[4978,1907]],"__id":11448,"parentNodes":[37]},{"type":"not","out_nodes":[[4981,-1]],"__id":11449,"parentNodes":[4982,4983],"constraint":{"type":"join-reference","out_nodes":[],"__id":11450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[4978,-1]],"__id":11451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4980,1908]],"__id":11455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[4980,1909]],"__id":11459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11460,"parentNodes":[4985],"index":573,"rule":{"name":"Calculate308","pattern":{"type":"composite","id":2108,"leftPattern":{"type":"composite","id":2107,"leftPattern":{"type":"composite","id":2106,"leftPattern":{"type":"object","id":2102,"cls":"Fibonacci308","alias":"f1"},"rightPattern":{"type":"object","id":2103,"cls":"Fibonacci308","alias":"f2"}},"rightPattern":{"type":"object","id":2104,"cls":"Fibonacci308","alias":"f3"}},"rightPattern":{"type":"object","id":2105,"cls":"Result308","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate308"},{"type":"beta","out_nodes":[[4984,-1]],"__id":11461,"parentNodes":[4987,4988]},{"type":"type","out_nodes":[[3,1910]],"__id":11462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result308"}},{"type":"rightadapter","out_nodes":[[4985,1910]],"__id":11465,"parentNodes":[4]},{"type":"join","out_nodes":[[4989,-1]],"__id":11466,"parentNodes":[4991,4992],"constraint":{"type":"join-reference","out_nodes":[],"__id":11467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4985,-1]],"__id":11468,"parentNodes":[]},{"type":"type","out_nodes":[[9,1911],[14,1912],[20,1913],[30,1915],[20,1917],[30,1918]],"__id":11469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci308"}},{"type":"rightadapter","out_nodes":[[4988,1911]],"__id":11472,"parentNodes":[10]},{"type":"join","out_nodes":[[4993,-1]],"__id":11473,"parentNodes":[4994,4995],"constraint":{"type":"join-reference","out_nodes":[],"__id":11474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[4988,-1]],"__id":11475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4992,1912]],"__id":11480,"parentNodes":[16]},{"type":"beta","out_nodes":[[4996,-1]],"__id":11481,"parentNodes":[4997,4998]},{"type":"leftadapter","out_nodes":[[4992,-1]],"__id":11482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[4995,1913]],"__id":11487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[4995,1914]],"__id":11491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11492,"parentNodes":[5000],"index":574,"rule":{"name":"Bootstrap308","pattern":{"type":"object","id":2109,"cls":"Fibonacci308","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap308"},{"type":"beta","out_nodes":[[4999,-1]],"__id":11493,"parentNodes":[5001,5002]},{"type":"rightadapter","out_nodes":[[5000,1915]],"__id":11498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5000,1916]],"__id":11502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11503,"parentNodes":[5004],"index":575,"rule":{"name":"Recurse308","pattern":{"type":"composite","id":2112,"leftPattern":{"type":"not","id":2110,"cls":"Fibonacci308","alias":"f"},"rightPattern":{"type":"object","id":2111,"cls":"Fibonacci308","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci308 = defined.get('Fibonacci308');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci308(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse308"},{"type":"beta","out_nodes":[[5003,-1]],"__id":11504,"parentNodes":[5005,5006]},{"type":"rightadapter","out_nodes":[[5004,1917]],"__id":11508,"parentNodes":[37]},{"type":"not","out_nodes":[[5007,-1]],"__id":11509,"parentNodes":[5008,5009],"constraint":{"type":"join-reference","out_nodes":[],"__id":11510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5004,-1]],"__id":11511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5006,1918]],"__id":11515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5006,1919]],"__id":11519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11520,"parentNodes":[5011],"index":576,"rule":{"name":"Calculate307","pattern":{"type":"composite","id":2119,"leftPattern":{"type":"composite","id":2118,"leftPattern":{"type":"composite","id":2117,"leftPattern":{"type":"object","id":2113,"cls":"Fibonacci307","alias":"f1"},"rightPattern":{"type":"object","id":2114,"cls":"Fibonacci307","alias":"f2"}},"rightPattern":{"type":"object","id":2115,"cls":"Fibonacci307","alias":"f3"}},"rightPattern":{"type":"object","id":2116,"cls":"Result307","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate307"},{"type":"beta","out_nodes":[[5010,-1]],"__id":11521,"parentNodes":[5013,5014]},{"type":"type","out_nodes":[[3,1920]],"__id":11522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result307"}},{"type":"rightadapter","out_nodes":[[5011,1920]],"__id":11525,"parentNodes":[4]},{"type":"join","out_nodes":[[5015,-1]],"__id":11526,"parentNodes":[5017,5018],"constraint":{"type":"join-reference","out_nodes":[],"__id":11527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5011,-1]],"__id":11528,"parentNodes":[]},{"type":"type","out_nodes":[[9,1921],[14,1922],[20,1923],[30,1925],[20,1927],[30,1928]],"__id":11529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci307"}},{"type":"rightadapter","out_nodes":[[5014,1921]],"__id":11532,"parentNodes":[10]},{"type":"join","out_nodes":[[5019,-1]],"__id":11533,"parentNodes":[5020,5021],"constraint":{"type":"join-reference","out_nodes":[],"__id":11534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5014,-1]],"__id":11535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5018,1922]],"__id":11540,"parentNodes":[16]},{"type":"beta","out_nodes":[[5022,-1]],"__id":11541,"parentNodes":[5023,5024]},{"type":"leftadapter","out_nodes":[[5018,-1]],"__id":11542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5021,1923]],"__id":11547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5021,1924]],"__id":11551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11552,"parentNodes":[5026],"index":577,"rule":{"name":"Bootstrap307","pattern":{"type":"object","id":2120,"cls":"Fibonacci307","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap307"},{"type":"beta","out_nodes":[[5025,-1]],"__id":11553,"parentNodes":[5027,5028]},{"type":"rightadapter","out_nodes":[[5026,1925]],"__id":11558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5026,1926]],"__id":11562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11563,"parentNodes":[5030],"index":578,"rule":{"name":"Recurse307","pattern":{"type":"composite","id":2123,"leftPattern":{"type":"not","id":2121,"cls":"Fibonacci307","alias":"f"},"rightPattern":{"type":"object","id":2122,"cls":"Fibonacci307","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci307 = defined.get('Fibonacci307');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci307(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse307"},{"type":"beta","out_nodes":[[5029,-1]],"__id":11564,"parentNodes":[5031,5032]},{"type":"rightadapter","out_nodes":[[5030,1927]],"__id":11568,"parentNodes":[37]},{"type":"not","out_nodes":[[5033,-1]],"__id":11569,"parentNodes":[5034,5035],"constraint":{"type":"join-reference","out_nodes":[],"__id":11570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5030,-1]],"__id":11571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5032,1928]],"__id":11575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5032,1929]],"__id":11579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11580,"parentNodes":[5037],"index":579,"rule":{"name":"Calculate306","pattern":{"type":"composite","id":2130,"leftPattern":{"type":"composite","id":2129,"leftPattern":{"type":"composite","id":2128,"leftPattern":{"type":"object","id":2124,"cls":"Fibonacci306","alias":"f1"},"rightPattern":{"type":"object","id":2125,"cls":"Fibonacci306","alias":"f2"}},"rightPattern":{"type":"object","id":2126,"cls":"Fibonacci306","alias":"f3"}},"rightPattern":{"type":"object","id":2127,"cls":"Result306","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate306"},{"type":"beta","out_nodes":[[5036,-1]],"__id":11581,"parentNodes":[5039,5040]},{"type":"type","out_nodes":[[3,1930]],"__id":11582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result306"}},{"type":"rightadapter","out_nodes":[[5037,1930]],"__id":11585,"parentNodes":[4]},{"type":"join","out_nodes":[[5041,-1]],"__id":11586,"parentNodes":[5043,5044],"constraint":{"type":"join-reference","out_nodes":[],"__id":11587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5037,-1]],"__id":11588,"parentNodes":[]},{"type":"type","out_nodes":[[9,1931],[14,1932],[20,1933],[30,1935],[20,1937],[30,1938]],"__id":11589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci306"}},{"type":"rightadapter","out_nodes":[[5040,1931]],"__id":11592,"parentNodes":[10]},{"type":"join","out_nodes":[[5045,-1]],"__id":11593,"parentNodes":[5046,5047],"constraint":{"type":"join-reference","out_nodes":[],"__id":11594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5040,-1]],"__id":11595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5044,1932]],"__id":11600,"parentNodes":[16]},{"type":"beta","out_nodes":[[5048,-1]],"__id":11601,"parentNodes":[5049,5050]},{"type":"leftadapter","out_nodes":[[5044,-1]],"__id":11602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5047,1933]],"__id":11607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5047,1934]],"__id":11611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11612,"parentNodes":[5052],"index":580,"rule":{"name":"Bootstrap306","pattern":{"type":"object","id":2131,"cls":"Fibonacci306","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap306"},{"type":"beta","out_nodes":[[5051,-1]],"__id":11613,"parentNodes":[5053,5054]},{"type":"rightadapter","out_nodes":[[5052,1935]],"__id":11618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5052,1936]],"__id":11622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11623,"parentNodes":[5056],"index":581,"rule":{"name":"Recurse306","pattern":{"type":"composite","id":2134,"leftPattern":{"type":"not","id":2132,"cls":"Fibonacci306","alias":"f"},"rightPattern":{"type":"object","id":2133,"cls":"Fibonacci306","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci306 = defined.get('Fibonacci306');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci306(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse306"},{"type":"beta","out_nodes":[[5055,-1]],"__id":11624,"parentNodes":[5057,5058]},{"type":"rightadapter","out_nodes":[[5056,1937]],"__id":11628,"parentNodes":[37]},{"type":"not","out_nodes":[[5059,-1]],"__id":11629,"parentNodes":[5060,5061],"constraint":{"type":"join-reference","out_nodes":[],"__id":11630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5056,-1]],"__id":11631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5058,1938]],"__id":11635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5058,1939]],"__id":11639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11640,"parentNodes":[5063],"index":582,"rule":{"name":"Calculate305","pattern":{"type":"composite","id":2141,"leftPattern":{"type":"composite","id":2140,"leftPattern":{"type":"composite","id":2139,"leftPattern":{"type":"object","id":2135,"cls":"Fibonacci305","alias":"f1"},"rightPattern":{"type":"object","id":2136,"cls":"Fibonacci305","alias":"f2"}},"rightPattern":{"type":"object","id":2137,"cls":"Fibonacci305","alias":"f3"}},"rightPattern":{"type":"object","id":2138,"cls":"Result305","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate305"},{"type":"beta","out_nodes":[[5062,-1]],"__id":11641,"parentNodes":[5065,5066]},{"type":"type","out_nodes":[[3,1940]],"__id":11642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result305"}},{"type":"rightadapter","out_nodes":[[5063,1940]],"__id":11645,"parentNodes":[4]},{"type":"join","out_nodes":[[5067,-1]],"__id":11646,"parentNodes":[5069,5070],"constraint":{"type":"join-reference","out_nodes":[],"__id":11647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5063,-1]],"__id":11648,"parentNodes":[]},{"type":"type","out_nodes":[[9,1941],[14,1942],[20,1943],[30,1945],[20,1947],[30,1948]],"__id":11649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci305"}},{"type":"rightadapter","out_nodes":[[5066,1941]],"__id":11652,"parentNodes":[10]},{"type":"join","out_nodes":[[5071,-1]],"__id":11653,"parentNodes":[5072,5073],"constraint":{"type":"join-reference","out_nodes":[],"__id":11654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5066,-1]],"__id":11655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5070,1942]],"__id":11660,"parentNodes":[16]},{"type":"beta","out_nodes":[[5074,-1]],"__id":11661,"parentNodes":[5075,5076]},{"type":"leftadapter","out_nodes":[[5070,-1]],"__id":11662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5073,1943]],"__id":11667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5073,1944]],"__id":11671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11672,"parentNodes":[5078],"index":583,"rule":{"name":"Bootstrap305","pattern":{"type":"object","id":2142,"cls":"Fibonacci305","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap305"},{"type":"beta","out_nodes":[[5077,-1]],"__id":11673,"parentNodes":[5079,5080]},{"type":"rightadapter","out_nodes":[[5078,1945]],"__id":11678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5078,1946]],"__id":11682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11683,"parentNodes":[5082],"index":584,"rule":{"name":"Recurse305","pattern":{"type":"composite","id":2145,"leftPattern":{"type":"not","id":2143,"cls":"Fibonacci305","alias":"f"},"rightPattern":{"type":"object","id":2144,"cls":"Fibonacci305","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci305 = defined.get('Fibonacci305');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci305(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse305"},{"type":"beta","out_nodes":[[5081,-1]],"__id":11684,"parentNodes":[5083,5084]},{"type":"rightadapter","out_nodes":[[5082,1947]],"__id":11688,"parentNodes":[37]},{"type":"not","out_nodes":[[5085,-1]],"__id":11689,"parentNodes":[5086,5087],"constraint":{"type":"join-reference","out_nodes":[],"__id":11690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5082,-1]],"__id":11691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5084,1948]],"__id":11695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5084,1949]],"__id":11699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11700,"parentNodes":[5089],"index":585,"rule":{"name":"Calculate304","pattern":{"type":"composite","id":2152,"leftPattern":{"type":"composite","id":2151,"leftPattern":{"type":"composite","id":2150,"leftPattern":{"type":"object","id":2146,"cls":"Fibonacci304","alias":"f1"},"rightPattern":{"type":"object","id":2147,"cls":"Fibonacci304","alias":"f2"}},"rightPattern":{"type":"object","id":2148,"cls":"Fibonacci304","alias":"f3"}},"rightPattern":{"type":"object","id":2149,"cls":"Result304","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate304"},{"type":"beta","out_nodes":[[5088,-1]],"__id":11701,"parentNodes":[5091,5092]},{"type":"type","out_nodes":[[3,1950]],"__id":11702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result304"}},{"type":"rightadapter","out_nodes":[[5089,1950]],"__id":11705,"parentNodes":[4]},{"type":"join","out_nodes":[[5093,-1]],"__id":11706,"parentNodes":[5095,5096],"constraint":{"type":"join-reference","out_nodes":[],"__id":11707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5089,-1]],"__id":11708,"parentNodes":[]},{"type":"type","out_nodes":[[9,1951],[14,1952],[20,1953],[30,1955],[20,1957],[30,1958]],"__id":11709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci304"}},{"type":"rightadapter","out_nodes":[[5092,1951]],"__id":11712,"parentNodes":[10]},{"type":"join","out_nodes":[[5097,-1]],"__id":11713,"parentNodes":[5098,5099],"constraint":{"type":"join-reference","out_nodes":[],"__id":11714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5092,-1]],"__id":11715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5096,1952]],"__id":11720,"parentNodes":[16]},{"type":"beta","out_nodes":[[5100,-1]],"__id":11721,"parentNodes":[5101,5102]},{"type":"leftadapter","out_nodes":[[5096,-1]],"__id":11722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5099,1953]],"__id":11727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5099,1954]],"__id":11731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11732,"parentNodes":[5104],"index":586,"rule":{"name":"Bootstrap304","pattern":{"type":"object","id":2153,"cls":"Fibonacci304","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap304"},{"type":"beta","out_nodes":[[5103,-1]],"__id":11733,"parentNodes":[5105,5106]},{"type":"rightadapter","out_nodes":[[5104,1955]],"__id":11738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5104,1956]],"__id":11742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11743,"parentNodes":[5108],"index":587,"rule":{"name":"Recurse304","pattern":{"type":"composite","id":2156,"leftPattern":{"type":"not","id":2154,"cls":"Fibonacci304","alias":"f"},"rightPattern":{"type":"object","id":2155,"cls":"Fibonacci304","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci304 = defined.get('Fibonacci304');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci304(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse304"},{"type":"beta","out_nodes":[[5107,-1]],"__id":11744,"parentNodes":[5109,5110]},{"type":"rightadapter","out_nodes":[[5108,1957]],"__id":11748,"parentNodes":[37]},{"type":"not","out_nodes":[[5111,-1]],"__id":11749,"parentNodes":[5112,5113],"constraint":{"type":"join-reference","out_nodes":[],"__id":11750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5108,-1]],"__id":11751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5110,1958]],"__id":11755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5110,1959]],"__id":11759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11760,"parentNodes":[5115],"index":588,"rule":{"name":"Calculate303","pattern":{"type":"composite","id":2163,"leftPattern":{"type":"composite","id":2162,"leftPattern":{"type":"composite","id":2161,"leftPattern":{"type":"object","id":2157,"cls":"Fibonacci303","alias":"f1"},"rightPattern":{"type":"object","id":2158,"cls":"Fibonacci303","alias":"f2"}},"rightPattern":{"type":"object","id":2159,"cls":"Fibonacci303","alias":"f3"}},"rightPattern":{"type":"object","id":2160,"cls":"Result303","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate303"},{"type":"beta","out_nodes":[[5114,-1]],"__id":11761,"parentNodes":[5117,5118]},{"type":"type","out_nodes":[[3,1960]],"__id":11762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result303"}},{"type":"rightadapter","out_nodes":[[5115,1960]],"__id":11765,"parentNodes":[4]},{"type":"join","out_nodes":[[5119,-1]],"__id":11766,"parentNodes":[5121,5122],"constraint":{"type":"join-reference","out_nodes":[],"__id":11767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5115,-1]],"__id":11768,"parentNodes":[]},{"type":"type","out_nodes":[[9,1961],[14,1962],[20,1963],[30,1965],[20,1967],[30,1968]],"__id":11769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci303"}},{"type":"rightadapter","out_nodes":[[5118,1961]],"__id":11772,"parentNodes":[10]},{"type":"join","out_nodes":[[5123,-1]],"__id":11773,"parentNodes":[5124,5125],"constraint":{"type":"join-reference","out_nodes":[],"__id":11774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5118,-1]],"__id":11775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5122,1962]],"__id":11780,"parentNodes":[16]},{"type":"beta","out_nodes":[[5126,-1]],"__id":11781,"parentNodes":[5127,5128]},{"type":"leftadapter","out_nodes":[[5122,-1]],"__id":11782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5125,1963]],"__id":11787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5125,1964]],"__id":11791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11792,"parentNodes":[5130],"index":589,"rule":{"name":"Bootstrap303","pattern":{"type":"object","id":2164,"cls":"Fibonacci303","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap303"},{"type":"beta","out_nodes":[[5129,-1]],"__id":11793,"parentNodes":[5131,5132]},{"type":"rightadapter","out_nodes":[[5130,1965]],"__id":11798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5130,1966]],"__id":11802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11803,"parentNodes":[5134],"index":590,"rule":{"name":"Recurse303","pattern":{"type":"composite","id":2167,"leftPattern":{"type":"not","id":2165,"cls":"Fibonacci303","alias":"f"},"rightPattern":{"type":"object","id":2166,"cls":"Fibonacci303","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci303 = defined.get('Fibonacci303');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci303(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse303"},{"type":"beta","out_nodes":[[5133,-1]],"__id":11804,"parentNodes":[5135,5136]},{"type":"rightadapter","out_nodes":[[5134,1967]],"__id":11808,"parentNodes":[37]},{"type":"not","out_nodes":[[5137,-1]],"__id":11809,"parentNodes":[5138,5139],"constraint":{"type":"join-reference","out_nodes":[],"__id":11810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5134,-1]],"__id":11811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5136,1968]],"__id":11815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5136,1969]],"__id":11819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11820,"parentNodes":[5141],"index":591,"rule":{"name":"Calculate302","pattern":{"type":"composite","id":2174,"leftPattern":{"type":"composite","id":2173,"leftPattern":{"type":"composite","id":2172,"leftPattern":{"type":"object","id":2168,"cls":"Fibonacci302","alias":"f1"},"rightPattern":{"type":"object","id":2169,"cls":"Fibonacci302","alias":"f2"}},"rightPattern":{"type":"object","id":2170,"cls":"Fibonacci302","alias":"f3"}},"rightPattern":{"type":"object","id":2171,"cls":"Result302","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate302"},{"type":"beta","out_nodes":[[5140,-1]],"__id":11821,"parentNodes":[5143,5144]},{"type":"type","out_nodes":[[3,1970]],"__id":11822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result302"}},{"type":"rightadapter","out_nodes":[[5141,1970]],"__id":11825,"parentNodes":[4]},{"type":"join","out_nodes":[[5145,-1]],"__id":11826,"parentNodes":[5147,5148],"constraint":{"type":"join-reference","out_nodes":[],"__id":11827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5141,-1]],"__id":11828,"parentNodes":[]},{"type":"type","out_nodes":[[9,1971],[14,1972],[20,1973],[30,1975],[20,1977],[30,1978]],"__id":11829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci302"}},{"type":"rightadapter","out_nodes":[[5144,1971]],"__id":11832,"parentNodes":[10]},{"type":"join","out_nodes":[[5149,-1]],"__id":11833,"parentNodes":[5150,5151],"constraint":{"type":"join-reference","out_nodes":[],"__id":11834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5144,-1]],"__id":11835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5148,1972]],"__id":11840,"parentNodes":[16]},{"type":"beta","out_nodes":[[5152,-1]],"__id":11841,"parentNodes":[5153,5154]},{"type":"leftadapter","out_nodes":[[5148,-1]],"__id":11842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5151,1973]],"__id":11847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5151,1974]],"__id":11851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11852,"parentNodes":[5156],"index":592,"rule":{"name":"Bootstrap302","pattern":{"type":"object","id":2175,"cls":"Fibonacci302","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap302"},{"type":"beta","out_nodes":[[5155,-1]],"__id":11853,"parentNodes":[5157,5158]},{"type":"rightadapter","out_nodes":[[5156,1975]],"__id":11858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5156,1976]],"__id":11862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11863,"parentNodes":[5160],"index":593,"rule":{"name":"Recurse302","pattern":{"type":"composite","id":2178,"leftPattern":{"type":"not","id":2176,"cls":"Fibonacci302","alias":"f"},"rightPattern":{"type":"object","id":2177,"cls":"Fibonacci302","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci302 = defined.get('Fibonacci302');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci302(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse302"},{"type":"beta","out_nodes":[[5159,-1]],"__id":11864,"parentNodes":[5161,5162]},{"type":"rightadapter","out_nodes":[[5160,1977]],"__id":11868,"parentNodes":[37]},{"type":"not","out_nodes":[[5163,-1]],"__id":11869,"parentNodes":[5164,5165],"constraint":{"type":"join-reference","out_nodes":[],"__id":11870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5160,-1]],"__id":11871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5162,1978]],"__id":11875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5162,1979]],"__id":11879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11880,"parentNodes":[5167],"index":594,"rule":{"name":"Calculate301","pattern":{"type":"composite","id":2185,"leftPattern":{"type":"composite","id":2184,"leftPattern":{"type":"composite","id":2183,"leftPattern":{"type":"object","id":2179,"cls":"Fibonacci301","alias":"f1"},"rightPattern":{"type":"object","id":2180,"cls":"Fibonacci301","alias":"f2"}},"rightPattern":{"type":"object","id":2181,"cls":"Fibonacci301","alias":"f3"}},"rightPattern":{"type":"object","id":2182,"cls":"Result301","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate301"},{"type":"beta","out_nodes":[[5166,-1]],"__id":11881,"parentNodes":[5169,5170]},{"type":"type","out_nodes":[[3,1980]],"__id":11882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result301"}},{"type":"rightadapter","out_nodes":[[5167,1980]],"__id":11885,"parentNodes":[4]},{"type":"join","out_nodes":[[5171,-1]],"__id":11886,"parentNodes":[5173,5174],"constraint":{"type":"join-reference","out_nodes":[],"__id":11887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5167,-1]],"__id":11888,"parentNodes":[]},{"type":"type","out_nodes":[[9,1981],[14,1982],[20,1983],[30,1985],[20,1987],[30,1988]],"__id":11889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci301"}},{"type":"rightadapter","out_nodes":[[5170,1981]],"__id":11892,"parentNodes":[10]},{"type":"join","out_nodes":[[5175,-1]],"__id":11893,"parentNodes":[5176,5177],"constraint":{"type":"join-reference","out_nodes":[],"__id":11894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5170,-1]],"__id":11895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5174,1982]],"__id":11900,"parentNodes":[16]},{"type":"beta","out_nodes":[[5178,-1]],"__id":11901,"parentNodes":[5179,5180]},{"type":"leftadapter","out_nodes":[[5174,-1]],"__id":11902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5177,1983]],"__id":11907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5177,1984]],"__id":11911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11912,"parentNodes":[5182],"index":595,"rule":{"name":"Bootstrap301","pattern":{"type":"object","id":2186,"cls":"Fibonacci301","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap301"},{"type":"beta","out_nodes":[[5181,-1]],"__id":11913,"parentNodes":[5183,5184]},{"type":"rightadapter","out_nodes":[[5182,1985]],"__id":11918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5182,1986]],"__id":11922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11923,"parentNodes":[5186],"index":596,"rule":{"name":"Recurse301","pattern":{"type":"composite","id":2189,"leftPattern":{"type":"not","id":2187,"cls":"Fibonacci301","alias":"f"},"rightPattern":{"type":"object","id":2188,"cls":"Fibonacci301","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci301 = defined.get('Fibonacci301');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci301(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse301"},{"type":"beta","out_nodes":[[5185,-1]],"__id":11924,"parentNodes":[5187,5188]},{"type":"rightadapter","out_nodes":[[5186,1987]],"__id":11928,"parentNodes":[37]},{"type":"not","out_nodes":[[5189,-1]],"__id":11929,"parentNodes":[5190,5191],"constraint":{"type":"join-reference","out_nodes":[],"__id":11930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5186,-1]],"__id":11931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5188,1988]],"__id":11935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5188,1989]],"__id":11939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11940,"parentNodes":[5193],"index":597,"rule":{"name":"Calculate300","pattern":{"type":"composite","id":2196,"leftPattern":{"type":"composite","id":2195,"leftPattern":{"type":"composite","id":2194,"leftPattern":{"type":"object","id":2190,"cls":"Fibonacci300","alias":"f1"},"rightPattern":{"type":"object","id":2191,"cls":"Fibonacci300","alias":"f2"}},"rightPattern":{"type":"object","id":2192,"cls":"Fibonacci300","alias":"f3"}},"rightPattern":{"type":"object","id":2193,"cls":"Result300","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate300"},{"type":"beta","out_nodes":[[5192,-1]],"__id":11941,"parentNodes":[5195,5196]},{"type":"type","out_nodes":[[3,1990]],"__id":11942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result300"}},{"type":"rightadapter","out_nodes":[[5193,1990]],"__id":11945,"parentNodes":[4]},{"type":"join","out_nodes":[[5197,-1]],"__id":11946,"parentNodes":[5199,5200],"constraint":{"type":"join-reference","out_nodes":[],"__id":11947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5193,-1]],"__id":11948,"parentNodes":[]},{"type":"type","out_nodes":[[9,1991],[14,1992],[20,1993],[30,1995],[20,1997],[30,1998]],"__id":11949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci300"}},{"type":"rightadapter","out_nodes":[[5196,1991]],"__id":11952,"parentNodes":[10]},{"type":"join","out_nodes":[[5201,-1]],"__id":11953,"parentNodes":[5202,5203],"constraint":{"type":"join-reference","out_nodes":[],"__id":11954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5196,-1]],"__id":11955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5200,1992]],"__id":11960,"parentNodes":[16]},{"type":"beta","out_nodes":[[5204,-1]],"__id":11961,"parentNodes":[5205,5206]},{"type":"leftadapter","out_nodes":[[5200,-1]],"__id":11962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5203,1993]],"__id":11967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5203,1994]],"__id":11971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11972,"parentNodes":[5208],"index":598,"rule":{"name":"Bootstrap300","pattern":{"type":"object","id":2197,"cls":"Fibonacci300","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap300"},{"type":"beta","out_nodes":[[5207,-1]],"__id":11973,"parentNodes":[5209,5210]},{"type":"rightadapter","out_nodes":[[5208,1995]],"__id":11978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5208,1996]],"__id":11982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":11983,"parentNodes":[5212],"index":599,"rule":{"name":"Recurse300","pattern":{"type":"composite","id":2200,"leftPattern":{"type":"not","id":2198,"cls":"Fibonacci300","alias":"f"},"rightPattern":{"type":"object","id":2199,"cls":"Fibonacci300","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');let Fibonacci300 = defined.get('Fibonacci300');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci300(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse300"},{"type":"beta","out_nodes":[[5211,-1]],"__id":11984,"parentNodes":[5213,5214]},{"type":"rightadapter","out_nodes":[[5212,1997]],"__id":11988,"parentNodes":[37]},{"type":"not","out_nodes":[[5215,-1]],"__id":11989,"parentNodes":[5216,5217],"constraint":{"type":"join-reference","out_nodes":[],"__id":11990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5212,-1]],"__id":11991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5214,1998]],"__id":11995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5214,1999]],"__id":11999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12000,"parentNodes":[5219],"index":600,"rule":{"name":"Calculate299","pattern":{"type":"composite","id":2207,"leftPattern":{"type":"composite","id":2206,"leftPattern":{"type":"composite","id":2205,"leftPattern":{"type":"object","id":2201,"cls":"Fibonacci299","alias":"f1"},"rightPattern":{"type":"object","id":2202,"cls":"Fibonacci299","alias":"f2"}},"rightPattern":{"type":"object","id":2203,"cls":"Fibonacci299","alias":"f3"}},"rightPattern":{"type":"object","id":2204,"cls":"Result299","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate299"},{"type":"beta","out_nodes":[[5218,-1]],"__id":12001,"parentNodes":[5221,5222]},{"type":"type","out_nodes":[[3,2000]],"__id":12002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result299"}},{"type":"rightadapter","out_nodes":[[5219,2000]],"__id":12005,"parentNodes":[4]},{"type":"join","out_nodes":[[5223,-1]],"__id":12006,"parentNodes":[5225,5226],"constraint":{"type":"join-reference","out_nodes":[],"__id":12007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5219,-1]],"__id":12008,"parentNodes":[]},{"type":"type","out_nodes":[[9,2001],[14,2002],[20,2003],[30,2005],[20,2007],[30,2008]],"__id":12009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci299"}},{"type":"rightadapter","out_nodes":[[5222,2001]],"__id":12012,"parentNodes":[10]},{"type":"join","out_nodes":[[5227,-1]],"__id":12013,"parentNodes":[5228,5229],"constraint":{"type":"join-reference","out_nodes":[],"__id":12014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5222,-1]],"__id":12015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5226,2002]],"__id":12020,"parentNodes":[16]},{"type":"beta","out_nodes":[[5230,-1]],"__id":12021,"parentNodes":[5231,5232]},{"type":"leftadapter","out_nodes":[[5226,-1]],"__id":12022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5229,2003]],"__id":12027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5229,2004]],"__id":12031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12032,"parentNodes":[5234],"index":601,"rule":{"name":"Bootstrap299","pattern":{"type":"object","id":2208,"cls":"Fibonacci299","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap299"},{"type":"beta","out_nodes":[[5233,-1]],"__id":12033,"parentNodes":[5235,5236]},{"type":"rightadapter","out_nodes":[[5234,2005]],"__id":12038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5234,2006]],"__id":12042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12043,"parentNodes":[5238],"index":602,"rule":{"name":"Recurse299","pattern":{"type":"composite","id":2211,"leftPattern":{"type":"not","id":2209,"cls":"Fibonacci299","alias":"f"},"rightPattern":{"type":"object","id":2210,"cls":"Fibonacci299","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci299 = defined.get('Fibonacci299');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci299(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse299"},{"type":"beta","out_nodes":[[5237,-1]],"__id":12044,"parentNodes":[5239,5240]},{"type":"rightadapter","out_nodes":[[5238,2007]],"__id":12048,"parentNodes":[37]},{"type":"not","out_nodes":[[5241,-1]],"__id":12049,"parentNodes":[5242,5243],"constraint":{"type":"join-reference","out_nodes":[],"__id":12050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5238,-1]],"__id":12051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5240,2008]],"__id":12055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5240,2009]],"__id":12059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12060,"parentNodes":[5245],"index":603,"rule":{"name":"Calculate298","pattern":{"type":"composite","id":2218,"leftPattern":{"type":"composite","id":2217,"leftPattern":{"type":"composite","id":2216,"leftPattern":{"type":"object","id":2212,"cls":"Fibonacci298","alias":"f1"},"rightPattern":{"type":"object","id":2213,"cls":"Fibonacci298","alias":"f2"}},"rightPattern":{"type":"object","id":2214,"cls":"Fibonacci298","alias":"f3"}},"rightPattern":{"type":"object","id":2215,"cls":"Result298","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate298"},{"type":"beta","out_nodes":[[5244,-1]],"__id":12061,"parentNodes":[5247,5248]},{"type":"type","out_nodes":[[3,2010]],"__id":12062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result298"}},{"type":"rightadapter","out_nodes":[[5245,2010]],"__id":12065,"parentNodes":[4]},{"type":"join","out_nodes":[[5249,-1]],"__id":12066,"parentNodes":[5251,5252],"constraint":{"type":"join-reference","out_nodes":[],"__id":12067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5245,-1]],"__id":12068,"parentNodes":[]},{"type":"type","out_nodes":[[9,2011],[14,2012],[20,2013],[30,2015],[20,2017],[30,2018]],"__id":12069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci298"}},{"type":"rightadapter","out_nodes":[[5248,2011]],"__id":12072,"parentNodes":[10]},{"type":"join","out_nodes":[[5253,-1]],"__id":12073,"parentNodes":[5254,5255],"constraint":{"type":"join-reference","out_nodes":[],"__id":12074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5248,-1]],"__id":12075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5252,2012]],"__id":12080,"parentNodes":[16]},{"type":"beta","out_nodes":[[5256,-1]],"__id":12081,"parentNodes":[5257,5258]},{"type":"leftadapter","out_nodes":[[5252,-1]],"__id":12082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5255,2013]],"__id":12087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5255,2014]],"__id":12091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12092,"parentNodes":[5260],"index":604,"rule":{"name":"Bootstrap298","pattern":{"type":"object","id":2219,"cls":"Fibonacci298","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap298"},{"type":"beta","out_nodes":[[5259,-1]],"__id":12093,"parentNodes":[5261,5262]},{"type":"rightadapter","out_nodes":[[5260,2015]],"__id":12098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5260,2016]],"__id":12102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12103,"parentNodes":[5264],"index":605,"rule":{"name":"Recurse298","pattern":{"type":"composite","id":2222,"leftPattern":{"type":"not","id":2220,"cls":"Fibonacci298","alias":"f"},"rightPattern":{"type":"object","id":2221,"cls":"Fibonacci298","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci298 = defined.get('Fibonacci298');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci298(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse298"},{"type":"beta","out_nodes":[[5263,-1]],"__id":12104,"parentNodes":[5265,5266]},{"type":"rightadapter","out_nodes":[[5264,2017]],"__id":12108,"parentNodes":[37]},{"type":"not","out_nodes":[[5267,-1]],"__id":12109,"parentNodes":[5268,5269],"constraint":{"type":"join-reference","out_nodes":[],"__id":12110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5264,-1]],"__id":12111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5266,2018]],"__id":12115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5266,2019]],"__id":12119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12120,"parentNodes":[5271],"index":606,"rule":{"name":"Calculate297","pattern":{"type":"composite","id":2229,"leftPattern":{"type":"composite","id":2228,"leftPattern":{"type":"composite","id":2227,"leftPattern":{"type":"object","id":2223,"cls":"Fibonacci297","alias":"f1"},"rightPattern":{"type":"object","id":2224,"cls":"Fibonacci297","alias":"f2"}},"rightPattern":{"type":"object","id":2225,"cls":"Fibonacci297","alias":"f3"}},"rightPattern":{"type":"object","id":2226,"cls":"Result297","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate297"},{"type":"beta","out_nodes":[[5270,-1]],"__id":12121,"parentNodes":[5273,5274]},{"type":"type","out_nodes":[[3,2020]],"__id":12122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result297"}},{"type":"rightadapter","out_nodes":[[5271,2020]],"__id":12125,"parentNodes":[4]},{"type":"join","out_nodes":[[5275,-1]],"__id":12126,"parentNodes":[5277,5278],"constraint":{"type":"join-reference","out_nodes":[],"__id":12127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5271,-1]],"__id":12128,"parentNodes":[]},{"type":"type","out_nodes":[[9,2021],[14,2022],[20,2023],[30,2025],[20,2027],[30,2028]],"__id":12129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci297"}},{"type":"rightadapter","out_nodes":[[5274,2021]],"__id":12132,"parentNodes":[10]},{"type":"join","out_nodes":[[5279,-1]],"__id":12133,"parentNodes":[5280,5281],"constraint":{"type":"join-reference","out_nodes":[],"__id":12134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5274,-1]],"__id":12135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5278,2022]],"__id":12140,"parentNodes":[16]},{"type":"beta","out_nodes":[[5282,-1]],"__id":12141,"parentNodes":[5283,5284]},{"type":"leftadapter","out_nodes":[[5278,-1]],"__id":12142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5281,2023]],"__id":12147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5281,2024]],"__id":12151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12152,"parentNodes":[5286],"index":607,"rule":{"name":"Bootstrap297","pattern":{"type":"object","id":2230,"cls":"Fibonacci297","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap297"},{"type":"beta","out_nodes":[[5285,-1]],"__id":12153,"parentNodes":[5287,5288]},{"type":"rightadapter","out_nodes":[[5286,2025]],"__id":12158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5286,2026]],"__id":12162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12163,"parentNodes":[5290],"index":608,"rule":{"name":"Recurse297","pattern":{"type":"composite","id":2233,"leftPattern":{"type":"not","id":2231,"cls":"Fibonacci297","alias":"f"},"rightPattern":{"type":"object","id":2232,"cls":"Fibonacci297","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci297 = defined.get('Fibonacci297');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci297(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse297"},{"type":"beta","out_nodes":[[5289,-1]],"__id":12164,"parentNodes":[5291,5292]},{"type":"rightadapter","out_nodes":[[5290,2027]],"__id":12168,"parentNodes":[37]},{"type":"not","out_nodes":[[5293,-1]],"__id":12169,"parentNodes":[5294,5295],"constraint":{"type":"join-reference","out_nodes":[],"__id":12170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5290,-1]],"__id":12171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5292,2028]],"__id":12175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5292,2029]],"__id":12179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12180,"parentNodes":[5297],"index":609,"rule":{"name":"Calculate296","pattern":{"type":"composite","id":2240,"leftPattern":{"type":"composite","id":2239,"leftPattern":{"type":"composite","id":2238,"leftPattern":{"type":"object","id":2234,"cls":"Fibonacci296","alias":"f1"},"rightPattern":{"type":"object","id":2235,"cls":"Fibonacci296","alias":"f2"}},"rightPattern":{"type":"object","id":2236,"cls":"Fibonacci296","alias":"f3"}},"rightPattern":{"type":"object","id":2237,"cls":"Result296","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate296"},{"type":"beta","out_nodes":[[5296,-1]],"__id":12181,"parentNodes":[5299,5300]},{"type":"type","out_nodes":[[3,2030]],"__id":12182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result296"}},{"type":"rightadapter","out_nodes":[[5297,2030]],"__id":12185,"parentNodes":[4]},{"type":"join","out_nodes":[[5301,-1]],"__id":12186,"parentNodes":[5303,5304],"constraint":{"type":"join-reference","out_nodes":[],"__id":12187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5297,-1]],"__id":12188,"parentNodes":[]},{"type":"type","out_nodes":[[9,2031],[14,2032],[20,2033],[30,2035],[20,2037],[30,2038]],"__id":12189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci296"}},{"type":"rightadapter","out_nodes":[[5300,2031]],"__id":12192,"parentNodes":[10]},{"type":"join","out_nodes":[[5305,-1]],"__id":12193,"parentNodes":[5306,5307],"constraint":{"type":"join-reference","out_nodes":[],"__id":12194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5300,-1]],"__id":12195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5304,2032]],"__id":12200,"parentNodes":[16]},{"type":"beta","out_nodes":[[5308,-1]],"__id":12201,"parentNodes":[5309,5310]},{"type":"leftadapter","out_nodes":[[5304,-1]],"__id":12202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5307,2033]],"__id":12207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5307,2034]],"__id":12211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12212,"parentNodes":[5312],"index":610,"rule":{"name":"Bootstrap296","pattern":{"type":"object","id":2241,"cls":"Fibonacci296","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap296"},{"type":"beta","out_nodes":[[5311,-1]],"__id":12213,"parentNodes":[5313,5314]},{"type":"rightadapter","out_nodes":[[5312,2035]],"__id":12218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5312,2036]],"__id":12222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12223,"parentNodes":[5316],"index":611,"rule":{"name":"Recurse296","pattern":{"type":"composite","id":2244,"leftPattern":{"type":"not","id":2242,"cls":"Fibonacci296","alias":"f"},"rightPattern":{"type":"object","id":2243,"cls":"Fibonacci296","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci296 = defined.get('Fibonacci296');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci296(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse296"},{"type":"beta","out_nodes":[[5315,-1]],"__id":12224,"parentNodes":[5317,5318]},{"type":"rightadapter","out_nodes":[[5316,2037]],"__id":12228,"parentNodes":[37]},{"type":"not","out_nodes":[[5319,-1]],"__id":12229,"parentNodes":[5320,5321],"constraint":{"type":"join-reference","out_nodes":[],"__id":12230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5316,-1]],"__id":12231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5318,2038]],"__id":12235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5318,2039]],"__id":12239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12240,"parentNodes":[5323],"index":612,"rule":{"name":"Calculate295","pattern":{"type":"composite","id":2251,"leftPattern":{"type":"composite","id":2250,"leftPattern":{"type":"composite","id":2249,"leftPattern":{"type":"object","id":2245,"cls":"Fibonacci295","alias":"f1"},"rightPattern":{"type":"object","id":2246,"cls":"Fibonacci295","alias":"f2"}},"rightPattern":{"type":"object","id":2247,"cls":"Fibonacci295","alias":"f3"}},"rightPattern":{"type":"object","id":2248,"cls":"Result295","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate295"},{"type":"beta","out_nodes":[[5322,-1]],"__id":12241,"parentNodes":[5325,5326]},{"type":"type","out_nodes":[[3,2040]],"__id":12242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result295"}},{"type":"rightadapter","out_nodes":[[5323,2040]],"__id":12245,"parentNodes":[4]},{"type":"join","out_nodes":[[5327,-1]],"__id":12246,"parentNodes":[5329,5330],"constraint":{"type":"join-reference","out_nodes":[],"__id":12247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5323,-1]],"__id":12248,"parentNodes":[]},{"type":"type","out_nodes":[[9,2041],[14,2042],[20,2043],[30,2045],[20,2047],[30,2048]],"__id":12249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci295"}},{"type":"rightadapter","out_nodes":[[5326,2041]],"__id":12252,"parentNodes":[10]},{"type":"join","out_nodes":[[5331,-1]],"__id":12253,"parentNodes":[5332,5333],"constraint":{"type":"join-reference","out_nodes":[],"__id":12254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5326,-1]],"__id":12255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5330,2042]],"__id":12260,"parentNodes":[16]},{"type":"beta","out_nodes":[[5334,-1]],"__id":12261,"parentNodes":[5335,5336]},{"type":"leftadapter","out_nodes":[[5330,-1]],"__id":12262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5333,2043]],"__id":12267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5333,2044]],"__id":12271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12272,"parentNodes":[5338],"index":613,"rule":{"name":"Bootstrap295","pattern":{"type":"object","id":2252,"cls":"Fibonacci295","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap295"},{"type":"beta","out_nodes":[[5337,-1]],"__id":12273,"parentNodes":[5339,5340]},{"type":"rightadapter","out_nodes":[[5338,2045]],"__id":12278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5338,2046]],"__id":12282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12283,"parentNodes":[5342],"index":614,"rule":{"name":"Recurse295","pattern":{"type":"composite","id":2255,"leftPattern":{"type":"not","id":2253,"cls":"Fibonacci295","alias":"f"},"rightPattern":{"type":"object","id":2254,"cls":"Fibonacci295","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci295 = defined.get('Fibonacci295');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci295(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse295"},{"type":"beta","out_nodes":[[5341,-1]],"__id":12284,"parentNodes":[5343,5344]},{"type":"rightadapter","out_nodes":[[5342,2047]],"__id":12288,"parentNodes":[37]},{"type":"not","out_nodes":[[5345,-1]],"__id":12289,"parentNodes":[5346,5347],"constraint":{"type":"join-reference","out_nodes":[],"__id":12290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5342,-1]],"__id":12291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5344,2048]],"__id":12295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5344,2049]],"__id":12299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12300,"parentNodes":[5349],"index":615,"rule":{"name":"Calculate294","pattern":{"type":"composite","id":2262,"leftPattern":{"type":"composite","id":2261,"leftPattern":{"type":"composite","id":2260,"leftPattern":{"type":"object","id":2256,"cls":"Fibonacci294","alias":"f1"},"rightPattern":{"type":"object","id":2257,"cls":"Fibonacci294","alias":"f2"}},"rightPattern":{"type":"object","id":2258,"cls":"Fibonacci294","alias":"f3"}},"rightPattern":{"type":"object","id":2259,"cls":"Result294","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate294"},{"type":"beta","out_nodes":[[5348,-1]],"__id":12301,"parentNodes":[5351,5352]},{"type":"type","out_nodes":[[3,2050]],"__id":12302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result294"}},{"type":"rightadapter","out_nodes":[[5349,2050]],"__id":12305,"parentNodes":[4]},{"type":"join","out_nodes":[[5353,-1]],"__id":12306,"parentNodes":[5355,5356],"constraint":{"type":"join-reference","out_nodes":[],"__id":12307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5349,-1]],"__id":12308,"parentNodes":[]},{"type":"type","out_nodes":[[9,2051],[14,2052],[20,2053],[30,2055],[20,2057],[30,2058]],"__id":12309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci294"}},{"type":"rightadapter","out_nodes":[[5352,2051]],"__id":12312,"parentNodes":[10]},{"type":"join","out_nodes":[[5357,-1]],"__id":12313,"parentNodes":[5358,5359],"constraint":{"type":"join-reference","out_nodes":[],"__id":12314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5352,-1]],"__id":12315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5356,2052]],"__id":12320,"parentNodes":[16]},{"type":"beta","out_nodes":[[5360,-1]],"__id":12321,"parentNodes":[5361,5362]},{"type":"leftadapter","out_nodes":[[5356,-1]],"__id":12322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5359,2053]],"__id":12327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5359,2054]],"__id":12331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12332,"parentNodes":[5364],"index":616,"rule":{"name":"Bootstrap294","pattern":{"type":"object","id":2263,"cls":"Fibonacci294","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap294"},{"type":"beta","out_nodes":[[5363,-1]],"__id":12333,"parentNodes":[5365,5366]},{"type":"rightadapter","out_nodes":[[5364,2055]],"__id":12338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5364,2056]],"__id":12342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12343,"parentNodes":[5368],"index":617,"rule":{"name":"Recurse294","pattern":{"type":"composite","id":2266,"leftPattern":{"type":"not","id":2264,"cls":"Fibonacci294","alias":"f"},"rightPattern":{"type":"object","id":2265,"cls":"Fibonacci294","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci294 = defined.get('Fibonacci294');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci294(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse294"},{"type":"beta","out_nodes":[[5367,-1]],"__id":12344,"parentNodes":[5369,5370]},{"type":"rightadapter","out_nodes":[[5368,2057]],"__id":12348,"parentNodes":[37]},{"type":"not","out_nodes":[[5371,-1]],"__id":12349,"parentNodes":[5372,5373],"constraint":{"type":"join-reference","out_nodes":[],"__id":12350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5368,-1]],"__id":12351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5370,2058]],"__id":12355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5370,2059]],"__id":12359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12360,"parentNodes":[5375],"index":618,"rule":{"name":"Calculate293","pattern":{"type":"composite","id":2273,"leftPattern":{"type":"composite","id":2272,"leftPattern":{"type":"composite","id":2271,"leftPattern":{"type":"object","id":2267,"cls":"Fibonacci293","alias":"f1"},"rightPattern":{"type":"object","id":2268,"cls":"Fibonacci293","alias":"f2"}},"rightPattern":{"type":"object","id":2269,"cls":"Fibonacci293","alias":"f3"}},"rightPattern":{"type":"object","id":2270,"cls":"Result293","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate293"},{"type":"beta","out_nodes":[[5374,-1]],"__id":12361,"parentNodes":[5377,5378]},{"type":"type","out_nodes":[[3,2060]],"__id":12362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result293"}},{"type":"rightadapter","out_nodes":[[5375,2060]],"__id":12365,"parentNodes":[4]},{"type":"join","out_nodes":[[5379,-1]],"__id":12366,"parentNodes":[5381,5382],"constraint":{"type":"join-reference","out_nodes":[],"__id":12367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5375,-1]],"__id":12368,"parentNodes":[]},{"type":"type","out_nodes":[[9,2061],[14,2062],[20,2063],[30,2065],[20,2067],[30,2068]],"__id":12369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci293"}},{"type":"rightadapter","out_nodes":[[5378,2061]],"__id":12372,"parentNodes":[10]},{"type":"join","out_nodes":[[5383,-1]],"__id":12373,"parentNodes":[5384,5385],"constraint":{"type":"join-reference","out_nodes":[],"__id":12374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5378,-1]],"__id":12375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5382,2062]],"__id":12380,"parentNodes":[16]},{"type":"beta","out_nodes":[[5386,-1]],"__id":12381,"parentNodes":[5387,5388]},{"type":"leftadapter","out_nodes":[[5382,-1]],"__id":12382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5385,2063]],"__id":12387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5385,2064]],"__id":12391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12392,"parentNodes":[5390],"index":619,"rule":{"name":"Bootstrap293","pattern":{"type":"object","id":2274,"cls":"Fibonacci293","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap293"},{"type":"beta","out_nodes":[[5389,-1]],"__id":12393,"parentNodes":[5391,5392]},{"type":"rightadapter","out_nodes":[[5390,2065]],"__id":12398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5390,2066]],"__id":12402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12403,"parentNodes":[5394],"index":620,"rule":{"name":"Recurse293","pattern":{"type":"composite","id":2277,"leftPattern":{"type":"not","id":2275,"cls":"Fibonacci293","alias":"f"},"rightPattern":{"type":"object","id":2276,"cls":"Fibonacci293","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci293 = defined.get('Fibonacci293');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci293(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse293"},{"type":"beta","out_nodes":[[5393,-1]],"__id":12404,"parentNodes":[5395,5396]},{"type":"rightadapter","out_nodes":[[5394,2067]],"__id":12408,"parentNodes":[37]},{"type":"not","out_nodes":[[5397,-1]],"__id":12409,"parentNodes":[5398,5399],"constraint":{"type":"join-reference","out_nodes":[],"__id":12410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5394,-1]],"__id":12411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5396,2068]],"__id":12415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5396,2069]],"__id":12419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12420,"parentNodes":[5401],"index":621,"rule":{"name":"Calculate292","pattern":{"type":"composite","id":2284,"leftPattern":{"type":"composite","id":2283,"leftPattern":{"type":"composite","id":2282,"leftPattern":{"type":"object","id":2278,"cls":"Fibonacci292","alias":"f1"},"rightPattern":{"type":"object","id":2279,"cls":"Fibonacci292","alias":"f2"}},"rightPattern":{"type":"object","id":2280,"cls":"Fibonacci292","alias":"f3"}},"rightPattern":{"type":"object","id":2281,"cls":"Result292","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate292"},{"type":"beta","out_nodes":[[5400,-1]],"__id":12421,"parentNodes":[5403,5404]},{"type":"type","out_nodes":[[3,2070]],"__id":12422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result292"}},{"type":"rightadapter","out_nodes":[[5401,2070]],"__id":12425,"parentNodes":[4]},{"type":"join","out_nodes":[[5405,-1]],"__id":12426,"parentNodes":[5407,5408],"constraint":{"type":"join-reference","out_nodes":[],"__id":12427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5401,-1]],"__id":12428,"parentNodes":[]},{"type":"type","out_nodes":[[9,2071],[14,2072],[20,2073],[30,2075],[20,2077],[30,2078]],"__id":12429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci292"}},{"type":"rightadapter","out_nodes":[[5404,2071]],"__id":12432,"parentNodes":[10]},{"type":"join","out_nodes":[[5409,-1]],"__id":12433,"parentNodes":[5410,5411],"constraint":{"type":"join-reference","out_nodes":[],"__id":12434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5404,-1]],"__id":12435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5408,2072]],"__id":12440,"parentNodes":[16]},{"type":"beta","out_nodes":[[5412,-1]],"__id":12441,"parentNodes":[5413,5414]},{"type":"leftadapter","out_nodes":[[5408,-1]],"__id":12442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5411,2073]],"__id":12447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5411,2074]],"__id":12451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12452,"parentNodes":[5416],"index":622,"rule":{"name":"Bootstrap292","pattern":{"type":"object","id":2285,"cls":"Fibonacci292","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap292"},{"type":"beta","out_nodes":[[5415,-1]],"__id":12453,"parentNodes":[5417,5418]},{"type":"rightadapter","out_nodes":[[5416,2075]],"__id":12458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5416,2076]],"__id":12462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12463,"parentNodes":[5420],"index":623,"rule":{"name":"Recurse292","pattern":{"type":"composite","id":2288,"leftPattern":{"type":"not","id":2286,"cls":"Fibonacci292","alias":"f"},"rightPattern":{"type":"object","id":2287,"cls":"Fibonacci292","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci292 = defined.get('Fibonacci292');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci292(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse292"},{"type":"beta","out_nodes":[[5419,-1]],"__id":12464,"parentNodes":[5421,5422]},{"type":"rightadapter","out_nodes":[[5420,2077]],"__id":12468,"parentNodes":[37]},{"type":"not","out_nodes":[[5423,-1]],"__id":12469,"parentNodes":[5424,5425],"constraint":{"type":"join-reference","out_nodes":[],"__id":12470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5420,-1]],"__id":12471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5422,2078]],"__id":12475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5422,2079]],"__id":12479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12480,"parentNodes":[5427],"index":624,"rule":{"name":"Calculate291","pattern":{"type":"composite","id":2295,"leftPattern":{"type":"composite","id":2294,"leftPattern":{"type":"composite","id":2293,"leftPattern":{"type":"object","id":2289,"cls":"Fibonacci291","alias":"f1"},"rightPattern":{"type":"object","id":2290,"cls":"Fibonacci291","alias":"f2"}},"rightPattern":{"type":"object","id":2291,"cls":"Fibonacci291","alias":"f3"}},"rightPattern":{"type":"object","id":2292,"cls":"Result291","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate291"},{"type":"beta","out_nodes":[[5426,-1]],"__id":12481,"parentNodes":[5429,5430]},{"type":"type","out_nodes":[[3,2080]],"__id":12482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result291"}},{"type":"rightadapter","out_nodes":[[5427,2080]],"__id":12485,"parentNodes":[4]},{"type":"join","out_nodes":[[5431,-1]],"__id":12486,"parentNodes":[5433,5434],"constraint":{"type":"join-reference","out_nodes":[],"__id":12487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5427,-1]],"__id":12488,"parentNodes":[]},{"type":"type","out_nodes":[[9,2081],[14,2082],[20,2083],[30,2085],[20,2087],[30,2088]],"__id":12489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci291"}},{"type":"rightadapter","out_nodes":[[5430,2081]],"__id":12492,"parentNodes":[10]},{"type":"join","out_nodes":[[5435,-1]],"__id":12493,"parentNodes":[5436,5437],"constraint":{"type":"join-reference","out_nodes":[],"__id":12494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5430,-1]],"__id":12495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5434,2082]],"__id":12500,"parentNodes":[16]},{"type":"beta","out_nodes":[[5438,-1]],"__id":12501,"parentNodes":[5439,5440]},{"type":"leftadapter","out_nodes":[[5434,-1]],"__id":12502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5437,2083]],"__id":12507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5437,2084]],"__id":12511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12512,"parentNodes":[5442],"index":625,"rule":{"name":"Bootstrap291","pattern":{"type":"object","id":2296,"cls":"Fibonacci291","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap291"},{"type":"beta","out_nodes":[[5441,-1]],"__id":12513,"parentNodes":[5443,5444]},{"type":"rightadapter","out_nodes":[[5442,2085]],"__id":12518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5442,2086]],"__id":12522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12523,"parentNodes":[5446],"index":626,"rule":{"name":"Recurse291","pattern":{"type":"composite","id":2299,"leftPattern":{"type":"not","id":2297,"cls":"Fibonacci291","alias":"f"},"rightPattern":{"type":"object","id":2298,"cls":"Fibonacci291","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci291 = defined.get('Fibonacci291');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci291(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse291"},{"type":"beta","out_nodes":[[5445,-1]],"__id":12524,"parentNodes":[5447,5448]},{"type":"rightadapter","out_nodes":[[5446,2087]],"__id":12528,"parentNodes":[37]},{"type":"not","out_nodes":[[5449,-1]],"__id":12529,"parentNodes":[5450,5451],"constraint":{"type":"join-reference","out_nodes":[],"__id":12530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5446,-1]],"__id":12531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5448,2088]],"__id":12535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5448,2089]],"__id":12539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12540,"parentNodes":[5453],"index":627,"rule":{"name":"Calculate290","pattern":{"type":"composite","id":2306,"leftPattern":{"type":"composite","id":2305,"leftPattern":{"type":"composite","id":2304,"leftPattern":{"type":"object","id":2300,"cls":"Fibonacci290","alias":"f1"},"rightPattern":{"type":"object","id":2301,"cls":"Fibonacci290","alias":"f2"}},"rightPattern":{"type":"object","id":2302,"cls":"Fibonacci290","alias":"f3"}},"rightPattern":{"type":"object","id":2303,"cls":"Result290","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate290"},{"type":"beta","out_nodes":[[5452,-1]],"__id":12541,"parentNodes":[5455,5456]},{"type":"type","out_nodes":[[3,2090]],"__id":12542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result290"}},{"type":"rightadapter","out_nodes":[[5453,2090]],"__id":12545,"parentNodes":[4]},{"type":"join","out_nodes":[[5457,-1]],"__id":12546,"parentNodes":[5459,5460],"constraint":{"type":"join-reference","out_nodes":[],"__id":12547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5453,-1]],"__id":12548,"parentNodes":[]},{"type":"type","out_nodes":[[9,2091],[14,2092],[20,2093],[30,2095],[20,2097],[30,2098]],"__id":12549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci290"}},{"type":"rightadapter","out_nodes":[[5456,2091]],"__id":12552,"parentNodes":[10]},{"type":"join","out_nodes":[[5461,-1]],"__id":12553,"parentNodes":[5462,5463],"constraint":{"type":"join-reference","out_nodes":[],"__id":12554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5456,-1]],"__id":12555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5460,2092]],"__id":12560,"parentNodes":[16]},{"type":"beta","out_nodes":[[5464,-1]],"__id":12561,"parentNodes":[5465,5466]},{"type":"leftadapter","out_nodes":[[5460,-1]],"__id":12562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5463,2093]],"__id":12567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5463,2094]],"__id":12571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12572,"parentNodes":[5468],"index":628,"rule":{"name":"Bootstrap290","pattern":{"type":"object","id":2307,"cls":"Fibonacci290","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap290"},{"type":"beta","out_nodes":[[5467,-1]],"__id":12573,"parentNodes":[5469,5470]},{"type":"rightadapter","out_nodes":[[5468,2095]],"__id":12578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5468,2096]],"__id":12582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12583,"parentNodes":[5472],"index":629,"rule":{"name":"Recurse290","pattern":{"type":"composite","id":2310,"leftPattern":{"type":"not","id":2308,"cls":"Fibonacci290","alias":"f"},"rightPattern":{"type":"object","id":2309,"cls":"Fibonacci290","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');let Fibonacci290 = defined.get('Fibonacci290');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci290(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse290"},{"type":"beta","out_nodes":[[5471,-1]],"__id":12584,"parentNodes":[5473,5474]},{"type":"rightadapter","out_nodes":[[5472,2097]],"__id":12588,"parentNodes":[37]},{"type":"not","out_nodes":[[5475,-1]],"__id":12589,"parentNodes":[5476,5477],"constraint":{"type":"join-reference","out_nodes":[],"__id":12590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5472,-1]],"__id":12591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5474,2098]],"__id":12595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5474,2099]],"__id":12599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12600,"parentNodes":[5479],"index":630,"rule":{"name":"Calculate289","pattern":{"type":"composite","id":2317,"leftPattern":{"type":"composite","id":2316,"leftPattern":{"type":"composite","id":2315,"leftPattern":{"type":"object","id":2311,"cls":"Fibonacci289","alias":"f1"},"rightPattern":{"type":"object","id":2312,"cls":"Fibonacci289","alias":"f2"}},"rightPattern":{"type":"object","id":2313,"cls":"Fibonacci289","alias":"f3"}},"rightPattern":{"type":"object","id":2314,"cls":"Result289","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate289"},{"type":"beta","out_nodes":[[5478,-1]],"__id":12601,"parentNodes":[5481,5482]},{"type":"type","out_nodes":[[3,2100]],"__id":12602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result289"}},{"type":"rightadapter","out_nodes":[[5479,2100]],"__id":12605,"parentNodes":[4]},{"type":"join","out_nodes":[[5483,-1]],"__id":12606,"parentNodes":[5485,5486],"constraint":{"type":"join-reference","out_nodes":[],"__id":12607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5479,-1]],"__id":12608,"parentNodes":[]},{"type":"type","out_nodes":[[9,2101],[14,2102],[20,2103],[30,2105],[20,2107],[30,2108]],"__id":12609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci289"}},{"type":"rightadapter","out_nodes":[[5482,2101]],"__id":12612,"parentNodes":[10]},{"type":"join","out_nodes":[[5487,-1]],"__id":12613,"parentNodes":[5488,5489],"constraint":{"type":"join-reference","out_nodes":[],"__id":12614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5482,-1]],"__id":12615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5486,2102]],"__id":12620,"parentNodes":[16]},{"type":"beta","out_nodes":[[5490,-1]],"__id":12621,"parentNodes":[5491,5492]},{"type":"leftadapter","out_nodes":[[5486,-1]],"__id":12622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5489,2103]],"__id":12627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5489,2104]],"__id":12631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12632,"parentNodes":[5494],"index":631,"rule":{"name":"Bootstrap289","pattern":{"type":"object","id":2318,"cls":"Fibonacci289","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap289"},{"type":"beta","out_nodes":[[5493,-1]],"__id":12633,"parentNodes":[5495,5496]},{"type":"rightadapter","out_nodes":[[5494,2105]],"__id":12638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5494,2106]],"__id":12642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12643,"parentNodes":[5498],"index":632,"rule":{"name":"Recurse289","pattern":{"type":"composite","id":2321,"leftPattern":{"type":"not","id":2319,"cls":"Fibonacci289","alias":"f"},"rightPattern":{"type":"object","id":2320,"cls":"Fibonacci289","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci289 = defined.get('Fibonacci289');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci289(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse289"},{"type":"beta","out_nodes":[[5497,-1]],"__id":12644,"parentNodes":[5499,5500]},{"type":"rightadapter","out_nodes":[[5498,2107]],"__id":12648,"parentNodes":[37]},{"type":"not","out_nodes":[[5501,-1]],"__id":12649,"parentNodes":[5502,5503],"constraint":{"type":"join-reference","out_nodes":[],"__id":12650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5498,-1]],"__id":12651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5500,2108]],"__id":12655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5500,2109]],"__id":12659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12660,"parentNodes":[5505],"index":633,"rule":{"name":"Calculate288","pattern":{"type":"composite","id":2328,"leftPattern":{"type":"composite","id":2327,"leftPattern":{"type":"composite","id":2326,"leftPattern":{"type":"object","id":2322,"cls":"Fibonacci288","alias":"f1"},"rightPattern":{"type":"object","id":2323,"cls":"Fibonacci288","alias":"f2"}},"rightPattern":{"type":"object","id":2324,"cls":"Fibonacci288","alias":"f3"}},"rightPattern":{"type":"object","id":2325,"cls":"Result288","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate288"},{"type":"beta","out_nodes":[[5504,-1]],"__id":12661,"parentNodes":[5507,5508]},{"type":"type","out_nodes":[[3,2110]],"__id":12662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result288"}},{"type":"rightadapter","out_nodes":[[5505,2110]],"__id":12665,"parentNodes":[4]},{"type":"join","out_nodes":[[5509,-1]],"__id":12666,"parentNodes":[5511,5512],"constraint":{"type":"join-reference","out_nodes":[],"__id":12667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5505,-1]],"__id":12668,"parentNodes":[]},{"type":"type","out_nodes":[[9,2111],[14,2112],[20,2113],[30,2115],[20,2117],[30,2118]],"__id":12669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci288"}},{"type":"rightadapter","out_nodes":[[5508,2111]],"__id":12672,"parentNodes":[10]},{"type":"join","out_nodes":[[5513,-1]],"__id":12673,"parentNodes":[5514,5515],"constraint":{"type":"join-reference","out_nodes":[],"__id":12674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5508,-1]],"__id":12675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5512,2112]],"__id":12680,"parentNodes":[16]},{"type":"beta","out_nodes":[[5516,-1]],"__id":12681,"parentNodes":[5517,5518]},{"type":"leftadapter","out_nodes":[[5512,-1]],"__id":12682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5515,2113]],"__id":12687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5515,2114]],"__id":12691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12692,"parentNodes":[5520],"index":634,"rule":{"name":"Bootstrap288","pattern":{"type":"object","id":2329,"cls":"Fibonacci288","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap288"},{"type":"beta","out_nodes":[[5519,-1]],"__id":12693,"parentNodes":[5521,5522]},{"type":"rightadapter","out_nodes":[[5520,2115]],"__id":12698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5520,2116]],"__id":12702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12703,"parentNodes":[5524],"index":635,"rule":{"name":"Recurse288","pattern":{"type":"composite","id":2332,"leftPattern":{"type":"not","id":2330,"cls":"Fibonacci288","alias":"f"},"rightPattern":{"type":"object","id":2331,"cls":"Fibonacci288","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci288 = defined.get('Fibonacci288');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci288(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse288"},{"type":"beta","out_nodes":[[5523,-1]],"__id":12704,"parentNodes":[5525,5526]},{"type":"rightadapter","out_nodes":[[5524,2117]],"__id":12708,"parentNodes":[37]},{"type":"not","out_nodes":[[5527,-1]],"__id":12709,"parentNodes":[5528,5529],"constraint":{"type":"join-reference","out_nodes":[],"__id":12710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5524,-1]],"__id":12711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5526,2118]],"__id":12715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5526,2119]],"__id":12719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12720,"parentNodes":[5531],"index":636,"rule":{"name":"Calculate287","pattern":{"type":"composite","id":2339,"leftPattern":{"type":"composite","id":2338,"leftPattern":{"type":"composite","id":2337,"leftPattern":{"type":"object","id":2333,"cls":"Fibonacci287","alias":"f1"},"rightPattern":{"type":"object","id":2334,"cls":"Fibonacci287","alias":"f2"}},"rightPattern":{"type":"object","id":2335,"cls":"Fibonacci287","alias":"f3"}},"rightPattern":{"type":"object","id":2336,"cls":"Result287","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate287"},{"type":"beta","out_nodes":[[5530,-1]],"__id":12721,"parentNodes":[5533,5534]},{"type":"type","out_nodes":[[3,2120]],"__id":12722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result287"}},{"type":"rightadapter","out_nodes":[[5531,2120]],"__id":12725,"parentNodes":[4]},{"type":"join","out_nodes":[[5535,-1]],"__id":12726,"parentNodes":[5537,5538],"constraint":{"type":"join-reference","out_nodes":[],"__id":12727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5531,-1]],"__id":12728,"parentNodes":[]},{"type":"type","out_nodes":[[9,2121],[14,2122],[20,2123],[30,2125],[20,2127],[30,2128]],"__id":12729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci287"}},{"type":"rightadapter","out_nodes":[[5534,2121]],"__id":12732,"parentNodes":[10]},{"type":"join","out_nodes":[[5539,-1]],"__id":12733,"parentNodes":[5540,5541],"constraint":{"type":"join-reference","out_nodes":[],"__id":12734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5534,-1]],"__id":12735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5538,2122]],"__id":12740,"parentNodes":[16]},{"type":"beta","out_nodes":[[5542,-1]],"__id":12741,"parentNodes":[5543,5544]},{"type":"leftadapter","out_nodes":[[5538,-1]],"__id":12742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5541,2123]],"__id":12747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5541,2124]],"__id":12751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12752,"parentNodes":[5546],"index":637,"rule":{"name":"Bootstrap287","pattern":{"type":"object","id":2340,"cls":"Fibonacci287","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap287"},{"type":"beta","out_nodes":[[5545,-1]],"__id":12753,"parentNodes":[5547,5548]},{"type":"rightadapter","out_nodes":[[5546,2125]],"__id":12758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5546,2126]],"__id":12762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12763,"parentNodes":[5550],"index":638,"rule":{"name":"Recurse287","pattern":{"type":"composite","id":2343,"leftPattern":{"type":"not","id":2341,"cls":"Fibonacci287","alias":"f"},"rightPattern":{"type":"object","id":2342,"cls":"Fibonacci287","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci287 = defined.get('Fibonacci287');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci287(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse287"},{"type":"beta","out_nodes":[[5549,-1]],"__id":12764,"parentNodes":[5551,5552]},{"type":"rightadapter","out_nodes":[[5550,2127]],"__id":12768,"parentNodes":[37]},{"type":"not","out_nodes":[[5553,-1]],"__id":12769,"parentNodes":[5554,5555],"constraint":{"type":"join-reference","out_nodes":[],"__id":12770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5550,-1]],"__id":12771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5552,2128]],"__id":12775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5552,2129]],"__id":12779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12780,"parentNodes":[5557],"index":639,"rule":{"name":"Calculate286","pattern":{"type":"composite","id":2350,"leftPattern":{"type":"composite","id":2349,"leftPattern":{"type":"composite","id":2348,"leftPattern":{"type":"object","id":2344,"cls":"Fibonacci286","alias":"f1"},"rightPattern":{"type":"object","id":2345,"cls":"Fibonacci286","alias":"f2"}},"rightPattern":{"type":"object","id":2346,"cls":"Fibonacci286","alias":"f3"}},"rightPattern":{"type":"object","id":2347,"cls":"Result286","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate286"},{"type":"beta","out_nodes":[[5556,-1]],"__id":12781,"parentNodes":[5559,5560]},{"type":"type","out_nodes":[[3,2130]],"__id":12782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result286"}},{"type":"rightadapter","out_nodes":[[5557,2130]],"__id":12785,"parentNodes":[4]},{"type":"join","out_nodes":[[5561,-1]],"__id":12786,"parentNodes":[5563,5564],"constraint":{"type":"join-reference","out_nodes":[],"__id":12787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5557,-1]],"__id":12788,"parentNodes":[]},{"type":"type","out_nodes":[[9,2131],[14,2132],[20,2133],[30,2135],[20,2137],[30,2138]],"__id":12789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci286"}},{"type":"rightadapter","out_nodes":[[5560,2131]],"__id":12792,"parentNodes":[10]},{"type":"join","out_nodes":[[5565,-1]],"__id":12793,"parentNodes":[5566,5567],"constraint":{"type":"join-reference","out_nodes":[],"__id":12794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5560,-1]],"__id":12795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5564,2132]],"__id":12800,"parentNodes":[16]},{"type":"beta","out_nodes":[[5568,-1]],"__id":12801,"parentNodes":[5569,5570]},{"type":"leftadapter","out_nodes":[[5564,-1]],"__id":12802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5567,2133]],"__id":12807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5567,2134]],"__id":12811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12812,"parentNodes":[5572],"index":640,"rule":{"name":"Bootstrap286","pattern":{"type":"object","id":2351,"cls":"Fibonacci286","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap286"},{"type":"beta","out_nodes":[[5571,-1]],"__id":12813,"parentNodes":[5573,5574]},{"type":"rightadapter","out_nodes":[[5572,2135]],"__id":12818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5572,2136]],"__id":12822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12823,"parentNodes":[5576],"index":641,"rule":{"name":"Recurse286","pattern":{"type":"composite","id":2354,"leftPattern":{"type":"not","id":2352,"cls":"Fibonacci286","alias":"f"},"rightPattern":{"type":"object","id":2353,"cls":"Fibonacci286","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci286 = defined.get('Fibonacci286');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci286(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse286"},{"type":"beta","out_nodes":[[5575,-1]],"__id":12824,"parentNodes":[5577,5578]},{"type":"rightadapter","out_nodes":[[5576,2137]],"__id":12828,"parentNodes":[37]},{"type":"not","out_nodes":[[5579,-1]],"__id":12829,"parentNodes":[5580,5581],"constraint":{"type":"join-reference","out_nodes":[],"__id":12830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5576,-1]],"__id":12831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5578,2138]],"__id":12835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5578,2139]],"__id":12839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12840,"parentNodes":[5583],"index":642,"rule":{"name":"Calculate285","pattern":{"type":"composite","id":2361,"leftPattern":{"type":"composite","id":2360,"leftPattern":{"type":"composite","id":2359,"leftPattern":{"type":"object","id":2355,"cls":"Fibonacci285","alias":"f1"},"rightPattern":{"type":"object","id":2356,"cls":"Fibonacci285","alias":"f2"}},"rightPattern":{"type":"object","id":2357,"cls":"Fibonacci285","alias":"f3"}},"rightPattern":{"type":"object","id":2358,"cls":"Result285","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate285"},{"type":"beta","out_nodes":[[5582,-1]],"__id":12841,"parentNodes":[5585,5586]},{"type":"type","out_nodes":[[3,2140]],"__id":12842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result285"}},{"type":"rightadapter","out_nodes":[[5583,2140]],"__id":12845,"parentNodes":[4]},{"type":"join","out_nodes":[[5587,-1]],"__id":12846,"parentNodes":[5589,5590],"constraint":{"type":"join-reference","out_nodes":[],"__id":12847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5583,-1]],"__id":12848,"parentNodes":[]},{"type":"type","out_nodes":[[9,2141],[14,2142],[20,2143],[30,2145],[20,2147],[30,2148]],"__id":12849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci285"}},{"type":"rightadapter","out_nodes":[[5586,2141]],"__id":12852,"parentNodes":[10]},{"type":"join","out_nodes":[[5591,-1]],"__id":12853,"parentNodes":[5592,5593],"constraint":{"type":"join-reference","out_nodes":[],"__id":12854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5586,-1]],"__id":12855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5590,2142]],"__id":12860,"parentNodes":[16]},{"type":"beta","out_nodes":[[5594,-1]],"__id":12861,"parentNodes":[5595,5596]},{"type":"leftadapter","out_nodes":[[5590,-1]],"__id":12862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5593,2143]],"__id":12867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5593,2144]],"__id":12871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12872,"parentNodes":[5598],"index":643,"rule":{"name":"Bootstrap285","pattern":{"type":"object","id":2362,"cls":"Fibonacci285","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap285"},{"type":"beta","out_nodes":[[5597,-1]],"__id":12873,"parentNodes":[5599,5600]},{"type":"rightadapter","out_nodes":[[5598,2145]],"__id":12878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5598,2146]],"__id":12882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12883,"parentNodes":[5602],"index":644,"rule":{"name":"Recurse285","pattern":{"type":"composite","id":2365,"leftPattern":{"type":"not","id":2363,"cls":"Fibonacci285","alias":"f"},"rightPattern":{"type":"object","id":2364,"cls":"Fibonacci285","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci285 = defined.get('Fibonacci285');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci285(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse285"},{"type":"beta","out_nodes":[[5601,-1]],"__id":12884,"parentNodes":[5603,5604]},{"type":"rightadapter","out_nodes":[[5602,2147]],"__id":12888,"parentNodes":[37]},{"type":"not","out_nodes":[[5605,-1]],"__id":12889,"parentNodes":[5606,5607],"constraint":{"type":"join-reference","out_nodes":[],"__id":12890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5602,-1]],"__id":12891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5604,2148]],"__id":12895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5604,2149]],"__id":12899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12900,"parentNodes":[5609],"index":645,"rule":{"name":"Calculate284","pattern":{"type":"composite","id":2372,"leftPattern":{"type":"composite","id":2371,"leftPattern":{"type":"composite","id":2370,"leftPattern":{"type":"object","id":2366,"cls":"Fibonacci284","alias":"f1"},"rightPattern":{"type":"object","id":2367,"cls":"Fibonacci284","alias":"f2"}},"rightPattern":{"type":"object","id":2368,"cls":"Fibonacci284","alias":"f3"}},"rightPattern":{"type":"object","id":2369,"cls":"Result284","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate284"},{"type":"beta","out_nodes":[[5608,-1]],"__id":12901,"parentNodes":[5611,5612]},{"type":"type","out_nodes":[[3,2150]],"__id":12902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result284"}},{"type":"rightadapter","out_nodes":[[5609,2150]],"__id":12905,"parentNodes":[4]},{"type":"join","out_nodes":[[5613,-1]],"__id":12906,"parentNodes":[5615,5616],"constraint":{"type":"join-reference","out_nodes":[],"__id":12907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5609,-1]],"__id":12908,"parentNodes":[]},{"type":"type","out_nodes":[[9,2151],[14,2152],[20,2153],[30,2155],[20,2157],[30,2158]],"__id":12909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci284"}},{"type":"rightadapter","out_nodes":[[5612,2151]],"__id":12912,"parentNodes":[10]},{"type":"join","out_nodes":[[5617,-1]],"__id":12913,"parentNodes":[5618,5619],"constraint":{"type":"join-reference","out_nodes":[],"__id":12914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5612,-1]],"__id":12915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5616,2152]],"__id":12920,"parentNodes":[16]},{"type":"beta","out_nodes":[[5620,-1]],"__id":12921,"parentNodes":[5621,5622]},{"type":"leftadapter","out_nodes":[[5616,-1]],"__id":12922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5619,2153]],"__id":12927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5619,2154]],"__id":12931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12932,"parentNodes":[5624],"index":646,"rule":{"name":"Bootstrap284","pattern":{"type":"object","id":2373,"cls":"Fibonacci284","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap284"},{"type":"beta","out_nodes":[[5623,-1]],"__id":12933,"parentNodes":[5625,5626]},{"type":"rightadapter","out_nodes":[[5624,2155]],"__id":12938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5624,2156]],"__id":12942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12943,"parentNodes":[5628],"index":647,"rule":{"name":"Recurse284","pattern":{"type":"composite","id":2376,"leftPattern":{"type":"not","id":2374,"cls":"Fibonacci284","alias":"f"},"rightPattern":{"type":"object","id":2375,"cls":"Fibonacci284","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci284 = defined.get('Fibonacci284');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci284(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse284"},{"type":"beta","out_nodes":[[5627,-1]],"__id":12944,"parentNodes":[5629,5630]},{"type":"rightadapter","out_nodes":[[5628,2157]],"__id":12948,"parentNodes":[37]},{"type":"not","out_nodes":[[5631,-1]],"__id":12949,"parentNodes":[5632,5633],"constraint":{"type":"join-reference","out_nodes":[],"__id":12950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5628,-1]],"__id":12951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5630,2158]],"__id":12955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5630,2159]],"__id":12959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12960,"parentNodes":[5635],"index":648,"rule":{"name":"Calculate283","pattern":{"type":"composite","id":2383,"leftPattern":{"type":"composite","id":2382,"leftPattern":{"type":"composite","id":2381,"leftPattern":{"type":"object","id":2377,"cls":"Fibonacci283","alias":"f1"},"rightPattern":{"type":"object","id":2378,"cls":"Fibonacci283","alias":"f2"}},"rightPattern":{"type":"object","id":2379,"cls":"Fibonacci283","alias":"f3"}},"rightPattern":{"type":"object","id":2380,"cls":"Result283","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate283"},{"type":"beta","out_nodes":[[5634,-1]],"__id":12961,"parentNodes":[5637,5638]},{"type":"type","out_nodes":[[3,2160]],"__id":12962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result283"}},{"type":"rightadapter","out_nodes":[[5635,2160]],"__id":12965,"parentNodes":[4]},{"type":"join","out_nodes":[[5639,-1]],"__id":12966,"parentNodes":[5641,5642],"constraint":{"type":"join-reference","out_nodes":[],"__id":12967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5635,-1]],"__id":12968,"parentNodes":[]},{"type":"type","out_nodes":[[9,2161],[14,2162],[20,2163],[30,2165],[20,2167],[30,2168]],"__id":12969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci283"}},{"type":"rightadapter","out_nodes":[[5638,2161]],"__id":12972,"parentNodes":[10]},{"type":"join","out_nodes":[[5643,-1]],"__id":12973,"parentNodes":[5644,5645],"constraint":{"type":"join-reference","out_nodes":[],"__id":12974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5638,-1]],"__id":12975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5642,2162]],"__id":12980,"parentNodes":[16]},{"type":"beta","out_nodes":[[5646,-1]],"__id":12981,"parentNodes":[5647,5648]},{"type":"leftadapter","out_nodes":[[5642,-1]],"__id":12982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5645,2163]],"__id":12987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5645,2164]],"__id":12991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":12992,"parentNodes":[5650],"index":649,"rule":{"name":"Bootstrap283","pattern":{"type":"object","id":2384,"cls":"Fibonacci283","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap283"},{"type":"beta","out_nodes":[[5649,-1]],"__id":12993,"parentNodes":[5651,5652]},{"type":"rightadapter","out_nodes":[[5650,2165]],"__id":12998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5650,2166]],"__id":13002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13003,"parentNodes":[5654],"index":650,"rule":{"name":"Recurse283","pattern":{"type":"composite","id":2387,"leftPattern":{"type":"not","id":2385,"cls":"Fibonacci283","alias":"f"},"rightPattern":{"type":"object","id":2386,"cls":"Fibonacci283","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci283 = defined.get('Fibonacci283');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci283(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse283"},{"type":"beta","out_nodes":[[5653,-1]],"__id":13004,"parentNodes":[5655,5656]},{"type":"rightadapter","out_nodes":[[5654,2167]],"__id":13008,"parentNodes":[37]},{"type":"not","out_nodes":[[5657,-1]],"__id":13009,"parentNodes":[5658,5659],"constraint":{"type":"join-reference","out_nodes":[],"__id":13010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5654,-1]],"__id":13011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5656,2168]],"__id":13015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5656,2169]],"__id":13019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13020,"parentNodes":[5661],"index":651,"rule":{"name":"Calculate282","pattern":{"type":"composite","id":2394,"leftPattern":{"type":"composite","id":2393,"leftPattern":{"type":"composite","id":2392,"leftPattern":{"type":"object","id":2388,"cls":"Fibonacci282","alias":"f1"},"rightPattern":{"type":"object","id":2389,"cls":"Fibonacci282","alias":"f2"}},"rightPattern":{"type":"object","id":2390,"cls":"Fibonacci282","alias":"f3"}},"rightPattern":{"type":"object","id":2391,"cls":"Result282","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate282"},{"type":"beta","out_nodes":[[5660,-1]],"__id":13021,"parentNodes":[5663,5664]},{"type":"type","out_nodes":[[3,2170]],"__id":13022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result282"}},{"type":"rightadapter","out_nodes":[[5661,2170]],"__id":13025,"parentNodes":[4]},{"type":"join","out_nodes":[[5665,-1]],"__id":13026,"parentNodes":[5667,5668],"constraint":{"type":"join-reference","out_nodes":[],"__id":13027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5661,-1]],"__id":13028,"parentNodes":[]},{"type":"type","out_nodes":[[9,2171],[14,2172],[20,2173],[30,2175],[20,2177],[30,2178]],"__id":13029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci282"}},{"type":"rightadapter","out_nodes":[[5664,2171]],"__id":13032,"parentNodes":[10]},{"type":"join","out_nodes":[[5669,-1]],"__id":13033,"parentNodes":[5670,5671],"constraint":{"type":"join-reference","out_nodes":[],"__id":13034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5664,-1]],"__id":13035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5668,2172]],"__id":13040,"parentNodes":[16]},{"type":"beta","out_nodes":[[5672,-1]],"__id":13041,"parentNodes":[5673,5674]},{"type":"leftadapter","out_nodes":[[5668,-1]],"__id":13042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5671,2173]],"__id":13047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5671,2174]],"__id":13051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13052,"parentNodes":[5676],"index":652,"rule":{"name":"Bootstrap282","pattern":{"type":"object","id":2395,"cls":"Fibonacci282","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap282"},{"type":"beta","out_nodes":[[5675,-1]],"__id":13053,"parentNodes":[5677,5678]},{"type":"rightadapter","out_nodes":[[5676,2175]],"__id":13058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5676,2176]],"__id":13062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13063,"parentNodes":[5680],"index":653,"rule":{"name":"Recurse282","pattern":{"type":"composite","id":2398,"leftPattern":{"type":"not","id":2396,"cls":"Fibonacci282","alias":"f"},"rightPattern":{"type":"object","id":2397,"cls":"Fibonacci282","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci282 = defined.get('Fibonacci282');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci282(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse282"},{"type":"beta","out_nodes":[[5679,-1]],"__id":13064,"parentNodes":[5681,5682]},{"type":"rightadapter","out_nodes":[[5680,2177]],"__id":13068,"parentNodes":[37]},{"type":"not","out_nodes":[[5683,-1]],"__id":13069,"parentNodes":[5684,5685],"constraint":{"type":"join-reference","out_nodes":[],"__id":13070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5680,-1]],"__id":13071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5682,2178]],"__id":13075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5682,2179]],"__id":13079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13080,"parentNodes":[5687],"index":654,"rule":{"name":"Calculate281","pattern":{"type":"composite","id":2405,"leftPattern":{"type":"composite","id":2404,"leftPattern":{"type":"composite","id":2403,"leftPattern":{"type":"object","id":2399,"cls":"Fibonacci281","alias":"f1"},"rightPattern":{"type":"object","id":2400,"cls":"Fibonacci281","alias":"f2"}},"rightPattern":{"type":"object","id":2401,"cls":"Fibonacci281","alias":"f3"}},"rightPattern":{"type":"object","id":2402,"cls":"Result281","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate281"},{"type":"beta","out_nodes":[[5686,-1]],"__id":13081,"parentNodes":[5689,5690]},{"type":"type","out_nodes":[[3,2180]],"__id":13082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result281"}},{"type":"rightadapter","out_nodes":[[5687,2180]],"__id":13085,"parentNodes":[4]},{"type":"join","out_nodes":[[5691,-1]],"__id":13086,"parentNodes":[5693,5694],"constraint":{"type":"join-reference","out_nodes":[],"__id":13087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5687,-1]],"__id":13088,"parentNodes":[]},{"type":"type","out_nodes":[[9,2181],[14,2182],[20,2183],[30,2185],[20,2187],[30,2188]],"__id":13089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci281"}},{"type":"rightadapter","out_nodes":[[5690,2181]],"__id":13092,"parentNodes":[10]},{"type":"join","out_nodes":[[5695,-1]],"__id":13093,"parentNodes":[5696,5697],"constraint":{"type":"join-reference","out_nodes":[],"__id":13094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5690,-1]],"__id":13095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5694,2182]],"__id":13100,"parentNodes":[16]},{"type":"beta","out_nodes":[[5698,-1]],"__id":13101,"parentNodes":[5699,5700]},{"type":"leftadapter","out_nodes":[[5694,-1]],"__id":13102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5697,2183]],"__id":13107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5697,2184]],"__id":13111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13112,"parentNodes":[5702],"index":655,"rule":{"name":"Bootstrap281","pattern":{"type":"object","id":2406,"cls":"Fibonacci281","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap281"},{"type":"beta","out_nodes":[[5701,-1]],"__id":13113,"parentNodes":[5703,5704]},{"type":"rightadapter","out_nodes":[[5702,2185]],"__id":13118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5702,2186]],"__id":13122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13123,"parentNodes":[5706],"index":656,"rule":{"name":"Recurse281","pattern":{"type":"composite","id":2409,"leftPattern":{"type":"not","id":2407,"cls":"Fibonacci281","alias":"f"},"rightPattern":{"type":"object","id":2408,"cls":"Fibonacci281","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci281 = defined.get('Fibonacci281');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci281(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse281"},{"type":"beta","out_nodes":[[5705,-1]],"__id":13124,"parentNodes":[5707,5708]},{"type":"rightadapter","out_nodes":[[5706,2187]],"__id":13128,"parentNodes":[37]},{"type":"not","out_nodes":[[5709,-1]],"__id":13129,"parentNodes":[5710,5711],"constraint":{"type":"join-reference","out_nodes":[],"__id":13130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5706,-1]],"__id":13131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5708,2188]],"__id":13135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5708,2189]],"__id":13139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13140,"parentNodes":[5713],"index":657,"rule":{"name":"Calculate280","pattern":{"type":"composite","id":2416,"leftPattern":{"type":"composite","id":2415,"leftPattern":{"type":"composite","id":2414,"leftPattern":{"type":"object","id":2410,"cls":"Fibonacci280","alias":"f1"},"rightPattern":{"type":"object","id":2411,"cls":"Fibonacci280","alias":"f2"}},"rightPattern":{"type":"object","id":2412,"cls":"Fibonacci280","alias":"f3"}},"rightPattern":{"type":"object","id":2413,"cls":"Result280","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate280"},{"type":"beta","out_nodes":[[5712,-1]],"__id":13141,"parentNodes":[5715,5716]},{"type":"type","out_nodes":[[3,2190]],"__id":13142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result280"}},{"type":"rightadapter","out_nodes":[[5713,2190]],"__id":13145,"parentNodes":[4]},{"type":"join","out_nodes":[[5717,-1]],"__id":13146,"parentNodes":[5719,5720],"constraint":{"type":"join-reference","out_nodes":[],"__id":13147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5713,-1]],"__id":13148,"parentNodes":[]},{"type":"type","out_nodes":[[9,2191],[14,2192],[20,2193],[30,2195],[20,2197],[30,2198]],"__id":13149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci280"}},{"type":"rightadapter","out_nodes":[[5716,2191]],"__id":13152,"parentNodes":[10]},{"type":"join","out_nodes":[[5721,-1]],"__id":13153,"parentNodes":[5722,5723],"constraint":{"type":"join-reference","out_nodes":[],"__id":13154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5716,-1]],"__id":13155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5720,2192]],"__id":13160,"parentNodes":[16]},{"type":"beta","out_nodes":[[5724,-1]],"__id":13161,"parentNodes":[5725,5726]},{"type":"leftadapter","out_nodes":[[5720,-1]],"__id":13162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5723,2193]],"__id":13167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5723,2194]],"__id":13171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13172,"parentNodes":[5728],"index":658,"rule":{"name":"Bootstrap280","pattern":{"type":"object","id":2417,"cls":"Fibonacci280","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap280"},{"type":"beta","out_nodes":[[5727,-1]],"__id":13173,"parentNodes":[5729,5730]},{"type":"rightadapter","out_nodes":[[5728,2195]],"__id":13178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5728,2196]],"__id":13182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13183,"parentNodes":[5732],"index":659,"rule":{"name":"Recurse280","pattern":{"type":"composite","id":2420,"leftPattern":{"type":"not","id":2418,"cls":"Fibonacci280","alias":"f"},"rightPattern":{"type":"object","id":2419,"cls":"Fibonacci280","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');let Fibonacci280 = defined.get('Fibonacci280');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci280(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse280"},{"type":"beta","out_nodes":[[5731,-1]],"__id":13184,"parentNodes":[5733,5734]},{"type":"rightadapter","out_nodes":[[5732,2197]],"__id":13188,"parentNodes":[37]},{"type":"not","out_nodes":[[5735,-1]],"__id":13189,"parentNodes":[5736,5737],"constraint":{"type":"join-reference","out_nodes":[],"__id":13190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5732,-1]],"__id":13191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5734,2198]],"__id":13195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5734,2199]],"__id":13199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13200,"parentNodes":[5739],"index":660,"rule":{"name":"Calculate279","pattern":{"type":"composite","id":2427,"leftPattern":{"type":"composite","id":2426,"leftPattern":{"type":"composite","id":2425,"leftPattern":{"type":"object","id":2421,"cls":"Fibonacci279","alias":"f1"},"rightPattern":{"type":"object","id":2422,"cls":"Fibonacci279","alias":"f2"}},"rightPattern":{"type":"object","id":2423,"cls":"Fibonacci279","alias":"f3"}},"rightPattern":{"type":"object","id":2424,"cls":"Result279","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate279"},{"type":"beta","out_nodes":[[5738,-1]],"__id":13201,"parentNodes":[5741,5742]},{"type":"type","out_nodes":[[3,2200]],"__id":13202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result279"}},{"type":"rightadapter","out_nodes":[[5739,2200]],"__id":13205,"parentNodes":[4]},{"type":"join","out_nodes":[[5743,-1]],"__id":13206,"parentNodes":[5745,5746],"constraint":{"type":"join-reference","out_nodes":[],"__id":13207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5739,-1]],"__id":13208,"parentNodes":[]},{"type":"type","out_nodes":[[9,2201],[14,2202],[20,2203],[30,2205],[20,2207],[30,2208]],"__id":13209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci279"}},{"type":"rightadapter","out_nodes":[[5742,2201]],"__id":13212,"parentNodes":[10]},{"type":"join","out_nodes":[[5747,-1]],"__id":13213,"parentNodes":[5748,5749],"constraint":{"type":"join-reference","out_nodes":[],"__id":13214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5742,-1]],"__id":13215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5746,2202]],"__id":13220,"parentNodes":[16]},{"type":"beta","out_nodes":[[5750,-1]],"__id":13221,"parentNodes":[5751,5752]},{"type":"leftadapter","out_nodes":[[5746,-1]],"__id":13222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5749,2203]],"__id":13227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5749,2204]],"__id":13231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13232,"parentNodes":[5754],"index":661,"rule":{"name":"Bootstrap279","pattern":{"type":"object","id":2428,"cls":"Fibonacci279","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap279"},{"type":"beta","out_nodes":[[5753,-1]],"__id":13233,"parentNodes":[5755,5756]},{"type":"rightadapter","out_nodes":[[5754,2205]],"__id":13238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5754,2206]],"__id":13242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13243,"parentNodes":[5758],"index":662,"rule":{"name":"Recurse279","pattern":{"type":"composite","id":2431,"leftPattern":{"type":"not","id":2429,"cls":"Fibonacci279","alias":"f"},"rightPattern":{"type":"object","id":2430,"cls":"Fibonacci279","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci279 = defined.get('Fibonacci279');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci279(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse279"},{"type":"beta","out_nodes":[[5757,-1]],"__id":13244,"parentNodes":[5759,5760]},{"type":"rightadapter","out_nodes":[[5758,2207]],"__id":13248,"parentNodes":[37]},{"type":"not","out_nodes":[[5761,-1]],"__id":13249,"parentNodes":[5762,5763],"constraint":{"type":"join-reference","out_nodes":[],"__id":13250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5758,-1]],"__id":13251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5760,2208]],"__id":13255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5760,2209]],"__id":13259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13260,"parentNodes":[5765],"index":663,"rule":{"name":"Calculate278","pattern":{"type":"composite","id":2438,"leftPattern":{"type":"composite","id":2437,"leftPattern":{"type":"composite","id":2436,"leftPattern":{"type":"object","id":2432,"cls":"Fibonacci278","alias":"f1"},"rightPattern":{"type":"object","id":2433,"cls":"Fibonacci278","alias":"f2"}},"rightPattern":{"type":"object","id":2434,"cls":"Fibonacci278","alias":"f3"}},"rightPattern":{"type":"object","id":2435,"cls":"Result278","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate278"},{"type":"beta","out_nodes":[[5764,-1]],"__id":13261,"parentNodes":[5767,5768]},{"type":"type","out_nodes":[[3,2210]],"__id":13262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result278"}},{"type":"rightadapter","out_nodes":[[5765,2210]],"__id":13265,"parentNodes":[4]},{"type":"join","out_nodes":[[5769,-1]],"__id":13266,"parentNodes":[5771,5772],"constraint":{"type":"join-reference","out_nodes":[],"__id":13267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5765,-1]],"__id":13268,"parentNodes":[]},{"type":"type","out_nodes":[[9,2211],[14,2212],[20,2213],[30,2215],[20,2217],[30,2218]],"__id":13269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci278"}},{"type":"rightadapter","out_nodes":[[5768,2211]],"__id":13272,"parentNodes":[10]},{"type":"join","out_nodes":[[5773,-1]],"__id":13273,"parentNodes":[5774,5775],"constraint":{"type":"join-reference","out_nodes":[],"__id":13274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5768,-1]],"__id":13275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5772,2212]],"__id":13280,"parentNodes":[16]},{"type":"beta","out_nodes":[[5776,-1]],"__id":13281,"parentNodes":[5777,5778]},{"type":"leftadapter","out_nodes":[[5772,-1]],"__id":13282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5775,2213]],"__id":13287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5775,2214]],"__id":13291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13292,"parentNodes":[5780],"index":664,"rule":{"name":"Bootstrap278","pattern":{"type":"object","id":2439,"cls":"Fibonacci278","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap278"},{"type":"beta","out_nodes":[[5779,-1]],"__id":13293,"parentNodes":[5781,5782]},{"type":"rightadapter","out_nodes":[[5780,2215]],"__id":13298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5780,2216]],"__id":13302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13303,"parentNodes":[5784],"index":665,"rule":{"name":"Recurse278","pattern":{"type":"composite","id":2442,"leftPattern":{"type":"not","id":2440,"cls":"Fibonacci278","alias":"f"},"rightPattern":{"type":"object","id":2441,"cls":"Fibonacci278","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci278 = defined.get('Fibonacci278');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci278(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse278"},{"type":"beta","out_nodes":[[5783,-1]],"__id":13304,"parentNodes":[5785,5786]},{"type":"rightadapter","out_nodes":[[5784,2217]],"__id":13308,"parentNodes":[37]},{"type":"not","out_nodes":[[5787,-1]],"__id":13309,"parentNodes":[5788,5789],"constraint":{"type":"join-reference","out_nodes":[],"__id":13310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5784,-1]],"__id":13311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5786,2218]],"__id":13315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5786,2219]],"__id":13319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13320,"parentNodes":[5791],"index":666,"rule":{"name":"Calculate277","pattern":{"type":"composite","id":2449,"leftPattern":{"type":"composite","id":2448,"leftPattern":{"type":"composite","id":2447,"leftPattern":{"type":"object","id":2443,"cls":"Fibonacci277","alias":"f1"},"rightPattern":{"type":"object","id":2444,"cls":"Fibonacci277","alias":"f2"}},"rightPattern":{"type":"object","id":2445,"cls":"Fibonacci277","alias":"f3"}},"rightPattern":{"type":"object","id":2446,"cls":"Result277","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate277"},{"type":"beta","out_nodes":[[5790,-1]],"__id":13321,"parentNodes":[5793,5794]},{"type":"type","out_nodes":[[3,2220]],"__id":13322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result277"}},{"type":"rightadapter","out_nodes":[[5791,2220]],"__id":13325,"parentNodes":[4]},{"type":"join","out_nodes":[[5795,-1]],"__id":13326,"parentNodes":[5797,5798],"constraint":{"type":"join-reference","out_nodes":[],"__id":13327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5791,-1]],"__id":13328,"parentNodes":[]},{"type":"type","out_nodes":[[9,2221],[14,2222],[20,2223],[30,2225],[20,2227],[30,2228]],"__id":13329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci277"}},{"type":"rightadapter","out_nodes":[[5794,2221]],"__id":13332,"parentNodes":[10]},{"type":"join","out_nodes":[[5799,-1]],"__id":13333,"parentNodes":[5800,5801],"constraint":{"type":"join-reference","out_nodes":[],"__id":13334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5794,-1]],"__id":13335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5798,2222]],"__id":13340,"parentNodes":[16]},{"type":"beta","out_nodes":[[5802,-1]],"__id":13341,"parentNodes":[5803,5804]},{"type":"leftadapter","out_nodes":[[5798,-1]],"__id":13342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5801,2223]],"__id":13347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5801,2224]],"__id":13351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13352,"parentNodes":[5806],"index":667,"rule":{"name":"Bootstrap277","pattern":{"type":"object","id":2450,"cls":"Fibonacci277","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap277"},{"type":"beta","out_nodes":[[5805,-1]],"__id":13353,"parentNodes":[5807,5808]},{"type":"rightadapter","out_nodes":[[5806,2225]],"__id":13358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5806,2226]],"__id":13362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13363,"parentNodes":[5810],"index":668,"rule":{"name":"Recurse277","pattern":{"type":"composite","id":2453,"leftPattern":{"type":"not","id":2451,"cls":"Fibonacci277","alias":"f"},"rightPattern":{"type":"object","id":2452,"cls":"Fibonacci277","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci277 = defined.get('Fibonacci277');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci277(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse277"},{"type":"beta","out_nodes":[[5809,-1]],"__id":13364,"parentNodes":[5811,5812]},{"type":"rightadapter","out_nodes":[[5810,2227]],"__id":13368,"parentNodes":[37]},{"type":"not","out_nodes":[[5813,-1]],"__id":13369,"parentNodes":[5814,5815],"constraint":{"type":"join-reference","out_nodes":[],"__id":13370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5810,-1]],"__id":13371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5812,2228]],"__id":13375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5812,2229]],"__id":13379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13380,"parentNodes":[5817],"index":669,"rule":{"name":"Calculate276","pattern":{"type":"composite","id":2460,"leftPattern":{"type":"composite","id":2459,"leftPattern":{"type":"composite","id":2458,"leftPattern":{"type":"object","id":2454,"cls":"Fibonacci276","alias":"f1"},"rightPattern":{"type":"object","id":2455,"cls":"Fibonacci276","alias":"f2"}},"rightPattern":{"type":"object","id":2456,"cls":"Fibonacci276","alias":"f3"}},"rightPattern":{"type":"object","id":2457,"cls":"Result276","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate276"},{"type":"beta","out_nodes":[[5816,-1]],"__id":13381,"parentNodes":[5819,5820]},{"type":"type","out_nodes":[[3,2230]],"__id":13382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result276"}},{"type":"rightadapter","out_nodes":[[5817,2230]],"__id":13385,"parentNodes":[4]},{"type":"join","out_nodes":[[5821,-1]],"__id":13386,"parentNodes":[5823,5824],"constraint":{"type":"join-reference","out_nodes":[],"__id":13387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5817,-1]],"__id":13388,"parentNodes":[]},{"type":"type","out_nodes":[[9,2231],[14,2232],[20,2233],[30,2235],[20,2237],[30,2238]],"__id":13389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci276"}},{"type":"rightadapter","out_nodes":[[5820,2231]],"__id":13392,"parentNodes":[10]},{"type":"join","out_nodes":[[5825,-1]],"__id":13393,"parentNodes":[5826,5827],"constraint":{"type":"join-reference","out_nodes":[],"__id":13394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5820,-1]],"__id":13395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5824,2232]],"__id":13400,"parentNodes":[16]},{"type":"beta","out_nodes":[[5828,-1]],"__id":13401,"parentNodes":[5829,5830]},{"type":"leftadapter","out_nodes":[[5824,-1]],"__id":13402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5827,2233]],"__id":13407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5827,2234]],"__id":13411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13412,"parentNodes":[5832],"index":670,"rule":{"name":"Bootstrap276","pattern":{"type":"object","id":2461,"cls":"Fibonacci276","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap276"},{"type":"beta","out_nodes":[[5831,-1]],"__id":13413,"parentNodes":[5833,5834]},{"type":"rightadapter","out_nodes":[[5832,2235]],"__id":13418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5832,2236]],"__id":13422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13423,"parentNodes":[5836],"index":671,"rule":{"name":"Recurse276","pattern":{"type":"composite","id":2464,"leftPattern":{"type":"not","id":2462,"cls":"Fibonacci276","alias":"f"},"rightPattern":{"type":"object","id":2463,"cls":"Fibonacci276","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci276 = defined.get('Fibonacci276');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci276(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse276"},{"type":"beta","out_nodes":[[5835,-1]],"__id":13424,"parentNodes":[5837,5838]},{"type":"rightadapter","out_nodes":[[5836,2237]],"__id":13428,"parentNodes":[37]},{"type":"not","out_nodes":[[5839,-1]],"__id":13429,"parentNodes":[5840,5841],"constraint":{"type":"join-reference","out_nodes":[],"__id":13430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5836,-1]],"__id":13431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5838,2238]],"__id":13435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5838,2239]],"__id":13439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13440,"parentNodes":[5843],"index":672,"rule":{"name":"Calculate275","pattern":{"type":"composite","id":2471,"leftPattern":{"type":"composite","id":2470,"leftPattern":{"type":"composite","id":2469,"leftPattern":{"type":"object","id":2465,"cls":"Fibonacci275","alias":"f1"},"rightPattern":{"type":"object","id":2466,"cls":"Fibonacci275","alias":"f2"}},"rightPattern":{"type":"object","id":2467,"cls":"Fibonacci275","alias":"f3"}},"rightPattern":{"type":"object","id":2468,"cls":"Result275","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate275"},{"type":"beta","out_nodes":[[5842,-1]],"__id":13441,"parentNodes":[5845,5846]},{"type":"type","out_nodes":[[3,2240]],"__id":13442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result275"}},{"type":"rightadapter","out_nodes":[[5843,2240]],"__id":13445,"parentNodes":[4]},{"type":"join","out_nodes":[[5847,-1]],"__id":13446,"parentNodes":[5849,5850],"constraint":{"type":"join-reference","out_nodes":[],"__id":13447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5843,-1]],"__id":13448,"parentNodes":[]},{"type":"type","out_nodes":[[9,2241],[14,2242],[20,2243],[30,2245],[20,2247],[30,2248]],"__id":13449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci275"}},{"type":"rightadapter","out_nodes":[[5846,2241]],"__id":13452,"parentNodes":[10]},{"type":"join","out_nodes":[[5851,-1]],"__id":13453,"parentNodes":[5852,5853],"constraint":{"type":"join-reference","out_nodes":[],"__id":13454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5846,-1]],"__id":13455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5850,2242]],"__id":13460,"parentNodes":[16]},{"type":"beta","out_nodes":[[5854,-1]],"__id":13461,"parentNodes":[5855,5856]},{"type":"leftadapter","out_nodes":[[5850,-1]],"__id":13462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5853,2243]],"__id":13467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5853,2244]],"__id":13471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13472,"parentNodes":[5858],"index":673,"rule":{"name":"Bootstrap275","pattern":{"type":"object","id":2472,"cls":"Fibonacci275","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap275"},{"type":"beta","out_nodes":[[5857,-1]],"__id":13473,"parentNodes":[5859,5860]},{"type":"rightadapter","out_nodes":[[5858,2245]],"__id":13478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5858,2246]],"__id":13482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13483,"parentNodes":[5862],"index":674,"rule":{"name":"Recurse275","pattern":{"type":"composite","id":2475,"leftPattern":{"type":"not","id":2473,"cls":"Fibonacci275","alias":"f"},"rightPattern":{"type":"object","id":2474,"cls":"Fibonacci275","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci275 = defined.get('Fibonacci275');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci275(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse275"},{"type":"beta","out_nodes":[[5861,-1]],"__id":13484,"parentNodes":[5863,5864]},{"type":"rightadapter","out_nodes":[[5862,2247]],"__id":13488,"parentNodes":[37]},{"type":"not","out_nodes":[[5865,-1]],"__id":13489,"parentNodes":[5866,5867],"constraint":{"type":"join-reference","out_nodes":[],"__id":13490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5862,-1]],"__id":13491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5864,2248]],"__id":13495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5864,2249]],"__id":13499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13500,"parentNodes":[5869],"index":675,"rule":{"name":"Calculate274","pattern":{"type":"composite","id":2482,"leftPattern":{"type":"composite","id":2481,"leftPattern":{"type":"composite","id":2480,"leftPattern":{"type":"object","id":2476,"cls":"Fibonacci274","alias":"f1"},"rightPattern":{"type":"object","id":2477,"cls":"Fibonacci274","alias":"f2"}},"rightPattern":{"type":"object","id":2478,"cls":"Fibonacci274","alias":"f3"}},"rightPattern":{"type":"object","id":2479,"cls":"Result274","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate274"},{"type":"beta","out_nodes":[[5868,-1]],"__id":13501,"parentNodes":[5871,5872]},{"type":"type","out_nodes":[[3,2250]],"__id":13502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result274"}},{"type":"rightadapter","out_nodes":[[5869,2250]],"__id":13505,"parentNodes":[4]},{"type":"join","out_nodes":[[5873,-1]],"__id":13506,"parentNodes":[5875,5876],"constraint":{"type":"join-reference","out_nodes":[],"__id":13507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5869,-1]],"__id":13508,"parentNodes":[]},{"type":"type","out_nodes":[[9,2251],[14,2252],[20,2253],[30,2255],[20,2257],[30,2258]],"__id":13509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci274"}},{"type":"rightadapter","out_nodes":[[5872,2251]],"__id":13512,"parentNodes":[10]},{"type":"join","out_nodes":[[5877,-1]],"__id":13513,"parentNodes":[5878,5879],"constraint":{"type":"join-reference","out_nodes":[],"__id":13514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5872,-1]],"__id":13515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5876,2252]],"__id":13520,"parentNodes":[16]},{"type":"beta","out_nodes":[[5880,-1]],"__id":13521,"parentNodes":[5881,5882]},{"type":"leftadapter","out_nodes":[[5876,-1]],"__id":13522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5879,2253]],"__id":13527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5879,2254]],"__id":13531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13532,"parentNodes":[5884],"index":676,"rule":{"name":"Bootstrap274","pattern":{"type":"object","id":2483,"cls":"Fibonacci274","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap274"},{"type":"beta","out_nodes":[[5883,-1]],"__id":13533,"parentNodes":[5885,5886]},{"type":"rightadapter","out_nodes":[[5884,2255]],"__id":13538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5884,2256]],"__id":13542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13543,"parentNodes":[5888],"index":677,"rule":{"name":"Recurse274","pattern":{"type":"composite","id":2486,"leftPattern":{"type":"not","id":2484,"cls":"Fibonacci274","alias":"f"},"rightPattern":{"type":"object","id":2485,"cls":"Fibonacci274","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci274 = defined.get('Fibonacci274');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci274(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse274"},{"type":"beta","out_nodes":[[5887,-1]],"__id":13544,"parentNodes":[5889,5890]},{"type":"rightadapter","out_nodes":[[5888,2257]],"__id":13548,"parentNodes":[37]},{"type":"not","out_nodes":[[5891,-1]],"__id":13549,"parentNodes":[5892,5893],"constraint":{"type":"join-reference","out_nodes":[],"__id":13550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5888,-1]],"__id":13551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5890,2258]],"__id":13555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5890,2259]],"__id":13559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13560,"parentNodes":[5895],"index":678,"rule":{"name":"Calculate273","pattern":{"type":"composite","id":2493,"leftPattern":{"type":"composite","id":2492,"leftPattern":{"type":"composite","id":2491,"leftPattern":{"type":"object","id":2487,"cls":"Fibonacci273","alias":"f1"},"rightPattern":{"type":"object","id":2488,"cls":"Fibonacci273","alias":"f2"}},"rightPattern":{"type":"object","id":2489,"cls":"Fibonacci273","alias":"f3"}},"rightPattern":{"type":"object","id":2490,"cls":"Result273","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate273"},{"type":"beta","out_nodes":[[5894,-1]],"__id":13561,"parentNodes":[5897,5898]},{"type":"type","out_nodes":[[3,2260]],"__id":13562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result273"}},{"type":"rightadapter","out_nodes":[[5895,2260]],"__id":13565,"parentNodes":[4]},{"type":"join","out_nodes":[[5899,-1]],"__id":13566,"parentNodes":[5901,5902],"constraint":{"type":"join-reference","out_nodes":[],"__id":13567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5895,-1]],"__id":13568,"parentNodes":[]},{"type":"type","out_nodes":[[9,2261],[14,2262],[20,2263],[30,2265],[20,2267],[30,2268]],"__id":13569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci273"}},{"type":"rightadapter","out_nodes":[[5898,2261]],"__id":13572,"parentNodes":[10]},{"type":"join","out_nodes":[[5903,-1]],"__id":13573,"parentNodes":[5904,5905],"constraint":{"type":"join-reference","out_nodes":[],"__id":13574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5898,-1]],"__id":13575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5902,2262]],"__id":13580,"parentNodes":[16]},{"type":"beta","out_nodes":[[5906,-1]],"__id":13581,"parentNodes":[5907,5908]},{"type":"leftadapter","out_nodes":[[5902,-1]],"__id":13582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5905,2263]],"__id":13587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5905,2264]],"__id":13591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13592,"parentNodes":[5910],"index":679,"rule":{"name":"Bootstrap273","pattern":{"type":"object","id":2494,"cls":"Fibonacci273","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap273"},{"type":"beta","out_nodes":[[5909,-1]],"__id":13593,"parentNodes":[5911,5912]},{"type":"rightadapter","out_nodes":[[5910,2265]],"__id":13598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5910,2266]],"__id":13602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13603,"parentNodes":[5914],"index":680,"rule":{"name":"Recurse273","pattern":{"type":"composite","id":2497,"leftPattern":{"type":"not","id":2495,"cls":"Fibonacci273","alias":"f"},"rightPattern":{"type":"object","id":2496,"cls":"Fibonacci273","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci273 = defined.get('Fibonacci273');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci273(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse273"},{"type":"beta","out_nodes":[[5913,-1]],"__id":13604,"parentNodes":[5915,5916]},{"type":"rightadapter","out_nodes":[[5914,2267]],"__id":13608,"parentNodes":[37]},{"type":"not","out_nodes":[[5917,-1]],"__id":13609,"parentNodes":[5918,5919],"constraint":{"type":"join-reference","out_nodes":[],"__id":13610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5914,-1]],"__id":13611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5916,2268]],"__id":13615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5916,2269]],"__id":13619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13620,"parentNodes":[5921],"index":681,"rule":{"name":"Calculate272","pattern":{"type":"composite","id":2504,"leftPattern":{"type":"composite","id":2503,"leftPattern":{"type":"composite","id":2502,"leftPattern":{"type":"object","id":2498,"cls":"Fibonacci272","alias":"f1"},"rightPattern":{"type":"object","id":2499,"cls":"Fibonacci272","alias":"f2"}},"rightPattern":{"type":"object","id":2500,"cls":"Fibonacci272","alias":"f3"}},"rightPattern":{"type":"object","id":2501,"cls":"Result272","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate272"},{"type":"beta","out_nodes":[[5920,-1]],"__id":13621,"parentNodes":[5923,5924]},{"type":"type","out_nodes":[[3,2270]],"__id":13622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result272"}},{"type":"rightadapter","out_nodes":[[5921,2270]],"__id":13625,"parentNodes":[4]},{"type":"join","out_nodes":[[5925,-1]],"__id":13626,"parentNodes":[5927,5928],"constraint":{"type":"join-reference","out_nodes":[],"__id":13627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5921,-1]],"__id":13628,"parentNodes":[]},{"type":"type","out_nodes":[[9,2271],[14,2272],[20,2273],[30,2275],[20,2277],[30,2278]],"__id":13629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci272"}},{"type":"rightadapter","out_nodes":[[5924,2271]],"__id":13632,"parentNodes":[10]},{"type":"join","out_nodes":[[5929,-1]],"__id":13633,"parentNodes":[5930,5931],"constraint":{"type":"join-reference","out_nodes":[],"__id":13634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5924,-1]],"__id":13635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5928,2272]],"__id":13640,"parentNodes":[16]},{"type":"beta","out_nodes":[[5932,-1]],"__id":13641,"parentNodes":[5933,5934]},{"type":"leftadapter","out_nodes":[[5928,-1]],"__id":13642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5931,2273]],"__id":13647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5931,2274]],"__id":13651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13652,"parentNodes":[5936],"index":682,"rule":{"name":"Bootstrap272","pattern":{"type":"object","id":2505,"cls":"Fibonacci272","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap272"},{"type":"beta","out_nodes":[[5935,-1]],"__id":13653,"parentNodes":[5937,5938]},{"type":"rightadapter","out_nodes":[[5936,2275]],"__id":13658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5936,2276]],"__id":13662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13663,"parentNodes":[5940],"index":683,"rule":{"name":"Recurse272","pattern":{"type":"composite","id":2508,"leftPattern":{"type":"not","id":2506,"cls":"Fibonacci272","alias":"f"},"rightPattern":{"type":"object","id":2507,"cls":"Fibonacci272","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci272 = defined.get('Fibonacci272');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci272(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse272"},{"type":"beta","out_nodes":[[5939,-1]],"__id":13664,"parentNodes":[5941,5942]},{"type":"rightadapter","out_nodes":[[5940,2277]],"__id":13668,"parentNodes":[37]},{"type":"not","out_nodes":[[5943,-1]],"__id":13669,"parentNodes":[5944,5945],"constraint":{"type":"join-reference","out_nodes":[],"__id":13670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5940,-1]],"__id":13671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5942,2278]],"__id":13675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5942,2279]],"__id":13679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13680,"parentNodes":[5947],"index":684,"rule":{"name":"Calculate271","pattern":{"type":"composite","id":2515,"leftPattern":{"type":"composite","id":2514,"leftPattern":{"type":"composite","id":2513,"leftPattern":{"type":"object","id":2509,"cls":"Fibonacci271","alias":"f1"},"rightPattern":{"type":"object","id":2510,"cls":"Fibonacci271","alias":"f2"}},"rightPattern":{"type":"object","id":2511,"cls":"Fibonacci271","alias":"f3"}},"rightPattern":{"type":"object","id":2512,"cls":"Result271","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate271"},{"type":"beta","out_nodes":[[5946,-1]],"__id":13681,"parentNodes":[5949,5950]},{"type":"type","out_nodes":[[3,2280]],"__id":13682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result271"}},{"type":"rightadapter","out_nodes":[[5947,2280]],"__id":13685,"parentNodes":[4]},{"type":"join","out_nodes":[[5951,-1]],"__id":13686,"parentNodes":[5953,5954],"constraint":{"type":"join-reference","out_nodes":[],"__id":13687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5947,-1]],"__id":13688,"parentNodes":[]},{"type":"type","out_nodes":[[9,2281],[14,2282],[20,2283],[30,2285],[20,2287],[30,2288]],"__id":13689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci271"}},{"type":"rightadapter","out_nodes":[[5950,2281]],"__id":13692,"parentNodes":[10]},{"type":"join","out_nodes":[[5955,-1]],"__id":13693,"parentNodes":[5956,5957],"constraint":{"type":"join-reference","out_nodes":[],"__id":13694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5950,-1]],"__id":13695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5954,2282]],"__id":13700,"parentNodes":[16]},{"type":"beta","out_nodes":[[5958,-1]],"__id":13701,"parentNodes":[5959,5960]},{"type":"leftadapter","out_nodes":[[5954,-1]],"__id":13702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5957,2283]],"__id":13707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5957,2284]],"__id":13711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13712,"parentNodes":[5962],"index":685,"rule":{"name":"Bootstrap271","pattern":{"type":"object","id":2516,"cls":"Fibonacci271","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap271"},{"type":"beta","out_nodes":[[5961,-1]],"__id":13713,"parentNodes":[5963,5964]},{"type":"rightadapter","out_nodes":[[5962,2285]],"__id":13718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5962,2286]],"__id":13722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13723,"parentNodes":[5966],"index":686,"rule":{"name":"Recurse271","pattern":{"type":"composite","id":2519,"leftPattern":{"type":"not","id":2517,"cls":"Fibonacci271","alias":"f"},"rightPattern":{"type":"object","id":2518,"cls":"Fibonacci271","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci271 = defined.get('Fibonacci271');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci271(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse271"},{"type":"beta","out_nodes":[[5965,-1]],"__id":13724,"parentNodes":[5967,5968]},{"type":"rightadapter","out_nodes":[[5966,2287]],"__id":13728,"parentNodes":[37]},{"type":"not","out_nodes":[[5969,-1]],"__id":13729,"parentNodes":[5970,5971],"constraint":{"type":"join-reference","out_nodes":[],"__id":13730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5966,-1]],"__id":13731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5968,2288]],"__id":13735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5968,2289]],"__id":13739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13740,"parentNodes":[5973],"index":687,"rule":{"name":"Calculate270","pattern":{"type":"composite","id":2526,"leftPattern":{"type":"composite","id":2525,"leftPattern":{"type":"composite","id":2524,"leftPattern":{"type":"object","id":2520,"cls":"Fibonacci270","alias":"f1"},"rightPattern":{"type":"object","id":2521,"cls":"Fibonacci270","alias":"f2"}},"rightPattern":{"type":"object","id":2522,"cls":"Fibonacci270","alias":"f3"}},"rightPattern":{"type":"object","id":2523,"cls":"Result270","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate270"},{"type":"beta","out_nodes":[[5972,-1]],"__id":13741,"parentNodes":[5975,5976]},{"type":"type","out_nodes":[[3,2290]],"__id":13742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result270"}},{"type":"rightadapter","out_nodes":[[5973,2290]],"__id":13745,"parentNodes":[4]},{"type":"join","out_nodes":[[5977,-1]],"__id":13746,"parentNodes":[5979,5980],"constraint":{"type":"join-reference","out_nodes":[],"__id":13747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5973,-1]],"__id":13748,"parentNodes":[]},{"type":"type","out_nodes":[[9,2291],[14,2292],[20,2293],[30,2295],[20,2297],[30,2298]],"__id":13749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci270"}},{"type":"rightadapter","out_nodes":[[5976,2291]],"__id":13752,"parentNodes":[10]},{"type":"join","out_nodes":[[5981,-1]],"__id":13753,"parentNodes":[5982,5983],"constraint":{"type":"join-reference","out_nodes":[],"__id":13754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5976,-1]],"__id":13755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5980,2292]],"__id":13760,"parentNodes":[16]},{"type":"beta","out_nodes":[[5984,-1]],"__id":13761,"parentNodes":[5985,5986]},{"type":"leftadapter","out_nodes":[[5980,-1]],"__id":13762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5983,2293]],"__id":13767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[5983,2294]],"__id":13771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13772,"parentNodes":[5988],"index":688,"rule":{"name":"Bootstrap270","pattern":{"type":"object","id":2527,"cls":"Fibonacci270","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap270"},{"type":"beta","out_nodes":[[5987,-1]],"__id":13773,"parentNodes":[5989,5990]},{"type":"rightadapter","out_nodes":[[5988,2295]],"__id":13778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[5988,2296]],"__id":13782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13783,"parentNodes":[5992],"index":689,"rule":{"name":"Recurse270","pattern":{"type":"composite","id":2530,"leftPattern":{"type":"not","id":2528,"cls":"Fibonacci270","alias":"f"},"rightPattern":{"type":"object","id":2529,"cls":"Fibonacci270","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');let Fibonacci270 = defined.get('Fibonacci270');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci270(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse270"},{"type":"beta","out_nodes":[[5991,-1]],"__id":13784,"parentNodes":[5993,5994]},{"type":"rightadapter","out_nodes":[[5992,2297]],"__id":13788,"parentNodes":[37]},{"type":"not","out_nodes":[[5995,-1]],"__id":13789,"parentNodes":[5996,5997],"constraint":{"type":"join-reference","out_nodes":[],"__id":13790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[5992,-1]],"__id":13791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[5994,2298]],"__id":13795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[5994,2299]],"__id":13799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13800,"parentNodes":[5999],"index":690,"rule":{"name":"Calculate269","pattern":{"type":"composite","id":2537,"leftPattern":{"type":"composite","id":2536,"leftPattern":{"type":"composite","id":2535,"leftPattern":{"type":"object","id":2531,"cls":"Fibonacci269","alias":"f1"},"rightPattern":{"type":"object","id":2532,"cls":"Fibonacci269","alias":"f2"}},"rightPattern":{"type":"object","id":2533,"cls":"Fibonacci269","alias":"f3"}},"rightPattern":{"type":"object","id":2534,"cls":"Result269","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate269"},{"type":"beta","out_nodes":[[5998,-1]],"__id":13801,"parentNodes":[6001,6002]},{"type":"type","out_nodes":[[3,2300]],"__id":13802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result269"}},{"type":"rightadapter","out_nodes":[[5999,2300]],"__id":13805,"parentNodes":[4]},{"type":"join","out_nodes":[[6003,-1]],"__id":13806,"parentNodes":[6005,6006],"constraint":{"type":"join-reference","out_nodes":[],"__id":13807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[5999,-1]],"__id":13808,"parentNodes":[]},{"type":"type","out_nodes":[[9,2301],[14,2302],[20,2303],[30,2305],[20,2307],[30,2308]],"__id":13809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci269"}},{"type":"rightadapter","out_nodes":[[6002,2301]],"__id":13812,"parentNodes":[10]},{"type":"join","out_nodes":[[6007,-1]],"__id":13813,"parentNodes":[6008,6009],"constraint":{"type":"join-reference","out_nodes":[],"__id":13814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6002,-1]],"__id":13815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6006,2302]],"__id":13820,"parentNodes":[16]},{"type":"beta","out_nodes":[[6010,-1]],"__id":13821,"parentNodes":[6011,6012]},{"type":"leftadapter","out_nodes":[[6006,-1]],"__id":13822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6009,2303]],"__id":13827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6009,2304]],"__id":13831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13832,"parentNodes":[6014],"index":691,"rule":{"name":"Bootstrap269","pattern":{"type":"object","id":2538,"cls":"Fibonacci269","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap269"},{"type":"beta","out_nodes":[[6013,-1]],"__id":13833,"parentNodes":[6015,6016]},{"type":"rightadapter","out_nodes":[[6014,2305]],"__id":13838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6014,2306]],"__id":13842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13843,"parentNodes":[6018],"index":692,"rule":{"name":"Recurse269","pattern":{"type":"composite","id":2541,"leftPattern":{"type":"not","id":2539,"cls":"Fibonacci269","alias":"f"},"rightPattern":{"type":"object","id":2540,"cls":"Fibonacci269","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci269 = defined.get('Fibonacci269');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci269(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse269"},{"type":"beta","out_nodes":[[6017,-1]],"__id":13844,"parentNodes":[6019,6020]},{"type":"rightadapter","out_nodes":[[6018,2307]],"__id":13848,"parentNodes":[37]},{"type":"not","out_nodes":[[6021,-1]],"__id":13849,"parentNodes":[6022,6023],"constraint":{"type":"join-reference","out_nodes":[],"__id":13850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6018,-1]],"__id":13851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6020,2308]],"__id":13855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6020,2309]],"__id":13859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13860,"parentNodes":[6025],"index":693,"rule":{"name":"Calculate268","pattern":{"type":"composite","id":2548,"leftPattern":{"type":"composite","id":2547,"leftPattern":{"type":"composite","id":2546,"leftPattern":{"type":"object","id":2542,"cls":"Fibonacci268","alias":"f1"},"rightPattern":{"type":"object","id":2543,"cls":"Fibonacci268","alias":"f2"}},"rightPattern":{"type":"object","id":2544,"cls":"Fibonacci268","alias":"f3"}},"rightPattern":{"type":"object","id":2545,"cls":"Result268","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate268"},{"type":"beta","out_nodes":[[6024,-1]],"__id":13861,"parentNodes":[6027,6028]},{"type":"type","out_nodes":[[3,2310]],"__id":13862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result268"}},{"type":"rightadapter","out_nodes":[[6025,2310]],"__id":13865,"parentNodes":[4]},{"type":"join","out_nodes":[[6029,-1]],"__id":13866,"parentNodes":[6031,6032],"constraint":{"type":"join-reference","out_nodes":[],"__id":13867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6025,-1]],"__id":13868,"parentNodes":[]},{"type":"type","out_nodes":[[9,2311],[14,2312],[20,2313],[30,2315],[20,2317],[30,2318]],"__id":13869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci268"}},{"type":"rightadapter","out_nodes":[[6028,2311]],"__id":13872,"parentNodes":[10]},{"type":"join","out_nodes":[[6033,-1]],"__id":13873,"parentNodes":[6034,6035],"constraint":{"type":"join-reference","out_nodes":[],"__id":13874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6028,-1]],"__id":13875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6032,2312]],"__id":13880,"parentNodes":[16]},{"type":"beta","out_nodes":[[6036,-1]],"__id":13881,"parentNodes":[6037,6038]},{"type":"leftadapter","out_nodes":[[6032,-1]],"__id":13882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6035,2313]],"__id":13887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6035,2314]],"__id":13891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13892,"parentNodes":[6040],"index":694,"rule":{"name":"Bootstrap268","pattern":{"type":"object","id":2549,"cls":"Fibonacci268","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap268"},{"type":"beta","out_nodes":[[6039,-1]],"__id":13893,"parentNodes":[6041,6042]},{"type":"rightadapter","out_nodes":[[6040,2315]],"__id":13898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6040,2316]],"__id":13902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13903,"parentNodes":[6044],"index":695,"rule":{"name":"Recurse268","pattern":{"type":"composite","id":2552,"leftPattern":{"type":"not","id":2550,"cls":"Fibonacci268","alias":"f"},"rightPattern":{"type":"object","id":2551,"cls":"Fibonacci268","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci268 = defined.get('Fibonacci268');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci268(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse268"},{"type":"beta","out_nodes":[[6043,-1]],"__id":13904,"parentNodes":[6045,6046]},{"type":"rightadapter","out_nodes":[[6044,2317]],"__id":13908,"parentNodes":[37]},{"type":"not","out_nodes":[[6047,-1]],"__id":13909,"parentNodes":[6048,6049],"constraint":{"type":"join-reference","out_nodes":[],"__id":13910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6044,-1]],"__id":13911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6046,2318]],"__id":13915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6046,2319]],"__id":13919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13920,"parentNodes":[6051],"index":696,"rule":{"name":"Calculate267","pattern":{"type":"composite","id":2559,"leftPattern":{"type":"composite","id":2558,"leftPattern":{"type":"composite","id":2557,"leftPattern":{"type":"object","id":2553,"cls":"Fibonacci267","alias":"f1"},"rightPattern":{"type":"object","id":2554,"cls":"Fibonacci267","alias":"f2"}},"rightPattern":{"type":"object","id":2555,"cls":"Fibonacci267","alias":"f3"}},"rightPattern":{"type":"object","id":2556,"cls":"Result267","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate267"},{"type":"beta","out_nodes":[[6050,-1]],"__id":13921,"parentNodes":[6053,6054]},{"type":"type","out_nodes":[[3,2320]],"__id":13922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result267"}},{"type":"rightadapter","out_nodes":[[6051,2320]],"__id":13925,"parentNodes":[4]},{"type":"join","out_nodes":[[6055,-1]],"__id":13926,"parentNodes":[6057,6058],"constraint":{"type":"join-reference","out_nodes":[],"__id":13927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6051,-1]],"__id":13928,"parentNodes":[]},{"type":"type","out_nodes":[[9,2321],[14,2322],[20,2323],[30,2325],[20,2327],[30,2328]],"__id":13929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci267"}},{"type":"rightadapter","out_nodes":[[6054,2321]],"__id":13932,"parentNodes":[10]},{"type":"join","out_nodes":[[6059,-1]],"__id":13933,"parentNodes":[6060,6061],"constraint":{"type":"join-reference","out_nodes":[],"__id":13934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6054,-1]],"__id":13935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6058,2322]],"__id":13940,"parentNodes":[16]},{"type":"beta","out_nodes":[[6062,-1]],"__id":13941,"parentNodes":[6063,6064]},{"type":"leftadapter","out_nodes":[[6058,-1]],"__id":13942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6061,2323]],"__id":13947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6061,2324]],"__id":13951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13952,"parentNodes":[6066],"index":697,"rule":{"name":"Bootstrap267","pattern":{"type":"object","id":2560,"cls":"Fibonacci267","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap267"},{"type":"beta","out_nodes":[[6065,-1]],"__id":13953,"parentNodes":[6067,6068]},{"type":"rightadapter","out_nodes":[[6066,2325]],"__id":13958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6066,2326]],"__id":13962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13963,"parentNodes":[6070],"index":698,"rule":{"name":"Recurse267","pattern":{"type":"composite","id":2563,"leftPattern":{"type":"not","id":2561,"cls":"Fibonacci267","alias":"f"},"rightPattern":{"type":"object","id":2562,"cls":"Fibonacci267","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci267 = defined.get('Fibonacci267');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci267(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse267"},{"type":"beta","out_nodes":[[6069,-1]],"__id":13964,"parentNodes":[6071,6072]},{"type":"rightadapter","out_nodes":[[6070,2327]],"__id":13968,"parentNodes":[37]},{"type":"not","out_nodes":[[6073,-1]],"__id":13969,"parentNodes":[6074,6075],"constraint":{"type":"join-reference","out_nodes":[],"__id":13970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6070,-1]],"__id":13971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6072,2328]],"__id":13975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6072,2329]],"__id":13979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":13980,"parentNodes":[6077],"index":699,"rule":{"name":"Calculate266","pattern":{"type":"composite","id":2570,"leftPattern":{"type":"composite","id":2569,"leftPattern":{"type":"composite","id":2568,"leftPattern":{"type":"object","id":2564,"cls":"Fibonacci266","alias":"f1"},"rightPattern":{"type":"object","id":2565,"cls":"Fibonacci266","alias":"f2"}},"rightPattern":{"type":"object","id":2566,"cls":"Fibonacci266","alias":"f3"}},"rightPattern":{"type":"object","id":2567,"cls":"Result266","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate266"},{"type":"beta","out_nodes":[[6076,-1]],"__id":13981,"parentNodes":[6079,6080]},{"type":"type","out_nodes":[[3,2330]],"__id":13982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result266"}},{"type":"rightadapter","out_nodes":[[6077,2330]],"__id":13985,"parentNodes":[4]},{"type":"join","out_nodes":[[6081,-1]],"__id":13986,"parentNodes":[6083,6084],"constraint":{"type":"join-reference","out_nodes":[],"__id":13987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6077,-1]],"__id":13988,"parentNodes":[]},{"type":"type","out_nodes":[[9,2331],[14,2332],[20,2333],[30,2335],[20,2337],[30,2338]],"__id":13989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci266"}},{"type":"rightadapter","out_nodes":[[6080,2331]],"__id":13992,"parentNodes":[10]},{"type":"join","out_nodes":[[6085,-1]],"__id":13993,"parentNodes":[6086,6087],"constraint":{"type":"join-reference","out_nodes":[],"__id":13994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6080,-1]],"__id":13995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6084,2332]],"__id":14000,"parentNodes":[16]},{"type":"beta","out_nodes":[[6088,-1]],"__id":14001,"parentNodes":[6089,6090]},{"type":"leftadapter","out_nodes":[[6084,-1]],"__id":14002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6087,2333]],"__id":14007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6087,2334]],"__id":14011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14012,"parentNodes":[6092],"index":700,"rule":{"name":"Bootstrap266","pattern":{"type":"object","id":2571,"cls":"Fibonacci266","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap266"},{"type":"beta","out_nodes":[[6091,-1]],"__id":14013,"parentNodes":[6093,6094]},{"type":"rightadapter","out_nodes":[[6092,2335]],"__id":14018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6092,2336]],"__id":14022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14023,"parentNodes":[6096],"index":701,"rule":{"name":"Recurse266","pattern":{"type":"composite","id":2574,"leftPattern":{"type":"not","id":2572,"cls":"Fibonacci266","alias":"f"},"rightPattern":{"type":"object","id":2573,"cls":"Fibonacci266","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci266 = defined.get('Fibonacci266');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci266(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse266"},{"type":"beta","out_nodes":[[6095,-1]],"__id":14024,"parentNodes":[6097,6098]},{"type":"rightadapter","out_nodes":[[6096,2337]],"__id":14028,"parentNodes":[37]},{"type":"not","out_nodes":[[6099,-1]],"__id":14029,"parentNodes":[6100,6101],"constraint":{"type":"join-reference","out_nodes":[],"__id":14030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6096,-1]],"__id":14031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6098,2338]],"__id":14035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6098,2339]],"__id":14039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14040,"parentNodes":[6103],"index":702,"rule":{"name":"Calculate265","pattern":{"type":"composite","id":2581,"leftPattern":{"type":"composite","id":2580,"leftPattern":{"type":"composite","id":2579,"leftPattern":{"type":"object","id":2575,"cls":"Fibonacci265","alias":"f1"},"rightPattern":{"type":"object","id":2576,"cls":"Fibonacci265","alias":"f2"}},"rightPattern":{"type":"object","id":2577,"cls":"Fibonacci265","alias":"f3"}},"rightPattern":{"type":"object","id":2578,"cls":"Result265","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate265"},{"type":"beta","out_nodes":[[6102,-1]],"__id":14041,"parentNodes":[6105,6106]},{"type":"type","out_nodes":[[3,2340]],"__id":14042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result265"}},{"type":"rightadapter","out_nodes":[[6103,2340]],"__id":14045,"parentNodes":[4]},{"type":"join","out_nodes":[[6107,-1]],"__id":14046,"parentNodes":[6109,6110],"constraint":{"type":"join-reference","out_nodes":[],"__id":14047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6103,-1]],"__id":14048,"parentNodes":[]},{"type":"type","out_nodes":[[9,2341],[14,2342],[20,2343],[30,2345],[20,2347],[30,2348]],"__id":14049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci265"}},{"type":"rightadapter","out_nodes":[[6106,2341]],"__id":14052,"parentNodes":[10]},{"type":"join","out_nodes":[[6111,-1]],"__id":14053,"parentNodes":[6112,6113],"constraint":{"type":"join-reference","out_nodes":[],"__id":14054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6106,-1]],"__id":14055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6110,2342]],"__id":14060,"parentNodes":[16]},{"type":"beta","out_nodes":[[6114,-1]],"__id":14061,"parentNodes":[6115,6116]},{"type":"leftadapter","out_nodes":[[6110,-1]],"__id":14062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6113,2343]],"__id":14067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6113,2344]],"__id":14071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14072,"parentNodes":[6118],"index":703,"rule":{"name":"Bootstrap265","pattern":{"type":"object","id":2582,"cls":"Fibonacci265","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap265"},{"type":"beta","out_nodes":[[6117,-1]],"__id":14073,"parentNodes":[6119,6120]},{"type":"rightadapter","out_nodes":[[6118,2345]],"__id":14078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6118,2346]],"__id":14082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14083,"parentNodes":[6122],"index":704,"rule":{"name":"Recurse265","pattern":{"type":"composite","id":2585,"leftPattern":{"type":"not","id":2583,"cls":"Fibonacci265","alias":"f"},"rightPattern":{"type":"object","id":2584,"cls":"Fibonacci265","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci265 = defined.get('Fibonacci265');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci265(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse265"},{"type":"beta","out_nodes":[[6121,-1]],"__id":14084,"parentNodes":[6123,6124]},{"type":"rightadapter","out_nodes":[[6122,2347]],"__id":14088,"parentNodes":[37]},{"type":"not","out_nodes":[[6125,-1]],"__id":14089,"parentNodes":[6126,6127],"constraint":{"type":"join-reference","out_nodes":[],"__id":14090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6122,-1]],"__id":14091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6124,2348]],"__id":14095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6124,2349]],"__id":14099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14100,"parentNodes":[6129],"index":705,"rule":{"name":"Calculate264","pattern":{"type":"composite","id":2592,"leftPattern":{"type":"composite","id":2591,"leftPattern":{"type":"composite","id":2590,"leftPattern":{"type":"object","id":2586,"cls":"Fibonacci264","alias":"f1"},"rightPattern":{"type":"object","id":2587,"cls":"Fibonacci264","alias":"f2"}},"rightPattern":{"type":"object","id":2588,"cls":"Fibonacci264","alias":"f3"}},"rightPattern":{"type":"object","id":2589,"cls":"Result264","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate264"},{"type":"beta","out_nodes":[[6128,-1]],"__id":14101,"parentNodes":[6131,6132]},{"type":"type","out_nodes":[[3,2350]],"__id":14102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result264"}},{"type":"rightadapter","out_nodes":[[6129,2350]],"__id":14105,"parentNodes":[4]},{"type":"join","out_nodes":[[6133,-1]],"__id":14106,"parentNodes":[6135,6136],"constraint":{"type":"join-reference","out_nodes":[],"__id":14107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6129,-1]],"__id":14108,"parentNodes":[]},{"type":"type","out_nodes":[[9,2351],[14,2352],[20,2353],[30,2355],[20,2357],[30,2358]],"__id":14109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci264"}},{"type":"rightadapter","out_nodes":[[6132,2351]],"__id":14112,"parentNodes":[10]},{"type":"join","out_nodes":[[6137,-1]],"__id":14113,"parentNodes":[6138,6139],"constraint":{"type":"join-reference","out_nodes":[],"__id":14114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6132,-1]],"__id":14115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6136,2352]],"__id":14120,"parentNodes":[16]},{"type":"beta","out_nodes":[[6140,-1]],"__id":14121,"parentNodes":[6141,6142]},{"type":"leftadapter","out_nodes":[[6136,-1]],"__id":14122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6139,2353]],"__id":14127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6139,2354]],"__id":14131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14132,"parentNodes":[6144],"index":706,"rule":{"name":"Bootstrap264","pattern":{"type":"object","id":2593,"cls":"Fibonacci264","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap264"},{"type":"beta","out_nodes":[[6143,-1]],"__id":14133,"parentNodes":[6145,6146]},{"type":"rightadapter","out_nodes":[[6144,2355]],"__id":14138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6144,2356]],"__id":14142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14143,"parentNodes":[6148],"index":707,"rule":{"name":"Recurse264","pattern":{"type":"composite","id":2596,"leftPattern":{"type":"not","id":2594,"cls":"Fibonacci264","alias":"f"},"rightPattern":{"type":"object","id":2595,"cls":"Fibonacci264","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci264 = defined.get('Fibonacci264');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci264(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse264"},{"type":"beta","out_nodes":[[6147,-1]],"__id":14144,"parentNodes":[6149,6150]},{"type":"rightadapter","out_nodes":[[6148,2357]],"__id":14148,"parentNodes":[37]},{"type":"not","out_nodes":[[6151,-1]],"__id":14149,"parentNodes":[6152,6153],"constraint":{"type":"join-reference","out_nodes":[],"__id":14150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6148,-1]],"__id":14151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6150,2358]],"__id":14155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6150,2359]],"__id":14159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14160,"parentNodes":[6155],"index":708,"rule":{"name":"Calculate263","pattern":{"type":"composite","id":2603,"leftPattern":{"type":"composite","id":2602,"leftPattern":{"type":"composite","id":2601,"leftPattern":{"type":"object","id":2597,"cls":"Fibonacci263","alias":"f1"},"rightPattern":{"type":"object","id":2598,"cls":"Fibonacci263","alias":"f2"}},"rightPattern":{"type":"object","id":2599,"cls":"Fibonacci263","alias":"f3"}},"rightPattern":{"type":"object","id":2600,"cls":"Result263","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate263"},{"type":"beta","out_nodes":[[6154,-1]],"__id":14161,"parentNodes":[6157,6158]},{"type":"type","out_nodes":[[3,2360]],"__id":14162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result263"}},{"type":"rightadapter","out_nodes":[[6155,2360]],"__id":14165,"parentNodes":[4]},{"type":"join","out_nodes":[[6159,-1]],"__id":14166,"parentNodes":[6161,6162],"constraint":{"type":"join-reference","out_nodes":[],"__id":14167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6155,-1]],"__id":14168,"parentNodes":[]},{"type":"type","out_nodes":[[9,2361],[14,2362],[20,2363],[30,2365],[20,2367],[30,2368]],"__id":14169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci263"}},{"type":"rightadapter","out_nodes":[[6158,2361]],"__id":14172,"parentNodes":[10]},{"type":"join","out_nodes":[[6163,-1]],"__id":14173,"parentNodes":[6164,6165],"constraint":{"type":"join-reference","out_nodes":[],"__id":14174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6158,-1]],"__id":14175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6162,2362]],"__id":14180,"parentNodes":[16]},{"type":"beta","out_nodes":[[6166,-1]],"__id":14181,"parentNodes":[6167,6168]},{"type":"leftadapter","out_nodes":[[6162,-1]],"__id":14182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6165,2363]],"__id":14187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6165,2364]],"__id":14191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14192,"parentNodes":[6170],"index":709,"rule":{"name":"Bootstrap263","pattern":{"type":"object","id":2604,"cls":"Fibonacci263","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap263"},{"type":"beta","out_nodes":[[6169,-1]],"__id":14193,"parentNodes":[6171,6172]},{"type":"rightadapter","out_nodes":[[6170,2365]],"__id":14198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6170,2366]],"__id":14202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14203,"parentNodes":[6174],"index":710,"rule":{"name":"Recurse263","pattern":{"type":"composite","id":2607,"leftPattern":{"type":"not","id":2605,"cls":"Fibonacci263","alias":"f"},"rightPattern":{"type":"object","id":2606,"cls":"Fibonacci263","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci263 = defined.get('Fibonacci263');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci263(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse263"},{"type":"beta","out_nodes":[[6173,-1]],"__id":14204,"parentNodes":[6175,6176]},{"type":"rightadapter","out_nodes":[[6174,2367]],"__id":14208,"parentNodes":[37]},{"type":"not","out_nodes":[[6177,-1]],"__id":14209,"parentNodes":[6178,6179],"constraint":{"type":"join-reference","out_nodes":[],"__id":14210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6174,-1]],"__id":14211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6176,2368]],"__id":14215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6176,2369]],"__id":14219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14220,"parentNodes":[6181],"index":711,"rule":{"name":"Calculate262","pattern":{"type":"composite","id":2614,"leftPattern":{"type":"composite","id":2613,"leftPattern":{"type":"composite","id":2612,"leftPattern":{"type":"object","id":2608,"cls":"Fibonacci262","alias":"f1"},"rightPattern":{"type":"object","id":2609,"cls":"Fibonacci262","alias":"f2"}},"rightPattern":{"type":"object","id":2610,"cls":"Fibonacci262","alias":"f3"}},"rightPattern":{"type":"object","id":2611,"cls":"Result262","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate262"},{"type":"beta","out_nodes":[[6180,-1]],"__id":14221,"parentNodes":[6183,6184]},{"type":"type","out_nodes":[[3,2370]],"__id":14222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result262"}},{"type":"rightadapter","out_nodes":[[6181,2370]],"__id":14225,"parentNodes":[4]},{"type":"join","out_nodes":[[6185,-1]],"__id":14226,"parentNodes":[6187,6188],"constraint":{"type":"join-reference","out_nodes":[],"__id":14227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6181,-1]],"__id":14228,"parentNodes":[]},{"type":"type","out_nodes":[[9,2371],[14,2372],[20,2373],[30,2375],[20,2377],[30,2378]],"__id":14229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci262"}},{"type":"rightadapter","out_nodes":[[6184,2371]],"__id":14232,"parentNodes":[10]},{"type":"join","out_nodes":[[6189,-1]],"__id":14233,"parentNodes":[6190,6191],"constraint":{"type":"join-reference","out_nodes":[],"__id":14234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6184,-1]],"__id":14235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6188,2372]],"__id":14240,"parentNodes":[16]},{"type":"beta","out_nodes":[[6192,-1]],"__id":14241,"parentNodes":[6193,6194]},{"type":"leftadapter","out_nodes":[[6188,-1]],"__id":14242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6191,2373]],"__id":14247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6191,2374]],"__id":14251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14252,"parentNodes":[6196],"index":712,"rule":{"name":"Bootstrap262","pattern":{"type":"object","id":2615,"cls":"Fibonacci262","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap262"},{"type":"beta","out_nodes":[[6195,-1]],"__id":14253,"parentNodes":[6197,6198]},{"type":"rightadapter","out_nodes":[[6196,2375]],"__id":14258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6196,2376]],"__id":14262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14263,"parentNodes":[6200],"index":713,"rule":{"name":"Recurse262","pattern":{"type":"composite","id":2618,"leftPattern":{"type":"not","id":2616,"cls":"Fibonacci262","alias":"f"},"rightPattern":{"type":"object","id":2617,"cls":"Fibonacci262","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci262 = defined.get('Fibonacci262');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci262(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse262"},{"type":"beta","out_nodes":[[6199,-1]],"__id":14264,"parentNodes":[6201,6202]},{"type":"rightadapter","out_nodes":[[6200,2377]],"__id":14268,"parentNodes":[37]},{"type":"not","out_nodes":[[6203,-1]],"__id":14269,"parentNodes":[6204,6205],"constraint":{"type":"join-reference","out_nodes":[],"__id":14270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6200,-1]],"__id":14271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6202,2378]],"__id":14275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6202,2379]],"__id":14279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14280,"parentNodes":[6207],"index":714,"rule":{"name":"Calculate261","pattern":{"type":"composite","id":2625,"leftPattern":{"type":"composite","id":2624,"leftPattern":{"type":"composite","id":2623,"leftPattern":{"type":"object","id":2619,"cls":"Fibonacci261","alias":"f1"},"rightPattern":{"type":"object","id":2620,"cls":"Fibonacci261","alias":"f2"}},"rightPattern":{"type":"object","id":2621,"cls":"Fibonacci261","alias":"f3"}},"rightPattern":{"type":"object","id":2622,"cls":"Result261","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate261"},{"type":"beta","out_nodes":[[6206,-1]],"__id":14281,"parentNodes":[6209,6210]},{"type":"type","out_nodes":[[3,2380]],"__id":14282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result261"}},{"type":"rightadapter","out_nodes":[[6207,2380]],"__id":14285,"parentNodes":[4]},{"type":"join","out_nodes":[[6211,-1]],"__id":14286,"parentNodes":[6213,6214],"constraint":{"type":"join-reference","out_nodes":[],"__id":14287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6207,-1]],"__id":14288,"parentNodes":[]},{"type":"type","out_nodes":[[9,2381],[14,2382],[20,2383],[30,2385],[20,2387],[30,2388]],"__id":14289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci261"}},{"type":"rightadapter","out_nodes":[[6210,2381]],"__id":14292,"parentNodes":[10]},{"type":"join","out_nodes":[[6215,-1]],"__id":14293,"parentNodes":[6216,6217],"constraint":{"type":"join-reference","out_nodes":[],"__id":14294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6210,-1]],"__id":14295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6214,2382]],"__id":14300,"parentNodes":[16]},{"type":"beta","out_nodes":[[6218,-1]],"__id":14301,"parentNodes":[6219,6220]},{"type":"leftadapter","out_nodes":[[6214,-1]],"__id":14302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6217,2383]],"__id":14307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6217,2384]],"__id":14311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14312,"parentNodes":[6222],"index":715,"rule":{"name":"Bootstrap261","pattern":{"type":"object","id":2626,"cls":"Fibonacci261","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap261"},{"type":"beta","out_nodes":[[6221,-1]],"__id":14313,"parentNodes":[6223,6224]},{"type":"rightadapter","out_nodes":[[6222,2385]],"__id":14318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6222,2386]],"__id":14322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14323,"parentNodes":[6226],"index":716,"rule":{"name":"Recurse261","pattern":{"type":"composite","id":2629,"leftPattern":{"type":"not","id":2627,"cls":"Fibonacci261","alias":"f"},"rightPattern":{"type":"object","id":2628,"cls":"Fibonacci261","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci261 = defined.get('Fibonacci261');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci261(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse261"},{"type":"beta","out_nodes":[[6225,-1]],"__id":14324,"parentNodes":[6227,6228]},{"type":"rightadapter","out_nodes":[[6226,2387]],"__id":14328,"parentNodes":[37]},{"type":"not","out_nodes":[[6229,-1]],"__id":14329,"parentNodes":[6230,6231],"constraint":{"type":"join-reference","out_nodes":[],"__id":14330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6226,-1]],"__id":14331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6228,2388]],"__id":14335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6228,2389]],"__id":14339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14340,"parentNodes":[6233],"index":717,"rule":{"name":"Calculate260","pattern":{"type":"composite","id":2636,"leftPattern":{"type":"composite","id":2635,"leftPattern":{"type":"composite","id":2634,"leftPattern":{"type":"object","id":2630,"cls":"Fibonacci260","alias":"f1"},"rightPattern":{"type":"object","id":2631,"cls":"Fibonacci260","alias":"f2"}},"rightPattern":{"type":"object","id":2632,"cls":"Fibonacci260","alias":"f3"}},"rightPattern":{"type":"object","id":2633,"cls":"Result260","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate260"},{"type":"beta","out_nodes":[[6232,-1]],"__id":14341,"parentNodes":[6235,6236]},{"type":"type","out_nodes":[[3,2390]],"__id":14342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result260"}},{"type":"rightadapter","out_nodes":[[6233,2390]],"__id":14345,"parentNodes":[4]},{"type":"join","out_nodes":[[6237,-1]],"__id":14346,"parentNodes":[6239,6240],"constraint":{"type":"join-reference","out_nodes":[],"__id":14347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6233,-1]],"__id":14348,"parentNodes":[]},{"type":"type","out_nodes":[[9,2391],[14,2392],[20,2393],[30,2395],[20,2397],[30,2398]],"__id":14349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci260"}},{"type":"rightadapter","out_nodes":[[6236,2391]],"__id":14352,"parentNodes":[10]},{"type":"join","out_nodes":[[6241,-1]],"__id":14353,"parentNodes":[6242,6243],"constraint":{"type":"join-reference","out_nodes":[],"__id":14354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6236,-1]],"__id":14355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6240,2392]],"__id":14360,"parentNodes":[16]},{"type":"beta","out_nodes":[[6244,-1]],"__id":14361,"parentNodes":[6245,6246]},{"type":"leftadapter","out_nodes":[[6240,-1]],"__id":14362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6243,2393]],"__id":14367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6243,2394]],"__id":14371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14372,"parentNodes":[6248],"index":718,"rule":{"name":"Bootstrap260","pattern":{"type":"object","id":2637,"cls":"Fibonacci260","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap260"},{"type":"beta","out_nodes":[[6247,-1]],"__id":14373,"parentNodes":[6249,6250]},{"type":"rightadapter","out_nodes":[[6248,2395]],"__id":14378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6248,2396]],"__id":14382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14383,"parentNodes":[6252],"index":719,"rule":{"name":"Recurse260","pattern":{"type":"composite","id":2640,"leftPattern":{"type":"not","id":2638,"cls":"Fibonacci260","alias":"f"},"rightPattern":{"type":"object","id":2639,"cls":"Fibonacci260","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');let Fibonacci260 = defined.get('Fibonacci260');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci260(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse260"},{"type":"beta","out_nodes":[[6251,-1]],"__id":14384,"parentNodes":[6253,6254]},{"type":"rightadapter","out_nodes":[[6252,2397]],"__id":14388,"parentNodes":[37]},{"type":"not","out_nodes":[[6255,-1]],"__id":14389,"parentNodes":[6256,6257],"constraint":{"type":"join-reference","out_nodes":[],"__id":14390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6252,-1]],"__id":14391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6254,2398]],"__id":14395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6254,2399]],"__id":14399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14400,"parentNodes":[6259],"index":720,"rule":{"name":"Calculate259","pattern":{"type":"composite","id":2647,"leftPattern":{"type":"composite","id":2646,"leftPattern":{"type":"composite","id":2645,"leftPattern":{"type":"object","id":2641,"cls":"Fibonacci259","alias":"f1"},"rightPattern":{"type":"object","id":2642,"cls":"Fibonacci259","alias":"f2"}},"rightPattern":{"type":"object","id":2643,"cls":"Fibonacci259","alias":"f3"}},"rightPattern":{"type":"object","id":2644,"cls":"Result259","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate259"},{"type":"beta","out_nodes":[[6258,-1]],"__id":14401,"parentNodes":[6261,6262]},{"type":"type","out_nodes":[[3,2400]],"__id":14402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result259"}},{"type":"rightadapter","out_nodes":[[6259,2400]],"__id":14405,"parentNodes":[4]},{"type":"join","out_nodes":[[6263,-1]],"__id":14406,"parentNodes":[6265,6266],"constraint":{"type":"join-reference","out_nodes":[],"__id":14407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6259,-1]],"__id":14408,"parentNodes":[]},{"type":"type","out_nodes":[[9,2401],[14,2402],[20,2403],[30,2405],[20,2407],[30,2408]],"__id":14409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci259"}},{"type":"rightadapter","out_nodes":[[6262,2401]],"__id":14412,"parentNodes":[10]},{"type":"join","out_nodes":[[6267,-1]],"__id":14413,"parentNodes":[6268,6269],"constraint":{"type":"join-reference","out_nodes":[],"__id":14414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6262,-1]],"__id":14415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6266,2402]],"__id":14420,"parentNodes":[16]},{"type":"beta","out_nodes":[[6270,-1]],"__id":14421,"parentNodes":[6271,6272]},{"type":"leftadapter","out_nodes":[[6266,-1]],"__id":14422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6269,2403]],"__id":14427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6269,2404]],"__id":14431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14432,"parentNodes":[6274],"index":721,"rule":{"name":"Bootstrap259","pattern":{"type":"object","id":2648,"cls":"Fibonacci259","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap259"},{"type":"beta","out_nodes":[[6273,-1]],"__id":14433,"parentNodes":[6275,6276]},{"type":"rightadapter","out_nodes":[[6274,2405]],"__id":14438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6274,2406]],"__id":14442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14443,"parentNodes":[6278],"index":722,"rule":{"name":"Recurse259","pattern":{"type":"composite","id":2651,"leftPattern":{"type":"not","id":2649,"cls":"Fibonacci259","alias":"f"},"rightPattern":{"type":"object","id":2650,"cls":"Fibonacci259","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci259 = defined.get('Fibonacci259');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci259(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse259"},{"type":"beta","out_nodes":[[6277,-1]],"__id":14444,"parentNodes":[6279,6280]},{"type":"rightadapter","out_nodes":[[6278,2407]],"__id":14448,"parentNodes":[37]},{"type":"not","out_nodes":[[6281,-1]],"__id":14449,"parentNodes":[6282,6283],"constraint":{"type":"join-reference","out_nodes":[],"__id":14450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6278,-1]],"__id":14451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6280,2408]],"__id":14455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6280,2409]],"__id":14459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14460,"parentNodes":[6285],"index":723,"rule":{"name":"Calculate258","pattern":{"type":"composite","id":2658,"leftPattern":{"type":"composite","id":2657,"leftPattern":{"type":"composite","id":2656,"leftPattern":{"type":"object","id":2652,"cls":"Fibonacci258","alias":"f1"},"rightPattern":{"type":"object","id":2653,"cls":"Fibonacci258","alias":"f2"}},"rightPattern":{"type":"object","id":2654,"cls":"Fibonacci258","alias":"f3"}},"rightPattern":{"type":"object","id":2655,"cls":"Result258","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate258"},{"type":"beta","out_nodes":[[6284,-1]],"__id":14461,"parentNodes":[6287,6288]},{"type":"type","out_nodes":[[3,2410]],"__id":14462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result258"}},{"type":"rightadapter","out_nodes":[[6285,2410]],"__id":14465,"parentNodes":[4]},{"type":"join","out_nodes":[[6289,-1]],"__id":14466,"parentNodes":[6291,6292],"constraint":{"type":"join-reference","out_nodes":[],"__id":14467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6285,-1]],"__id":14468,"parentNodes":[]},{"type":"type","out_nodes":[[9,2411],[14,2412],[20,2413],[30,2415],[20,2417],[30,2418]],"__id":14469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci258"}},{"type":"rightadapter","out_nodes":[[6288,2411]],"__id":14472,"parentNodes":[10]},{"type":"join","out_nodes":[[6293,-1]],"__id":14473,"parentNodes":[6294,6295],"constraint":{"type":"join-reference","out_nodes":[],"__id":14474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6288,-1]],"__id":14475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6292,2412]],"__id":14480,"parentNodes":[16]},{"type":"beta","out_nodes":[[6296,-1]],"__id":14481,"parentNodes":[6297,6298]},{"type":"leftadapter","out_nodes":[[6292,-1]],"__id":14482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6295,2413]],"__id":14487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6295,2414]],"__id":14491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14492,"parentNodes":[6300],"index":724,"rule":{"name":"Bootstrap258","pattern":{"type":"object","id":2659,"cls":"Fibonacci258","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap258"},{"type":"beta","out_nodes":[[6299,-1]],"__id":14493,"parentNodes":[6301,6302]},{"type":"rightadapter","out_nodes":[[6300,2415]],"__id":14498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6300,2416]],"__id":14502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14503,"parentNodes":[6304],"index":725,"rule":{"name":"Recurse258","pattern":{"type":"composite","id":2662,"leftPattern":{"type":"not","id":2660,"cls":"Fibonacci258","alias":"f"},"rightPattern":{"type":"object","id":2661,"cls":"Fibonacci258","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci258 = defined.get('Fibonacci258');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci258(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse258"},{"type":"beta","out_nodes":[[6303,-1]],"__id":14504,"parentNodes":[6305,6306]},{"type":"rightadapter","out_nodes":[[6304,2417]],"__id":14508,"parentNodes":[37]},{"type":"not","out_nodes":[[6307,-1]],"__id":14509,"parentNodes":[6308,6309],"constraint":{"type":"join-reference","out_nodes":[],"__id":14510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6304,-1]],"__id":14511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6306,2418]],"__id":14515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6306,2419]],"__id":14519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14520,"parentNodes":[6311],"index":726,"rule":{"name":"Calculate257","pattern":{"type":"composite","id":2669,"leftPattern":{"type":"composite","id":2668,"leftPattern":{"type":"composite","id":2667,"leftPattern":{"type":"object","id":2663,"cls":"Fibonacci257","alias":"f1"},"rightPattern":{"type":"object","id":2664,"cls":"Fibonacci257","alias":"f2"}},"rightPattern":{"type":"object","id":2665,"cls":"Fibonacci257","alias":"f3"}},"rightPattern":{"type":"object","id":2666,"cls":"Result257","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate257"},{"type":"beta","out_nodes":[[6310,-1]],"__id":14521,"parentNodes":[6313,6314]},{"type":"type","out_nodes":[[3,2420]],"__id":14522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result257"}},{"type":"rightadapter","out_nodes":[[6311,2420]],"__id":14525,"parentNodes":[4]},{"type":"join","out_nodes":[[6315,-1]],"__id":14526,"parentNodes":[6317,6318],"constraint":{"type":"join-reference","out_nodes":[],"__id":14527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6311,-1]],"__id":14528,"parentNodes":[]},{"type":"type","out_nodes":[[9,2421],[14,2422],[20,2423],[30,2425],[20,2427],[30,2428]],"__id":14529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci257"}},{"type":"rightadapter","out_nodes":[[6314,2421]],"__id":14532,"parentNodes":[10]},{"type":"join","out_nodes":[[6319,-1]],"__id":14533,"parentNodes":[6320,6321],"constraint":{"type":"join-reference","out_nodes":[],"__id":14534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6314,-1]],"__id":14535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6318,2422]],"__id":14540,"parentNodes":[16]},{"type":"beta","out_nodes":[[6322,-1]],"__id":14541,"parentNodes":[6323,6324]},{"type":"leftadapter","out_nodes":[[6318,-1]],"__id":14542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6321,2423]],"__id":14547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6321,2424]],"__id":14551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14552,"parentNodes":[6326],"index":727,"rule":{"name":"Bootstrap257","pattern":{"type":"object","id":2670,"cls":"Fibonacci257","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap257"},{"type":"beta","out_nodes":[[6325,-1]],"__id":14553,"parentNodes":[6327,6328]},{"type":"rightadapter","out_nodes":[[6326,2425]],"__id":14558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6326,2426]],"__id":14562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14563,"parentNodes":[6330],"index":728,"rule":{"name":"Recurse257","pattern":{"type":"composite","id":2673,"leftPattern":{"type":"not","id":2671,"cls":"Fibonacci257","alias":"f"},"rightPattern":{"type":"object","id":2672,"cls":"Fibonacci257","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci257 = defined.get('Fibonacci257');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci257(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse257"},{"type":"beta","out_nodes":[[6329,-1]],"__id":14564,"parentNodes":[6331,6332]},{"type":"rightadapter","out_nodes":[[6330,2427]],"__id":14568,"parentNodes":[37]},{"type":"not","out_nodes":[[6333,-1]],"__id":14569,"parentNodes":[6334,6335],"constraint":{"type":"join-reference","out_nodes":[],"__id":14570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6330,-1]],"__id":14571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6332,2428]],"__id":14575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6332,2429]],"__id":14579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14580,"parentNodes":[6337],"index":729,"rule":{"name":"Calculate256","pattern":{"type":"composite","id":2680,"leftPattern":{"type":"composite","id":2679,"leftPattern":{"type":"composite","id":2678,"leftPattern":{"type":"object","id":2674,"cls":"Fibonacci256","alias":"f1"},"rightPattern":{"type":"object","id":2675,"cls":"Fibonacci256","alias":"f2"}},"rightPattern":{"type":"object","id":2676,"cls":"Fibonacci256","alias":"f3"}},"rightPattern":{"type":"object","id":2677,"cls":"Result256","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate256"},{"type":"beta","out_nodes":[[6336,-1]],"__id":14581,"parentNodes":[6339,6340]},{"type":"type","out_nodes":[[3,2430]],"__id":14582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result256"}},{"type":"rightadapter","out_nodes":[[6337,2430]],"__id":14585,"parentNodes":[4]},{"type":"join","out_nodes":[[6341,-1]],"__id":14586,"parentNodes":[6343,6344],"constraint":{"type":"join-reference","out_nodes":[],"__id":14587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6337,-1]],"__id":14588,"parentNodes":[]},{"type":"type","out_nodes":[[9,2431],[14,2432],[20,2433],[30,2435],[20,2437],[30,2438]],"__id":14589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci256"}},{"type":"rightadapter","out_nodes":[[6340,2431]],"__id":14592,"parentNodes":[10]},{"type":"join","out_nodes":[[6345,-1]],"__id":14593,"parentNodes":[6346,6347],"constraint":{"type":"join-reference","out_nodes":[],"__id":14594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6340,-1]],"__id":14595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6344,2432]],"__id":14600,"parentNodes":[16]},{"type":"beta","out_nodes":[[6348,-1]],"__id":14601,"parentNodes":[6349,6350]},{"type":"leftadapter","out_nodes":[[6344,-1]],"__id":14602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6347,2433]],"__id":14607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6347,2434]],"__id":14611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14612,"parentNodes":[6352],"index":730,"rule":{"name":"Bootstrap256","pattern":{"type":"object","id":2681,"cls":"Fibonacci256","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap256"},{"type":"beta","out_nodes":[[6351,-1]],"__id":14613,"parentNodes":[6353,6354]},{"type":"rightadapter","out_nodes":[[6352,2435]],"__id":14618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6352,2436]],"__id":14622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14623,"parentNodes":[6356],"index":731,"rule":{"name":"Recurse256","pattern":{"type":"composite","id":2684,"leftPattern":{"type":"not","id":2682,"cls":"Fibonacci256","alias":"f"},"rightPattern":{"type":"object","id":2683,"cls":"Fibonacci256","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci256 = defined.get('Fibonacci256');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci256(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse256"},{"type":"beta","out_nodes":[[6355,-1]],"__id":14624,"parentNodes":[6357,6358]},{"type":"rightadapter","out_nodes":[[6356,2437]],"__id":14628,"parentNodes":[37]},{"type":"not","out_nodes":[[6359,-1]],"__id":14629,"parentNodes":[6360,6361],"constraint":{"type":"join-reference","out_nodes":[],"__id":14630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6356,-1]],"__id":14631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6358,2438]],"__id":14635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6358,2439]],"__id":14639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14640,"parentNodes":[6363],"index":732,"rule":{"name":"Calculate255","pattern":{"type":"composite","id":2691,"leftPattern":{"type":"composite","id":2690,"leftPattern":{"type":"composite","id":2689,"leftPattern":{"type":"object","id":2685,"cls":"Fibonacci255","alias":"f1"},"rightPattern":{"type":"object","id":2686,"cls":"Fibonacci255","alias":"f2"}},"rightPattern":{"type":"object","id":2687,"cls":"Fibonacci255","alias":"f3"}},"rightPattern":{"type":"object","id":2688,"cls":"Result255","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate255"},{"type":"beta","out_nodes":[[6362,-1]],"__id":14641,"parentNodes":[6365,6366]},{"type":"type","out_nodes":[[3,2440]],"__id":14642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result255"}},{"type":"rightadapter","out_nodes":[[6363,2440]],"__id":14645,"parentNodes":[4]},{"type":"join","out_nodes":[[6367,-1]],"__id":14646,"parentNodes":[6369,6370],"constraint":{"type":"join-reference","out_nodes":[],"__id":14647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6363,-1]],"__id":14648,"parentNodes":[]},{"type":"type","out_nodes":[[9,2441],[14,2442],[20,2443],[30,2445],[20,2447],[30,2448]],"__id":14649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci255"}},{"type":"rightadapter","out_nodes":[[6366,2441]],"__id":14652,"parentNodes":[10]},{"type":"join","out_nodes":[[6371,-1]],"__id":14653,"parentNodes":[6372,6373],"constraint":{"type":"join-reference","out_nodes":[],"__id":14654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6366,-1]],"__id":14655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6370,2442]],"__id":14660,"parentNodes":[16]},{"type":"beta","out_nodes":[[6374,-1]],"__id":14661,"parentNodes":[6375,6376]},{"type":"leftadapter","out_nodes":[[6370,-1]],"__id":14662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6373,2443]],"__id":14667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6373,2444]],"__id":14671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14672,"parentNodes":[6378],"index":733,"rule":{"name":"Bootstrap255","pattern":{"type":"object","id":2692,"cls":"Fibonacci255","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap255"},{"type":"beta","out_nodes":[[6377,-1]],"__id":14673,"parentNodes":[6379,6380]},{"type":"rightadapter","out_nodes":[[6378,2445]],"__id":14678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6378,2446]],"__id":14682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14683,"parentNodes":[6382],"index":734,"rule":{"name":"Recurse255","pattern":{"type":"composite","id":2695,"leftPattern":{"type":"not","id":2693,"cls":"Fibonacci255","alias":"f"},"rightPattern":{"type":"object","id":2694,"cls":"Fibonacci255","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci255 = defined.get('Fibonacci255');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci255(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse255"},{"type":"beta","out_nodes":[[6381,-1]],"__id":14684,"parentNodes":[6383,6384]},{"type":"rightadapter","out_nodes":[[6382,2447]],"__id":14688,"parentNodes":[37]},{"type":"not","out_nodes":[[6385,-1]],"__id":14689,"parentNodes":[6386,6387],"constraint":{"type":"join-reference","out_nodes":[],"__id":14690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6382,-1]],"__id":14691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6384,2448]],"__id":14695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6384,2449]],"__id":14699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14700,"parentNodes":[6389],"index":735,"rule":{"name":"Calculate254","pattern":{"type":"composite","id":2702,"leftPattern":{"type":"composite","id":2701,"leftPattern":{"type":"composite","id":2700,"leftPattern":{"type":"object","id":2696,"cls":"Fibonacci254","alias":"f1"},"rightPattern":{"type":"object","id":2697,"cls":"Fibonacci254","alias":"f2"}},"rightPattern":{"type":"object","id":2698,"cls":"Fibonacci254","alias":"f3"}},"rightPattern":{"type":"object","id":2699,"cls":"Result254","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate254"},{"type":"beta","out_nodes":[[6388,-1]],"__id":14701,"parentNodes":[6391,6392]},{"type":"type","out_nodes":[[3,2450]],"__id":14702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result254"}},{"type":"rightadapter","out_nodes":[[6389,2450]],"__id":14705,"parentNodes":[4]},{"type":"join","out_nodes":[[6393,-1]],"__id":14706,"parentNodes":[6395,6396],"constraint":{"type":"join-reference","out_nodes":[],"__id":14707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6389,-1]],"__id":14708,"parentNodes":[]},{"type":"type","out_nodes":[[9,2451],[14,2452],[20,2453],[30,2455],[20,2457],[30,2458]],"__id":14709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci254"}},{"type":"rightadapter","out_nodes":[[6392,2451]],"__id":14712,"parentNodes":[10]},{"type":"join","out_nodes":[[6397,-1]],"__id":14713,"parentNodes":[6398,6399],"constraint":{"type":"join-reference","out_nodes":[],"__id":14714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6392,-1]],"__id":14715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6396,2452]],"__id":14720,"parentNodes":[16]},{"type":"beta","out_nodes":[[6400,-1]],"__id":14721,"parentNodes":[6401,6402]},{"type":"leftadapter","out_nodes":[[6396,-1]],"__id":14722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6399,2453]],"__id":14727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6399,2454]],"__id":14731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14732,"parentNodes":[6404],"index":736,"rule":{"name":"Bootstrap254","pattern":{"type":"object","id":2703,"cls":"Fibonacci254","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap254"},{"type":"beta","out_nodes":[[6403,-1]],"__id":14733,"parentNodes":[6405,6406]},{"type":"rightadapter","out_nodes":[[6404,2455]],"__id":14738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6404,2456]],"__id":14742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14743,"parentNodes":[6408],"index":737,"rule":{"name":"Recurse254","pattern":{"type":"composite","id":2706,"leftPattern":{"type":"not","id":2704,"cls":"Fibonacci254","alias":"f"},"rightPattern":{"type":"object","id":2705,"cls":"Fibonacci254","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci254 = defined.get('Fibonacci254');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci254(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse254"},{"type":"beta","out_nodes":[[6407,-1]],"__id":14744,"parentNodes":[6409,6410]},{"type":"rightadapter","out_nodes":[[6408,2457]],"__id":14748,"parentNodes":[37]},{"type":"not","out_nodes":[[6411,-1]],"__id":14749,"parentNodes":[6412,6413],"constraint":{"type":"join-reference","out_nodes":[],"__id":14750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6408,-1]],"__id":14751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6410,2458]],"__id":14755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6410,2459]],"__id":14759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14760,"parentNodes":[6415],"index":738,"rule":{"name":"Calculate253","pattern":{"type":"composite","id":2713,"leftPattern":{"type":"composite","id":2712,"leftPattern":{"type":"composite","id":2711,"leftPattern":{"type":"object","id":2707,"cls":"Fibonacci253","alias":"f1"},"rightPattern":{"type":"object","id":2708,"cls":"Fibonacci253","alias":"f2"}},"rightPattern":{"type":"object","id":2709,"cls":"Fibonacci253","alias":"f3"}},"rightPattern":{"type":"object","id":2710,"cls":"Result253","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate253"},{"type":"beta","out_nodes":[[6414,-1]],"__id":14761,"parentNodes":[6417,6418]},{"type":"type","out_nodes":[[3,2460]],"__id":14762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result253"}},{"type":"rightadapter","out_nodes":[[6415,2460]],"__id":14765,"parentNodes":[4]},{"type":"join","out_nodes":[[6419,-1]],"__id":14766,"parentNodes":[6421,6422],"constraint":{"type":"join-reference","out_nodes":[],"__id":14767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6415,-1]],"__id":14768,"parentNodes":[]},{"type":"type","out_nodes":[[9,2461],[14,2462],[20,2463],[30,2465],[20,2467],[30,2468]],"__id":14769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci253"}},{"type":"rightadapter","out_nodes":[[6418,2461]],"__id":14772,"parentNodes":[10]},{"type":"join","out_nodes":[[6423,-1]],"__id":14773,"parentNodes":[6424,6425],"constraint":{"type":"join-reference","out_nodes":[],"__id":14774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6418,-1]],"__id":14775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6422,2462]],"__id":14780,"parentNodes":[16]},{"type":"beta","out_nodes":[[6426,-1]],"__id":14781,"parentNodes":[6427,6428]},{"type":"leftadapter","out_nodes":[[6422,-1]],"__id":14782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6425,2463]],"__id":14787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6425,2464]],"__id":14791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14792,"parentNodes":[6430],"index":739,"rule":{"name":"Bootstrap253","pattern":{"type":"object","id":2714,"cls":"Fibonacci253","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap253"},{"type":"beta","out_nodes":[[6429,-1]],"__id":14793,"parentNodes":[6431,6432]},{"type":"rightadapter","out_nodes":[[6430,2465]],"__id":14798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6430,2466]],"__id":14802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14803,"parentNodes":[6434],"index":740,"rule":{"name":"Recurse253","pattern":{"type":"composite","id":2717,"leftPattern":{"type":"not","id":2715,"cls":"Fibonacci253","alias":"f"},"rightPattern":{"type":"object","id":2716,"cls":"Fibonacci253","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci253 = defined.get('Fibonacci253');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci253(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse253"},{"type":"beta","out_nodes":[[6433,-1]],"__id":14804,"parentNodes":[6435,6436]},{"type":"rightadapter","out_nodes":[[6434,2467]],"__id":14808,"parentNodes":[37]},{"type":"not","out_nodes":[[6437,-1]],"__id":14809,"parentNodes":[6438,6439],"constraint":{"type":"join-reference","out_nodes":[],"__id":14810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6434,-1]],"__id":14811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6436,2468]],"__id":14815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6436,2469]],"__id":14819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14820,"parentNodes":[6441],"index":741,"rule":{"name":"Calculate252","pattern":{"type":"composite","id":2724,"leftPattern":{"type":"composite","id":2723,"leftPattern":{"type":"composite","id":2722,"leftPattern":{"type":"object","id":2718,"cls":"Fibonacci252","alias":"f1"},"rightPattern":{"type":"object","id":2719,"cls":"Fibonacci252","alias":"f2"}},"rightPattern":{"type":"object","id":2720,"cls":"Fibonacci252","alias":"f3"}},"rightPattern":{"type":"object","id":2721,"cls":"Result252","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate252"},{"type":"beta","out_nodes":[[6440,-1]],"__id":14821,"parentNodes":[6443,6444]},{"type":"type","out_nodes":[[3,2470]],"__id":14822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result252"}},{"type":"rightadapter","out_nodes":[[6441,2470]],"__id":14825,"parentNodes":[4]},{"type":"join","out_nodes":[[6445,-1]],"__id":14826,"parentNodes":[6447,6448],"constraint":{"type":"join-reference","out_nodes":[],"__id":14827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6441,-1]],"__id":14828,"parentNodes":[]},{"type":"type","out_nodes":[[9,2471],[14,2472],[20,2473],[30,2475],[20,2477],[30,2478]],"__id":14829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci252"}},{"type":"rightadapter","out_nodes":[[6444,2471]],"__id":14832,"parentNodes":[10]},{"type":"join","out_nodes":[[6449,-1]],"__id":14833,"parentNodes":[6450,6451],"constraint":{"type":"join-reference","out_nodes":[],"__id":14834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6444,-1]],"__id":14835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6448,2472]],"__id":14840,"parentNodes":[16]},{"type":"beta","out_nodes":[[6452,-1]],"__id":14841,"parentNodes":[6453,6454]},{"type":"leftadapter","out_nodes":[[6448,-1]],"__id":14842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6451,2473]],"__id":14847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6451,2474]],"__id":14851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14852,"parentNodes":[6456],"index":742,"rule":{"name":"Bootstrap252","pattern":{"type":"object","id":2725,"cls":"Fibonacci252","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap252"},{"type":"beta","out_nodes":[[6455,-1]],"__id":14853,"parentNodes":[6457,6458]},{"type":"rightadapter","out_nodes":[[6456,2475]],"__id":14858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6456,2476]],"__id":14862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14863,"parentNodes":[6460],"index":743,"rule":{"name":"Recurse252","pattern":{"type":"composite","id":2728,"leftPattern":{"type":"not","id":2726,"cls":"Fibonacci252","alias":"f"},"rightPattern":{"type":"object","id":2727,"cls":"Fibonacci252","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci252 = defined.get('Fibonacci252');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci252(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse252"},{"type":"beta","out_nodes":[[6459,-1]],"__id":14864,"parentNodes":[6461,6462]},{"type":"rightadapter","out_nodes":[[6460,2477]],"__id":14868,"parentNodes":[37]},{"type":"not","out_nodes":[[6463,-1]],"__id":14869,"parentNodes":[6464,6465],"constraint":{"type":"join-reference","out_nodes":[],"__id":14870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6460,-1]],"__id":14871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6462,2478]],"__id":14875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6462,2479]],"__id":14879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14880,"parentNodes":[6467],"index":744,"rule":{"name":"Calculate251","pattern":{"type":"composite","id":2735,"leftPattern":{"type":"composite","id":2734,"leftPattern":{"type":"composite","id":2733,"leftPattern":{"type":"object","id":2729,"cls":"Fibonacci251","alias":"f1"},"rightPattern":{"type":"object","id":2730,"cls":"Fibonacci251","alias":"f2"}},"rightPattern":{"type":"object","id":2731,"cls":"Fibonacci251","alias":"f3"}},"rightPattern":{"type":"object","id":2732,"cls":"Result251","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate251"},{"type":"beta","out_nodes":[[6466,-1]],"__id":14881,"parentNodes":[6469,6470]},{"type":"type","out_nodes":[[3,2480]],"__id":14882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result251"}},{"type":"rightadapter","out_nodes":[[6467,2480]],"__id":14885,"parentNodes":[4]},{"type":"join","out_nodes":[[6471,-1]],"__id":14886,"parentNodes":[6473,6474],"constraint":{"type":"join-reference","out_nodes":[],"__id":14887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6467,-1]],"__id":14888,"parentNodes":[]},{"type":"type","out_nodes":[[9,2481],[14,2482],[20,2483],[30,2485],[20,2487],[30,2488]],"__id":14889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci251"}},{"type":"rightadapter","out_nodes":[[6470,2481]],"__id":14892,"parentNodes":[10]},{"type":"join","out_nodes":[[6475,-1]],"__id":14893,"parentNodes":[6476,6477],"constraint":{"type":"join-reference","out_nodes":[],"__id":14894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6470,-1]],"__id":14895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6474,2482]],"__id":14900,"parentNodes":[16]},{"type":"beta","out_nodes":[[6478,-1]],"__id":14901,"parentNodes":[6479,6480]},{"type":"leftadapter","out_nodes":[[6474,-1]],"__id":14902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6477,2483]],"__id":14907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6477,2484]],"__id":14911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14912,"parentNodes":[6482],"index":745,"rule":{"name":"Bootstrap251","pattern":{"type":"object","id":2736,"cls":"Fibonacci251","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap251"},{"type":"beta","out_nodes":[[6481,-1]],"__id":14913,"parentNodes":[6483,6484]},{"type":"rightadapter","out_nodes":[[6482,2485]],"__id":14918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6482,2486]],"__id":14922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14923,"parentNodes":[6486],"index":746,"rule":{"name":"Recurse251","pattern":{"type":"composite","id":2739,"leftPattern":{"type":"not","id":2737,"cls":"Fibonacci251","alias":"f"},"rightPattern":{"type":"object","id":2738,"cls":"Fibonacci251","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci251 = defined.get('Fibonacci251');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci251(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse251"},{"type":"beta","out_nodes":[[6485,-1]],"__id":14924,"parentNodes":[6487,6488]},{"type":"rightadapter","out_nodes":[[6486,2487]],"__id":14928,"parentNodes":[37]},{"type":"not","out_nodes":[[6489,-1]],"__id":14929,"parentNodes":[6490,6491],"constraint":{"type":"join-reference","out_nodes":[],"__id":14930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6486,-1]],"__id":14931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6488,2488]],"__id":14935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6488,2489]],"__id":14939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14940,"parentNodes":[6493],"index":747,"rule":{"name":"Calculate250","pattern":{"type":"composite","id":2746,"leftPattern":{"type":"composite","id":2745,"leftPattern":{"type":"composite","id":2744,"leftPattern":{"type":"object","id":2740,"cls":"Fibonacci250","alias":"f1"},"rightPattern":{"type":"object","id":2741,"cls":"Fibonacci250","alias":"f2"}},"rightPattern":{"type":"object","id":2742,"cls":"Fibonacci250","alias":"f3"}},"rightPattern":{"type":"object","id":2743,"cls":"Result250","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate250"},{"type":"beta","out_nodes":[[6492,-1]],"__id":14941,"parentNodes":[6495,6496]},{"type":"type","out_nodes":[[3,2490]],"__id":14942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result250"}},{"type":"rightadapter","out_nodes":[[6493,2490]],"__id":14945,"parentNodes":[4]},{"type":"join","out_nodes":[[6497,-1]],"__id":14946,"parentNodes":[6499,6500],"constraint":{"type":"join-reference","out_nodes":[],"__id":14947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6493,-1]],"__id":14948,"parentNodes":[]},{"type":"type","out_nodes":[[9,2491],[14,2492],[20,2493],[30,2495],[20,2497],[30,2498]],"__id":14949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci250"}},{"type":"rightadapter","out_nodes":[[6496,2491]],"__id":14952,"parentNodes":[10]},{"type":"join","out_nodes":[[6501,-1]],"__id":14953,"parentNodes":[6502,6503],"constraint":{"type":"join-reference","out_nodes":[],"__id":14954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6496,-1]],"__id":14955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6500,2492]],"__id":14960,"parentNodes":[16]},{"type":"beta","out_nodes":[[6504,-1]],"__id":14961,"parentNodes":[6505,6506]},{"type":"leftadapter","out_nodes":[[6500,-1]],"__id":14962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6503,2493]],"__id":14967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6503,2494]],"__id":14971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14972,"parentNodes":[6508],"index":748,"rule":{"name":"Bootstrap250","pattern":{"type":"object","id":2747,"cls":"Fibonacci250","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap250"},{"type":"beta","out_nodes":[[6507,-1]],"__id":14973,"parentNodes":[6509,6510]},{"type":"rightadapter","out_nodes":[[6508,2495]],"__id":14978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6508,2496]],"__id":14982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":14983,"parentNodes":[6512],"index":749,"rule":{"name":"Recurse250","pattern":{"type":"composite","id":2750,"leftPattern":{"type":"not","id":2748,"cls":"Fibonacci250","alias":"f"},"rightPattern":{"type":"object","id":2749,"cls":"Fibonacci250","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');let Fibonacci250 = defined.get('Fibonacci250');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci250(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse250"},{"type":"beta","out_nodes":[[6511,-1]],"__id":14984,"parentNodes":[6513,6514]},{"type":"rightadapter","out_nodes":[[6512,2497]],"__id":14988,"parentNodes":[37]},{"type":"not","out_nodes":[[6515,-1]],"__id":14989,"parentNodes":[6516,6517],"constraint":{"type":"join-reference","out_nodes":[],"__id":14990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6512,-1]],"__id":14991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6514,2498]],"__id":14995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6514,2499]],"__id":14999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15000,"parentNodes":[6519],"index":750,"rule":{"name":"Calculate249","pattern":{"type":"composite","id":2757,"leftPattern":{"type":"composite","id":2756,"leftPattern":{"type":"composite","id":2755,"leftPattern":{"type":"object","id":2751,"cls":"Fibonacci249","alias":"f1"},"rightPattern":{"type":"object","id":2752,"cls":"Fibonacci249","alias":"f2"}},"rightPattern":{"type":"object","id":2753,"cls":"Fibonacci249","alias":"f3"}},"rightPattern":{"type":"object","id":2754,"cls":"Result249","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate249"},{"type":"beta","out_nodes":[[6518,-1]],"__id":15001,"parentNodes":[6521,6522]},{"type":"type","out_nodes":[[3,2500]],"__id":15002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result249"}},{"type":"rightadapter","out_nodes":[[6519,2500]],"__id":15005,"parentNodes":[4]},{"type":"join","out_nodes":[[6523,-1]],"__id":15006,"parentNodes":[6525,6526],"constraint":{"type":"join-reference","out_nodes":[],"__id":15007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6519,-1]],"__id":15008,"parentNodes":[]},{"type":"type","out_nodes":[[9,2501],[14,2502],[20,2503],[30,2505],[20,2507],[30,2508]],"__id":15009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci249"}},{"type":"rightadapter","out_nodes":[[6522,2501]],"__id":15012,"parentNodes":[10]},{"type":"join","out_nodes":[[6527,-1]],"__id":15013,"parentNodes":[6528,6529],"constraint":{"type":"join-reference","out_nodes":[],"__id":15014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6522,-1]],"__id":15015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6526,2502]],"__id":15020,"parentNodes":[16]},{"type":"beta","out_nodes":[[6530,-1]],"__id":15021,"parentNodes":[6531,6532]},{"type":"leftadapter","out_nodes":[[6526,-1]],"__id":15022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6529,2503]],"__id":15027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6529,2504]],"__id":15031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15032,"parentNodes":[6534],"index":751,"rule":{"name":"Bootstrap249","pattern":{"type":"object","id":2758,"cls":"Fibonacci249","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap249"},{"type":"beta","out_nodes":[[6533,-1]],"__id":15033,"parentNodes":[6535,6536]},{"type":"rightadapter","out_nodes":[[6534,2505]],"__id":15038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6534,2506]],"__id":15042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15043,"parentNodes":[6538],"index":752,"rule":{"name":"Recurse249","pattern":{"type":"composite","id":2761,"leftPattern":{"type":"not","id":2759,"cls":"Fibonacci249","alias":"f"},"rightPattern":{"type":"object","id":2760,"cls":"Fibonacci249","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci249 = defined.get('Fibonacci249');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci249(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse249"},{"type":"beta","out_nodes":[[6537,-1]],"__id":15044,"parentNodes":[6539,6540]},{"type":"rightadapter","out_nodes":[[6538,2507]],"__id":15048,"parentNodes":[37]},{"type":"not","out_nodes":[[6541,-1]],"__id":15049,"parentNodes":[6542,6543],"constraint":{"type":"join-reference","out_nodes":[],"__id":15050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6538,-1]],"__id":15051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6540,2508]],"__id":15055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6540,2509]],"__id":15059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15060,"parentNodes":[6545],"index":753,"rule":{"name":"Calculate248","pattern":{"type":"composite","id":2768,"leftPattern":{"type":"composite","id":2767,"leftPattern":{"type":"composite","id":2766,"leftPattern":{"type":"object","id":2762,"cls":"Fibonacci248","alias":"f1"},"rightPattern":{"type":"object","id":2763,"cls":"Fibonacci248","alias":"f2"}},"rightPattern":{"type":"object","id":2764,"cls":"Fibonacci248","alias":"f3"}},"rightPattern":{"type":"object","id":2765,"cls":"Result248","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate248"},{"type":"beta","out_nodes":[[6544,-1]],"__id":15061,"parentNodes":[6547,6548]},{"type":"type","out_nodes":[[3,2510]],"__id":15062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result248"}},{"type":"rightadapter","out_nodes":[[6545,2510]],"__id":15065,"parentNodes":[4]},{"type":"join","out_nodes":[[6549,-1]],"__id":15066,"parentNodes":[6551,6552],"constraint":{"type":"join-reference","out_nodes":[],"__id":15067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6545,-1]],"__id":15068,"parentNodes":[]},{"type":"type","out_nodes":[[9,2511],[14,2512],[20,2513],[30,2515],[20,2517],[30,2518]],"__id":15069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci248"}},{"type":"rightadapter","out_nodes":[[6548,2511]],"__id":15072,"parentNodes":[10]},{"type":"join","out_nodes":[[6553,-1]],"__id":15073,"parentNodes":[6554,6555],"constraint":{"type":"join-reference","out_nodes":[],"__id":15074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6548,-1]],"__id":15075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6552,2512]],"__id":15080,"parentNodes":[16]},{"type":"beta","out_nodes":[[6556,-1]],"__id":15081,"parentNodes":[6557,6558]},{"type":"leftadapter","out_nodes":[[6552,-1]],"__id":15082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6555,2513]],"__id":15087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6555,2514]],"__id":15091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15092,"parentNodes":[6560],"index":754,"rule":{"name":"Bootstrap248","pattern":{"type":"object","id":2769,"cls":"Fibonacci248","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap248"},{"type":"beta","out_nodes":[[6559,-1]],"__id":15093,"parentNodes":[6561,6562]},{"type":"rightadapter","out_nodes":[[6560,2515]],"__id":15098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6560,2516]],"__id":15102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15103,"parentNodes":[6564],"index":755,"rule":{"name":"Recurse248","pattern":{"type":"composite","id":2772,"leftPattern":{"type":"not","id":2770,"cls":"Fibonacci248","alias":"f"},"rightPattern":{"type":"object","id":2771,"cls":"Fibonacci248","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci248 = defined.get('Fibonacci248');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci248(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse248"},{"type":"beta","out_nodes":[[6563,-1]],"__id":15104,"parentNodes":[6565,6566]},{"type":"rightadapter","out_nodes":[[6564,2517]],"__id":15108,"parentNodes":[37]},{"type":"not","out_nodes":[[6567,-1]],"__id":15109,"parentNodes":[6568,6569],"constraint":{"type":"join-reference","out_nodes":[],"__id":15110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6564,-1]],"__id":15111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6566,2518]],"__id":15115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6566,2519]],"__id":15119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15120,"parentNodes":[6571],"index":756,"rule":{"name":"Calculate247","pattern":{"type":"composite","id":2779,"leftPattern":{"type":"composite","id":2778,"leftPattern":{"type":"composite","id":2777,"leftPattern":{"type":"object","id":2773,"cls":"Fibonacci247","alias":"f1"},"rightPattern":{"type":"object","id":2774,"cls":"Fibonacci247","alias":"f2"}},"rightPattern":{"type":"object","id":2775,"cls":"Fibonacci247","alias":"f3"}},"rightPattern":{"type":"object","id":2776,"cls":"Result247","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate247"},{"type":"beta","out_nodes":[[6570,-1]],"__id":15121,"parentNodes":[6573,6574]},{"type":"type","out_nodes":[[3,2520]],"__id":15122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result247"}},{"type":"rightadapter","out_nodes":[[6571,2520]],"__id":15125,"parentNodes":[4]},{"type":"join","out_nodes":[[6575,-1]],"__id":15126,"parentNodes":[6577,6578],"constraint":{"type":"join-reference","out_nodes":[],"__id":15127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6571,-1]],"__id":15128,"parentNodes":[]},{"type":"type","out_nodes":[[9,2521],[14,2522],[20,2523],[30,2525],[20,2527],[30,2528]],"__id":15129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci247"}},{"type":"rightadapter","out_nodes":[[6574,2521]],"__id":15132,"parentNodes":[10]},{"type":"join","out_nodes":[[6579,-1]],"__id":15133,"parentNodes":[6580,6581],"constraint":{"type":"join-reference","out_nodes":[],"__id":15134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6574,-1]],"__id":15135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6578,2522]],"__id":15140,"parentNodes":[16]},{"type":"beta","out_nodes":[[6582,-1]],"__id":15141,"parentNodes":[6583,6584]},{"type":"leftadapter","out_nodes":[[6578,-1]],"__id":15142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6581,2523]],"__id":15147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6581,2524]],"__id":15151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15152,"parentNodes":[6586],"index":757,"rule":{"name":"Bootstrap247","pattern":{"type":"object","id":2780,"cls":"Fibonacci247","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap247"},{"type":"beta","out_nodes":[[6585,-1]],"__id":15153,"parentNodes":[6587,6588]},{"type":"rightadapter","out_nodes":[[6586,2525]],"__id":15158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6586,2526]],"__id":15162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15163,"parentNodes":[6590],"index":758,"rule":{"name":"Recurse247","pattern":{"type":"composite","id":2783,"leftPattern":{"type":"not","id":2781,"cls":"Fibonacci247","alias":"f"},"rightPattern":{"type":"object","id":2782,"cls":"Fibonacci247","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci247 = defined.get('Fibonacci247');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci247(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse247"},{"type":"beta","out_nodes":[[6589,-1]],"__id":15164,"parentNodes":[6591,6592]},{"type":"rightadapter","out_nodes":[[6590,2527]],"__id":15168,"parentNodes":[37]},{"type":"not","out_nodes":[[6593,-1]],"__id":15169,"parentNodes":[6594,6595],"constraint":{"type":"join-reference","out_nodes":[],"__id":15170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6590,-1]],"__id":15171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6592,2528]],"__id":15175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6592,2529]],"__id":15179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15180,"parentNodes":[6597],"index":759,"rule":{"name":"Calculate246","pattern":{"type":"composite","id":2790,"leftPattern":{"type":"composite","id":2789,"leftPattern":{"type":"composite","id":2788,"leftPattern":{"type":"object","id":2784,"cls":"Fibonacci246","alias":"f1"},"rightPattern":{"type":"object","id":2785,"cls":"Fibonacci246","alias":"f2"}},"rightPattern":{"type":"object","id":2786,"cls":"Fibonacci246","alias":"f3"}},"rightPattern":{"type":"object","id":2787,"cls":"Result246","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate246"},{"type":"beta","out_nodes":[[6596,-1]],"__id":15181,"parentNodes":[6599,6600]},{"type":"type","out_nodes":[[3,2530]],"__id":15182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result246"}},{"type":"rightadapter","out_nodes":[[6597,2530]],"__id":15185,"parentNodes":[4]},{"type":"join","out_nodes":[[6601,-1]],"__id":15186,"parentNodes":[6603,6604],"constraint":{"type":"join-reference","out_nodes":[],"__id":15187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6597,-1]],"__id":15188,"parentNodes":[]},{"type":"type","out_nodes":[[9,2531],[14,2532],[20,2533],[30,2535],[20,2537],[30,2538]],"__id":15189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci246"}},{"type":"rightadapter","out_nodes":[[6600,2531]],"__id":15192,"parentNodes":[10]},{"type":"join","out_nodes":[[6605,-1]],"__id":15193,"parentNodes":[6606,6607],"constraint":{"type":"join-reference","out_nodes":[],"__id":15194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6600,-1]],"__id":15195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6604,2532]],"__id":15200,"parentNodes":[16]},{"type":"beta","out_nodes":[[6608,-1]],"__id":15201,"parentNodes":[6609,6610]},{"type":"leftadapter","out_nodes":[[6604,-1]],"__id":15202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6607,2533]],"__id":15207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6607,2534]],"__id":15211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15212,"parentNodes":[6612],"index":760,"rule":{"name":"Bootstrap246","pattern":{"type":"object","id":2791,"cls":"Fibonacci246","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap246"},{"type":"beta","out_nodes":[[6611,-1]],"__id":15213,"parentNodes":[6613,6614]},{"type":"rightadapter","out_nodes":[[6612,2535]],"__id":15218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6612,2536]],"__id":15222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15223,"parentNodes":[6616],"index":761,"rule":{"name":"Recurse246","pattern":{"type":"composite","id":2794,"leftPattern":{"type":"not","id":2792,"cls":"Fibonacci246","alias":"f"},"rightPattern":{"type":"object","id":2793,"cls":"Fibonacci246","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci246 = defined.get('Fibonacci246');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci246(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse246"},{"type":"beta","out_nodes":[[6615,-1]],"__id":15224,"parentNodes":[6617,6618]},{"type":"rightadapter","out_nodes":[[6616,2537]],"__id":15228,"parentNodes":[37]},{"type":"not","out_nodes":[[6619,-1]],"__id":15229,"parentNodes":[6620,6621],"constraint":{"type":"join-reference","out_nodes":[],"__id":15230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6616,-1]],"__id":15231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6618,2538]],"__id":15235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6618,2539]],"__id":15239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15240,"parentNodes":[6623],"index":762,"rule":{"name":"Calculate245","pattern":{"type":"composite","id":2801,"leftPattern":{"type":"composite","id":2800,"leftPattern":{"type":"composite","id":2799,"leftPattern":{"type":"object","id":2795,"cls":"Fibonacci245","alias":"f1"},"rightPattern":{"type":"object","id":2796,"cls":"Fibonacci245","alias":"f2"}},"rightPattern":{"type":"object","id":2797,"cls":"Fibonacci245","alias":"f3"}},"rightPattern":{"type":"object","id":2798,"cls":"Result245","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate245"},{"type":"beta","out_nodes":[[6622,-1]],"__id":15241,"parentNodes":[6625,6626]},{"type":"type","out_nodes":[[3,2540]],"__id":15242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result245"}},{"type":"rightadapter","out_nodes":[[6623,2540]],"__id":15245,"parentNodes":[4]},{"type":"join","out_nodes":[[6627,-1]],"__id":15246,"parentNodes":[6629,6630],"constraint":{"type":"join-reference","out_nodes":[],"__id":15247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6623,-1]],"__id":15248,"parentNodes":[]},{"type":"type","out_nodes":[[9,2541],[14,2542],[20,2543],[30,2545],[20,2547],[30,2548]],"__id":15249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci245"}},{"type":"rightadapter","out_nodes":[[6626,2541]],"__id":15252,"parentNodes":[10]},{"type":"join","out_nodes":[[6631,-1]],"__id":15253,"parentNodes":[6632,6633],"constraint":{"type":"join-reference","out_nodes":[],"__id":15254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6626,-1]],"__id":15255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6630,2542]],"__id":15260,"parentNodes":[16]},{"type":"beta","out_nodes":[[6634,-1]],"__id":15261,"parentNodes":[6635,6636]},{"type":"leftadapter","out_nodes":[[6630,-1]],"__id":15262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6633,2543]],"__id":15267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6633,2544]],"__id":15271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15272,"parentNodes":[6638],"index":763,"rule":{"name":"Bootstrap245","pattern":{"type":"object","id":2802,"cls":"Fibonacci245","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap245"},{"type":"beta","out_nodes":[[6637,-1]],"__id":15273,"parentNodes":[6639,6640]},{"type":"rightadapter","out_nodes":[[6638,2545]],"__id":15278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6638,2546]],"__id":15282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15283,"parentNodes":[6642],"index":764,"rule":{"name":"Recurse245","pattern":{"type":"composite","id":2805,"leftPattern":{"type":"not","id":2803,"cls":"Fibonacci245","alias":"f"},"rightPattern":{"type":"object","id":2804,"cls":"Fibonacci245","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci245 = defined.get('Fibonacci245');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci245(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse245"},{"type":"beta","out_nodes":[[6641,-1]],"__id":15284,"parentNodes":[6643,6644]},{"type":"rightadapter","out_nodes":[[6642,2547]],"__id":15288,"parentNodes":[37]},{"type":"not","out_nodes":[[6645,-1]],"__id":15289,"parentNodes":[6646,6647],"constraint":{"type":"join-reference","out_nodes":[],"__id":15290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6642,-1]],"__id":15291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6644,2548]],"__id":15295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6644,2549]],"__id":15299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15300,"parentNodes":[6649],"index":765,"rule":{"name":"Calculate244","pattern":{"type":"composite","id":2812,"leftPattern":{"type":"composite","id":2811,"leftPattern":{"type":"composite","id":2810,"leftPattern":{"type":"object","id":2806,"cls":"Fibonacci244","alias":"f1"},"rightPattern":{"type":"object","id":2807,"cls":"Fibonacci244","alias":"f2"}},"rightPattern":{"type":"object","id":2808,"cls":"Fibonacci244","alias":"f3"}},"rightPattern":{"type":"object","id":2809,"cls":"Result244","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate244"},{"type":"beta","out_nodes":[[6648,-1]],"__id":15301,"parentNodes":[6651,6652]},{"type":"type","out_nodes":[[3,2550]],"__id":15302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result244"}},{"type":"rightadapter","out_nodes":[[6649,2550]],"__id":15305,"parentNodes":[4]},{"type":"join","out_nodes":[[6653,-1]],"__id":15306,"parentNodes":[6655,6656],"constraint":{"type":"join-reference","out_nodes":[],"__id":15307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6649,-1]],"__id":15308,"parentNodes":[]},{"type":"type","out_nodes":[[9,2551],[14,2552],[20,2553],[30,2555],[20,2557],[30,2558]],"__id":15309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci244"}},{"type":"rightadapter","out_nodes":[[6652,2551]],"__id":15312,"parentNodes":[10]},{"type":"join","out_nodes":[[6657,-1]],"__id":15313,"parentNodes":[6658,6659],"constraint":{"type":"join-reference","out_nodes":[],"__id":15314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6652,-1]],"__id":15315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6656,2552]],"__id":15320,"parentNodes":[16]},{"type":"beta","out_nodes":[[6660,-1]],"__id":15321,"parentNodes":[6661,6662]},{"type":"leftadapter","out_nodes":[[6656,-1]],"__id":15322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6659,2553]],"__id":15327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6659,2554]],"__id":15331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15332,"parentNodes":[6664],"index":766,"rule":{"name":"Bootstrap244","pattern":{"type":"object","id":2813,"cls":"Fibonacci244","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap244"},{"type":"beta","out_nodes":[[6663,-1]],"__id":15333,"parentNodes":[6665,6666]},{"type":"rightadapter","out_nodes":[[6664,2555]],"__id":15338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6664,2556]],"__id":15342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15343,"parentNodes":[6668],"index":767,"rule":{"name":"Recurse244","pattern":{"type":"composite","id":2816,"leftPattern":{"type":"not","id":2814,"cls":"Fibonacci244","alias":"f"},"rightPattern":{"type":"object","id":2815,"cls":"Fibonacci244","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci244 = defined.get('Fibonacci244');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci244(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse244"},{"type":"beta","out_nodes":[[6667,-1]],"__id":15344,"parentNodes":[6669,6670]},{"type":"rightadapter","out_nodes":[[6668,2557]],"__id":15348,"parentNodes":[37]},{"type":"not","out_nodes":[[6671,-1]],"__id":15349,"parentNodes":[6672,6673],"constraint":{"type":"join-reference","out_nodes":[],"__id":15350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6668,-1]],"__id":15351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6670,2558]],"__id":15355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6670,2559]],"__id":15359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15360,"parentNodes":[6675],"index":768,"rule":{"name":"Calculate243","pattern":{"type":"composite","id":2823,"leftPattern":{"type":"composite","id":2822,"leftPattern":{"type":"composite","id":2821,"leftPattern":{"type":"object","id":2817,"cls":"Fibonacci243","alias":"f1"},"rightPattern":{"type":"object","id":2818,"cls":"Fibonacci243","alias":"f2"}},"rightPattern":{"type":"object","id":2819,"cls":"Fibonacci243","alias":"f3"}},"rightPattern":{"type":"object","id":2820,"cls":"Result243","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate243"},{"type":"beta","out_nodes":[[6674,-1]],"__id":15361,"parentNodes":[6677,6678]},{"type":"type","out_nodes":[[3,2560]],"__id":15362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result243"}},{"type":"rightadapter","out_nodes":[[6675,2560]],"__id":15365,"parentNodes":[4]},{"type":"join","out_nodes":[[6679,-1]],"__id":15366,"parentNodes":[6681,6682],"constraint":{"type":"join-reference","out_nodes":[],"__id":15367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6675,-1]],"__id":15368,"parentNodes":[]},{"type":"type","out_nodes":[[9,2561],[14,2562],[20,2563],[30,2565],[20,2567],[30,2568]],"__id":15369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci243"}},{"type":"rightadapter","out_nodes":[[6678,2561]],"__id":15372,"parentNodes":[10]},{"type":"join","out_nodes":[[6683,-1]],"__id":15373,"parentNodes":[6684,6685],"constraint":{"type":"join-reference","out_nodes":[],"__id":15374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6678,-1]],"__id":15375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6682,2562]],"__id":15380,"parentNodes":[16]},{"type":"beta","out_nodes":[[6686,-1]],"__id":15381,"parentNodes":[6687,6688]},{"type":"leftadapter","out_nodes":[[6682,-1]],"__id":15382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6685,2563]],"__id":15387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6685,2564]],"__id":15391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15392,"parentNodes":[6690],"index":769,"rule":{"name":"Bootstrap243","pattern":{"type":"object","id":2824,"cls":"Fibonacci243","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap243"},{"type":"beta","out_nodes":[[6689,-1]],"__id":15393,"parentNodes":[6691,6692]},{"type":"rightadapter","out_nodes":[[6690,2565]],"__id":15398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6690,2566]],"__id":15402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15403,"parentNodes":[6694],"index":770,"rule":{"name":"Recurse243","pattern":{"type":"composite","id":2827,"leftPattern":{"type":"not","id":2825,"cls":"Fibonacci243","alias":"f"},"rightPattern":{"type":"object","id":2826,"cls":"Fibonacci243","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci243 = defined.get('Fibonacci243');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci243(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse243"},{"type":"beta","out_nodes":[[6693,-1]],"__id":15404,"parentNodes":[6695,6696]},{"type":"rightadapter","out_nodes":[[6694,2567]],"__id":15408,"parentNodes":[37]},{"type":"not","out_nodes":[[6697,-1]],"__id":15409,"parentNodes":[6698,6699],"constraint":{"type":"join-reference","out_nodes":[],"__id":15410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6694,-1]],"__id":15411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6696,2568]],"__id":15415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6696,2569]],"__id":15419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15420,"parentNodes":[6701],"index":771,"rule":{"name":"Calculate242","pattern":{"type":"composite","id":2834,"leftPattern":{"type":"composite","id":2833,"leftPattern":{"type":"composite","id":2832,"leftPattern":{"type":"object","id":2828,"cls":"Fibonacci242","alias":"f1"},"rightPattern":{"type":"object","id":2829,"cls":"Fibonacci242","alias":"f2"}},"rightPattern":{"type":"object","id":2830,"cls":"Fibonacci242","alias":"f3"}},"rightPattern":{"type":"object","id":2831,"cls":"Result242","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate242"},{"type":"beta","out_nodes":[[6700,-1]],"__id":15421,"parentNodes":[6703,6704]},{"type":"type","out_nodes":[[3,2570]],"__id":15422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result242"}},{"type":"rightadapter","out_nodes":[[6701,2570]],"__id":15425,"parentNodes":[4]},{"type":"join","out_nodes":[[6705,-1]],"__id":15426,"parentNodes":[6707,6708],"constraint":{"type":"join-reference","out_nodes":[],"__id":15427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6701,-1]],"__id":15428,"parentNodes":[]},{"type":"type","out_nodes":[[9,2571],[14,2572],[20,2573],[30,2575],[20,2577],[30,2578]],"__id":15429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci242"}},{"type":"rightadapter","out_nodes":[[6704,2571]],"__id":15432,"parentNodes":[10]},{"type":"join","out_nodes":[[6709,-1]],"__id":15433,"parentNodes":[6710,6711],"constraint":{"type":"join-reference","out_nodes":[],"__id":15434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6704,-1]],"__id":15435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6708,2572]],"__id":15440,"parentNodes":[16]},{"type":"beta","out_nodes":[[6712,-1]],"__id":15441,"parentNodes":[6713,6714]},{"type":"leftadapter","out_nodes":[[6708,-1]],"__id":15442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6711,2573]],"__id":15447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6711,2574]],"__id":15451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15452,"parentNodes":[6716],"index":772,"rule":{"name":"Bootstrap242","pattern":{"type":"object","id":2835,"cls":"Fibonacci242","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap242"},{"type":"beta","out_nodes":[[6715,-1]],"__id":15453,"parentNodes":[6717,6718]},{"type":"rightadapter","out_nodes":[[6716,2575]],"__id":15458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6716,2576]],"__id":15462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15463,"parentNodes":[6720],"index":773,"rule":{"name":"Recurse242","pattern":{"type":"composite","id":2838,"leftPattern":{"type":"not","id":2836,"cls":"Fibonacci242","alias":"f"},"rightPattern":{"type":"object","id":2837,"cls":"Fibonacci242","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci242 = defined.get('Fibonacci242');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci242(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse242"},{"type":"beta","out_nodes":[[6719,-1]],"__id":15464,"parentNodes":[6721,6722]},{"type":"rightadapter","out_nodes":[[6720,2577]],"__id":15468,"parentNodes":[37]},{"type":"not","out_nodes":[[6723,-1]],"__id":15469,"parentNodes":[6724,6725],"constraint":{"type":"join-reference","out_nodes":[],"__id":15470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6720,-1]],"__id":15471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6722,2578]],"__id":15475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6722,2579]],"__id":15479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15480,"parentNodes":[6727],"index":774,"rule":{"name":"Calculate241","pattern":{"type":"composite","id":2845,"leftPattern":{"type":"composite","id":2844,"leftPattern":{"type":"composite","id":2843,"leftPattern":{"type":"object","id":2839,"cls":"Fibonacci241","alias":"f1"},"rightPattern":{"type":"object","id":2840,"cls":"Fibonacci241","alias":"f2"}},"rightPattern":{"type":"object","id":2841,"cls":"Fibonacci241","alias":"f3"}},"rightPattern":{"type":"object","id":2842,"cls":"Result241","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate241"},{"type":"beta","out_nodes":[[6726,-1]],"__id":15481,"parentNodes":[6729,6730]},{"type":"type","out_nodes":[[3,2580]],"__id":15482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result241"}},{"type":"rightadapter","out_nodes":[[6727,2580]],"__id":15485,"parentNodes":[4]},{"type":"join","out_nodes":[[6731,-1]],"__id":15486,"parentNodes":[6733,6734],"constraint":{"type":"join-reference","out_nodes":[],"__id":15487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6727,-1]],"__id":15488,"parentNodes":[]},{"type":"type","out_nodes":[[9,2581],[14,2582],[20,2583],[30,2585],[20,2587],[30,2588]],"__id":15489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci241"}},{"type":"rightadapter","out_nodes":[[6730,2581]],"__id":15492,"parentNodes":[10]},{"type":"join","out_nodes":[[6735,-1]],"__id":15493,"parentNodes":[6736,6737],"constraint":{"type":"join-reference","out_nodes":[],"__id":15494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6730,-1]],"__id":15495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6734,2582]],"__id":15500,"parentNodes":[16]},{"type":"beta","out_nodes":[[6738,-1]],"__id":15501,"parentNodes":[6739,6740]},{"type":"leftadapter","out_nodes":[[6734,-1]],"__id":15502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6737,2583]],"__id":15507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6737,2584]],"__id":15511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15512,"parentNodes":[6742],"index":775,"rule":{"name":"Bootstrap241","pattern":{"type":"object","id":2846,"cls":"Fibonacci241","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap241"},{"type":"beta","out_nodes":[[6741,-1]],"__id":15513,"parentNodes":[6743,6744]},{"type":"rightadapter","out_nodes":[[6742,2585]],"__id":15518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6742,2586]],"__id":15522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15523,"parentNodes":[6746],"index":776,"rule":{"name":"Recurse241","pattern":{"type":"composite","id":2849,"leftPattern":{"type":"not","id":2847,"cls":"Fibonacci241","alias":"f"},"rightPattern":{"type":"object","id":2848,"cls":"Fibonacci241","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci241 = defined.get('Fibonacci241');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci241(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse241"},{"type":"beta","out_nodes":[[6745,-1]],"__id":15524,"parentNodes":[6747,6748]},{"type":"rightadapter","out_nodes":[[6746,2587]],"__id":15528,"parentNodes":[37]},{"type":"not","out_nodes":[[6749,-1]],"__id":15529,"parentNodes":[6750,6751],"constraint":{"type":"join-reference","out_nodes":[],"__id":15530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6746,-1]],"__id":15531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6748,2588]],"__id":15535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6748,2589]],"__id":15539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15540,"parentNodes":[6753],"index":777,"rule":{"name":"Calculate240","pattern":{"type":"composite","id":2856,"leftPattern":{"type":"composite","id":2855,"leftPattern":{"type":"composite","id":2854,"leftPattern":{"type":"object","id":2850,"cls":"Fibonacci240","alias":"f1"},"rightPattern":{"type":"object","id":2851,"cls":"Fibonacci240","alias":"f2"}},"rightPattern":{"type":"object","id":2852,"cls":"Fibonacci240","alias":"f3"}},"rightPattern":{"type":"object","id":2853,"cls":"Result240","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate240"},{"type":"beta","out_nodes":[[6752,-1]],"__id":15541,"parentNodes":[6755,6756]},{"type":"type","out_nodes":[[3,2590]],"__id":15542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result240"}},{"type":"rightadapter","out_nodes":[[6753,2590]],"__id":15545,"parentNodes":[4]},{"type":"join","out_nodes":[[6757,-1]],"__id":15546,"parentNodes":[6759,6760],"constraint":{"type":"join-reference","out_nodes":[],"__id":15547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6753,-1]],"__id":15548,"parentNodes":[]},{"type":"type","out_nodes":[[9,2591],[14,2592],[20,2593],[30,2595],[20,2597],[30,2598]],"__id":15549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci240"}},{"type":"rightadapter","out_nodes":[[6756,2591]],"__id":15552,"parentNodes":[10]},{"type":"join","out_nodes":[[6761,-1]],"__id":15553,"parentNodes":[6762,6763],"constraint":{"type":"join-reference","out_nodes":[],"__id":15554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6756,-1]],"__id":15555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6760,2592]],"__id":15560,"parentNodes":[16]},{"type":"beta","out_nodes":[[6764,-1]],"__id":15561,"parentNodes":[6765,6766]},{"type":"leftadapter","out_nodes":[[6760,-1]],"__id":15562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6763,2593]],"__id":15567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6763,2594]],"__id":15571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15572,"parentNodes":[6768],"index":778,"rule":{"name":"Bootstrap240","pattern":{"type":"object","id":2857,"cls":"Fibonacci240","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap240"},{"type":"beta","out_nodes":[[6767,-1]],"__id":15573,"parentNodes":[6769,6770]},{"type":"rightadapter","out_nodes":[[6768,2595]],"__id":15578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6768,2596]],"__id":15582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15583,"parentNodes":[6772],"index":779,"rule":{"name":"Recurse240","pattern":{"type":"composite","id":2860,"leftPattern":{"type":"not","id":2858,"cls":"Fibonacci240","alias":"f"},"rightPattern":{"type":"object","id":2859,"cls":"Fibonacci240","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');let Fibonacci240 = defined.get('Fibonacci240');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci240(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse240"},{"type":"beta","out_nodes":[[6771,-1]],"__id":15584,"parentNodes":[6773,6774]},{"type":"rightadapter","out_nodes":[[6772,2597]],"__id":15588,"parentNodes":[37]},{"type":"not","out_nodes":[[6775,-1]],"__id":15589,"parentNodes":[6776,6777],"constraint":{"type":"join-reference","out_nodes":[],"__id":15590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6772,-1]],"__id":15591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6774,2598]],"__id":15595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6774,2599]],"__id":15599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15600,"parentNodes":[6779],"index":780,"rule":{"name":"Calculate239","pattern":{"type":"composite","id":2867,"leftPattern":{"type":"composite","id":2866,"leftPattern":{"type":"composite","id":2865,"leftPattern":{"type":"object","id":2861,"cls":"Fibonacci239","alias":"f1"},"rightPattern":{"type":"object","id":2862,"cls":"Fibonacci239","alias":"f2"}},"rightPattern":{"type":"object","id":2863,"cls":"Fibonacci239","alias":"f3"}},"rightPattern":{"type":"object","id":2864,"cls":"Result239","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate239"},{"type":"beta","out_nodes":[[6778,-1]],"__id":15601,"parentNodes":[6781,6782]},{"type":"type","out_nodes":[[3,2600]],"__id":15602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result239"}},{"type":"rightadapter","out_nodes":[[6779,2600]],"__id":15605,"parentNodes":[4]},{"type":"join","out_nodes":[[6783,-1]],"__id":15606,"parentNodes":[6785,6786],"constraint":{"type":"join-reference","out_nodes":[],"__id":15607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6779,-1]],"__id":15608,"parentNodes":[]},{"type":"type","out_nodes":[[9,2601],[14,2602],[20,2603],[30,2605],[20,2607],[30,2608]],"__id":15609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci239"}},{"type":"rightadapter","out_nodes":[[6782,2601]],"__id":15612,"parentNodes":[10]},{"type":"join","out_nodes":[[6787,-1]],"__id":15613,"parentNodes":[6788,6789],"constraint":{"type":"join-reference","out_nodes":[],"__id":15614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6782,-1]],"__id":15615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6786,2602]],"__id":15620,"parentNodes":[16]},{"type":"beta","out_nodes":[[6790,-1]],"__id":15621,"parentNodes":[6791,6792]},{"type":"leftadapter","out_nodes":[[6786,-1]],"__id":15622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6789,2603]],"__id":15627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6789,2604]],"__id":15631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15632,"parentNodes":[6794],"index":781,"rule":{"name":"Bootstrap239","pattern":{"type":"object","id":2868,"cls":"Fibonacci239","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap239"},{"type":"beta","out_nodes":[[6793,-1]],"__id":15633,"parentNodes":[6795,6796]},{"type":"rightadapter","out_nodes":[[6794,2605]],"__id":15638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6794,2606]],"__id":15642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15643,"parentNodes":[6798],"index":782,"rule":{"name":"Recurse239","pattern":{"type":"composite","id":2871,"leftPattern":{"type":"not","id":2869,"cls":"Fibonacci239","alias":"f"},"rightPattern":{"type":"object","id":2870,"cls":"Fibonacci239","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci239 = defined.get('Fibonacci239');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci239(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse239"},{"type":"beta","out_nodes":[[6797,-1]],"__id":15644,"parentNodes":[6799,6800]},{"type":"rightadapter","out_nodes":[[6798,2607]],"__id":15648,"parentNodes":[37]},{"type":"not","out_nodes":[[6801,-1]],"__id":15649,"parentNodes":[6802,6803],"constraint":{"type":"join-reference","out_nodes":[],"__id":15650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6798,-1]],"__id":15651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6800,2608]],"__id":15655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6800,2609]],"__id":15659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15660,"parentNodes":[6805],"index":783,"rule":{"name":"Calculate238","pattern":{"type":"composite","id":2878,"leftPattern":{"type":"composite","id":2877,"leftPattern":{"type":"composite","id":2876,"leftPattern":{"type":"object","id":2872,"cls":"Fibonacci238","alias":"f1"},"rightPattern":{"type":"object","id":2873,"cls":"Fibonacci238","alias":"f2"}},"rightPattern":{"type":"object","id":2874,"cls":"Fibonacci238","alias":"f3"}},"rightPattern":{"type":"object","id":2875,"cls":"Result238","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate238"},{"type":"beta","out_nodes":[[6804,-1]],"__id":15661,"parentNodes":[6807,6808]},{"type":"type","out_nodes":[[3,2610]],"__id":15662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result238"}},{"type":"rightadapter","out_nodes":[[6805,2610]],"__id":15665,"parentNodes":[4]},{"type":"join","out_nodes":[[6809,-1]],"__id":15666,"parentNodes":[6811,6812],"constraint":{"type":"join-reference","out_nodes":[],"__id":15667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6805,-1]],"__id":15668,"parentNodes":[]},{"type":"type","out_nodes":[[9,2611],[14,2612],[20,2613],[30,2615],[20,2617],[30,2618]],"__id":15669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci238"}},{"type":"rightadapter","out_nodes":[[6808,2611]],"__id":15672,"parentNodes":[10]},{"type":"join","out_nodes":[[6813,-1]],"__id":15673,"parentNodes":[6814,6815],"constraint":{"type":"join-reference","out_nodes":[],"__id":15674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6808,-1]],"__id":15675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6812,2612]],"__id":15680,"parentNodes":[16]},{"type":"beta","out_nodes":[[6816,-1]],"__id":15681,"parentNodes":[6817,6818]},{"type":"leftadapter","out_nodes":[[6812,-1]],"__id":15682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6815,2613]],"__id":15687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6815,2614]],"__id":15691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15692,"parentNodes":[6820],"index":784,"rule":{"name":"Bootstrap238","pattern":{"type":"object","id":2879,"cls":"Fibonacci238","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap238"},{"type":"beta","out_nodes":[[6819,-1]],"__id":15693,"parentNodes":[6821,6822]},{"type":"rightadapter","out_nodes":[[6820,2615]],"__id":15698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6820,2616]],"__id":15702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15703,"parentNodes":[6824],"index":785,"rule":{"name":"Recurse238","pattern":{"type":"composite","id":2882,"leftPattern":{"type":"not","id":2880,"cls":"Fibonacci238","alias":"f"},"rightPattern":{"type":"object","id":2881,"cls":"Fibonacci238","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci238 = defined.get('Fibonacci238');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci238(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse238"},{"type":"beta","out_nodes":[[6823,-1]],"__id":15704,"parentNodes":[6825,6826]},{"type":"rightadapter","out_nodes":[[6824,2617]],"__id":15708,"parentNodes":[37]},{"type":"not","out_nodes":[[6827,-1]],"__id":15709,"parentNodes":[6828,6829],"constraint":{"type":"join-reference","out_nodes":[],"__id":15710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6824,-1]],"__id":15711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6826,2618]],"__id":15715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6826,2619]],"__id":15719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15720,"parentNodes":[6831],"index":786,"rule":{"name":"Calculate237","pattern":{"type":"composite","id":2889,"leftPattern":{"type":"composite","id":2888,"leftPattern":{"type":"composite","id":2887,"leftPattern":{"type":"object","id":2883,"cls":"Fibonacci237","alias":"f1"},"rightPattern":{"type":"object","id":2884,"cls":"Fibonacci237","alias":"f2"}},"rightPattern":{"type":"object","id":2885,"cls":"Fibonacci237","alias":"f3"}},"rightPattern":{"type":"object","id":2886,"cls":"Result237","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate237"},{"type":"beta","out_nodes":[[6830,-1]],"__id":15721,"parentNodes":[6833,6834]},{"type":"type","out_nodes":[[3,2620]],"__id":15722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result237"}},{"type":"rightadapter","out_nodes":[[6831,2620]],"__id":15725,"parentNodes":[4]},{"type":"join","out_nodes":[[6835,-1]],"__id":15726,"parentNodes":[6837,6838],"constraint":{"type":"join-reference","out_nodes":[],"__id":15727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6831,-1]],"__id":15728,"parentNodes":[]},{"type":"type","out_nodes":[[9,2621],[14,2622],[20,2623],[30,2625],[20,2627],[30,2628]],"__id":15729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci237"}},{"type":"rightadapter","out_nodes":[[6834,2621]],"__id":15732,"parentNodes":[10]},{"type":"join","out_nodes":[[6839,-1]],"__id":15733,"parentNodes":[6840,6841],"constraint":{"type":"join-reference","out_nodes":[],"__id":15734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6834,-1]],"__id":15735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6838,2622]],"__id":15740,"parentNodes":[16]},{"type":"beta","out_nodes":[[6842,-1]],"__id":15741,"parentNodes":[6843,6844]},{"type":"leftadapter","out_nodes":[[6838,-1]],"__id":15742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6841,2623]],"__id":15747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6841,2624]],"__id":15751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15752,"parentNodes":[6846],"index":787,"rule":{"name":"Bootstrap237","pattern":{"type":"object","id":2890,"cls":"Fibonacci237","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap237"},{"type":"beta","out_nodes":[[6845,-1]],"__id":15753,"parentNodes":[6847,6848]},{"type":"rightadapter","out_nodes":[[6846,2625]],"__id":15758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6846,2626]],"__id":15762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15763,"parentNodes":[6850],"index":788,"rule":{"name":"Recurse237","pattern":{"type":"composite","id":2893,"leftPattern":{"type":"not","id":2891,"cls":"Fibonacci237","alias":"f"},"rightPattern":{"type":"object","id":2892,"cls":"Fibonacci237","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci237 = defined.get('Fibonacci237');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci237(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse237"},{"type":"beta","out_nodes":[[6849,-1]],"__id":15764,"parentNodes":[6851,6852]},{"type":"rightadapter","out_nodes":[[6850,2627]],"__id":15768,"parentNodes":[37]},{"type":"not","out_nodes":[[6853,-1]],"__id":15769,"parentNodes":[6854,6855],"constraint":{"type":"join-reference","out_nodes":[],"__id":15770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6850,-1]],"__id":15771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6852,2628]],"__id":15775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6852,2629]],"__id":15779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15780,"parentNodes":[6857],"index":789,"rule":{"name":"Calculate236","pattern":{"type":"composite","id":2900,"leftPattern":{"type":"composite","id":2899,"leftPattern":{"type":"composite","id":2898,"leftPattern":{"type":"object","id":2894,"cls":"Fibonacci236","alias":"f1"},"rightPattern":{"type":"object","id":2895,"cls":"Fibonacci236","alias":"f2"}},"rightPattern":{"type":"object","id":2896,"cls":"Fibonacci236","alias":"f3"}},"rightPattern":{"type":"object","id":2897,"cls":"Result236","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate236"},{"type":"beta","out_nodes":[[6856,-1]],"__id":15781,"parentNodes":[6859,6860]},{"type":"type","out_nodes":[[3,2630]],"__id":15782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result236"}},{"type":"rightadapter","out_nodes":[[6857,2630]],"__id":15785,"parentNodes":[4]},{"type":"join","out_nodes":[[6861,-1]],"__id":15786,"parentNodes":[6863,6864],"constraint":{"type":"join-reference","out_nodes":[],"__id":15787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6857,-1]],"__id":15788,"parentNodes":[]},{"type":"type","out_nodes":[[9,2631],[14,2632],[20,2633],[30,2635],[20,2637],[30,2638]],"__id":15789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci236"}},{"type":"rightadapter","out_nodes":[[6860,2631]],"__id":15792,"parentNodes":[10]},{"type":"join","out_nodes":[[6865,-1]],"__id":15793,"parentNodes":[6866,6867],"constraint":{"type":"join-reference","out_nodes":[],"__id":15794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6860,-1]],"__id":15795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6864,2632]],"__id":15800,"parentNodes":[16]},{"type":"beta","out_nodes":[[6868,-1]],"__id":15801,"parentNodes":[6869,6870]},{"type":"leftadapter","out_nodes":[[6864,-1]],"__id":15802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6867,2633]],"__id":15807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6867,2634]],"__id":15811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15812,"parentNodes":[6872],"index":790,"rule":{"name":"Bootstrap236","pattern":{"type":"object","id":2901,"cls":"Fibonacci236","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap236"},{"type":"beta","out_nodes":[[6871,-1]],"__id":15813,"parentNodes":[6873,6874]},{"type":"rightadapter","out_nodes":[[6872,2635]],"__id":15818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6872,2636]],"__id":15822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15823,"parentNodes":[6876],"index":791,"rule":{"name":"Recurse236","pattern":{"type":"composite","id":2904,"leftPattern":{"type":"not","id":2902,"cls":"Fibonacci236","alias":"f"},"rightPattern":{"type":"object","id":2903,"cls":"Fibonacci236","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci236 = defined.get('Fibonacci236');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci236(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse236"},{"type":"beta","out_nodes":[[6875,-1]],"__id":15824,"parentNodes":[6877,6878]},{"type":"rightadapter","out_nodes":[[6876,2637]],"__id":15828,"parentNodes":[37]},{"type":"not","out_nodes":[[6879,-1]],"__id":15829,"parentNodes":[6880,6881],"constraint":{"type":"join-reference","out_nodes":[],"__id":15830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6876,-1]],"__id":15831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6878,2638]],"__id":15835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6878,2639]],"__id":15839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15840,"parentNodes":[6883],"index":792,"rule":{"name":"Calculate235","pattern":{"type":"composite","id":2911,"leftPattern":{"type":"composite","id":2910,"leftPattern":{"type":"composite","id":2909,"leftPattern":{"type":"object","id":2905,"cls":"Fibonacci235","alias":"f1"},"rightPattern":{"type":"object","id":2906,"cls":"Fibonacci235","alias":"f2"}},"rightPattern":{"type":"object","id":2907,"cls":"Fibonacci235","alias":"f3"}},"rightPattern":{"type":"object","id":2908,"cls":"Result235","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate235"},{"type":"beta","out_nodes":[[6882,-1]],"__id":15841,"parentNodes":[6885,6886]},{"type":"type","out_nodes":[[3,2640]],"__id":15842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result235"}},{"type":"rightadapter","out_nodes":[[6883,2640]],"__id":15845,"parentNodes":[4]},{"type":"join","out_nodes":[[6887,-1]],"__id":15846,"parentNodes":[6889,6890],"constraint":{"type":"join-reference","out_nodes":[],"__id":15847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6883,-1]],"__id":15848,"parentNodes":[]},{"type":"type","out_nodes":[[9,2641],[14,2642],[20,2643],[30,2645],[20,2647],[30,2648]],"__id":15849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci235"}},{"type":"rightadapter","out_nodes":[[6886,2641]],"__id":15852,"parentNodes":[10]},{"type":"join","out_nodes":[[6891,-1]],"__id":15853,"parentNodes":[6892,6893],"constraint":{"type":"join-reference","out_nodes":[],"__id":15854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6886,-1]],"__id":15855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6890,2642]],"__id":15860,"parentNodes":[16]},{"type":"beta","out_nodes":[[6894,-1]],"__id":15861,"parentNodes":[6895,6896]},{"type":"leftadapter","out_nodes":[[6890,-1]],"__id":15862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6893,2643]],"__id":15867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6893,2644]],"__id":15871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15872,"parentNodes":[6898],"index":793,"rule":{"name":"Bootstrap235","pattern":{"type":"object","id":2912,"cls":"Fibonacci235","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap235"},{"type":"beta","out_nodes":[[6897,-1]],"__id":15873,"parentNodes":[6899,6900]},{"type":"rightadapter","out_nodes":[[6898,2645]],"__id":15878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6898,2646]],"__id":15882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15883,"parentNodes":[6902],"index":794,"rule":{"name":"Recurse235","pattern":{"type":"composite","id":2915,"leftPattern":{"type":"not","id":2913,"cls":"Fibonacci235","alias":"f"},"rightPattern":{"type":"object","id":2914,"cls":"Fibonacci235","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci235 = defined.get('Fibonacci235');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci235(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse235"},{"type":"beta","out_nodes":[[6901,-1]],"__id":15884,"parentNodes":[6903,6904]},{"type":"rightadapter","out_nodes":[[6902,2647]],"__id":15888,"parentNodes":[37]},{"type":"not","out_nodes":[[6905,-1]],"__id":15889,"parentNodes":[6906,6907],"constraint":{"type":"join-reference","out_nodes":[],"__id":15890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6902,-1]],"__id":15891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6904,2648]],"__id":15895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6904,2649]],"__id":15899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15900,"parentNodes":[6909],"index":795,"rule":{"name":"Calculate234","pattern":{"type":"composite","id":2922,"leftPattern":{"type":"composite","id":2921,"leftPattern":{"type":"composite","id":2920,"leftPattern":{"type":"object","id":2916,"cls":"Fibonacci234","alias":"f1"},"rightPattern":{"type":"object","id":2917,"cls":"Fibonacci234","alias":"f2"}},"rightPattern":{"type":"object","id":2918,"cls":"Fibonacci234","alias":"f3"}},"rightPattern":{"type":"object","id":2919,"cls":"Result234","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate234"},{"type":"beta","out_nodes":[[6908,-1]],"__id":15901,"parentNodes":[6911,6912]},{"type":"type","out_nodes":[[3,2650]],"__id":15902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result234"}},{"type":"rightadapter","out_nodes":[[6909,2650]],"__id":15905,"parentNodes":[4]},{"type":"join","out_nodes":[[6913,-1]],"__id":15906,"parentNodes":[6915,6916],"constraint":{"type":"join-reference","out_nodes":[],"__id":15907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6909,-1]],"__id":15908,"parentNodes":[]},{"type":"type","out_nodes":[[9,2651],[14,2652],[20,2653],[30,2655],[20,2657],[30,2658]],"__id":15909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci234"}},{"type":"rightadapter","out_nodes":[[6912,2651]],"__id":15912,"parentNodes":[10]},{"type":"join","out_nodes":[[6917,-1]],"__id":15913,"parentNodes":[6918,6919],"constraint":{"type":"join-reference","out_nodes":[],"__id":15914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6912,-1]],"__id":15915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6916,2652]],"__id":15920,"parentNodes":[16]},{"type":"beta","out_nodes":[[6920,-1]],"__id":15921,"parentNodes":[6921,6922]},{"type":"leftadapter","out_nodes":[[6916,-1]],"__id":15922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6919,2653]],"__id":15927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6919,2654]],"__id":15931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15932,"parentNodes":[6924],"index":796,"rule":{"name":"Bootstrap234","pattern":{"type":"object","id":2923,"cls":"Fibonacci234","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap234"},{"type":"beta","out_nodes":[[6923,-1]],"__id":15933,"parentNodes":[6925,6926]},{"type":"rightadapter","out_nodes":[[6924,2655]],"__id":15938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6924,2656]],"__id":15942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15943,"parentNodes":[6928],"index":797,"rule":{"name":"Recurse234","pattern":{"type":"composite","id":2926,"leftPattern":{"type":"not","id":2924,"cls":"Fibonacci234","alias":"f"},"rightPattern":{"type":"object","id":2925,"cls":"Fibonacci234","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci234 = defined.get('Fibonacci234');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci234(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse234"},{"type":"beta","out_nodes":[[6927,-1]],"__id":15944,"parentNodes":[6929,6930]},{"type":"rightadapter","out_nodes":[[6928,2657]],"__id":15948,"parentNodes":[37]},{"type":"not","out_nodes":[[6931,-1]],"__id":15949,"parentNodes":[6932,6933],"constraint":{"type":"join-reference","out_nodes":[],"__id":15950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6928,-1]],"__id":15951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6930,2658]],"__id":15955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6930,2659]],"__id":15959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15960,"parentNodes":[6935],"index":798,"rule":{"name":"Calculate233","pattern":{"type":"composite","id":2933,"leftPattern":{"type":"composite","id":2932,"leftPattern":{"type":"composite","id":2931,"leftPattern":{"type":"object","id":2927,"cls":"Fibonacci233","alias":"f1"},"rightPattern":{"type":"object","id":2928,"cls":"Fibonacci233","alias":"f2"}},"rightPattern":{"type":"object","id":2929,"cls":"Fibonacci233","alias":"f3"}},"rightPattern":{"type":"object","id":2930,"cls":"Result233","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate233"},{"type":"beta","out_nodes":[[6934,-1]],"__id":15961,"parentNodes":[6937,6938]},{"type":"type","out_nodes":[[3,2660]],"__id":15962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result233"}},{"type":"rightadapter","out_nodes":[[6935,2660]],"__id":15965,"parentNodes":[4]},{"type":"join","out_nodes":[[6939,-1]],"__id":15966,"parentNodes":[6941,6942],"constraint":{"type":"join-reference","out_nodes":[],"__id":15967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6935,-1]],"__id":15968,"parentNodes":[]},{"type":"type","out_nodes":[[9,2661],[14,2662],[20,2663],[30,2665],[20,2667],[30,2668]],"__id":15969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci233"}},{"type":"rightadapter","out_nodes":[[6938,2661]],"__id":15972,"parentNodes":[10]},{"type":"join","out_nodes":[[6943,-1]],"__id":15973,"parentNodes":[6944,6945],"constraint":{"type":"join-reference","out_nodes":[],"__id":15974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6938,-1]],"__id":15975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6942,2662]],"__id":15980,"parentNodes":[16]},{"type":"beta","out_nodes":[[6946,-1]],"__id":15981,"parentNodes":[6947,6948]},{"type":"leftadapter","out_nodes":[[6942,-1]],"__id":15982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6945,2663]],"__id":15987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6945,2664]],"__id":15991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":15992,"parentNodes":[6950],"index":799,"rule":{"name":"Bootstrap233","pattern":{"type":"object","id":2934,"cls":"Fibonacci233","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap233"},{"type":"beta","out_nodes":[[6949,-1]],"__id":15993,"parentNodes":[6951,6952]},{"type":"rightadapter","out_nodes":[[6950,2665]],"__id":15998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6950,2666]],"__id":16002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16003,"parentNodes":[6954],"index":800,"rule":{"name":"Recurse233","pattern":{"type":"composite","id":2937,"leftPattern":{"type":"not","id":2935,"cls":"Fibonacci233","alias":"f"},"rightPattern":{"type":"object","id":2936,"cls":"Fibonacci233","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci233 = defined.get('Fibonacci233');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci233(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse233"},{"type":"beta","out_nodes":[[6953,-1]],"__id":16004,"parentNodes":[6955,6956]},{"type":"rightadapter","out_nodes":[[6954,2667]],"__id":16008,"parentNodes":[37]},{"type":"not","out_nodes":[[6957,-1]],"__id":16009,"parentNodes":[6958,6959],"constraint":{"type":"join-reference","out_nodes":[],"__id":16010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6954,-1]],"__id":16011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6956,2668]],"__id":16015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6956,2669]],"__id":16019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16020,"parentNodes":[6961],"index":801,"rule":{"name":"Calculate232","pattern":{"type":"composite","id":2944,"leftPattern":{"type":"composite","id":2943,"leftPattern":{"type":"composite","id":2942,"leftPattern":{"type":"object","id":2938,"cls":"Fibonacci232","alias":"f1"},"rightPattern":{"type":"object","id":2939,"cls":"Fibonacci232","alias":"f2"}},"rightPattern":{"type":"object","id":2940,"cls":"Fibonacci232","alias":"f3"}},"rightPattern":{"type":"object","id":2941,"cls":"Result232","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate232"},{"type":"beta","out_nodes":[[6960,-1]],"__id":16021,"parentNodes":[6963,6964]},{"type":"type","out_nodes":[[3,2670]],"__id":16022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result232"}},{"type":"rightadapter","out_nodes":[[6961,2670]],"__id":16025,"parentNodes":[4]},{"type":"join","out_nodes":[[6965,-1]],"__id":16026,"parentNodes":[6967,6968],"constraint":{"type":"join-reference","out_nodes":[],"__id":16027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6961,-1]],"__id":16028,"parentNodes":[]},{"type":"type","out_nodes":[[9,2671],[14,2672],[20,2673],[30,2675],[20,2677],[30,2678]],"__id":16029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci232"}},{"type":"rightadapter","out_nodes":[[6964,2671]],"__id":16032,"parentNodes":[10]},{"type":"join","out_nodes":[[6969,-1]],"__id":16033,"parentNodes":[6970,6971],"constraint":{"type":"join-reference","out_nodes":[],"__id":16034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6964,-1]],"__id":16035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6968,2672]],"__id":16040,"parentNodes":[16]},{"type":"beta","out_nodes":[[6972,-1]],"__id":16041,"parentNodes":[6973,6974]},{"type":"leftadapter","out_nodes":[[6968,-1]],"__id":16042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6971,2673]],"__id":16047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6971,2674]],"__id":16051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16052,"parentNodes":[6976],"index":802,"rule":{"name":"Bootstrap232","pattern":{"type":"object","id":2945,"cls":"Fibonacci232","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap232"},{"type":"beta","out_nodes":[[6975,-1]],"__id":16053,"parentNodes":[6977,6978]},{"type":"rightadapter","out_nodes":[[6976,2675]],"__id":16058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[6976,2676]],"__id":16062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16063,"parentNodes":[6980],"index":803,"rule":{"name":"Recurse232","pattern":{"type":"composite","id":2948,"leftPattern":{"type":"not","id":2946,"cls":"Fibonacci232","alias":"f"},"rightPattern":{"type":"object","id":2947,"cls":"Fibonacci232","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci232 = defined.get('Fibonacci232');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci232(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse232"},{"type":"beta","out_nodes":[[6979,-1]],"__id":16064,"parentNodes":[6981,6982]},{"type":"rightadapter","out_nodes":[[6980,2677]],"__id":16068,"parentNodes":[37]},{"type":"not","out_nodes":[[6983,-1]],"__id":16069,"parentNodes":[6984,6985],"constraint":{"type":"join-reference","out_nodes":[],"__id":16070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[6980,-1]],"__id":16071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6982,2678]],"__id":16075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[6982,2679]],"__id":16079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16080,"parentNodes":[6987],"index":804,"rule":{"name":"Calculate231","pattern":{"type":"composite","id":2955,"leftPattern":{"type":"composite","id":2954,"leftPattern":{"type":"composite","id":2953,"leftPattern":{"type":"object","id":2949,"cls":"Fibonacci231","alias":"f1"},"rightPattern":{"type":"object","id":2950,"cls":"Fibonacci231","alias":"f2"}},"rightPattern":{"type":"object","id":2951,"cls":"Fibonacci231","alias":"f3"}},"rightPattern":{"type":"object","id":2952,"cls":"Result231","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate231"},{"type":"beta","out_nodes":[[6986,-1]],"__id":16081,"parentNodes":[6989,6990]},{"type":"type","out_nodes":[[3,2680]],"__id":16082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result231"}},{"type":"rightadapter","out_nodes":[[6987,2680]],"__id":16085,"parentNodes":[4]},{"type":"join","out_nodes":[[6991,-1]],"__id":16086,"parentNodes":[6993,6994],"constraint":{"type":"join-reference","out_nodes":[],"__id":16087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6987,-1]],"__id":16088,"parentNodes":[]},{"type":"type","out_nodes":[[9,2681],[14,2682],[20,2683],[30,2685],[20,2687],[30,2688]],"__id":16089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci231"}},{"type":"rightadapter","out_nodes":[[6990,2681]],"__id":16092,"parentNodes":[10]},{"type":"join","out_nodes":[[6995,-1]],"__id":16093,"parentNodes":[6996,6997],"constraint":{"type":"join-reference","out_nodes":[],"__id":16094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[6990,-1]],"__id":16095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6994,2682]],"__id":16100,"parentNodes":[16]},{"type":"beta","out_nodes":[[6998,-1]],"__id":16101,"parentNodes":[6999,7000]},{"type":"leftadapter","out_nodes":[[6994,-1]],"__id":16102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[6997,2683]],"__id":16107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[6997,2684]],"__id":16111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16112,"parentNodes":[7002],"index":805,"rule":{"name":"Bootstrap231","pattern":{"type":"object","id":2956,"cls":"Fibonacci231","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap231"},{"type":"beta","out_nodes":[[7001,-1]],"__id":16113,"parentNodes":[7003,7004]},{"type":"rightadapter","out_nodes":[[7002,2685]],"__id":16118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7002,2686]],"__id":16122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16123,"parentNodes":[7006],"index":806,"rule":{"name":"Recurse231","pattern":{"type":"composite","id":2959,"leftPattern":{"type":"not","id":2957,"cls":"Fibonacci231","alias":"f"},"rightPattern":{"type":"object","id":2958,"cls":"Fibonacci231","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci231 = defined.get('Fibonacci231');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci231(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse231"},{"type":"beta","out_nodes":[[7005,-1]],"__id":16124,"parentNodes":[7007,7008]},{"type":"rightadapter","out_nodes":[[7006,2687]],"__id":16128,"parentNodes":[37]},{"type":"not","out_nodes":[[7009,-1]],"__id":16129,"parentNodes":[7010,7011],"constraint":{"type":"join-reference","out_nodes":[],"__id":16130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7006,-1]],"__id":16131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7008,2688]],"__id":16135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7008,2689]],"__id":16139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16140,"parentNodes":[7013],"index":807,"rule":{"name":"Calculate230","pattern":{"type":"composite","id":2966,"leftPattern":{"type":"composite","id":2965,"leftPattern":{"type":"composite","id":2964,"leftPattern":{"type":"object","id":2960,"cls":"Fibonacci230","alias":"f1"},"rightPattern":{"type":"object","id":2961,"cls":"Fibonacci230","alias":"f2"}},"rightPattern":{"type":"object","id":2962,"cls":"Fibonacci230","alias":"f3"}},"rightPattern":{"type":"object","id":2963,"cls":"Result230","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate230"},{"type":"beta","out_nodes":[[7012,-1]],"__id":16141,"parentNodes":[7015,7016]},{"type":"type","out_nodes":[[3,2690]],"__id":16142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result230"}},{"type":"rightadapter","out_nodes":[[7013,2690]],"__id":16145,"parentNodes":[4]},{"type":"join","out_nodes":[[7017,-1]],"__id":16146,"parentNodes":[7019,7020],"constraint":{"type":"join-reference","out_nodes":[],"__id":16147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7013,-1]],"__id":16148,"parentNodes":[]},{"type":"type","out_nodes":[[9,2691],[14,2692],[20,2693],[30,2695],[20,2697],[30,2698]],"__id":16149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci230"}},{"type":"rightadapter","out_nodes":[[7016,2691]],"__id":16152,"parentNodes":[10]},{"type":"join","out_nodes":[[7021,-1]],"__id":16153,"parentNodes":[7022,7023],"constraint":{"type":"join-reference","out_nodes":[],"__id":16154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7016,-1]],"__id":16155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7020,2692]],"__id":16160,"parentNodes":[16]},{"type":"beta","out_nodes":[[7024,-1]],"__id":16161,"parentNodes":[7025,7026]},{"type":"leftadapter","out_nodes":[[7020,-1]],"__id":16162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7023,2693]],"__id":16167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7023,2694]],"__id":16171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16172,"parentNodes":[7028],"index":808,"rule":{"name":"Bootstrap230","pattern":{"type":"object","id":2967,"cls":"Fibonacci230","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap230"},{"type":"beta","out_nodes":[[7027,-1]],"__id":16173,"parentNodes":[7029,7030]},{"type":"rightadapter","out_nodes":[[7028,2695]],"__id":16178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7028,2696]],"__id":16182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16183,"parentNodes":[7032],"index":809,"rule":{"name":"Recurse230","pattern":{"type":"composite","id":2970,"leftPattern":{"type":"not","id":2968,"cls":"Fibonacci230","alias":"f"},"rightPattern":{"type":"object","id":2969,"cls":"Fibonacci230","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');let Fibonacci230 = defined.get('Fibonacci230');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci230(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse230"},{"type":"beta","out_nodes":[[7031,-1]],"__id":16184,"parentNodes":[7033,7034]},{"type":"rightadapter","out_nodes":[[7032,2697]],"__id":16188,"parentNodes":[37]},{"type":"not","out_nodes":[[7035,-1]],"__id":16189,"parentNodes":[7036,7037],"constraint":{"type":"join-reference","out_nodes":[],"__id":16190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7032,-1]],"__id":16191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7034,2698]],"__id":16195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7034,2699]],"__id":16199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16200,"parentNodes":[7039],"index":810,"rule":{"name":"Calculate229","pattern":{"type":"composite","id":2977,"leftPattern":{"type":"composite","id":2976,"leftPattern":{"type":"composite","id":2975,"leftPattern":{"type":"object","id":2971,"cls":"Fibonacci229","alias":"f1"},"rightPattern":{"type":"object","id":2972,"cls":"Fibonacci229","alias":"f2"}},"rightPattern":{"type":"object","id":2973,"cls":"Fibonacci229","alias":"f3"}},"rightPattern":{"type":"object","id":2974,"cls":"Result229","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate229"},{"type":"beta","out_nodes":[[7038,-1]],"__id":16201,"parentNodes":[7041,7042]},{"type":"type","out_nodes":[[3,2700]],"__id":16202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result229"}},{"type":"rightadapter","out_nodes":[[7039,2700]],"__id":16205,"parentNodes":[4]},{"type":"join","out_nodes":[[7043,-1]],"__id":16206,"parentNodes":[7045,7046],"constraint":{"type":"join-reference","out_nodes":[],"__id":16207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7039,-1]],"__id":16208,"parentNodes":[]},{"type":"type","out_nodes":[[9,2701],[14,2702],[20,2703],[30,2705],[20,2707],[30,2708]],"__id":16209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci229"}},{"type":"rightadapter","out_nodes":[[7042,2701]],"__id":16212,"parentNodes":[10]},{"type":"join","out_nodes":[[7047,-1]],"__id":16213,"parentNodes":[7048,7049],"constraint":{"type":"join-reference","out_nodes":[],"__id":16214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7042,-1]],"__id":16215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7046,2702]],"__id":16220,"parentNodes":[16]},{"type":"beta","out_nodes":[[7050,-1]],"__id":16221,"parentNodes":[7051,7052]},{"type":"leftadapter","out_nodes":[[7046,-1]],"__id":16222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7049,2703]],"__id":16227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7049,2704]],"__id":16231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16232,"parentNodes":[7054],"index":811,"rule":{"name":"Bootstrap229","pattern":{"type":"object","id":2978,"cls":"Fibonacci229","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap229"},{"type":"beta","out_nodes":[[7053,-1]],"__id":16233,"parentNodes":[7055,7056]},{"type":"rightadapter","out_nodes":[[7054,2705]],"__id":16238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7054,2706]],"__id":16242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16243,"parentNodes":[7058],"index":812,"rule":{"name":"Recurse229","pattern":{"type":"composite","id":2981,"leftPattern":{"type":"not","id":2979,"cls":"Fibonacci229","alias":"f"},"rightPattern":{"type":"object","id":2980,"cls":"Fibonacci229","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci229 = defined.get('Fibonacci229');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci229(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse229"},{"type":"beta","out_nodes":[[7057,-1]],"__id":16244,"parentNodes":[7059,7060]},{"type":"rightadapter","out_nodes":[[7058,2707]],"__id":16248,"parentNodes":[37]},{"type":"not","out_nodes":[[7061,-1]],"__id":16249,"parentNodes":[7062,7063],"constraint":{"type":"join-reference","out_nodes":[],"__id":16250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7058,-1]],"__id":16251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7060,2708]],"__id":16255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7060,2709]],"__id":16259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16260,"parentNodes":[7065],"index":813,"rule":{"name":"Calculate228","pattern":{"type":"composite","id":2988,"leftPattern":{"type":"composite","id":2987,"leftPattern":{"type":"composite","id":2986,"leftPattern":{"type":"object","id":2982,"cls":"Fibonacci228","alias":"f1"},"rightPattern":{"type":"object","id":2983,"cls":"Fibonacci228","alias":"f2"}},"rightPattern":{"type":"object","id":2984,"cls":"Fibonacci228","alias":"f3"}},"rightPattern":{"type":"object","id":2985,"cls":"Result228","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate228"},{"type":"beta","out_nodes":[[7064,-1]],"__id":16261,"parentNodes":[7067,7068]},{"type":"type","out_nodes":[[3,2710]],"__id":16262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result228"}},{"type":"rightadapter","out_nodes":[[7065,2710]],"__id":16265,"parentNodes":[4]},{"type":"join","out_nodes":[[7069,-1]],"__id":16266,"parentNodes":[7071,7072],"constraint":{"type":"join-reference","out_nodes":[],"__id":16267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7065,-1]],"__id":16268,"parentNodes":[]},{"type":"type","out_nodes":[[9,2711],[14,2712],[20,2713],[30,2715],[20,2717],[30,2718]],"__id":16269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci228"}},{"type":"rightadapter","out_nodes":[[7068,2711]],"__id":16272,"parentNodes":[10]},{"type":"join","out_nodes":[[7073,-1]],"__id":16273,"parentNodes":[7074,7075],"constraint":{"type":"join-reference","out_nodes":[],"__id":16274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7068,-1]],"__id":16275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7072,2712]],"__id":16280,"parentNodes":[16]},{"type":"beta","out_nodes":[[7076,-1]],"__id":16281,"parentNodes":[7077,7078]},{"type":"leftadapter","out_nodes":[[7072,-1]],"__id":16282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7075,2713]],"__id":16287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7075,2714]],"__id":16291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16292,"parentNodes":[7080],"index":814,"rule":{"name":"Bootstrap228","pattern":{"type":"object","id":2989,"cls":"Fibonacci228","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap228"},{"type":"beta","out_nodes":[[7079,-1]],"__id":16293,"parentNodes":[7081,7082]},{"type":"rightadapter","out_nodes":[[7080,2715]],"__id":16298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7080,2716]],"__id":16302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16303,"parentNodes":[7084],"index":815,"rule":{"name":"Recurse228","pattern":{"type":"composite","id":2992,"leftPattern":{"type":"not","id":2990,"cls":"Fibonacci228","alias":"f"},"rightPattern":{"type":"object","id":2991,"cls":"Fibonacci228","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci228 = defined.get('Fibonacci228');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci228(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse228"},{"type":"beta","out_nodes":[[7083,-1]],"__id":16304,"parentNodes":[7085,7086]},{"type":"rightadapter","out_nodes":[[7084,2717]],"__id":16308,"parentNodes":[37]},{"type":"not","out_nodes":[[7087,-1]],"__id":16309,"parentNodes":[7088,7089],"constraint":{"type":"join-reference","out_nodes":[],"__id":16310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7084,-1]],"__id":16311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7086,2718]],"__id":16315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7086,2719]],"__id":16319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16320,"parentNodes":[7091],"index":816,"rule":{"name":"Calculate227","pattern":{"type":"composite","id":2999,"leftPattern":{"type":"composite","id":2998,"leftPattern":{"type":"composite","id":2997,"leftPattern":{"type":"object","id":2993,"cls":"Fibonacci227","alias":"f1"},"rightPattern":{"type":"object","id":2994,"cls":"Fibonacci227","alias":"f2"}},"rightPattern":{"type":"object","id":2995,"cls":"Fibonacci227","alias":"f3"}},"rightPattern":{"type":"object","id":2996,"cls":"Result227","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate227"},{"type":"beta","out_nodes":[[7090,-1]],"__id":16321,"parentNodes":[7093,7094]},{"type":"type","out_nodes":[[3,2720]],"__id":16322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result227"}},{"type":"rightadapter","out_nodes":[[7091,2720]],"__id":16325,"parentNodes":[4]},{"type":"join","out_nodes":[[7095,-1]],"__id":16326,"parentNodes":[7097,7098],"constraint":{"type":"join-reference","out_nodes":[],"__id":16327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7091,-1]],"__id":16328,"parentNodes":[]},{"type":"type","out_nodes":[[9,2721],[14,2722],[20,2723],[30,2725],[20,2727],[30,2728]],"__id":16329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci227"}},{"type":"rightadapter","out_nodes":[[7094,2721]],"__id":16332,"parentNodes":[10]},{"type":"join","out_nodes":[[7099,-1]],"__id":16333,"parentNodes":[7100,7101],"constraint":{"type":"join-reference","out_nodes":[],"__id":16334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7094,-1]],"__id":16335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7098,2722]],"__id":16340,"parentNodes":[16]},{"type":"beta","out_nodes":[[7102,-1]],"__id":16341,"parentNodes":[7103,7104]},{"type":"leftadapter","out_nodes":[[7098,-1]],"__id":16342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7101,2723]],"__id":16347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7101,2724]],"__id":16351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16352,"parentNodes":[7106],"index":817,"rule":{"name":"Bootstrap227","pattern":{"type":"object","id":3000,"cls":"Fibonacci227","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap227"},{"type":"beta","out_nodes":[[7105,-1]],"__id":16353,"parentNodes":[7107,7108]},{"type":"rightadapter","out_nodes":[[7106,2725]],"__id":16358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7106,2726]],"__id":16362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16363,"parentNodes":[7110],"index":818,"rule":{"name":"Recurse227","pattern":{"type":"composite","id":3003,"leftPattern":{"type":"not","id":3001,"cls":"Fibonacci227","alias":"f"},"rightPattern":{"type":"object","id":3002,"cls":"Fibonacci227","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci227 = defined.get('Fibonacci227');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci227(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse227"},{"type":"beta","out_nodes":[[7109,-1]],"__id":16364,"parentNodes":[7111,7112]},{"type":"rightadapter","out_nodes":[[7110,2727]],"__id":16368,"parentNodes":[37]},{"type":"not","out_nodes":[[7113,-1]],"__id":16369,"parentNodes":[7114,7115],"constraint":{"type":"join-reference","out_nodes":[],"__id":16370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7110,-1]],"__id":16371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7112,2728]],"__id":16375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7112,2729]],"__id":16379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16380,"parentNodes":[7117],"index":819,"rule":{"name":"Calculate226","pattern":{"type":"composite","id":3010,"leftPattern":{"type":"composite","id":3009,"leftPattern":{"type":"composite","id":3008,"leftPattern":{"type":"object","id":3004,"cls":"Fibonacci226","alias":"f1"},"rightPattern":{"type":"object","id":3005,"cls":"Fibonacci226","alias":"f2"}},"rightPattern":{"type":"object","id":3006,"cls":"Fibonacci226","alias":"f3"}},"rightPattern":{"type":"object","id":3007,"cls":"Result226","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate226"},{"type":"beta","out_nodes":[[7116,-1]],"__id":16381,"parentNodes":[7119,7120]},{"type":"type","out_nodes":[[3,2730]],"__id":16382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result226"}},{"type":"rightadapter","out_nodes":[[7117,2730]],"__id":16385,"parentNodes":[4]},{"type":"join","out_nodes":[[7121,-1]],"__id":16386,"parentNodes":[7123,7124],"constraint":{"type":"join-reference","out_nodes":[],"__id":16387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7117,-1]],"__id":16388,"parentNodes":[]},{"type":"type","out_nodes":[[9,2731],[14,2732],[20,2733],[30,2735],[20,2737],[30,2738]],"__id":16389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci226"}},{"type":"rightadapter","out_nodes":[[7120,2731]],"__id":16392,"parentNodes":[10]},{"type":"join","out_nodes":[[7125,-1]],"__id":16393,"parentNodes":[7126,7127],"constraint":{"type":"join-reference","out_nodes":[],"__id":16394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7120,-1]],"__id":16395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7124,2732]],"__id":16400,"parentNodes":[16]},{"type":"beta","out_nodes":[[7128,-1]],"__id":16401,"parentNodes":[7129,7130]},{"type":"leftadapter","out_nodes":[[7124,-1]],"__id":16402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7127,2733]],"__id":16407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7127,2734]],"__id":16411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16412,"parentNodes":[7132],"index":820,"rule":{"name":"Bootstrap226","pattern":{"type":"object","id":3011,"cls":"Fibonacci226","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap226"},{"type":"beta","out_nodes":[[7131,-1]],"__id":16413,"parentNodes":[7133,7134]},{"type":"rightadapter","out_nodes":[[7132,2735]],"__id":16418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7132,2736]],"__id":16422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16423,"parentNodes":[7136],"index":821,"rule":{"name":"Recurse226","pattern":{"type":"composite","id":3014,"leftPattern":{"type":"not","id":3012,"cls":"Fibonacci226","alias":"f"},"rightPattern":{"type":"object","id":3013,"cls":"Fibonacci226","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci226 = defined.get('Fibonacci226');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci226(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse226"},{"type":"beta","out_nodes":[[7135,-1]],"__id":16424,"parentNodes":[7137,7138]},{"type":"rightadapter","out_nodes":[[7136,2737]],"__id":16428,"parentNodes":[37]},{"type":"not","out_nodes":[[7139,-1]],"__id":16429,"parentNodes":[7140,7141],"constraint":{"type":"join-reference","out_nodes":[],"__id":16430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7136,-1]],"__id":16431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7138,2738]],"__id":16435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7138,2739]],"__id":16439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16440,"parentNodes":[7143],"index":822,"rule":{"name":"Calculate225","pattern":{"type":"composite","id":3021,"leftPattern":{"type":"composite","id":3020,"leftPattern":{"type":"composite","id":3019,"leftPattern":{"type":"object","id":3015,"cls":"Fibonacci225","alias":"f1"},"rightPattern":{"type":"object","id":3016,"cls":"Fibonacci225","alias":"f2"}},"rightPattern":{"type":"object","id":3017,"cls":"Fibonacci225","alias":"f3"}},"rightPattern":{"type":"object","id":3018,"cls":"Result225","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate225"},{"type":"beta","out_nodes":[[7142,-1]],"__id":16441,"parentNodes":[7145,7146]},{"type":"type","out_nodes":[[3,2740]],"__id":16442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result225"}},{"type":"rightadapter","out_nodes":[[7143,2740]],"__id":16445,"parentNodes":[4]},{"type":"join","out_nodes":[[7147,-1]],"__id":16446,"parentNodes":[7149,7150],"constraint":{"type":"join-reference","out_nodes":[],"__id":16447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7143,-1]],"__id":16448,"parentNodes":[]},{"type":"type","out_nodes":[[9,2741],[14,2742],[20,2743],[30,2745],[20,2747],[30,2748]],"__id":16449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci225"}},{"type":"rightadapter","out_nodes":[[7146,2741]],"__id":16452,"parentNodes":[10]},{"type":"join","out_nodes":[[7151,-1]],"__id":16453,"parentNodes":[7152,7153],"constraint":{"type":"join-reference","out_nodes":[],"__id":16454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7146,-1]],"__id":16455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7150,2742]],"__id":16460,"parentNodes":[16]},{"type":"beta","out_nodes":[[7154,-1]],"__id":16461,"parentNodes":[7155,7156]},{"type":"leftadapter","out_nodes":[[7150,-1]],"__id":16462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7153,2743]],"__id":16467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7153,2744]],"__id":16471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16472,"parentNodes":[7158],"index":823,"rule":{"name":"Bootstrap225","pattern":{"type":"object","id":3022,"cls":"Fibonacci225","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap225"},{"type":"beta","out_nodes":[[7157,-1]],"__id":16473,"parentNodes":[7159,7160]},{"type":"rightadapter","out_nodes":[[7158,2745]],"__id":16478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7158,2746]],"__id":16482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16483,"parentNodes":[7162],"index":824,"rule":{"name":"Recurse225","pattern":{"type":"composite","id":3025,"leftPattern":{"type":"not","id":3023,"cls":"Fibonacci225","alias":"f"},"rightPattern":{"type":"object","id":3024,"cls":"Fibonacci225","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci225 = defined.get('Fibonacci225');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci225(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse225"},{"type":"beta","out_nodes":[[7161,-1]],"__id":16484,"parentNodes":[7163,7164]},{"type":"rightadapter","out_nodes":[[7162,2747]],"__id":16488,"parentNodes":[37]},{"type":"not","out_nodes":[[7165,-1]],"__id":16489,"parentNodes":[7166,7167],"constraint":{"type":"join-reference","out_nodes":[],"__id":16490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7162,-1]],"__id":16491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7164,2748]],"__id":16495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7164,2749]],"__id":16499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16500,"parentNodes":[7169],"index":825,"rule":{"name":"Calculate224","pattern":{"type":"composite","id":3032,"leftPattern":{"type":"composite","id":3031,"leftPattern":{"type":"composite","id":3030,"leftPattern":{"type":"object","id":3026,"cls":"Fibonacci224","alias":"f1"},"rightPattern":{"type":"object","id":3027,"cls":"Fibonacci224","alias":"f2"}},"rightPattern":{"type":"object","id":3028,"cls":"Fibonacci224","alias":"f3"}},"rightPattern":{"type":"object","id":3029,"cls":"Result224","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate224"},{"type":"beta","out_nodes":[[7168,-1]],"__id":16501,"parentNodes":[7171,7172]},{"type":"type","out_nodes":[[3,2750]],"__id":16502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result224"}},{"type":"rightadapter","out_nodes":[[7169,2750]],"__id":16505,"parentNodes":[4]},{"type":"join","out_nodes":[[7173,-1]],"__id":16506,"parentNodes":[7175,7176],"constraint":{"type":"join-reference","out_nodes":[],"__id":16507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7169,-1]],"__id":16508,"parentNodes":[]},{"type":"type","out_nodes":[[9,2751],[14,2752],[20,2753],[30,2755],[20,2757],[30,2758]],"__id":16509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci224"}},{"type":"rightadapter","out_nodes":[[7172,2751]],"__id":16512,"parentNodes":[10]},{"type":"join","out_nodes":[[7177,-1]],"__id":16513,"parentNodes":[7178,7179],"constraint":{"type":"join-reference","out_nodes":[],"__id":16514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7172,-1]],"__id":16515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7176,2752]],"__id":16520,"parentNodes":[16]},{"type":"beta","out_nodes":[[7180,-1]],"__id":16521,"parentNodes":[7181,7182]},{"type":"leftadapter","out_nodes":[[7176,-1]],"__id":16522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7179,2753]],"__id":16527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7179,2754]],"__id":16531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16532,"parentNodes":[7184],"index":826,"rule":{"name":"Bootstrap224","pattern":{"type":"object","id":3033,"cls":"Fibonacci224","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap224"},{"type":"beta","out_nodes":[[7183,-1]],"__id":16533,"parentNodes":[7185,7186]},{"type":"rightadapter","out_nodes":[[7184,2755]],"__id":16538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7184,2756]],"__id":16542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16543,"parentNodes":[7188],"index":827,"rule":{"name":"Recurse224","pattern":{"type":"composite","id":3036,"leftPattern":{"type":"not","id":3034,"cls":"Fibonacci224","alias":"f"},"rightPattern":{"type":"object","id":3035,"cls":"Fibonacci224","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci224 = defined.get('Fibonacci224');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci224(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse224"},{"type":"beta","out_nodes":[[7187,-1]],"__id":16544,"parentNodes":[7189,7190]},{"type":"rightadapter","out_nodes":[[7188,2757]],"__id":16548,"parentNodes":[37]},{"type":"not","out_nodes":[[7191,-1]],"__id":16549,"parentNodes":[7192,7193],"constraint":{"type":"join-reference","out_nodes":[],"__id":16550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7188,-1]],"__id":16551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7190,2758]],"__id":16555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7190,2759]],"__id":16559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16560,"parentNodes":[7195],"index":828,"rule":{"name":"Calculate223","pattern":{"type":"composite","id":3043,"leftPattern":{"type":"composite","id":3042,"leftPattern":{"type":"composite","id":3041,"leftPattern":{"type":"object","id":3037,"cls":"Fibonacci223","alias":"f1"},"rightPattern":{"type":"object","id":3038,"cls":"Fibonacci223","alias":"f2"}},"rightPattern":{"type":"object","id":3039,"cls":"Fibonacci223","alias":"f3"}},"rightPattern":{"type":"object","id":3040,"cls":"Result223","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate223"},{"type":"beta","out_nodes":[[7194,-1]],"__id":16561,"parentNodes":[7197,7198]},{"type":"type","out_nodes":[[3,2760]],"__id":16562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result223"}},{"type":"rightadapter","out_nodes":[[7195,2760]],"__id":16565,"parentNodes":[4]},{"type":"join","out_nodes":[[7199,-1]],"__id":16566,"parentNodes":[7201,7202],"constraint":{"type":"join-reference","out_nodes":[],"__id":16567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7195,-1]],"__id":16568,"parentNodes":[]},{"type":"type","out_nodes":[[9,2761],[14,2762],[20,2763],[30,2765],[20,2767],[30,2768]],"__id":16569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci223"}},{"type":"rightadapter","out_nodes":[[7198,2761]],"__id":16572,"parentNodes":[10]},{"type":"join","out_nodes":[[7203,-1]],"__id":16573,"parentNodes":[7204,7205],"constraint":{"type":"join-reference","out_nodes":[],"__id":16574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7198,-1]],"__id":16575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7202,2762]],"__id":16580,"parentNodes":[16]},{"type":"beta","out_nodes":[[7206,-1]],"__id":16581,"parentNodes":[7207,7208]},{"type":"leftadapter","out_nodes":[[7202,-1]],"__id":16582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7205,2763]],"__id":16587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7205,2764]],"__id":16591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16592,"parentNodes":[7210],"index":829,"rule":{"name":"Bootstrap223","pattern":{"type":"object","id":3044,"cls":"Fibonacci223","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap223"},{"type":"beta","out_nodes":[[7209,-1]],"__id":16593,"parentNodes":[7211,7212]},{"type":"rightadapter","out_nodes":[[7210,2765]],"__id":16598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7210,2766]],"__id":16602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16603,"parentNodes":[7214],"index":830,"rule":{"name":"Recurse223","pattern":{"type":"composite","id":3047,"leftPattern":{"type":"not","id":3045,"cls":"Fibonacci223","alias":"f"},"rightPattern":{"type":"object","id":3046,"cls":"Fibonacci223","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci223 = defined.get('Fibonacci223');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci223(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse223"},{"type":"beta","out_nodes":[[7213,-1]],"__id":16604,"parentNodes":[7215,7216]},{"type":"rightadapter","out_nodes":[[7214,2767]],"__id":16608,"parentNodes":[37]},{"type":"not","out_nodes":[[7217,-1]],"__id":16609,"parentNodes":[7218,7219],"constraint":{"type":"join-reference","out_nodes":[],"__id":16610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7214,-1]],"__id":16611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7216,2768]],"__id":16615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7216,2769]],"__id":16619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16620,"parentNodes":[7221],"index":831,"rule":{"name":"Calculate222","pattern":{"type":"composite","id":3054,"leftPattern":{"type":"composite","id":3053,"leftPattern":{"type":"composite","id":3052,"leftPattern":{"type":"object","id":3048,"cls":"Fibonacci222","alias":"f1"},"rightPattern":{"type":"object","id":3049,"cls":"Fibonacci222","alias":"f2"}},"rightPattern":{"type":"object","id":3050,"cls":"Fibonacci222","alias":"f3"}},"rightPattern":{"type":"object","id":3051,"cls":"Result222","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate222"},{"type":"beta","out_nodes":[[7220,-1]],"__id":16621,"parentNodes":[7223,7224]},{"type":"type","out_nodes":[[3,2770]],"__id":16622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result222"}},{"type":"rightadapter","out_nodes":[[7221,2770]],"__id":16625,"parentNodes":[4]},{"type":"join","out_nodes":[[7225,-1]],"__id":16626,"parentNodes":[7227,7228],"constraint":{"type":"join-reference","out_nodes":[],"__id":16627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7221,-1]],"__id":16628,"parentNodes":[]},{"type":"type","out_nodes":[[9,2771],[14,2772],[20,2773],[30,2775],[20,2777],[30,2778]],"__id":16629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci222"}},{"type":"rightadapter","out_nodes":[[7224,2771]],"__id":16632,"parentNodes":[10]},{"type":"join","out_nodes":[[7229,-1]],"__id":16633,"parentNodes":[7230,7231],"constraint":{"type":"join-reference","out_nodes":[],"__id":16634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7224,-1]],"__id":16635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7228,2772]],"__id":16640,"parentNodes":[16]},{"type":"beta","out_nodes":[[7232,-1]],"__id":16641,"parentNodes":[7233,7234]},{"type":"leftadapter","out_nodes":[[7228,-1]],"__id":16642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7231,2773]],"__id":16647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7231,2774]],"__id":16651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16652,"parentNodes":[7236],"index":832,"rule":{"name":"Bootstrap222","pattern":{"type":"object","id":3055,"cls":"Fibonacci222","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap222"},{"type":"beta","out_nodes":[[7235,-1]],"__id":16653,"parentNodes":[7237,7238]},{"type":"rightadapter","out_nodes":[[7236,2775]],"__id":16658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7236,2776]],"__id":16662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16663,"parentNodes":[7240],"index":833,"rule":{"name":"Recurse222","pattern":{"type":"composite","id":3058,"leftPattern":{"type":"not","id":3056,"cls":"Fibonacci222","alias":"f"},"rightPattern":{"type":"object","id":3057,"cls":"Fibonacci222","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci222 = defined.get('Fibonacci222');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci222(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse222"},{"type":"beta","out_nodes":[[7239,-1]],"__id":16664,"parentNodes":[7241,7242]},{"type":"rightadapter","out_nodes":[[7240,2777]],"__id":16668,"parentNodes":[37]},{"type":"not","out_nodes":[[7243,-1]],"__id":16669,"parentNodes":[7244,7245],"constraint":{"type":"join-reference","out_nodes":[],"__id":16670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7240,-1]],"__id":16671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7242,2778]],"__id":16675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7242,2779]],"__id":16679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16680,"parentNodes":[7247],"index":834,"rule":{"name":"Calculate221","pattern":{"type":"composite","id":3065,"leftPattern":{"type":"composite","id":3064,"leftPattern":{"type":"composite","id":3063,"leftPattern":{"type":"object","id":3059,"cls":"Fibonacci221","alias":"f1"},"rightPattern":{"type":"object","id":3060,"cls":"Fibonacci221","alias":"f2"}},"rightPattern":{"type":"object","id":3061,"cls":"Fibonacci221","alias":"f3"}},"rightPattern":{"type":"object","id":3062,"cls":"Result221","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate221"},{"type":"beta","out_nodes":[[7246,-1]],"__id":16681,"parentNodes":[7249,7250]},{"type":"type","out_nodes":[[3,2780]],"__id":16682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result221"}},{"type":"rightadapter","out_nodes":[[7247,2780]],"__id":16685,"parentNodes":[4]},{"type":"join","out_nodes":[[7251,-1]],"__id":16686,"parentNodes":[7253,7254],"constraint":{"type":"join-reference","out_nodes":[],"__id":16687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7247,-1]],"__id":16688,"parentNodes":[]},{"type":"type","out_nodes":[[9,2781],[14,2782],[20,2783],[30,2785],[20,2787],[30,2788]],"__id":16689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci221"}},{"type":"rightadapter","out_nodes":[[7250,2781]],"__id":16692,"parentNodes":[10]},{"type":"join","out_nodes":[[7255,-1]],"__id":16693,"parentNodes":[7256,7257],"constraint":{"type":"join-reference","out_nodes":[],"__id":16694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7250,-1]],"__id":16695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7254,2782]],"__id":16700,"parentNodes":[16]},{"type":"beta","out_nodes":[[7258,-1]],"__id":16701,"parentNodes":[7259,7260]},{"type":"leftadapter","out_nodes":[[7254,-1]],"__id":16702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7257,2783]],"__id":16707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7257,2784]],"__id":16711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16712,"parentNodes":[7262],"index":835,"rule":{"name":"Bootstrap221","pattern":{"type":"object","id":3066,"cls":"Fibonacci221","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap221"},{"type":"beta","out_nodes":[[7261,-1]],"__id":16713,"parentNodes":[7263,7264]},{"type":"rightadapter","out_nodes":[[7262,2785]],"__id":16718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7262,2786]],"__id":16722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16723,"parentNodes":[7266],"index":836,"rule":{"name":"Recurse221","pattern":{"type":"composite","id":3069,"leftPattern":{"type":"not","id":3067,"cls":"Fibonacci221","alias":"f"},"rightPattern":{"type":"object","id":3068,"cls":"Fibonacci221","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci221 = defined.get('Fibonacci221');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci221(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse221"},{"type":"beta","out_nodes":[[7265,-1]],"__id":16724,"parentNodes":[7267,7268]},{"type":"rightadapter","out_nodes":[[7266,2787]],"__id":16728,"parentNodes":[37]},{"type":"not","out_nodes":[[7269,-1]],"__id":16729,"parentNodes":[7270,7271],"constraint":{"type":"join-reference","out_nodes":[],"__id":16730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7266,-1]],"__id":16731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7268,2788]],"__id":16735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7268,2789]],"__id":16739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16740,"parentNodes":[7273],"index":837,"rule":{"name":"Calculate220","pattern":{"type":"composite","id":3076,"leftPattern":{"type":"composite","id":3075,"leftPattern":{"type":"composite","id":3074,"leftPattern":{"type":"object","id":3070,"cls":"Fibonacci220","alias":"f1"},"rightPattern":{"type":"object","id":3071,"cls":"Fibonacci220","alias":"f2"}},"rightPattern":{"type":"object","id":3072,"cls":"Fibonacci220","alias":"f3"}},"rightPattern":{"type":"object","id":3073,"cls":"Result220","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate220"},{"type":"beta","out_nodes":[[7272,-1]],"__id":16741,"parentNodes":[7275,7276]},{"type":"type","out_nodes":[[3,2790]],"__id":16742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result220"}},{"type":"rightadapter","out_nodes":[[7273,2790]],"__id":16745,"parentNodes":[4]},{"type":"join","out_nodes":[[7277,-1]],"__id":16746,"parentNodes":[7279,7280],"constraint":{"type":"join-reference","out_nodes":[],"__id":16747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7273,-1]],"__id":16748,"parentNodes":[]},{"type":"type","out_nodes":[[9,2791],[14,2792],[20,2793],[30,2795],[20,2797],[30,2798]],"__id":16749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci220"}},{"type":"rightadapter","out_nodes":[[7276,2791]],"__id":16752,"parentNodes":[10]},{"type":"join","out_nodes":[[7281,-1]],"__id":16753,"parentNodes":[7282,7283],"constraint":{"type":"join-reference","out_nodes":[],"__id":16754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7276,-1]],"__id":16755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7280,2792]],"__id":16760,"parentNodes":[16]},{"type":"beta","out_nodes":[[7284,-1]],"__id":16761,"parentNodes":[7285,7286]},{"type":"leftadapter","out_nodes":[[7280,-1]],"__id":16762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7283,2793]],"__id":16767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7283,2794]],"__id":16771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16772,"parentNodes":[7288],"index":838,"rule":{"name":"Bootstrap220","pattern":{"type":"object","id":3077,"cls":"Fibonacci220","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap220"},{"type":"beta","out_nodes":[[7287,-1]],"__id":16773,"parentNodes":[7289,7290]},{"type":"rightadapter","out_nodes":[[7288,2795]],"__id":16778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7288,2796]],"__id":16782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16783,"parentNodes":[7292],"index":839,"rule":{"name":"Recurse220","pattern":{"type":"composite","id":3080,"leftPattern":{"type":"not","id":3078,"cls":"Fibonacci220","alias":"f"},"rightPattern":{"type":"object","id":3079,"cls":"Fibonacci220","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');let Fibonacci220 = defined.get('Fibonacci220');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci220(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse220"},{"type":"beta","out_nodes":[[7291,-1]],"__id":16784,"parentNodes":[7293,7294]},{"type":"rightadapter","out_nodes":[[7292,2797]],"__id":16788,"parentNodes":[37]},{"type":"not","out_nodes":[[7295,-1]],"__id":16789,"parentNodes":[7296,7297],"constraint":{"type":"join-reference","out_nodes":[],"__id":16790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7292,-1]],"__id":16791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7294,2798]],"__id":16795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7294,2799]],"__id":16799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16800,"parentNodes":[7299],"index":840,"rule":{"name":"Calculate219","pattern":{"type":"composite","id":3087,"leftPattern":{"type":"composite","id":3086,"leftPattern":{"type":"composite","id":3085,"leftPattern":{"type":"object","id":3081,"cls":"Fibonacci219","alias":"f1"},"rightPattern":{"type":"object","id":3082,"cls":"Fibonacci219","alias":"f2"}},"rightPattern":{"type":"object","id":3083,"cls":"Fibonacci219","alias":"f3"}},"rightPattern":{"type":"object","id":3084,"cls":"Result219","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate219"},{"type":"beta","out_nodes":[[7298,-1]],"__id":16801,"parentNodes":[7301,7302]},{"type":"type","out_nodes":[[3,2800]],"__id":16802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result219"}},{"type":"rightadapter","out_nodes":[[7299,2800]],"__id":16805,"parentNodes":[4]},{"type":"join","out_nodes":[[7303,-1]],"__id":16806,"parentNodes":[7305,7306],"constraint":{"type":"join-reference","out_nodes":[],"__id":16807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7299,-1]],"__id":16808,"parentNodes":[]},{"type":"type","out_nodes":[[9,2801],[14,2802],[20,2803],[30,2805],[20,2807],[30,2808]],"__id":16809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci219"}},{"type":"rightadapter","out_nodes":[[7302,2801]],"__id":16812,"parentNodes":[10]},{"type":"join","out_nodes":[[7307,-1]],"__id":16813,"parentNodes":[7308,7309],"constraint":{"type":"join-reference","out_nodes":[],"__id":16814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7302,-1]],"__id":16815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7306,2802]],"__id":16820,"parentNodes":[16]},{"type":"beta","out_nodes":[[7310,-1]],"__id":16821,"parentNodes":[7311,7312]},{"type":"leftadapter","out_nodes":[[7306,-1]],"__id":16822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7309,2803]],"__id":16827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7309,2804]],"__id":16831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16832,"parentNodes":[7314],"index":841,"rule":{"name":"Bootstrap219","pattern":{"type":"object","id":3088,"cls":"Fibonacci219","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap219"},{"type":"beta","out_nodes":[[7313,-1]],"__id":16833,"parentNodes":[7315,7316]},{"type":"rightadapter","out_nodes":[[7314,2805]],"__id":16838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7314,2806]],"__id":16842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16843,"parentNodes":[7318],"index":842,"rule":{"name":"Recurse219","pattern":{"type":"composite","id":3091,"leftPattern":{"type":"not","id":3089,"cls":"Fibonacci219","alias":"f"},"rightPattern":{"type":"object","id":3090,"cls":"Fibonacci219","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci219 = defined.get('Fibonacci219');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci219(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse219"},{"type":"beta","out_nodes":[[7317,-1]],"__id":16844,"parentNodes":[7319,7320]},{"type":"rightadapter","out_nodes":[[7318,2807]],"__id":16848,"parentNodes":[37]},{"type":"not","out_nodes":[[7321,-1]],"__id":16849,"parentNodes":[7322,7323],"constraint":{"type":"join-reference","out_nodes":[],"__id":16850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7318,-1]],"__id":16851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7320,2808]],"__id":16855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7320,2809]],"__id":16859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16860,"parentNodes":[7325],"index":843,"rule":{"name":"Calculate218","pattern":{"type":"composite","id":3098,"leftPattern":{"type":"composite","id":3097,"leftPattern":{"type":"composite","id":3096,"leftPattern":{"type":"object","id":3092,"cls":"Fibonacci218","alias":"f1"},"rightPattern":{"type":"object","id":3093,"cls":"Fibonacci218","alias":"f2"}},"rightPattern":{"type":"object","id":3094,"cls":"Fibonacci218","alias":"f3"}},"rightPattern":{"type":"object","id":3095,"cls":"Result218","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate218"},{"type":"beta","out_nodes":[[7324,-1]],"__id":16861,"parentNodes":[7327,7328]},{"type":"type","out_nodes":[[3,2810]],"__id":16862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result218"}},{"type":"rightadapter","out_nodes":[[7325,2810]],"__id":16865,"parentNodes":[4]},{"type":"join","out_nodes":[[7329,-1]],"__id":16866,"parentNodes":[7331,7332],"constraint":{"type":"join-reference","out_nodes":[],"__id":16867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7325,-1]],"__id":16868,"parentNodes":[]},{"type":"type","out_nodes":[[9,2811],[14,2812],[20,2813],[30,2815],[20,2817],[30,2818]],"__id":16869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci218"}},{"type":"rightadapter","out_nodes":[[7328,2811]],"__id":16872,"parentNodes":[10]},{"type":"join","out_nodes":[[7333,-1]],"__id":16873,"parentNodes":[7334,7335],"constraint":{"type":"join-reference","out_nodes":[],"__id":16874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7328,-1]],"__id":16875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7332,2812]],"__id":16880,"parentNodes":[16]},{"type":"beta","out_nodes":[[7336,-1]],"__id":16881,"parentNodes":[7337,7338]},{"type":"leftadapter","out_nodes":[[7332,-1]],"__id":16882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7335,2813]],"__id":16887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7335,2814]],"__id":16891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16892,"parentNodes":[7340],"index":844,"rule":{"name":"Bootstrap218","pattern":{"type":"object","id":3099,"cls":"Fibonacci218","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap218"},{"type":"beta","out_nodes":[[7339,-1]],"__id":16893,"parentNodes":[7341,7342]},{"type":"rightadapter","out_nodes":[[7340,2815]],"__id":16898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7340,2816]],"__id":16902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16903,"parentNodes":[7344],"index":845,"rule":{"name":"Recurse218","pattern":{"type":"composite","id":3102,"leftPattern":{"type":"not","id":3100,"cls":"Fibonacci218","alias":"f"},"rightPattern":{"type":"object","id":3101,"cls":"Fibonacci218","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci218 = defined.get('Fibonacci218');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci218(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse218"},{"type":"beta","out_nodes":[[7343,-1]],"__id":16904,"parentNodes":[7345,7346]},{"type":"rightadapter","out_nodes":[[7344,2817]],"__id":16908,"parentNodes":[37]},{"type":"not","out_nodes":[[7347,-1]],"__id":16909,"parentNodes":[7348,7349],"constraint":{"type":"join-reference","out_nodes":[],"__id":16910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7344,-1]],"__id":16911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7346,2818]],"__id":16915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7346,2819]],"__id":16919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16920,"parentNodes":[7351],"index":846,"rule":{"name":"Calculate217","pattern":{"type":"composite","id":3109,"leftPattern":{"type":"composite","id":3108,"leftPattern":{"type":"composite","id":3107,"leftPattern":{"type":"object","id":3103,"cls":"Fibonacci217","alias":"f1"},"rightPattern":{"type":"object","id":3104,"cls":"Fibonacci217","alias":"f2"}},"rightPattern":{"type":"object","id":3105,"cls":"Fibonacci217","alias":"f3"}},"rightPattern":{"type":"object","id":3106,"cls":"Result217","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate217"},{"type":"beta","out_nodes":[[7350,-1]],"__id":16921,"parentNodes":[7353,7354]},{"type":"type","out_nodes":[[3,2820]],"__id":16922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result217"}},{"type":"rightadapter","out_nodes":[[7351,2820]],"__id":16925,"parentNodes":[4]},{"type":"join","out_nodes":[[7355,-1]],"__id":16926,"parentNodes":[7357,7358],"constraint":{"type":"join-reference","out_nodes":[],"__id":16927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7351,-1]],"__id":16928,"parentNodes":[]},{"type":"type","out_nodes":[[9,2821],[14,2822],[20,2823],[30,2825],[20,2827],[30,2828]],"__id":16929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci217"}},{"type":"rightadapter","out_nodes":[[7354,2821]],"__id":16932,"parentNodes":[10]},{"type":"join","out_nodes":[[7359,-1]],"__id":16933,"parentNodes":[7360,7361],"constraint":{"type":"join-reference","out_nodes":[],"__id":16934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7354,-1]],"__id":16935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7358,2822]],"__id":16940,"parentNodes":[16]},{"type":"beta","out_nodes":[[7362,-1]],"__id":16941,"parentNodes":[7363,7364]},{"type":"leftadapter","out_nodes":[[7358,-1]],"__id":16942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7361,2823]],"__id":16947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7361,2824]],"__id":16951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16952,"parentNodes":[7366],"index":847,"rule":{"name":"Bootstrap217","pattern":{"type":"object","id":3110,"cls":"Fibonacci217","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap217"},{"type":"beta","out_nodes":[[7365,-1]],"__id":16953,"parentNodes":[7367,7368]},{"type":"rightadapter","out_nodes":[[7366,2825]],"__id":16958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7366,2826]],"__id":16962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16963,"parentNodes":[7370],"index":848,"rule":{"name":"Recurse217","pattern":{"type":"composite","id":3113,"leftPattern":{"type":"not","id":3111,"cls":"Fibonacci217","alias":"f"},"rightPattern":{"type":"object","id":3112,"cls":"Fibonacci217","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci217 = defined.get('Fibonacci217');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci217(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse217"},{"type":"beta","out_nodes":[[7369,-1]],"__id":16964,"parentNodes":[7371,7372]},{"type":"rightadapter","out_nodes":[[7370,2827]],"__id":16968,"parentNodes":[37]},{"type":"not","out_nodes":[[7373,-1]],"__id":16969,"parentNodes":[7374,7375],"constraint":{"type":"join-reference","out_nodes":[],"__id":16970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7370,-1]],"__id":16971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7372,2828]],"__id":16975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7372,2829]],"__id":16979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":16980,"parentNodes":[7377],"index":849,"rule":{"name":"Calculate216","pattern":{"type":"composite","id":3120,"leftPattern":{"type":"composite","id":3119,"leftPattern":{"type":"composite","id":3118,"leftPattern":{"type":"object","id":3114,"cls":"Fibonacci216","alias":"f1"},"rightPattern":{"type":"object","id":3115,"cls":"Fibonacci216","alias":"f2"}},"rightPattern":{"type":"object","id":3116,"cls":"Fibonacci216","alias":"f3"}},"rightPattern":{"type":"object","id":3117,"cls":"Result216","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate216"},{"type":"beta","out_nodes":[[7376,-1]],"__id":16981,"parentNodes":[7379,7380]},{"type":"type","out_nodes":[[3,2830]],"__id":16982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result216"}},{"type":"rightadapter","out_nodes":[[7377,2830]],"__id":16985,"parentNodes":[4]},{"type":"join","out_nodes":[[7381,-1]],"__id":16986,"parentNodes":[7383,7384],"constraint":{"type":"join-reference","out_nodes":[],"__id":16987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7377,-1]],"__id":16988,"parentNodes":[]},{"type":"type","out_nodes":[[9,2831],[14,2832],[20,2833],[30,2835],[20,2837],[30,2838]],"__id":16989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci216"}},{"type":"rightadapter","out_nodes":[[7380,2831]],"__id":16992,"parentNodes":[10]},{"type":"join","out_nodes":[[7385,-1]],"__id":16993,"parentNodes":[7386,7387],"constraint":{"type":"join-reference","out_nodes":[],"__id":16994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7380,-1]],"__id":16995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7384,2832]],"__id":17000,"parentNodes":[16]},{"type":"beta","out_nodes":[[7388,-1]],"__id":17001,"parentNodes":[7389,7390]},{"type":"leftadapter","out_nodes":[[7384,-1]],"__id":17002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7387,2833]],"__id":17007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7387,2834]],"__id":17011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17012,"parentNodes":[7392],"index":850,"rule":{"name":"Bootstrap216","pattern":{"type":"object","id":3121,"cls":"Fibonacci216","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap216"},{"type":"beta","out_nodes":[[7391,-1]],"__id":17013,"parentNodes":[7393,7394]},{"type":"rightadapter","out_nodes":[[7392,2835]],"__id":17018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7392,2836]],"__id":17022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17023,"parentNodes":[7396],"index":851,"rule":{"name":"Recurse216","pattern":{"type":"composite","id":3124,"leftPattern":{"type":"not","id":3122,"cls":"Fibonacci216","alias":"f"},"rightPattern":{"type":"object","id":3123,"cls":"Fibonacci216","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci216 = defined.get('Fibonacci216');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci216(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse216"},{"type":"beta","out_nodes":[[7395,-1]],"__id":17024,"parentNodes":[7397,7398]},{"type":"rightadapter","out_nodes":[[7396,2837]],"__id":17028,"parentNodes":[37]},{"type":"not","out_nodes":[[7399,-1]],"__id":17029,"parentNodes":[7400,7401],"constraint":{"type":"join-reference","out_nodes":[],"__id":17030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7396,-1]],"__id":17031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7398,2838]],"__id":17035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7398,2839]],"__id":17039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17040,"parentNodes":[7403],"index":852,"rule":{"name":"Calculate215","pattern":{"type":"composite","id":3131,"leftPattern":{"type":"composite","id":3130,"leftPattern":{"type":"composite","id":3129,"leftPattern":{"type":"object","id":3125,"cls":"Fibonacci215","alias":"f1"},"rightPattern":{"type":"object","id":3126,"cls":"Fibonacci215","alias":"f2"}},"rightPattern":{"type":"object","id":3127,"cls":"Fibonacci215","alias":"f3"}},"rightPattern":{"type":"object","id":3128,"cls":"Result215","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate215"},{"type":"beta","out_nodes":[[7402,-1]],"__id":17041,"parentNodes":[7405,7406]},{"type":"type","out_nodes":[[3,2840]],"__id":17042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result215"}},{"type":"rightadapter","out_nodes":[[7403,2840]],"__id":17045,"parentNodes":[4]},{"type":"join","out_nodes":[[7407,-1]],"__id":17046,"parentNodes":[7409,7410],"constraint":{"type":"join-reference","out_nodes":[],"__id":17047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7403,-1]],"__id":17048,"parentNodes":[]},{"type":"type","out_nodes":[[9,2841],[14,2842],[20,2843],[30,2845],[20,2847],[30,2848]],"__id":17049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci215"}},{"type":"rightadapter","out_nodes":[[7406,2841]],"__id":17052,"parentNodes":[10]},{"type":"join","out_nodes":[[7411,-1]],"__id":17053,"parentNodes":[7412,7413],"constraint":{"type":"join-reference","out_nodes":[],"__id":17054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7406,-1]],"__id":17055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7410,2842]],"__id":17060,"parentNodes":[16]},{"type":"beta","out_nodes":[[7414,-1]],"__id":17061,"parentNodes":[7415,7416]},{"type":"leftadapter","out_nodes":[[7410,-1]],"__id":17062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7413,2843]],"__id":17067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7413,2844]],"__id":17071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17072,"parentNodes":[7418],"index":853,"rule":{"name":"Bootstrap215","pattern":{"type":"object","id":3132,"cls":"Fibonacci215","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap215"},{"type":"beta","out_nodes":[[7417,-1]],"__id":17073,"parentNodes":[7419,7420]},{"type":"rightadapter","out_nodes":[[7418,2845]],"__id":17078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7418,2846]],"__id":17082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17083,"parentNodes":[7422],"index":854,"rule":{"name":"Recurse215","pattern":{"type":"composite","id":3135,"leftPattern":{"type":"not","id":3133,"cls":"Fibonacci215","alias":"f"},"rightPattern":{"type":"object","id":3134,"cls":"Fibonacci215","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci215 = defined.get('Fibonacci215');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci215(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse215"},{"type":"beta","out_nodes":[[7421,-1]],"__id":17084,"parentNodes":[7423,7424]},{"type":"rightadapter","out_nodes":[[7422,2847]],"__id":17088,"parentNodes":[37]},{"type":"not","out_nodes":[[7425,-1]],"__id":17089,"parentNodes":[7426,7427],"constraint":{"type":"join-reference","out_nodes":[],"__id":17090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7422,-1]],"__id":17091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7424,2848]],"__id":17095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7424,2849]],"__id":17099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17100,"parentNodes":[7429],"index":855,"rule":{"name":"Calculate214","pattern":{"type":"composite","id":3142,"leftPattern":{"type":"composite","id":3141,"leftPattern":{"type":"composite","id":3140,"leftPattern":{"type":"object","id":3136,"cls":"Fibonacci214","alias":"f1"},"rightPattern":{"type":"object","id":3137,"cls":"Fibonacci214","alias":"f2"}},"rightPattern":{"type":"object","id":3138,"cls":"Fibonacci214","alias":"f3"}},"rightPattern":{"type":"object","id":3139,"cls":"Result214","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate214"},{"type":"beta","out_nodes":[[7428,-1]],"__id":17101,"parentNodes":[7431,7432]},{"type":"type","out_nodes":[[3,2850]],"__id":17102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result214"}},{"type":"rightadapter","out_nodes":[[7429,2850]],"__id":17105,"parentNodes":[4]},{"type":"join","out_nodes":[[7433,-1]],"__id":17106,"parentNodes":[7435,7436],"constraint":{"type":"join-reference","out_nodes":[],"__id":17107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7429,-1]],"__id":17108,"parentNodes":[]},{"type":"type","out_nodes":[[9,2851],[14,2852],[20,2853],[30,2855],[20,2857],[30,2858]],"__id":17109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci214"}},{"type":"rightadapter","out_nodes":[[7432,2851]],"__id":17112,"parentNodes":[10]},{"type":"join","out_nodes":[[7437,-1]],"__id":17113,"parentNodes":[7438,7439],"constraint":{"type":"join-reference","out_nodes":[],"__id":17114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7432,-1]],"__id":17115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7436,2852]],"__id":17120,"parentNodes":[16]},{"type":"beta","out_nodes":[[7440,-1]],"__id":17121,"parentNodes":[7441,7442]},{"type":"leftadapter","out_nodes":[[7436,-1]],"__id":17122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7439,2853]],"__id":17127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7439,2854]],"__id":17131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17132,"parentNodes":[7444],"index":856,"rule":{"name":"Bootstrap214","pattern":{"type":"object","id":3143,"cls":"Fibonacci214","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap214"},{"type":"beta","out_nodes":[[7443,-1]],"__id":17133,"parentNodes":[7445,7446]},{"type":"rightadapter","out_nodes":[[7444,2855]],"__id":17138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7444,2856]],"__id":17142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17143,"parentNodes":[7448],"index":857,"rule":{"name":"Recurse214","pattern":{"type":"composite","id":3146,"leftPattern":{"type":"not","id":3144,"cls":"Fibonacci214","alias":"f"},"rightPattern":{"type":"object","id":3145,"cls":"Fibonacci214","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci214 = defined.get('Fibonacci214');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci214(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse214"},{"type":"beta","out_nodes":[[7447,-1]],"__id":17144,"parentNodes":[7449,7450]},{"type":"rightadapter","out_nodes":[[7448,2857]],"__id":17148,"parentNodes":[37]},{"type":"not","out_nodes":[[7451,-1]],"__id":17149,"parentNodes":[7452,7453],"constraint":{"type":"join-reference","out_nodes":[],"__id":17150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7448,-1]],"__id":17151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7450,2858]],"__id":17155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7450,2859]],"__id":17159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17160,"parentNodes":[7455],"index":858,"rule":{"name":"Calculate213","pattern":{"type":"composite","id":3153,"leftPattern":{"type":"composite","id":3152,"leftPattern":{"type":"composite","id":3151,"leftPattern":{"type":"object","id":3147,"cls":"Fibonacci213","alias":"f1"},"rightPattern":{"type":"object","id":3148,"cls":"Fibonacci213","alias":"f2"}},"rightPattern":{"type":"object","id":3149,"cls":"Fibonacci213","alias":"f3"}},"rightPattern":{"type":"object","id":3150,"cls":"Result213","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate213"},{"type":"beta","out_nodes":[[7454,-1]],"__id":17161,"parentNodes":[7457,7458]},{"type":"type","out_nodes":[[3,2860]],"__id":17162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result213"}},{"type":"rightadapter","out_nodes":[[7455,2860]],"__id":17165,"parentNodes":[4]},{"type":"join","out_nodes":[[7459,-1]],"__id":17166,"parentNodes":[7461,7462],"constraint":{"type":"join-reference","out_nodes":[],"__id":17167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7455,-1]],"__id":17168,"parentNodes":[]},{"type":"type","out_nodes":[[9,2861],[14,2862],[20,2863],[30,2865],[20,2867],[30,2868]],"__id":17169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci213"}},{"type":"rightadapter","out_nodes":[[7458,2861]],"__id":17172,"parentNodes":[10]},{"type":"join","out_nodes":[[7463,-1]],"__id":17173,"parentNodes":[7464,7465],"constraint":{"type":"join-reference","out_nodes":[],"__id":17174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7458,-1]],"__id":17175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7462,2862]],"__id":17180,"parentNodes":[16]},{"type":"beta","out_nodes":[[7466,-1]],"__id":17181,"parentNodes":[7467,7468]},{"type":"leftadapter","out_nodes":[[7462,-1]],"__id":17182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7465,2863]],"__id":17187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7465,2864]],"__id":17191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17192,"parentNodes":[7470],"index":859,"rule":{"name":"Bootstrap213","pattern":{"type":"object","id":3154,"cls":"Fibonacci213","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap213"},{"type":"beta","out_nodes":[[7469,-1]],"__id":17193,"parentNodes":[7471,7472]},{"type":"rightadapter","out_nodes":[[7470,2865]],"__id":17198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7470,2866]],"__id":17202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17203,"parentNodes":[7474],"index":860,"rule":{"name":"Recurse213","pattern":{"type":"composite","id":3157,"leftPattern":{"type":"not","id":3155,"cls":"Fibonacci213","alias":"f"},"rightPattern":{"type":"object","id":3156,"cls":"Fibonacci213","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci213 = defined.get('Fibonacci213');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci213(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse213"},{"type":"beta","out_nodes":[[7473,-1]],"__id":17204,"parentNodes":[7475,7476]},{"type":"rightadapter","out_nodes":[[7474,2867]],"__id":17208,"parentNodes":[37]},{"type":"not","out_nodes":[[7477,-1]],"__id":17209,"parentNodes":[7478,7479],"constraint":{"type":"join-reference","out_nodes":[],"__id":17210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7474,-1]],"__id":17211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7476,2868]],"__id":17215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7476,2869]],"__id":17219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17220,"parentNodes":[7481],"index":861,"rule":{"name":"Calculate212","pattern":{"type":"composite","id":3164,"leftPattern":{"type":"composite","id":3163,"leftPattern":{"type":"composite","id":3162,"leftPattern":{"type":"object","id":3158,"cls":"Fibonacci212","alias":"f1"},"rightPattern":{"type":"object","id":3159,"cls":"Fibonacci212","alias":"f2"}},"rightPattern":{"type":"object","id":3160,"cls":"Fibonacci212","alias":"f3"}},"rightPattern":{"type":"object","id":3161,"cls":"Result212","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate212"},{"type":"beta","out_nodes":[[7480,-1]],"__id":17221,"parentNodes":[7483,7484]},{"type":"type","out_nodes":[[3,2870]],"__id":17222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result212"}},{"type":"rightadapter","out_nodes":[[7481,2870]],"__id":17225,"parentNodes":[4]},{"type":"join","out_nodes":[[7485,-1]],"__id":17226,"parentNodes":[7487,7488],"constraint":{"type":"join-reference","out_nodes":[],"__id":17227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7481,-1]],"__id":17228,"parentNodes":[]},{"type":"type","out_nodes":[[9,2871],[14,2872],[20,2873],[30,2875],[20,2877],[30,2878]],"__id":17229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci212"}},{"type":"rightadapter","out_nodes":[[7484,2871]],"__id":17232,"parentNodes":[10]},{"type":"join","out_nodes":[[7489,-1]],"__id":17233,"parentNodes":[7490,7491],"constraint":{"type":"join-reference","out_nodes":[],"__id":17234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7484,-1]],"__id":17235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7488,2872]],"__id":17240,"parentNodes":[16]},{"type":"beta","out_nodes":[[7492,-1]],"__id":17241,"parentNodes":[7493,7494]},{"type":"leftadapter","out_nodes":[[7488,-1]],"__id":17242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7491,2873]],"__id":17247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7491,2874]],"__id":17251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17252,"parentNodes":[7496],"index":862,"rule":{"name":"Bootstrap212","pattern":{"type":"object","id":3165,"cls":"Fibonacci212","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap212"},{"type":"beta","out_nodes":[[7495,-1]],"__id":17253,"parentNodes":[7497,7498]},{"type":"rightadapter","out_nodes":[[7496,2875]],"__id":17258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7496,2876]],"__id":17262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17263,"parentNodes":[7500],"index":863,"rule":{"name":"Recurse212","pattern":{"type":"composite","id":3168,"leftPattern":{"type":"not","id":3166,"cls":"Fibonacci212","alias":"f"},"rightPattern":{"type":"object","id":3167,"cls":"Fibonacci212","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci212 = defined.get('Fibonacci212');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci212(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse212"},{"type":"beta","out_nodes":[[7499,-1]],"__id":17264,"parentNodes":[7501,7502]},{"type":"rightadapter","out_nodes":[[7500,2877]],"__id":17268,"parentNodes":[37]},{"type":"not","out_nodes":[[7503,-1]],"__id":17269,"parentNodes":[7504,7505],"constraint":{"type":"join-reference","out_nodes":[],"__id":17270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7500,-1]],"__id":17271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7502,2878]],"__id":17275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7502,2879]],"__id":17279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17280,"parentNodes":[7507],"index":864,"rule":{"name":"Calculate211","pattern":{"type":"composite","id":3175,"leftPattern":{"type":"composite","id":3174,"leftPattern":{"type":"composite","id":3173,"leftPattern":{"type":"object","id":3169,"cls":"Fibonacci211","alias":"f1"},"rightPattern":{"type":"object","id":3170,"cls":"Fibonacci211","alias":"f2"}},"rightPattern":{"type":"object","id":3171,"cls":"Fibonacci211","alias":"f3"}},"rightPattern":{"type":"object","id":3172,"cls":"Result211","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate211"},{"type":"beta","out_nodes":[[7506,-1]],"__id":17281,"parentNodes":[7509,7510]},{"type":"type","out_nodes":[[3,2880]],"__id":17282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result211"}},{"type":"rightadapter","out_nodes":[[7507,2880]],"__id":17285,"parentNodes":[4]},{"type":"join","out_nodes":[[7511,-1]],"__id":17286,"parentNodes":[7513,7514],"constraint":{"type":"join-reference","out_nodes":[],"__id":17287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7507,-1]],"__id":17288,"parentNodes":[]},{"type":"type","out_nodes":[[9,2881],[14,2882],[20,2883],[30,2885],[20,2887],[30,2888]],"__id":17289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci211"}},{"type":"rightadapter","out_nodes":[[7510,2881]],"__id":17292,"parentNodes":[10]},{"type":"join","out_nodes":[[7515,-1]],"__id":17293,"parentNodes":[7516,7517],"constraint":{"type":"join-reference","out_nodes":[],"__id":17294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7510,-1]],"__id":17295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7514,2882]],"__id":17300,"parentNodes":[16]},{"type":"beta","out_nodes":[[7518,-1]],"__id":17301,"parentNodes":[7519,7520]},{"type":"leftadapter","out_nodes":[[7514,-1]],"__id":17302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7517,2883]],"__id":17307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7517,2884]],"__id":17311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17312,"parentNodes":[7522],"index":865,"rule":{"name":"Bootstrap211","pattern":{"type":"object","id":3176,"cls":"Fibonacci211","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap211"},{"type":"beta","out_nodes":[[7521,-1]],"__id":17313,"parentNodes":[7523,7524]},{"type":"rightadapter","out_nodes":[[7522,2885]],"__id":17318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7522,2886]],"__id":17322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17323,"parentNodes":[7526],"index":866,"rule":{"name":"Recurse211","pattern":{"type":"composite","id":3179,"leftPattern":{"type":"not","id":3177,"cls":"Fibonacci211","alias":"f"},"rightPattern":{"type":"object","id":3178,"cls":"Fibonacci211","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci211 = defined.get('Fibonacci211');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci211(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse211"},{"type":"beta","out_nodes":[[7525,-1]],"__id":17324,"parentNodes":[7527,7528]},{"type":"rightadapter","out_nodes":[[7526,2887]],"__id":17328,"parentNodes":[37]},{"type":"not","out_nodes":[[7529,-1]],"__id":17329,"parentNodes":[7530,7531],"constraint":{"type":"join-reference","out_nodes":[],"__id":17330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7526,-1]],"__id":17331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7528,2888]],"__id":17335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7528,2889]],"__id":17339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17340,"parentNodes":[7533],"index":867,"rule":{"name":"Calculate210","pattern":{"type":"composite","id":3186,"leftPattern":{"type":"composite","id":3185,"leftPattern":{"type":"composite","id":3184,"leftPattern":{"type":"object","id":3180,"cls":"Fibonacci210","alias":"f1"},"rightPattern":{"type":"object","id":3181,"cls":"Fibonacci210","alias":"f2"}},"rightPattern":{"type":"object","id":3182,"cls":"Fibonacci210","alias":"f3"}},"rightPattern":{"type":"object","id":3183,"cls":"Result210","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate210"},{"type":"beta","out_nodes":[[7532,-1]],"__id":17341,"parentNodes":[7535,7536]},{"type":"type","out_nodes":[[3,2890]],"__id":17342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result210"}},{"type":"rightadapter","out_nodes":[[7533,2890]],"__id":17345,"parentNodes":[4]},{"type":"join","out_nodes":[[7537,-1]],"__id":17346,"parentNodes":[7539,7540],"constraint":{"type":"join-reference","out_nodes":[],"__id":17347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7533,-1]],"__id":17348,"parentNodes":[]},{"type":"type","out_nodes":[[9,2891],[14,2892],[20,2893],[30,2895],[20,2897],[30,2898]],"__id":17349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci210"}},{"type":"rightadapter","out_nodes":[[7536,2891]],"__id":17352,"parentNodes":[10]},{"type":"join","out_nodes":[[7541,-1]],"__id":17353,"parentNodes":[7542,7543],"constraint":{"type":"join-reference","out_nodes":[],"__id":17354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7536,-1]],"__id":17355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7540,2892]],"__id":17360,"parentNodes":[16]},{"type":"beta","out_nodes":[[7544,-1]],"__id":17361,"parentNodes":[7545,7546]},{"type":"leftadapter","out_nodes":[[7540,-1]],"__id":17362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7543,2893]],"__id":17367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7543,2894]],"__id":17371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17372,"parentNodes":[7548],"index":868,"rule":{"name":"Bootstrap210","pattern":{"type":"object","id":3187,"cls":"Fibonacci210","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap210"},{"type":"beta","out_nodes":[[7547,-1]],"__id":17373,"parentNodes":[7549,7550]},{"type":"rightadapter","out_nodes":[[7548,2895]],"__id":17378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7548,2896]],"__id":17382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17383,"parentNodes":[7552],"index":869,"rule":{"name":"Recurse210","pattern":{"type":"composite","id":3190,"leftPattern":{"type":"not","id":3188,"cls":"Fibonacci210","alias":"f"},"rightPattern":{"type":"object","id":3189,"cls":"Fibonacci210","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');let Fibonacci210 = defined.get('Fibonacci210');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci210(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse210"},{"type":"beta","out_nodes":[[7551,-1]],"__id":17384,"parentNodes":[7553,7554]},{"type":"rightadapter","out_nodes":[[7552,2897]],"__id":17388,"parentNodes":[37]},{"type":"not","out_nodes":[[7555,-1]],"__id":17389,"parentNodes":[7556,7557],"constraint":{"type":"join-reference","out_nodes":[],"__id":17390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7552,-1]],"__id":17391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7554,2898]],"__id":17395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7554,2899]],"__id":17399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17400,"parentNodes":[7559],"index":870,"rule":{"name":"Calculate209","pattern":{"type":"composite","id":3197,"leftPattern":{"type":"composite","id":3196,"leftPattern":{"type":"composite","id":3195,"leftPattern":{"type":"object","id":3191,"cls":"Fibonacci209","alias":"f1"},"rightPattern":{"type":"object","id":3192,"cls":"Fibonacci209","alias":"f2"}},"rightPattern":{"type":"object","id":3193,"cls":"Fibonacci209","alias":"f3"}},"rightPattern":{"type":"object","id":3194,"cls":"Result209","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate209"},{"type":"beta","out_nodes":[[7558,-1]],"__id":17401,"parentNodes":[7561,7562]},{"type":"type","out_nodes":[[3,2900]],"__id":17402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result209"}},{"type":"rightadapter","out_nodes":[[7559,2900]],"__id":17405,"parentNodes":[4]},{"type":"join","out_nodes":[[7563,-1]],"__id":17406,"parentNodes":[7565,7566],"constraint":{"type":"join-reference","out_nodes":[],"__id":17407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7559,-1]],"__id":17408,"parentNodes":[]},{"type":"type","out_nodes":[[9,2901],[14,2902],[20,2903],[30,2905],[20,2907],[30,2908]],"__id":17409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci209"}},{"type":"rightadapter","out_nodes":[[7562,2901]],"__id":17412,"parentNodes":[10]},{"type":"join","out_nodes":[[7567,-1]],"__id":17413,"parentNodes":[7568,7569],"constraint":{"type":"join-reference","out_nodes":[],"__id":17414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7562,-1]],"__id":17415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7566,2902]],"__id":17420,"parentNodes":[16]},{"type":"beta","out_nodes":[[7570,-1]],"__id":17421,"parentNodes":[7571,7572]},{"type":"leftadapter","out_nodes":[[7566,-1]],"__id":17422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7569,2903]],"__id":17427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7569,2904]],"__id":17431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17432,"parentNodes":[7574],"index":871,"rule":{"name":"Bootstrap209","pattern":{"type":"object","id":3198,"cls":"Fibonacci209","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap209"},{"type":"beta","out_nodes":[[7573,-1]],"__id":17433,"parentNodes":[7575,7576]},{"type":"rightadapter","out_nodes":[[7574,2905]],"__id":17438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7574,2906]],"__id":17442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17443,"parentNodes":[7578],"index":872,"rule":{"name":"Recurse209","pattern":{"type":"composite","id":3201,"leftPattern":{"type":"not","id":3199,"cls":"Fibonacci209","alias":"f"},"rightPattern":{"type":"object","id":3200,"cls":"Fibonacci209","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci209 = defined.get('Fibonacci209');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci209(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse209"},{"type":"beta","out_nodes":[[7577,-1]],"__id":17444,"parentNodes":[7579,7580]},{"type":"rightadapter","out_nodes":[[7578,2907]],"__id":17448,"parentNodes":[37]},{"type":"not","out_nodes":[[7581,-1]],"__id":17449,"parentNodes":[7582,7583],"constraint":{"type":"join-reference","out_nodes":[],"__id":17450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7578,-1]],"__id":17451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7580,2908]],"__id":17455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7580,2909]],"__id":17459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17460,"parentNodes":[7585],"index":873,"rule":{"name":"Calculate208","pattern":{"type":"composite","id":3208,"leftPattern":{"type":"composite","id":3207,"leftPattern":{"type":"composite","id":3206,"leftPattern":{"type":"object","id":3202,"cls":"Fibonacci208","alias":"f1"},"rightPattern":{"type":"object","id":3203,"cls":"Fibonacci208","alias":"f2"}},"rightPattern":{"type":"object","id":3204,"cls":"Fibonacci208","alias":"f3"}},"rightPattern":{"type":"object","id":3205,"cls":"Result208","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate208"},{"type":"beta","out_nodes":[[7584,-1]],"__id":17461,"parentNodes":[7587,7588]},{"type":"type","out_nodes":[[3,2910]],"__id":17462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result208"}},{"type":"rightadapter","out_nodes":[[7585,2910]],"__id":17465,"parentNodes":[4]},{"type":"join","out_nodes":[[7589,-1]],"__id":17466,"parentNodes":[7591,7592],"constraint":{"type":"join-reference","out_nodes":[],"__id":17467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7585,-1]],"__id":17468,"parentNodes":[]},{"type":"type","out_nodes":[[9,2911],[14,2912],[20,2913],[30,2915],[20,2917],[30,2918]],"__id":17469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci208"}},{"type":"rightadapter","out_nodes":[[7588,2911]],"__id":17472,"parentNodes":[10]},{"type":"join","out_nodes":[[7593,-1]],"__id":17473,"parentNodes":[7594,7595],"constraint":{"type":"join-reference","out_nodes":[],"__id":17474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7588,-1]],"__id":17475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7592,2912]],"__id":17480,"parentNodes":[16]},{"type":"beta","out_nodes":[[7596,-1]],"__id":17481,"parentNodes":[7597,7598]},{"type":"leftadapter","out_nodes":[[7592,-1]],"__id":17482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7595,2913]],"__id":17487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7595,2914]],"__id":17491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17492,"parentNodes":[7600],"index":874,"rule":{"name":"Bootstrap208","pattern":{"type":"object","id":3209,"cls":"Fibonacci208","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap208"},{"type":"beta","out_nodes":[[7599,-1]],"__id":17493,"parentNodes":[7601,7602]},{"type":"rightadapter","out_nodes":[[7600,2915]],"__id":17498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7600,2916]],"__id":17502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17503,"parentNodes":[7604],"index":875,"rule":{"name":"Recurse208","pattern":{"type":"composite","id":3212,"leftPattern":{"type":"not","id":3210,"cls":"Fibonacci208","alias":"f"},"rightPattern":{"type":"object","id":3211,"cls":"Fibonacci208","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci208 = defined.get('Fibonacci208');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci208(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse208"},{"type":"beta","out_nodes":[[7603,-1]],"__id":17504,"parentNodes":[7605,7606]},{"type":"rightadapter","out_nodes":[[7604,2917]],"__id":17508,"parentNodes":[37]},{"type":"not","out_nodes":[[7607,-1]],"__id":17509,"parentNodes":[7608,7609],"constraint":{"type":"join-reference","out_nodes":[],"__id":17510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7604,-1]],"__id":17511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7606,2918]],"__id":17515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7606,2919]],"__id":17519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17520,"parentNodes":[7611],"index":876,"rule":{"name":"Calculate207","pattern":{"type":"composite","id":3219,"leftPattern":{"type":"composite","id":3218,"leftPattern":{"type":"composite","id":3217,"leftPattern":{"type":"object","id":3213,"cls":"Fibonacci207","alias":"f1"},"rightPattern":{"type":"object","id":3214,"cls":"Fibonacci207","alias":"f2"}},"rightPattern":{"type":"object","id":3215,"cls":"Fibonacci207","alias":"f3"}},"rightPattern":{"type":"object","id":3216,"cls":"Result207","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate207"},{"type":"beta","out_nodes":[[7610,-1]],"__id":17521,"parentNodes":[7613,7614]},{"type":"type","out_nodes":[[3,2920]],"__id":17522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result207"}},{"type":"rightadapter","out_nodes":[[7611,2920]],"__id":17525,"parentNodes":[4]},{"type":"join","out_nodes":[[7615,-1]],"__id":17526,"parentNodes":[7617,7618],"constraint":{"type":"join-reference","out_nodes":[],"__id":17527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7611,-1]],"__id":17528,"parentNodes":[]},{"type":"type","out_nodes":[[9,2921],[14,2922],[20,2923],[30,2925],[20,2927],[30,2928]],"__id":17529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci207"}},{"type":"rightadapter","out_nodes":[[7614,2921]],"__id":17532,"parentNodes":[10]},{"type":"join","out_nodes":[[7619,-1]],"__id":17533,"parentNodes":[7620,7621],"constraint":{"type":"join-reference","out_nodes":[],"__id":17534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7614,-1]],"__id":17535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7618,2922]],"__id":17540,"parentNodes":[16]},{"type":"beta","out_nodes":[[7622,-1]],"__id":17541,"parentNodes":[7623,7624]},{"type":"leftadapter","out_nodes":[[7618,-1]],"__id":17542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7621,2923]],"__id":17547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7621,2924]],"__id":17551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17552,"parentNodes":[7626],"index":877,"rule":{"name":"Bootstrap207","pattern":{"type":"object","id":3220,"cls":"Fibonacci207","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap207"},{"type":"beta","out_nodes":[[7625,-1]],"__id":17553,"parentNodes":[7627,7628]},{"type":"rightadapter","out_nodes":[[7626,2925]],"__id":17558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7626,2926]],"__id":17562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17563,"parentNodes":[7630],"index":878,"rule":{"name":"Recurse207","pattern":{"type":"composite","id":3223,"leftPattern":{"type":"not","id":3221,"cls":"Fibonacci207","alias":"f"},"rightPattern":{"type":"object","id":3222,"cls":"Fibonacci207","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci207 = defined.get('Fibonacci207');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci207(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse207"},{"type":"beta","out_nodes":[[7629,-1]],"__id":17564,"parentNodes":[7631,7632]},{"type":"rightadapter","out_nodes":[[7630,2927]],"__id":17568,"parentNodes":[37]},{"type":"not","out_nodes":[[7633,-1]],"__id":17569,"parentNodes":[7634,7635],"constraint":{"type":"join-reference","out_nodes":[],"__id":17570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7630,-1]],"__id":17571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7632,2928]],"__id":17575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7632,2929]],"__id":17579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17580,"parentNodes":[7637],"index":879,"rule":{"name":"Calculate206","pattern":{"type":"composite","id":3230,"leftPattern":{"type":"composite","id":3229,"leftPattern":{"type":"composite","id":3228,"leftPattern":{"type":"object","id":3224,"cls":"Fibonacci206","alias":"f1"},"rightPattern":{"type":"object","id":3225,"cls":"Fibonacci206","alias":"f2"}},"rightPattern":{"type":"object","id":3226,"cls":"Fibonacci206","alias":"f3"}},"rightPattern":{"type":"object","id":3227,"cls":"Result206","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate206"},{"type":"beta","out_nodes":[[7636,-1]],"__id":17581,"parentNodes":[7639,7640]},{"type":"type","out_nodes":[[3,2930]],"__id":17582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result206"}},{"type":"rightadapter","out_nodes":[[7637,2930]],"__id":17585,"parentNodes":[4]},{"type":"join","out_nodes":[[7641,-1]],"__id":17586,"parentNodes":[7643,7644],"constraint":{"type":"join-reference","out_nodes":[],"__id":17587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7637,-1]],"__id":17588,"parentNodes":[]},{"type":"type","out_nodes":[[9,2931],[14,2932],[20,2933],[30,2935],[20,2937],[30,2938]],"__id":17589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci206"}},{"type":"rightadapter","out_nodes":[[7640,2931]],"__id":17592,"parentNodes":[10]},{"type":"join","out_nodes":[[7645,-1]],"__id":17593,"parentNodes":[7646,7647],"constraint":{"type":"join-reference","out_nodes":[],"__id":17594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7640,-1]],"__id":17595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7644,2932]],"__id":17600,"parentNodes":[16]},{"type":"beta","out_nodes":[[7648,-1]],"__id":17601,"parentNodes":[7649,7650]},{"type":"leftadapter","out_nodes":[[7644,-1]],"__id":17602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7647,2933]],"__id":17607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7647,2934]],"__id":17611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17612,"parentNodes":[7652],"index":880,"rule":{"name":"Bootstrap206","pattern":{"type":"object","id":3231,"cls":"Fibonacci206","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap206"},{"type":"beta","out_nodes":[[7651,-1]],"__id":17613,"parentNodes":[7653,7654]},{"type":"rightadapter","out_nodes":[[7652,2935]],"__id":17618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7652,2936]],"__id":17622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17623,"parentNodes":[7656],"index":881,"rule":{"name":"Recurse206","pattern":{"type":"composite","id":3234,"leftPattern":{"type":"not","id":3232,"cls":"Fibonacci206","alias":"f"},"rightPattern":{"type":"object","id":3233,"cls":"Fibonacci206","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci206 = defined.get('Fibonacci206');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci206(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse206"},{"type":"beta","out_nodes":[[7655,-1]],"__id":17624,"parentNodes":[7657,7658]},{"type":"rightadapter","out_nodes":[[7656,2937]],"__id":17628,"parentNodes":[37]},{"type":"not","out_nodes":[[7659,-1]],"__id":17629,"parentNodes":[7660,7661],"constraint":{"type":"join-reference","out_nodes":[],"__id":17630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7656,-1]],"__id":17631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7658,2938]],"__id":17635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7658,2939]],"__id":17639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17640,"parentNodes":[7663],"index":882,"rule":{"name":"Calculate205","pattern":{"type":"composite","id":3241,"leftPattern":{"type":"composite","id":3240,"leftPattern":{"type":"composite","id":3239,"leftPattern":{"type":"object","id":3235,"cls":"Fibonacci205","alias":"f1"},"rightPattern":{"type":"object","id":3236,"cls":"Fibonacci205","alias":"f2"}},"rightPattern":{"type":"object","id":3237,"cls":"Fibonacci205","alias":"f3"}},"rightPattern":{"type":"object","id":3238,"cls":"Result205","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate205"},{"type":"beta","out_nodes":[[7662,-1]],"__id":17641,"parentNodes":[7665,7666]},{"type":"type","out_nodes":[[3,2940]],"__id":17642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result205"}},{"type":"rightadapter","out_nodes":[[7663,2940]],"__id":17645,"parentNodes":[4]},{"type":"join","out_nodes":[[7667,-1]],"__id":17646,"parentNodes":[7669,7670],"constraint":{"type":"join-reference","out_nodes":[],"__id":17647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7663,-1]],"__id":17648,"parentNodes":[]},{"type":"type","out_nodes":[[9,2941],[14,2942],[20,2943],[30,2945],[20,2947],[30,2948]],"__id":17649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci205"}},{"type":"rightadapter","out_nodes":[[7666,2941]],"__id":17652,"parentNodes":[10]},{"type":"join","out_nodes":[[7671,-1]],"__id":17653,"parentNodes":[7672,7673],"constraint":{"type":"join-reference","out_nodes":[],"__id":17654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7666,-1]],"__id":17655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7670,2942]],"__id":17660,"parentNodes":[16]},{"type":"beta","out_nodes":[[7674,-1]],"__id":17661,"parentNodes":[7675,7676]},{"type":"leftadapter","out_nodes":[[7670,-1]],"__id":17662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7673,2943]],"__id":17667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7673,2944]],"__id":17671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17672,"parentNodes":[7678],"index":883,"rule":{"name":"Bootstrap205","pattern":{"type":"object","id":3242,"cls":"Fibonacci205","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap205"},{"type":"beta","out_nodes":[[7677,-1]],"__id":17673,"parentNodes":[7679,7680]},{"type":"rightadapter","out_nodes":[[7678,2945]],"__id":17678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7678,2946]],"__id":17682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17683,"parentNodes":[7682],"index":884,"rule":{"name":"Recurse205","pattern":{"type":"composite","id":3245,"leftPattern":{"type":"not","id":3243,"cls":"Fibonacci205","alias":"f"},"rightPattern":{"type":"object","id":3244,"cls":"Fibonacci205","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci205 = defined.get('Fibonacci205');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci205(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse205"},{"type":"beta","out_nodes":[[7681,-1]],"__id":17684,"parentNodes":[7683,7684]},{"type":"rightadapter","out_nodes":[[7682,2947]],"__id":17688,"parentNodes":[37]},{"type":"not","out_nodes":[[7685,-1]],"__id":17689,"parentNodes":[7686,7687],"constraint":{"type":"join-reference","out_nodes":[],"__id":17690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7682,-1]],"__id":17691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7684,2948]],"__id":17695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7684,2949]],"__id":17699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17700,"parentNodes":[7689],"index":885,"rule":{"name":"Calculate204","pattern":{"type":"composite","id":3252,"leftPattern":{"type":"composite","id":3251,"leftPattern":{"type":"composite","id":3250,"leftPattern":{"type":"object","id":3246,"cls":"Fibonacci204","alias":"f1"},"rightPattern":{"type":"object","id":3247,"cls":"Fibonacci204","alias":"f2"}},"rightPattern":{"type":"object","id":3248,"cls":"Fibonacci204","alias":"f3"}},"rightPattern":{"type":"object","id":3249,"cls":"Result204","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate204"},{"type":"beta","out_nodes":[[7688,-1]],"__id":17701,"parentNodes":[7691,7692]},{"type":"type","out_nodes":[[3,2950]],"__id":17702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result204"}},{"type":"rightadapter","out_nodes":[[7689,2950]],"__id":17705,"parentNodes":[4]},{"type":"join","out_nodes":[[7693,-1]],"__id":17706,"parentNodes":[7695,7696],"constraint":{"type":"join-reference","out_nodes":[],"__id":17707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7689,-1]],"__id":17708,"parentNodes":[]},{"type":"type","out_nodes":[[9,2951],[14,2952],[20,2953],[30,2955],[20,2957],[30,2958]],"__id":17709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci204"}},{"type":"rightadapter","out_nodes":[[7692,2951]],"__id":17712,"parentNodes":[10]},{"type":"join","out_nodes":[[7697,-1]],"__id":17713,"parentNodes":[7698,7699],"constraint":{"type":"join-reference","out_nodes":[],"__id":17714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7692,-1]],"__id":17715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7696,2952]],"__id":17720,"parentNodes":[16]},{"type":"beta","out_nodes":[[7700,-1]],"__id":17721,"parentNodes":[7701,7702]},{"type":"leftadapter","out_nodes":[[7696,-1]],"__id":17722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7699,2953]],"__id":17727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7699,2954]],"__id":17731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17732,"parentNodes":[7704],"index":886,"rule":{"name":"Bootstrap204","pattern":{"type":"object","id":3253,"cls":"Fibonacci204","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap204"},{"type":"beta","out_nodes":[[7703,-1]],"__id":17733,"parentNodes":[7705,7706]},{"type":"rightadapter","out_nodes":[[7704,2955]],"__id":17738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7704,2956]],"__id":17742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17743,"parentNodes":[7708],"index":887,"rule":{"name":"Recurse204","pattern":{"type":"composite","id":3256,"leftPattern":{"type":"not","id":3254,"cls":"Fibonacci204","alias":"f"},"rightPattern":{"type":"object","id":3255,"cls":"Fibonacci204","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci204 = defined.get('Fibonacci204');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci204(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse204"},{"type":"beta","out_nodes":[[7707,-1]],"__id":17744,"parentNodes":[7709,7710]},{"type":"rightadapter","out_nodes":[[7708,2957]],"__id":17748,"parentNodes":[37]},{"type":"not","out_nodes":[[7711,-1]],"__id":17749,"parentNodes":[7712,7713],"constraint":{"type":"join-reference","out_nodes":[],"__id":17750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7708,-1]],"__id":17751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7710,2958]],"__id":17755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7710,2959]],"__id":17759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17760,"parentNodes":[7715],"index":888,"rule":{"name":"Calculate203","pattern":{"type":"composite","id":3263,"leftPattern":{"type":"composite","id":3262,"leftPattern":{"type":"composite","id":3261,"leftPattern":{"type":"object","id":3257,"cls":"Fibonacci203","alias":"f1"},"rightPattern":{"type":"object","id":3258,"cls":"Fibonacci203","alias":"f2"}},"rightPattern":{"type":"object","id":3259,"cls":"Fibonacci203","alias":"f3"}},"rightPattern":{"type":"object","id":3260,"cls":"Result203","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate203"},{"type":"beta","out_nodes":[[7714,-1]],"__id":17761,"parentNodes":[7717,7718]},{"type":"type","out_nodes":[[3,2960]],"__id":17762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result203"}},{"type":"rightadapter","out_nodes":[[7715,2960]],"__id":17765,"parentNodes":[4]},{"type":"join","out_nodes":[[7719,-1]],"__id":17766,"parentNodes":[7721,7722],"constraint":{"type":"join-reference","out_nodes":[],"__id":17767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7715,-1]],"__id":17768,"parentNodes":[]},{"type":"type","out_nodes":[[9,2961],[14,2962],[20,2963],[30,2965],[20,2967],[30,2968]],"__id":17769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci203"}},{"type":"rightadapter","out_nodes":[[7718,2961]],"__id":17772,"parentNodes":[10]},{"type":"join","out_nodes":[[7723,-1]],"__id":17773,"parentNodes":[7724,7725],"constraint":{"type":"join-reference","out_nodes":[],"__id":17774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7718,-1]],"__id":17775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7722,2962]],"__id":17780,"parentNodes":[16]},{"type":"beta","out_nodes":[[7726,-1]],"__id":17781,"parentNodes":[7727,7728]},{"type":"leftadapter","out_nodes":[[7722,-1]],"__id":17782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7725,2963]],"__id":17787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7725,2964]],"__id":17791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17792,"parentNodes":[7730],"index":889,"rule":{"name":"Bootstrap203","pattern":{"type":"object","id":3264,"cls":"Fibonacci203","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap203"},{"type":"beta","out_nodes":[[7729,-1]],"__id":17793,"parentNodes":[7731,7732]},{"type":"rightadapter","out_nodes":[[7730,2965]],"__id":17798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7730,2966]],"__id":17802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17803,"parentNodes":[7734],"index":890,"rule":{"name":"Recurse203","pattern":{"type":"composite","id":3267,"leftPattern":{"type":"not","id":3265,"cls":"Fibonacci203","alias":"f"},"rightPattern":{"type":"object","id":3266,"cls":"Fibonacci203","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci203 = defined.get('Fibonacci203');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci203(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse203"},{"type":"beta","out_nodes":[[7733,-1]],"__id":17804,"parentNodes":[7735,7736]},{"type":"rightadapter","out_nodes":[[7734,2967]],"__id":17808,"parentNodes":[37]},{"type":"not","out_nodes":[[7737,-1]],"__id":17809,"parentNodes":[7738,7739],"constraint":{"type":"join-reference","out_nodes":[],"__id":17810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7734,-1]],"__id":17811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7736,2968]],"__id":17815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7736,2969]],"__id":17819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17820,"parentNodes":[7741],"index":891,"rule":{"name":"Calculate202","pattern":{"type":"composite","id":3274,"leftPattern":{"type":"composite","id":3273,"leftPattern":{"type":"composite","id":3272,"leftPattern":{"type":"object","id":3268,"cls":"Fibonacci202","alias":"f1"},"rightPattern":{"type":"object","id":3269,"cls":"Fibonacci202","alias":"f2"}},"rightPattern":{"type":"object","id":3270,"cls":"Fibonacci202","alias":"f3"}},"rightPattern":{"type":"object","id":3271,"cls":"Result202","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate202"},{"type":"beta","out_nodes":[[7740,-1]],"__id":17821,"parentNodes":[7743,7744]},{"type":"type","out_nodes":[[3,2970]],"__id":17822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result202"}},{"type":"rightadapter","out_nodes":[[7741,2970]],"__id":17825,"parentNodes":[4]},{"type":"join","out_nodes":[[7745,-1]],"__id":17826,"parentNodes":[7747,7748],"constraint":{"type":"join-reference","out_nodes":[],"__id":17827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7741,-1]],"__id":17828,"parentNodes":[]},{"type":"type","out_nodes":[[9,2971],[14,2972],[20,2973],[30,2975],[20,2977],[30,2978]],"__id":17829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci202"}},{"type":"rightadapter","out_nodes":[[7744,2971]],"__id":17832,"parentNodes":[10]},{"type":"join","out_nodes":[[7749,-1]],"__id":17833,"parentNodes":[7750,7751],"constraint":{"type":"join-reference","out_nodes":[],"__id":17834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7744,-1]],"__id":17835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7748,2972]],"__id":17840,"parentNodes":[16]},{"type":"beta","out_nodes":[[7752,-1]],"__id":17841,"parentNodes":[7753,7754]},{"type":"leftadapter","out_nodes":[[7748,-1]],"__id":17842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7751,2973]],"__id":17847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7751,2974]],"__id":17851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17852,"parentNodes":[7756],"index":892,"rule":{"name":"Bootstrap202","pattern":{"type":"object","id":3275,"cls":"Fibonacci202","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap202"},{"type":"beta","out_nodes":[[7755,-1]],"__id":17853,"parentNodes":[7757,7758]},{"type":"rightadapter","out_nodes":[[7756,2975]],"__id":17858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7756,2976]],"__id":17862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17863,"parentNodes":[7760],"index":893,"rule":{"name":"Recurse202","pattern":{"type":"composite","id":3278,"leftPattern":{"type":"not","id":3276,"cls":"Fibonacci202","alias":"f"},"rightPattern":{"type":"object","id":3277,"cls":"Fibonacci202","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci202 = defined.get('Fibonacci202');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci202(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse202"},{"type":"beta","out_nodes":[[7759,-1]],"__id":17864,"parentNodes":[7761,7762]},{"type":"rightadapter","out_nodes":[[7760,2977]],"__id":17868,"parentNodes":[37]},{"type":"not","out_nodes":[[7763,-1]],"__id":17869,"parentNodes":[7764,7765],"constraint":{"type":"join-reference","out_nodes":[],"__id":17870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7760,-1]],"__id":17871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7762,2978]],"__id":17875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7762,2979]],"__id":17879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17880,"parentNodes":[7767],"index":894,"rule":{"name":"Calculate201","pattern":{"type":"composite","id":3285,"leftPattern":{"type":"composite","id":3284,"leftPattern":{"type":"composite","id":3283,"leftPattern":{"type":"object","id":3279,"cls":"Fibonacci201","alias":"f1"},"rightPattern":{"type":"object","id":3280,"cls":"Fibonacci201","alias":"f2"}},"rightPattern":{"type":"object","id":3281,"cls":"Fibonacci201","alias":"f3"}},"rightPattern":{"type":"object","id":3282,"cls":"Result201","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate201"},{"type":"beta","out_nodes":[[7766,-1]],"__id":17881,"parentNodes":[7769,7770]},{"type":"type","out_nodes":[[3,2980]],"__id":17882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result201"}},{"type":"rightadapter","out_nodes":[[7767,2980]],"__id":17885,"parentNodes":[4]},{"type":"join","out_nodes":[[7771,-1]],"__id":17886,"parentNodes":[7773,7774],"constraint":{"type":"join-reference","out_nodes":[],"__id":17887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7767,-1]],"__id":17888,"parentNodes":[]},{"type":"type","out_nodes":[[9,2981],[14,2982],[20,2983],[30,2985],[20,2987],[30,2988]],"__id":17889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci201"}},{"type":"rightadapter","out_nodes":[[7770,2981]],"__id":17892,"parentNodes":[10]},{"type":"join","out_nodes":[[7775,-1]],"__id":17893,"parentNodes":[7776,7777],"constraint":{"type":"join-reference","out_nodes":[],"__id":17894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7770,-1]],"__id":17895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7774,2982]],"__id":17900,"parentNodes":[16]},{"type":"beta","out_nodes":[[7778,-1]],"__id":17901,"parentNodes":[7779,7780]},{"type":"leftadapter","out_nodes":[[7774,-1]],"__id":17902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7777,2983]],"__id":17907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7777,2984]],"__id":17911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17912,"parentNodes":[7782],"index":895,"rule":{"name":"Bootstrap201","pattern":{"type":"object","id":3286,"cls":"Fibonacci201","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap201"},{"type":"beta","out_nodes":[[7781,-1]],"__id":17913,"parentNodes":[7783,7784]},{"type":"rightadapter","out_nodes":[[7782,2985]],"__id":17918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7782,2986]],"__id":17922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17923,"parentNodes":[7786],"index":896,"rule":{"name":"Recurse201","pattern":{"type":"composite","id":3289,"leftPattern":{"type":"not","id":3287,"cls":"Fibonacci201","alias":"f"},"rightPattern":{"type":"object","id":3288,"cls":"Fibonacci201","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci201 = defined.get('Fibonacci201');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci201(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse201"},{"type":"beta","out_nodes":[[7785,-1]],"__id":17924,"parentNodes":[7787,7788]},{"type":"rightadapter","out_nodes":[[7786,2987]],"__id":17928,"parentNodes":[37]},{"type":"not","out_nodes":[[7789,-1]],"__id":17929,"parentNodes":[7790,7791],"constraint":{"type":"join-reference","out_nodes":[],"__id":17930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7786,-1]],"__id":17931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7788,2988]],"__id":17935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7788,2989]],"__id":17939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17940,"parentNodes":[7793],"index":897,"rule":{"name":"Calculate200","pattern":{"type":"composite","id":3296,"leftPattern":{"type":"composite","id":3295,"leftPattern":{"type":"composite","id":3294,"leftPattern":{"type":"object","id":3290,"cls":"Fibonacci200","alias":"f1"},"rightPattern":{"type":"object","id":3291,"cls":"Fibonacci200","alias":"f2"}},"rightPattern":{"type":"object","id":3292,"cls":"Fibonacci200","alias":"f3"}},"rightPattern":{"type":"object","id":3293,"cls":"Result200","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate200"},{"type":"beta","out_nodes":[[7792,-1]],"__id":17941,"parentNodes":[7795,7796]},{"type":"type","out_nodes":[[3,2990]],"__id":17942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result200"}},{"type":"rightadapter","out_nodes":[[7793,2990]],"__id":17945,"parentNodes":[4]},{"type":"join","out_nodes":[[7797,-1]],"__id":17946,"parentNodes":[7799,7800],"constraint":{"type":"join-reference","out_nodes":[],"__id":17947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7793,-1]],"__id":17948,"parentNodes":[]},{"type":"type","out_nodes":[[9,2991],[14,2992],[20,2993],[30,2995],[20,2997],[30,2998]],"__id":17949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci200"}},{"type":"rightadapter","out_nodes":[[7796,2991]],"__id":17952,"parentNodes":[10]},{"type":"join","out_nodes":[[7801,-1]],"__id":17953,"parentNodes":[7802,7803],"constraint":{"type":"join-reference","out_nodes":[],"__id":17954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7796,-1]],"__id":17955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7800,2992]],"__id":17960,"parentNodes":[16]},{"type":"beta","out_nodes":[[7804,-1]],"__id":17961,"parentNodes":[7805,7806]},{"type":"leftadapter","out_nodes":[[7800,-1]],"__id":17962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7803,2993]],"__id":17967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7803,2994]],"__id":17971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17972,"parentNodes":[7808],"index":898,"rule":{"name":"Bootstrap200","pattern":{"type":"object","id":3297,"cls":"Fibonacci200","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap200"},{"type":"beta","out_nodes":[[7807,-1]],"__id":17973,"parentNodes":[7809,7810]},{"type":"rightadapter","out_nodes":[[7808,2995]],"__id":17978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7808,2996]],"__id":17982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":17983,"parentNodes":[7812],"index":899,"rule":{"name":"Recurse200","pattern":{"type":"composite","id":3300,"leftPattern":{"type":"not","id":3298,"cls":"Fibonacci200","alias":"f"},"rightPattern":{"type":"object","id":3299,"cls":"Fibonacci200","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');let Fibonacci200 = defined.get('Fibonacci200');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci200(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse200"},{"type":"beta","out_nodes":[[7811,-1]],"__id":17984,"parentNodes":[7813,7814]},{"type":"rightadapter","out_nodes":[[7812,2997]],"__id":17988,"parentNodes":[37]},{"type":"not","out_nodes":[[7815,-1]],"__id":17989,"parentNodes":[7816,7817],"constraint":{"type":"join-reference","out_nodes":[],"__id":17990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7812,-1]],"__id":17991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7814,2998]],"__id":17995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7814,2999]],"__id":17999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18000,"parentNodes":[7819],"index":900,"rule":{"name":"Calculate199","pattern":{"type":"composite","id":3307,"leftPattern":{"type":"composite","id":3306,"leftPattern":{"type":"composite","id":3305,"leftPattern":{"type":"object","id":3301,"cls":"Fibonacci199","alias":"f1"},"rightPattern":{"type":"object","id":3302,"cls":"Fibonacci199","alias":"f2"}},"rightPattern":{"type":"object","id":3303,"cls":"Fibonacci199","alias":"f3"}},"rightPattern":{"type":"object","id":3304,"cls":"Result199","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate199"},{"type":"beta","out_nodes":[[7818,-1]],"__id":18001,"parentNodes":[7821,7822]},{"type":"type","out_nodes":[[3,3000]],"__id":18002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result199"}},{"type":"rightadapter","out_nodes":[[7819,3000]],"__id":18005,"parentNodes":[4]},{"type":"join","out_nodes":[[7823,-1]],"__id":18006,"parentNodes":[7825,7826],"constraint":{"type":"join-reference","out_nodes":[],"__id":18007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7819,-1]],"__id":18008,"parentNodes":[]},{"type":"type","out_nodes":[[9,3001],[14,3002],[20,3003],[30,3005],[20,3007],[30,3008]],"__id":18009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci199"}},{"type":"rightadapter","out_nodes":[[7822,3001]],"__id":18012,"parentNodes":[10]},{"type":"join","out_nodes":[[7827,-1]],"__id":18013,"parentNodes":[7828,7829],"constraint":{"type":"join-reference","out_nodes":[],"__id":18014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7822,-1]],"__id":18015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7826,3002]],"__id":18020,"parentNodes":[16]},{"type":"beta","out_nodes":[[7830,-1]],"__id":18021,"parentNodes":[7831,7832]},{"type":"leftadapter","out_nodes":[[7826,-1]],"__id":18022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7829,3003]],"__id":18027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7829,3004]],"__id":18031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18032,"parentNodes":[7834],"index":901,"rule":{"name":"Bootstrap199","pattern":{"type":"object","id":3308,"cls":"Fibonacci199","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap199"},{"type":"beta","out_nodes":[[7833,-1]],"__id":18033,"parentNodes":[7835,7836]},{"type":"rightadapter","out_nodes":[[7834,3005]],"__id":18038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7834,3006]],"__id":18042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18043,"parentNodes":[7838],"index":902,"rule":{"name":"Recurse199","pattern":{"type":"composite","id":3311,"leftPattern":{"type":"not","id":3309,"cls":"Fibonacci199","alias":"f"},"rightPattern":{"type":"object","id":3310,"cls":"Fibonacci199","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci199 = defined.get('Fibonacci199');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci199(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse199"},{"type":"beta","out_nodes":[[7837,-1]],"__id":18044,"parentNodes":[7839,7840]},{"type":"rightadapter","out_nodes":[[7838,3007]],"__id":18048,"parentNodes":[37]},{"type":"not","out_nodes":[[7841,-1]],"__id":18049,"parentNodes":[7842,7843],"constraint":{"type":"join-reference","out_nodes":[],"__id":18050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7838,-1]],"__id":18051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7840,3008]],"__id":18055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7840,3009]],"__id":18059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18060,"parentNodes":[7845],"index":903,"rule":{"name":"Calculate198","pattern":{"type":"composite","id":3318,"leftPattern":{"type":"composite","id":3317,"leftPattern":{"type":"composite","id":3316,"leftPattern":{"type":"object","id":3312,"cls":"Fibonacci198","alias":"f1"},"rightPattern":{"type":"object","id":3313,"cls":"Fibonacci198","alias":"f2"}},"rightPattern":{"type":"object","id":3314,"cls":"Fibonacci198","alias":"f3"}},"rightPattern":{"type":"object","id":3315,"cls":"Result198","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate198"},{"type":"beta","out_nodes":[[7844,-1]],"__id":18061,"parentNodes":[7847,7848]},{"type":"type","out_nodes":[[3,3010]],"__id":18062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result198"}},{"type":"rightadapter","out_nodes":[[7845,3010]],"__id":18065,"parentNodes":[4]},{"type":"join","out_nodes":[[7849,-1]],"__id":18066,"parentNodes":[7851,7852],"constraint":{"type":"join-reference","out_nodes":[],"__id":18067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7845,-1]],"__id":18068,"parentNodes":[]},{"type":"type","out_nodes":[[9,3011],[14,3012],[20,3013],[30,3015],[20,3017],[30,3018]],"__id":18069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci198"}},{"type":"rightadapter","out_nodes":[[7848,3011]],"__id":18072,"parentNodes":[10]},{"type":"join","out_nodes":[[7853,-1]],"__id":18073,"parentNodes":[7854,7855],"constraint":{"type":"join-reference","out_nodes":[],"__id":18074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7848,-1]],"__id":18075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7852,3012]],"__id":18080,"parentNodes":[16]},{"type":"beta","out_nodes":[[7856,-1]],"__id":18081,"parentNodes":[7857,7858]},{"type":"leftadapter","out_nodes":[[7852,-1]],"__id":18082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7855,3013]],"__id":18087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7855,3014]],"__id":18091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18092,"parentNodes":[7860],"index":904,"rule":{"name":"Bootstrap198","pattern":{"type":"object","id":3319,"cls":"Fibonacci198","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap198"},{"type":"beta","out_nodes":[[7859,-1]],"__id":18093,"parentNodes":[7861,7862]},{"type":"rightadapter","out_nodes":[[7860,3015]],"__id":18098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7860,3016]],"__id":18102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18103,"parentNodes":[7864],"index":905,"rule":{"name":"Recurse198","pattern":{"type":"composite","id":3322,"leftPattern":{"type":"not","id":3320,"cls":"Fibonacci198","alias":"f"},"rightPattern":{"type":"object","id":3321,"cls":"Fibonacci198","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci198 = defined.get('Fibonacci198');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci198(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse198"},{"type":"beta","out_nodes":[[7863,-1]],"__id":18104,"parentNodes":[7865,7866]},{"type":"rightadapter","out_nodes":[[7864,3017]],"__id":18108,"parentNodes":[37]},{"type":"not","out_nodes":[[7867,-1]],"__id":18109,"parentNodes":[7868,7869],"constraint":{"type":"join-reference","out_nodes":[],"__id":18110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7864,-1]],"__id":18111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7866,3018]],"__id":18115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7866,3019]],"__id":18119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18120,"parentNodes":[7871],"index":906,"rule":{"name":"Calculate197","pattern":{"type":"composite","id":3329,"leftPattern":{"type":"composite","id":3328,"leftPattern":{"type":"composite","id":3327,"leftPattern":{"type":"object","id":3323,"cls":"Fibonacci197","alias":"f1"},"rightPattern":{"type":"object","id":3324,"cls":"Fibonacci197","alias":"f2"}},"rightPattern":{"type":"object","id":3325,"cls":"Fibonacci197","alias":"f3"}},"rightPattern":{"type":"object","id":3326,"cls":"Result197","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate197"},{"type":"beta","out_nodes":[[7870,-1]],"__id":18121,"parentNodes":[7873,7874]},{"type":"type","out_nodes":[[3,3020]],"__id":18122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result197"}},{"type":"rightadapter","out_nodes":[[7871,3020]],"__id":18125,"parentNodes":[4]},{"type":"join","out_nodes":[[7875,-1]],"__id":18126,"parentNodes":[7877,7878],"constraint":{"type":"join-reference","out_nodes":[],"__id":18127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7871,-1]],"__id":18128,"parentNodes":[]},{"type":"type","out_nodes":[[9,3021],[14,3022],[20,3023],[30,3025],[20,3027],[30,3028]],"__id":18129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci197"}},{"type":"rightadapter","out_nodes":[[7874,3021]],"__id":18132,"parentNodes":[10]},{"type":"join","out_nodes":[[7879,-1]],"__id":18133,"parentNodes":[7880,7881],"constraint":{"type":"join-reference","out_nodes":[],"__id":18134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7874,-1]],"__id":18135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7878,3022]],"__id":18140,"parentNodes":[16]},{"type":"beta","out_nodes":[[7882,-1]],"__id":18141,"parentNodes":[7883,7884]},{"type":"leftadapter","out_nodes":[[7878,-1]],"__id":18142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7881,3023]],"__id":18147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7881,3024]],"__id":18151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18152,"parentNodes":[7886],"index":907,"rule":{"name":"Bootstrap197","pattern":{"type":"object","id":3330,"cls":"Fibonacci197","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap197"},{"type":"beta","out_nodes":[[7885,-1]],"__id":18153,"parentNodes":[7887,7888]},{"type":"rightadapter","out_nodes":[[7886,3025]],"__id":18158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7886,3026]],"__id":18162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18163,"parentNodes":[7890],"index":908,"rule":{"name":"Recurse197","pattern":{"type":"composite","id":3333,"leftPattern":{"type":"not","id":3331,"cls":"Fibonacci197","alias":"f"},"rightPattern":{"type":"object","id":3332,"cls":"Fibonacci197","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci197 = defined.get('Fibonacci197');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci197(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse197"},{"type":"beta","out_nodes":[[7889,-1]],"__id":18164,"parentNodes":[7891,7892]},{"type":"rightadapter","out_nodes":[[7890,3027]],"__id":18168,"parentNodes":[37]},{"type":"not","out_nodes":[[7893,-1]],"__id":18169,"parentNodes":[7894,7895],"constraint":{"type":"join-reference","out_nodes":[],"__id":18170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7890,-1]],"__id":18171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7892,3028]],"__id":18175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7892,3029]],"__id":18179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18180,"parentNodes":[7897],"index":909,"rule":{"name":"Calculate196","pattern":{"type":"composite","id":3340,"leftPattern":{"type":"composite","id":3339,"leftPattern":{"type":"composite","id":3338,"leftPattern":{"type":"object","id":3334,"cls":"Fibonacci196","alias":"f1"},"rightPattern":{"type":"object","id":3335,"cls":"Fibonacci196","alias":"f2"}},"rightPattern":{"type":"object","id":3336,"cls":"Fibonacci196","alias":"f3"}},"rightPattern":{"type":"object","id":3337,"cls":"Result196","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate196"},{"type":"beta","out_nodes":[[7896,-1]],"__id":18181,"parentNodes":[7899,7900]},{"type":"type","out_nodes":[[3,3030]],"__id":18182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result196"}},{"type":"rightadapter","out_nodes":[[7897,3030]],"__id":18185,"parentNodes":[4]},{"type":"join","out_nodes":[[7901,-1]],"__id":18186,"parentNodes":[7903,7904],"constraint":{"type":"join-reference","out_nodes":[],"__id":18187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7897,-1]],"__id":18188,"parentNodes":[]},{"type":"type","out_nodes":[[9,3031],[14,3032],[20,3033],[30,3035],[20,3037],[30,3038]],"__id":18189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci196"}},{"type":"rightadapter","out_nodes":[[7900,3031]],"__id":18192,"parentNodes":[10]},{"type":"join","out_nodes":[[7905,-1]],"__id":18193,"parentNodes":[7906,7907],"constraint":{"type":"join-reference","out_nodes":[],"__id":18194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7900,-1]],"__id":18195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7904,3032]],"__id":18200,"parentNodes":[16]},{"type":"beta","out_nodes":[[7908,-1]],"__id":18201,"parentNodes":[7909,7910]},{"type":"leftadapter","out_nodes":[[7904,-1]],"__id":18202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7907,3033]],"__id":18207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7907,3034]],"__id":18211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18212,"parentNodes":[7912],"index":910,"rule":{"name":"Bootstrap196","pattern":{"type":"object","id":3341,"cls":"Fibonacci196","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap196"},{"type":"beta","out_nodes":[[7911,-1]],"__id":18213,"parentNodes":[7913,7914]},{"type":"rightadapter","out_nodes":[[7912,3035]],"__id":18218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7912,3036]],"__id":18222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18223,"parentNodes":[7916],"index":911,"rule":{"name":"Recurse196","pattern":{"type":"composite","id":3344,"leftPattern":{"type":"not","id":3342,"cls":"Fibonacci196","alias":"f"},"rightPattern":{"type":"object","id":3343,"cls":"Fibonacci196","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci196 = defined.get('Fibonacci196');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci196(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse196"},{"type":"beta","out_nodes":[[7915,-1]],"__id":18224,"parentNodes":[7917,7918]},{"type":"rightadapter","out_nodes":[[7916,3037]],"__id":18228,"parentNodes":[37]},{"type":"not","out_nodes":[[7919,-1]],"__id":18229,"parentNodes":[7920,7921],"constraint":{"type":"join-reference","out_nodes":[],"__id":18230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7916,-1]],"__id":18231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7918,3038]],"__id":18235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7918,3039]],"__id":18239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18240,"parentNodes":[7923],"index":912,"rule":{"name":"Calculate195","pattern":{"type":"composite","id":3351,"leftPattern":{"type":"composite","id":3350,"leftPattern":{"type":"composite","id":3349,"leftPattern":{"type":"object","id":3345,"cls":"Fibonacci195","alias":"f1"},"rightPattern":{"type":"object","id":3346,"cls":"Fibonacci195","alias":"f2"}},"rightPattern":{"type":"object","id":3347,"cls":"Fibonacci195","alias":"f3"}},"rightPattern":{"type":"object","id":3348,"cls":"Result195","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate195"},{"type":"beta","out_nodes":[[7922,-1]],"__id":18241,"parentNodes":[7925,7926]},{"type":"type","out_nodes":[[3,3040]],"__id":18242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result195"}},{"type":"rightadapter","out_nodes":[[7923,3040]],"__id":18245,"parentNodes":[4]},{"type":"join","out_nodes":[[7927,-1]],"__id":18246,"parentNodes":[7929,7930],"constraint":{"type":"join-reference","out_nodes":[],"__id":18247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7923,-1]],"__id":18248,"parentNodes":[]},{"type":"type","out_nodes":[[9,3041],[14,3042],[20,3043],[30,3045],[20,3047],[30,3048]],"__id":18249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci195"}},{"type":"rightadapter","out_nodes":[[7926,3041]],"__id":18252,"parentNodes":[10]},{"type":"join","out_nodes":[[7931,-1]],"__id":18253,"parentNodes":[7932,7933],"constraint":{"type":"join-reference","out_nodes":[],"__id":18254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7926,-1]],"__id":18255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7930,3042]],"__id":18260,"parentNodes":[16]},{"type":"beta","out_nodes":[[7934,-1]],"__id":18261,"parentNodes":[7935,7936]},{"type":"leftadapter","out_nodes":[[7930,-1]],"__id":18262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7933,3043]],"__id":18267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7933,3044]],"__id":18271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18272,"parentNodes":[7938],"index":913,"rule":{"name":"Bootstrap195","pattern":{"type":"object","id":3352,"cls":"Fibonacci195","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap195"},{"type":"beta","out_nodes":[[7937,-1]],"__id":18273,"parentNodes":[7939,7940]},{"type":"rightadapter","out_nodes":[[7938,3045]],"__id":18278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7938,3046]],"__id":18282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18283,"parentNodes":[7942],"index":914,"rule":{"name":"Recurse195","pattern":{"type":"composite","id":3355,"leftPattern":{"type":"not","id":3353,"cls":"Fibonacci195","alias":"f"},"rightPattern":{"type":"object","id":3354,"cls":"Fibonacci195","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci195 = defined.get('Fibonacci195');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci195(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse195"},{"type":"beta","out_nodes":[[7941,-1]],"__id":18284,"parentNodes":[7943,7944]},{"type":"rightadapter","out_nodes":[[7942,3047]],"__id":18288,"parentNodes":[37]},{"type":"not","out_nodes":[[7945,-1]],"__id":18289,"parentNodes":[7946,7947],"constraint":{"type":"join-reference","out_nodes":[],"__id":18290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7942,-1]],"__id":18291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7944,3048]],"__id":18295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7944,3049]],"__id":18299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18300,"parentNodes":[7949],"index":915,"rule":{"name":"Calculate194","pattern":{"type":"composite","id":3362,"leftPattern":{"type":"composite","id":3361,"leftPattern":{"type":"composite","id":3360,"leftPattern":{"type":"object","id":3356,"cls":"Fibonacci194","alias":"f1"},"rightPattern":{"type":"object","id":3357,"cls":"Fibonacci194","alias":"f2"}},"rightPattern":{"type":"object","id":3358,"cls":"Fibonacci194","alias":"f3"}},"rightPattern":{"type":"object","id":3359,"cls":"Result194","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate194"},{"type":"beta","out_nodes":[[7948,-1]],"__id":18301,"parentNodes":[7951,7952]},{"type":"type","out_nodes":[[3,3050]],"__id":18302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result194"}},{"type":"rightadapter","out_nodes":[[7949,3050]],"__id":18305,"parentNodes":[4]},{"type":"join","out_nodes":[[7953,-1]],"__id":18306,"parentNodes":[7955,7956],"constraint":{"type":"join-reference","out_nodes":[],"__id":18307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7949,-1]],"__id":18308,"parentNodes":[]},{"type":"type","out_nodes":[[9,3051],[14,3052],[20,3053],[30,3055],[20,3057],[30,3058]],"__id":18309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci194"}},{"type":"rightadapter","out_nodes":[[7952,3051]],"__id":18312,"parentNodes":[10]},{"type":"join","out_nodes":[[7957,-1]],"__id":18313,"parentNodes":[7958,7959],"constraint":{"type":"join-reference","out_nodes":[],"__id":18314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7952,-1]],"__id":18315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7956,3052]],"__id":18320,"parentNodes":[16]},{"type":"beta","out_nodes":[[7960,-1]],"__id":18321,"parentNodes":[7961,7962]},{"type":"leftadapter","out_nodes":[[7956,-1]],"__id":18322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7959,3053]],"__id":18327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7959,3054]],"__id":18331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18332,"parentNodes":[7964],"index":916,"rule":{"name":"Bootstrap194","pattern":{"type":"object","id":3363,"cls":"Fibonacci194","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap194"},{"type":"beta","out_nodes":[[7963,-1]],"__id":18333,"parentNodes":[7965,7966]},{"type":"rightadapter","out_nodes":[[7964,3055]],"__id":18338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7964,3056]],"__id":18342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18343,"parentNodes":[7968],"index":917,"rule":{"name":"Recurse194","pattern":{"type":"composite","id":3366,"leftPattern":{"type":"not","id":3364,"cls":"Fibonacci194","alias":"f"},"rightPattern":{"type":"object","id":3365,"cls":"Fibonacci194","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci194 = defined.get('Fibonacci194');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci194(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse194"},{"type":"beta","out_nodes":[[7967,-1]],"__id":18344,"parentNodes":[7969,7970]},{"type":"rightadapter","out_nodes":[[7968,3057]],"__id":18348,"parentNodes":[37]},{"type":"not","out_nodes":[[7971,-1]],"__id":18349,"parentNodes":[7972,7973],"constraint":{"type":"join-reference","out_nodes":[],"__id":18350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7968,-1]],"__id":18351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7970,3058]],"__id":18355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7970,3059]],"__id":18359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18360,"parentNodes":[7975],"index":918,"rule":{"name":"Calculate193","pattern":{"type":"composite","id":3373,"leftPattern":{"type":"composite","id":3372,"leftPattern":{"type":"composite","id":3371,"leftPattern":{"type":"object","id":3367,"cls":"Fibonacci193","alias":"f1"},"rightPattern":{"type":"object","id":3368,"cls":"Fibonacci193","alias":"f2"}},"rightPattern":{"type":"object","id":3369,"cls":"Fibonacci193","alias":"f3"}},"rightPattern":{"type":"object","id":3370,"cls":"Result193","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate193"},{"type":"beta","out_nodes":[[7974,-1]],"__id":18361,"parentNodes":[7977,7978]},{"type":"type","out_nodes":[[3,3060]],"__id":18362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result193"}},{"type":"rightadapter","out_nodes":[[7975,3060]],"__id":18365,"parentNodes":[4]},{"type":"join","out_nodes":[[7979,-1]],"__id":18366,"parentNodes":[7981,7982],"constraint":{"type":"join-reference","out_nodes":[],"__id":18367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7975,-1]],"__id":18368,"parentNodes":[]},{"type":"type","out_nodes":[[9,3061],[14,3062],[20,3063],[30,3065],[20,3067],[30,3068]],"__id":18369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci193"}},{"type":"rightadapter","out_nodes":[[7978,3061]],"__id":18372,"parentNodes":[10]},{"type":"join","out_nodes":[[7983,-1]],"__id":18373,"parentNodes":[7984,7985],"constraint":{"type":"join-reference","out_nodes":[],"__id":18374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[7978,-1]],"__id":18375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7982,3062]],"__id":18380,"parentNodes":[16]},{"type":"beta","out_nodes":[[7986,-1]],"__id":18381,"parentNodes":[7987,7988]},{"type":"leftadapter","out_nodes":[[7982,-1]],"__id":18382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7985,3063]],"__id":18387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[7985,3064]],"__id":18391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18392,"parentNodes":[7990],"index":919,"rule":{"name":"Bootstrap193","pattern":{"type":"object","id":3374,"cls":"Fibonacci193","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap193"},{"type":"beta","out_nodes":[[7989,-1]],"__id":18393,"parentNodes":[7991,7992]},{"type":"rightadapter","out_nodes":[[7990,3065]],"__id":18398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[7990,3066]],"__id":18402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18403,"parentNodes":[7994],"index":920,"rule":{"name":"Recurse193","pattern":{"type":"composite","id":3377,"leftPattern":{"type":"not","id":3375,"cls":"Fibonacci193","alias":"f"},"rightPattern":{"type":"object","id":3376,"cls":"Fibonacci193","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci193 = defined.get('Fibonacci193');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci193(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse193"},{"type":"beta","out_nodes":[[7993,-1]],"__id":18404,"parentNodes":[7995,7996]},{"type":"rightadapter","out_nodes":[[7994,3067]],"__id":18408,"parentNodes":[37]},{"type":"not","out_nodes":[[7997,-1]],"__id":18409,"parentNodes":[7998,7999],"constraint":{"type":"join-reference","out_nodes":[],"__id":18410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[7994,-1]],"__id":18411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[7996,3068]],"__id":18415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[7996,3069]],"__id":18419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18420,"parentNodes":[8001],"index":921,"rule":{"name":"Calculate192","pattern":{"type":"composite","id":3384,"leftPattern":{"type":"composite","id":3383,"leftPattern":{"type":"composite","id":3382,"leftPattern":{"type":"object","id":3378,"cls":"Fibonacci192","alias":"f1"},"rightPattern":{"type":"object","id":3379,"cls":"Fibonacci192","alias":"f2"}},"rightPattern":{"type":"object","id":3380,"cls":"Fibonacci192","alias":"f3"}},"rightPattern":{"type":"object","id":3381,"cls":"Result192","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate192"},{"type":"beta","out_nodes":[[8000,-1]],"__id":18421,"parentNodes":[8003,8004]},{"type":"type","out_nodes":[[3,3070]],"__id":18422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result192"}},{"type":"rightadapter","out_nodes":[[8001,3070]],"__id":18425,"parentNodes":[4]},{"type":"join","out_nodes":[[8005,-1]],"__id":18426,"parentNodes":[8007,8008],"constraint":{"type":"join-reference","out_nodes":[],"__id":18427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8001,-1]],"__id":18428,"parentNodes":[]},{"type":"type","out_nodes":[[9,3071],[14,3072],[20,3073],[30,3075],[20,3077],[30,3078]],"__id":18429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci192"}},{"type":"rightadapter","out_nodes":[[8004,3071]],"__id":18432,"parentNodes":[10]},{"type":"join","out_nodes":[[8009,-1]],"__id":18433,"parentNodes":[8010,8011],"constraint":{"type":"join-reference","out_nodes":[],"__id":18434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8004,-1]],"__id":18435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8008,3072]],"__id":18440,"parentNodes":[16]},{"type":"beta","out_nodes":[[8012,-1]],"__id":18441,"parentNodes":[8013,8014]},{"type":"leftadapter","out_nodes":[[8008,-1]],"__id":18442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8011,3073]],"__id":18447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8011,3074]],"__id":18451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18452,"parentNodes":[8016],"index":922,"rule":{"name":"Bootstrap192","pattern":{"type":"object","id":3385,"cls":"Fibonacci192","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap192"},{"type":"beta","out_nodes":[[8015,-1]],"__id":18453,"parentNodes":[8017,8018]},{"type":"rightadapter","out_nodes":[[8016,3075]],"__id":18458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8016,3076]],"__id":18462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18463,"parentNodes":[8020],"index":923,"rule":{"name":"Recurse192","pattern":{"type":"composite","id":3388,"leftPattern":{"type":"not","id":3386,"cls":"Fibonacci192","alias":"f"},"rightPattern":{"type":"object","id":3387,"cls":"Fibonacci192","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci192 = defined.get('Fibonacci192');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci192(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse192"},{"type":"beta","out_nodes":[[8019,-1]],"__id":18464,"parentNodes":[8021,8022]},{"type":"rightadapter","out_nodes":[[8020,3077]],"__id":18468,"parentNodes":[37]},{"type":"not","out_nodes":[[8023,-1]],"__id":18469,"parentNodes":[8024,8025],"constraint":{"type":"join-reference","out_nodes":[],"__id":18470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8020,-1]],"__id":18471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8022,3078]],"__id":18475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8022,3079]],"__id":18479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18480,"parentNodes":[8027],"index":924,"rule":{"name":"Calculate191","pattern":{"type":"composite","id":3395,"leftPattern":{"type":"composite","id":3394,"leftPattern":{"type":"composite","id":3393,"leftPattern":{"type":"object","id":3389,"cls":"Fibonacci191","alias":"f1"},"rightPattern":{"type":"object","id":3390,"cls":"Fibonacci191","alias":"f2"}},"rightPattern":{"type":"object","id":3391,"cls":"Fibonacci191","alias":"f3"}},"rightPattern":{"type":"object","id":3392,"cls":"Result191","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate191"},{"type":"beta","out_nodes":[[8026,-1]],"__id":18481,"parentNodes":[8029,8030]},{"type":"type","out_nodes":[[3,3080]],"__id":18482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result191"}},{"type":"rightadapter","out_nodes":[[8027,3080]],"__id":18485,"parentNodes":[4]},{"type":"join","out_nodes":[[8031,-1]],"__id":18486,"parentNodes":[8033,8034],"constraint":{"type":"join-reference","out_nodes":[],"__id":18487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8027,-1]],"__id":18488,"parentNodes":[]},{"type":"type","out_nodes":[[9,3081],[14,3082],[20,3083],[30,3085],[20,3087],[30,3088]],"__id":18489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci191"}},{"type":"rightadapter","out_nodes":[[8030,3081]],"__id":18492,"parentNodes":[10]},{"type":"join","out_nodes":[[8035,-1]],"__id":18493,"parentNodes":[8036,8037],"constraint":{"type":"join-reference","out_nodes":[],"__id":18494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8030,-1]],"__id":18495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8034,3082]],"__id":18500,"parentNodes":[16]},{"type":"beta","out_nodes":[[8038,-1]],"__id":18501,"parentNodes":[8039,8040]},{"type":"leftadapter","out_nodes":[[8034,-1]],"__id":18502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8037,3083]],"__id":18507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8037,3084]],"__id":18511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18512,"parentNodes":[8042],"index":925,"rule":{"name":"Bootstrap191","pattern":{"type":"object","id":3396,"cls":"Fibonacci191","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap191"},{"type":"beta","out_nodes":[[8041,-1]],"__id":18513,"parentNodes":[8043,8044]},{"type":"rightadapter","out_nodes":[[8042,3085]],"__id":18518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8042,3086]],"__id":18522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18523,"parentNodes":[8046],"index":926,"rule":{"name":"Recurse191","pattern":{"type":"composite","id":3399,"leftPattern":{"type":"not","id":3397,"cls":"Fibonacci191","alias":"f"},"rightPattern":{"type":"object","id":3398,"cls":"Fibonacci191","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci191 = defined.get('Fibonacci191');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci191(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse191"},{"type":"beta","out_nodes":[[8045,-1]],"__id":18524,"parentNodes":[8047,8048]},{"type":"rightadapter","out_nodes":[[8046,3087]],"__id":18528,"parentNodes":[37]},{"type":"not","out_nodes":[[8049,-1]],"__id":18529,"parentNodes":[8050,8051],"constraint":{"type":"join-reference","out_nodes":[],"__id":18530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8046,-1]],"__id":18531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8048,3088]],"__id":18535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8048,3089]],"__id":18539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18540,"parentNodes":[8053],"index":927,"rule":{"name":"Calculate190","pattern":{"type":"composite","id":3406,"leftPattern":{"type":"composite","id":3405,"leftPattern":{"type":"composite","id":3404,"leftPattern":{"type":"object","id":3400,"cls":"Fibonacci190","alias":"f1"},"rightPattern":{"type":"object","id":3401,"cls":"Fibonacci190","alias":"f2"}},"rightPattern":{"type":"object","id":3402,"cls":"Fibonacci190","alias":"f3"}},"rightPattern":{"type":"object","id":3403,"cls":"Result190","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate190"},{"type":"beta","out_nodes":[[8052,-1]],"__id":18541,"parentNodes":[8055,8056]},{"type":"type","out_nodes":[[3,3090]],"__id":18542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result190"}},{"type":"rightadapter","out_nodes":[[8053,3090]],"__id":18545,"parentNodes":[4]},{"type":"join","out_nodes":[[8057,-1]],"__id":18546,"parentNodes":[8059,8060],"constraint":{"type":"join-reference","out_nodes":[],"__id":18547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8053,-1]],"__id":18548,"parentNodes":[]},{"type":"type","out_nodes":[[9,3091],[14,3092],[20,3093],[30,3095],[20,3097],[30,3098]],"__id":18549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci190"}},{"type":"rightadapter","out_nodes":[[8056,3091]],"__id":18552,"parentNodes":[10]},{"type":"join","out_nodes":[[8061,-1]],"__id":18553,"parentNodes":[8062,8063],"constraint":{"type":"join-reference","out_nodes":[],"__id":18554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8056,-1]],"__id":18555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8060,3092]],"__id":18560,"parentNodes":[16]},{"type":"beta","out_nodes":[[8064,-1]],"__id":18561,"parentNodes":[8065,8066]},{"type":"leftadapter","out_nodes":[[8060,-1]],"__id":18562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8063,3093]],"__id":18567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8063,3094]],"__id":18571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18572,"parentNodes":[8068],"index":928,"rule":{"name":"Bootstrap190","pattern":{"type":"object","id":3407,"cls":"Fibonacci190","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap190"},{"type":"beta","out_nodes":[[8067,-1]],"__id":18573,"parentNodes":[8069,8070]},{"type":"rightadapter","out_nodes":[[8068,3095]],"__id":18578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8068,3096]],"__id":18582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18583,"parentNodes":[8072],"index":929,"rule":{"name":"Recurse190","pattern":{"type":"composite","id":3410,"leftPattern":{"type":"not","id":3408,"cls":"Fibonacci190","alias":"f"},"rightPattern":{"type":"object","id":3409,"cls":"Fibonacci190","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');let Fibonacci190 = defined.get('Fibonacci190');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci190(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse190"},{"type":"beta","out_nodes":[[8071,-1]],"__id":18584,"parentNodes":[8073,8074]},{"type":"rightadapter","out_nodes":[[8072,3097]],"__id":18588,"parentNodes":[37]},{"type":"not","out_nodes":[[8075,-1]],"__id":18589,"parentNodes":[8076,8077],"constraint":{"type":"join-reference","out_nodes":[],"__id":18590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8072,-1]],"__id":18591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8074,3098]],"__id":18595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8074,3099]],"__id":18599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18600,"parentNodes":[8079],"index":930,"rule":{"name":"Calculate189","pattern":{"type":"composite","id":3417,"leftPattern":{"type":"composite","id":3416,"leftPattern":{"type":"composite","id":3415,"leftPattern":{"type":"object","id":3411,"cls":"Fibonacci189","alias":"f1"},"rightPattern":{"type":"object","id":3412,"cls":"Fibonacci189","alias":"f2"}},"rightPattern":{"type":"object","id":3413,"cls":"Fibonacci189","alias":"f3"}},"rightPattern":{"type":"object","id":3414,"cls":"Result189","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate189"},{"type":"beta","out_nodes":[[8078,-1]],"__id":18601,"parentNodes":[8081,8082]},{"type":"type","out_nodes":[[3,3100]],"__id":18602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result189"}},{"type":"rightadapter","out_nodes":[[8079,3100]],"__id":18605,"parentNodes":[4]},{"type":"join","out_nodes":[[8083,-1]],"__id":18606,"parentNodes":[8085,8086],"constraint":{"type":"join-reference","out_nodes":[],"__id":18607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8079,-1]],"__id":18608,"parentNodes":[]},{"type":"type","out_nodes":[[9,3101],[14,3102],[20,3103],[30,3105],[20,3107],[30,3108]],"__id":18609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci189"}},{"type":"rightadapter","out_nodes":[[8082,3101]],"__id":18612,"parentNodes":[10]},{"type":"join","out_nodes":[[8087,-1]],"__id":18613,"parentNodes":[8088,8089],"constraint":{"type":"join-reference","out_nodes":[],"__id":18614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8082,-1]],"__id":18615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8086,3102]],"__id":18620,"parentNodes":[16]},{"type":"beta","out_nodes":[[8090,-1]],"__id":18621,"parentNodes":[8091,8092]},{"type":"leftadapter","out_nodes":[[8086,-1]],"__id":18622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8089,3103]],"__id":18627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8089,3104]],"__id":18631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18632,"parentNodes":[8094],"index":931,"rule":{"name":"Bootstrap189","pattern":{"type":"object","id":3418,"cls":"Fibonacci189","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap189"},{"type":"beta","out_nodes":[[8093,-1]],"__id":18633,"parentNodes":[8095,8096]},{"type":"rightadapter","out_nodes":[[8094,3105]],"__id":18638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8094,3106]],"__id":18642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18643,"parentNodes":[8098],"index":932,"rule":{"name":"Recurse189","pattern":{"type":"composite","id":3421,"leftPattern":{"type":"not","id":3419,"cls":"Fibonacci189","alias":"f"},"rightPattern":{"type":"object","id":3420,"cls":"Fibonacci189","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci189 = defined.get('Fibonacci189');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci189(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse189"},{"type":"beta","out_nodes":[[8097,-1]],"__id":18644,"parentNodes":[8099,8100]},{"type":"rightadapter","out_nodes":[[8098,3107]],"__id":18648,"parentNodes":[37]},{"type":"not","out_nodes":[[8101,-1]],"__id":18649,"parentNodes":[8102,8103],"constraint":{"type":"join-reference","out_nodes":[],"__id":18650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8098,-1]],"__id":18651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8100,3108]],"__id":18655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8100,3109]],"__id":18659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18660,"parentNodes":[8105],"index":933,"rule":{"name":"Calculate188","pattern":{"type":"composite","id":3428,"leftPattern":{"type":"composite","id":3427,"leftPattern":{"type":"composite","id":3426,"leftPattern":{"type":"object","id":3422,"cls":"Fibonacci188","alias":"f1"},"rightPattern":{"type":"object","id":3423,"cls":"Fibonacci188","alias":"f2"}},"rightPattern":{"type":"object","id":3424,"cls":"Fibonacci188","alias":"f3"}},"rightPattern":{"type":"object","id":3425,"cls":"Result188","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate188"},{"type":"beta","out_nodes":[[8104,-1]],"__id":18661,"parentNodes":[8107,8108]},{"type":"type","out_nodes":[[3,3110]],"__id":18662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result188"}},{"type":"rightadapter","out_nodes":[[8105,3110]],"__id":18665,"parentNodes":[4]},{"type":"join","out_nodes":[[8109,-1]],"__id":18666,"parentNodes":[8111,8112],"constraint":{"type":"join-reference","out_nodes":[],"__id":18667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8105,-1]],"__id":18668,"parentNodes":[]},{"type":"type","out_nodes":[[9,3111],[14,3112],[20,3113],[30,3115],[20,3117],[30,3118]],"__id":18669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci188"}},{"type":"rightadapter","out_nodes":[[8108,3111]],"__id":18672,"parentNodes":[10]},{"type":"join","out_nodes":[[8113,-1]],"__id":18673,"parentNodes":[8114,8115],"constraint":{"type":"join-reference","out_nodes":[],"__id":18674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8108,-1]],"__id":18675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8112,3112]],"__id":18680,"parentNodes":[16]},{"type":"beta","out_nodes":[[8116,-1]],"__id":18681,"parentNodes":[8117,8118]},{"type":"leftadapter","out_nodes":[[8112,-1]],"__id":18682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8115,3113]],"__id":18687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8115,3114]],"__id":18691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18692,"parentNodes":[8120],"index":934,"rule":{"name":"Bootstrap188","pattern":{"type":"object","id":3429,"cls":"Fibonacci188","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap188"},{"type":"beta","out_nodes":[[8119,-1]],"__id":18693,"parentNodes":[8121,8122]},{"type":"rightadapter","out_nodes":[[8120,3115]],"__id":18698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8120,3116]],"__id":18702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18703,"parentNodes":[8124],"index":935,"rule":{"name":"Recurse188","pattern":{"type":"composite","id":3432,"leftPattern":{"type":"not","id":3430,"cls":"Fibonacci188","alias":"f"},"rightPattern":{"type":"object","id":3431,"cls":"Fibonacci188","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci188 = defined.get('Fibonacci188');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci188(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse188"},{"type":"beta","out_nodes":[[8123,-1]],"__id":18704,"parentNodes":[8125,8126]},{"type":"rightadapter","out_nodes":[[8124,3117]],"__id":18708,"parentNodes":[37]},{"type":"not","out_nodes":[[8127,-1]],"__id":18709,"parentNodes":[8128,8129],"constraint":{"type":"join-reference","out_nodes":[],"__id":18710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8124,-1]],"__id":18711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8126,3118]],"__id":18715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8126,3119]],"__id":18719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18720,"parentNodes":[8131],"index":936,"rule":{"name":"Calculate187","pattern":{"type":"composite","id":3439,"leftPattern":{"type":"composite","id":3438,"leftPattern":{"type":"composite","id":3437,"leftPattern":{"type":"object","id":3433,"cls":"Fibonacci187","alias":"f1"},"rightPattern":{"type":"object","id":3434,"cls":"Fibonacci187","alias":"f2"}},"rightPattern":{"type":"object","id":3435,"cls":"Fibonacci187","alias":"f3"}},"rightPattern":{"type":"object","id":3436,"cls":"Result187","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate187"},{"type":"beta","out_nodes":[[8130,-1]],"__id":18721,"parentNodes":[8133,8134]},{"type":"type","out_nodes":[[3,3120]],"__id":18722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result187"}},{"type":"rightadapter","out_nodes":[[8131,3120]],"__id":18725,"parentNodes":[4]},{"type":"join","out_nodes":[[8135,-1]],"__id":18726,"parentNodes":[8137,8138],"constraint":{"type":"join-reference","out_nodes":[],"__id":18727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8131,-1]],"__id":18728,"parentNodes":[]},{"type":"type","out_nodes":[[9,3121],[14,3122],[20,3123],[30,3125],[20,3127],[30,3128]],"__id":18729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci187"}},{"type":"rightadapter","out_nodes":[[8134,3121]],"__id":18732,"parentNodes":[10]},{"type":"join","out_nodes":[[8139,-1]],"__id":18733,"parentNodes":[8140,8141],"constraint":{"type":"join-reference","out_nodes":[],"__id":18734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8134,-1]],"__id":18735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8138,3122]],"__id":18740,"parentNodes":[16]},{"type":"beta","out_nodes":[[8142,-1]],"__id":18741,"parentNodes":[8143,8144]},{"type":"leftadapter","out_nodes":[[8138,-1]],"__id":18742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8141,3123]],"__id":18747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8141,3124]],"__id":18751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18752,"parentNodes":[8146],"index":937,"rule":{"name":"Bootstrap187","pattern":{"type":"object","id":3440,"cls":"Fibonacci187","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap187"},{"type":"beta","out_nodes":[[8145,-1]],"__id":18753,"parentNodes":[8147,8148]},{"type":"rightadapter","out_nodes":[[8146,3125]],"__id":18758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8146,3126]],"__id":18762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18763,"parentNodes":[8150],"index":938,"rule":{"name":"Recurse187","pattern":{"type":"composite","id":3443,"leftPattern":{"type":"not","id":3441,"cls":"Fibonacci187","alias":"f"},"rightPattern":{"type":"object","id":3442,"cls":"Fibonacci187","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci187 = defined.get('Fibonacci187');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci187(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse187"},{"type":"beta","out_nodes":[[8149,-1]],"__id":18764,"parentNodes":[8151,8152]},{"type":"rightadapter","out_nodes":[[8150,3127]],"__id":18768,"parentNodes":[37]},{"type":"not","out_nodes":[[8153,-1]],"__id":18769,"parentNodes":[8154,8155],"constraint":{"type":"join-reference","out_nodes":[],"__id":18770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8150,-1]],"__id":18771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8152,3128]],"__id":18775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8152,3129]],"__id":18779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18780,"parentNodes":[8157],"index":939,"rule":{"name":"Calculate186","pattern":{"type":"composite","id":3450,"leftPattern":{"type":"composite","id":3449,"leftPattern":{"type":"composite","id":3448,"leftPattern":{"type":"object","id":3444,"cls":"Fibonacci186","alias":"f1"},"rightPattern":{"type":"object","id":3445,"cls":"Fibonacci186","alias":"f2"}},"rightPattern":{"type":"object","id":3446,"cls":"Fibonacci186","alias":"f3"}},"rightPattern":{"type":"object","id":3447,"cls":"Result186","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate186"},{"type":"beta","out_nodes":[[8156,-1]],"__id":18781,"parentNodes":[8159,8160]},{"type":"type","out_nodes":[[3,3130]],"__id":18782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result186"}},{"type":"rightadapter","out_nodes":[[8157,3130]],"__id":18785,"parentNodes":[4]},{"type":"join","out_nodes":[[8161,-1]],"__id":18786,"parentNodes":[8163,8164],"constraint":{"type":"join-reference","out_nodes":[],"__id":18787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8157,-1]],"__id":18788,"parentNodes":[]},{"type":"type","out_nodes":[[9,3131],[14,3132],[20,3133],[30,3135],[20,3137],[30,3138]],"__id":18789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci186"}},{"type":"rightadapter","out_nodes":[[8160,3131]],"__id":18792,"parentNodes":[10]},{"type":"join","out_nodes":[[8165,-1]],"__id":18793,"parentNodes":[8166,8167],"constraint":{"type":"join-reference","out_nodes":[],"__id":18794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8160,-1]],"__id":18795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8164,3132]],"__id":18800,"parentNodes":[16]},{"type":"beta","out_nodes":[[8168,-1]],"__id":18801,"parentNodes":[8169,8170]},{"type":"leftadapter","out_nodes":[[8164,-1]],"__id":18802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8167,3133]],"__id":18807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8167,3134]],"__id":18811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18812,"parentNodes":[8172],"index":940,"rule":{"name":"Bootstrap186","pattern":{"type":"object","id":3451,"cls":"Fibonacci186","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap186"},{"type":"beta","out_nodes":[[8171,-1]],"__id":18813,"parentNodes":[8173,8174]},{"type":"rightadapter","out_nodes":[[8172,3135]],"__id":18818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8172,3136]],"__id":18822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18823,"parentNodes":[8176],"index":941,"rule":{"name":"Recurse186","pattern":{"type":"composite","id":3454,"leftPattern":{"type":"not","id":3452,"cls":"Fibonacci186","alias":"f"},"rightPattern":{"type":"object","id":3453,"cls":"Fibonacci186","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci186 = defined.get('Fibonacci186');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci186(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse186"},{"type":"beta","out_nodes":[[8175,-1]],"__id":18824,"parentNodes":[8177,8178]},{"type":"rightadapter","out_nodes":[[8176,3137]],"__id":18828,"parentNodes":[37]},{"type":"not","out_nodes":[[8179,-1]],"__id":18829,"parentNodes":[8180,8181],"constraint":{"type":"join-reference","out_nodes":[],"__id":18830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8176,-1]],"__id":18831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8178,3138]],"__id":18835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8178,3139]],"__id":18839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18840,"parentNodes":[8183],"index":942,"rule":{"name":"Calculate185","pattern":{"type":"composite","id":3461,"leftPattern":{"type":"composite","id":3460,"leftPattern":{"type":"composite","id":3459,"leftPattern":{"type":"object","id":3455,"cls":"Fibonacci185","alias":"f1"},"rightPattern":{"type":"object","id":3456,"cls":"Fibonacci185","alias":"f2"}},"rightPattern":{"type":"object","id":3457,"cls":"Fibonacci185","alias":"f3"}},"rightPattern":{"type":"object","id":3458,"cls":"Result185","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate185"},{"type":"beta","out_nodes":[[8182,-1]],"__id":18841,"parentNodes":[8185,8186]},{"type":"type","out_nodes":[[3,3140]],"__id":18842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result185"}},{"type":"rightadapter","out_nodes":[[8183,3140]],"__id":18845,"parentNodes":[4]},{"type":"join","out_nodes":[[8187,-1]],"__id":18846,"parentNodes":[8189,8190],"constraint":{"type":"join-reference","out_nodes":[],"__id":18847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8183,-1]],"__id":18848,"parentNodes":[]},{"type":"type","out_nodes":[[9,3141],[14,3142],[20,3143],[30,3145],[20,3147],[30,3148]],"__id":18849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci185"}},{"type":"rightadapter","out_nodes":[[8186,3141]],"__id":18852,"parentNodes":[10]},{"type":"join","out_nodes":[[8191,-1]],"__id":18853,"parentNodes":[8192,8193],"constraint":{"type":"join-reference","out_nodes":[],"__id":18854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8186,-1]],"__id":18855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8190,3142]],"__id":18860,"parentNodes":[16]},{"type":"beta","out_nodes":[[8194,-1]],"__id":18861,"parentNodes":[8195,8196]},{"type":"leftadapter","out_nodes":[[8190,-1]],"__id":18862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8193,3143]],"__id":18867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8193,3144]],"__id":18871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18872,"parentNodes":[8198],"index":943,"rule":{"name":"Bootstrap185","pattern":{"type":"object","id":3462,"cls":"Fibonacci185","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap185"},{"type":"beta","out_nodes":[[8197,-1]],"__id":18873,"parentNodes":[8199,8200]},{"type":"rightadapter","out_nodes":[[8198,3145]],"__id":18878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8198,3146]],"__id":18882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18883,"parentNodes":[8202],"index":944,"rule":{"name":"Recurse185","pattern":{"type":"composite","id":3465,"leftPattern":{"type":"not","id":3463,"cls":"Fibonacci185","alias":"f"},"rightPattern":{"type":"object","id":3464,"cls":"Fibonacci185","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci185 = defined.get('Fibonacci185');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci185(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse185"},{"type":"beta","out_nodes":[[8201,-1]],"__id":18884,"parentNodes":[8203,8204]},{"type":"rightadapter","out_nodes":[[8202,3147]],"__id":18888,"parentNodes":[37]},{"type":"not","out_nodes":[[8205,-1]],"__id":18889,"parentNodes":[8206,8207],"constraint":{"type":"join-reference","out_nodes":[],"__id":18890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8202,-1]],"__id":18891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8204,3148]],"__id":18895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8204,3149]],"__id":18899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18900,"parentNodes":[8209],"index":945,"rule":{"name":"Calculate184","pattern":{"type":"composite","id":3472,"leftPattern":{"type":"composite","id":3471,"leftPattern":{"type":"composite","id":3470,"leftPattern":{"type":"object","id":3466,"cls":"Fibonacci184","alias":"f1"},"rightPattern":{"type":"object","id":3467,"cls":"Fibonacci184","alias":"f2"}},"rightPattern":{"type":"object","id":3468,"cls":"Fibonacci184","alias":"f3"}},"rightPattern":{"type":"object","id":3469,"cls":"Result184","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate184"},{"type":"beta","out_nodes":[[8208,-1]],"__id":18901,"parentNodes":[8211,8212]},{"type":"type","out_nodes":[[3,3150]],"__id":18902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result184"}},{"type":"rightadapter","out_nodes":[[8209,3150]],"__id":18905,"parentNodes":[4]},{"type":"join","out_nodes":[[8213,-1]],"__id":18906,"parentNodes":[8215,8216],"constraint":{"type":"join-reference","out_nodes":[],"__id":18907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8209,-1]],"__id":18908,"parentNodes":[]},{"type":"type","out_nodes":[[9,3151],[14,3152],[20,3153],[30,3155],[20,3157],[30,3158]],"__id":18909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci184"}},{"type":"rightadapter","out_nodes":[[8212,3151]],"__id":18912,"parentNodes":[10]},{"type":"join","out_nodes":[[8217,-1]],"__id":18913,"parentNodes":[8218,8219],"constraint":{"type":"join-reference","out_nodes":[],"__id":18914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8212,-1]],"__id":18915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8216,3152]],"__id":18920,"parentNodes":[16]},{"type":"beta","out_nodes":[[8220,-1]],"__id":18921,"parentNodes":[8221,8222]},{"type":"leftadapter","out_nodes":[[8216,-1]],"__id":18922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8219,3153]],"__id":18927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8219,3154]],"__id":18931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18932,"parentNodes":[8224],"index":946,"rule":{"name":"Bootstrap184","pattern":{"type":"object","id":3473,"cls":"Fibonacci184","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap184"},{"type":"beta","out_nodes":[[8223,-1]],"__id":18933,"parentNodes":[8225,8226]},{"type":"rightadapter","out_nodes":[[8224,3155]],"__id":18938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8224,3156]],"__id":18942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18943,"parentNodes":[8228],"index":947,"rule":{"name":"Recurse184","pattern":{"type":"composite","id":3476,"leftPattern":{"type":"not","id":3474,"cls":"Fibonacci184","alias":"f"},"rightPattern":{"type":"object","id":3475,"cls":"Fibonacci184","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci184 = defined.get('Fibonacci184');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci184(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse184"},{"type":"beta","out_nodes":[[8227,-1]],"__id":18944,"parentNodes":[8229,8230]},{"type":"rightadapter","out_nodes":[[8228,3157]],"__id":18948,"parentNodes":[37]},{"type":"not","out_nodes":[[8231,-1]],"__id":18949,"parentNodes":[8232,8233],"constraint":{"type":"join-reference","out_nodes":[],"__id":18950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8228,-1]],"__id":18951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8230,3158]],"__id":18955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8230,3159]],"__id":18959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18960,"parentNodes":[8235],"index":948,"rule":{"name":"Calculate183","pattern":{"type":"composite","id":3483,"leftPattern":{"type":"composite","id":3482,"leftPattern":{"type":"composite","id":3481,"leftPattern":{"type":"object","id":3477,"cls":"Fibonacci183","alias":"f1"},"rightPattern":{"type":"object","id":3478,"cls":"Fibonacci183","alias":"f2"}},"rightPattern":{"type":"object","id":3479,"cls":"Fibonacci183","alias":"f3"}},"rightPattern":{"type":"object","id":3480,"cls":"Result183","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate183"},{"type":"beta","out_nodes":[[8234,-1]],"__id":18961,"parentNodes":[8237,8238]},{"type":"type","out_nodes":[[3,3160]],"__id":18962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result183"}},{"type":"rightadapter","out_nodes":[[8235,3160]],"__id":18965,"parentNodes":[4]},{"type":"join","out_nodes":[[8239,-1]],"__id":18966,"parentNodes":[8241,8242],"constraint":{"type":"join-reference","out_nodes":[],"__id":18967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8235,-1]],"__id":18968,"parentNodes":[]},{"type":"type","out_nodes":[[9,3161],[14,3162],[20,3163],[30,3165],[20,3167],[30,3168]],"__id":18969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci183"}},{"type":"rightadapter","out_nodes":[[8238,3161]],"__id":18972,"parentNodes":[10]},{"type":"join","out_nodes":[[8243,-1]],"__id":18973,"parentNodes":[8244,8245],"constraint":{"type":"join-reference","out_nodes":[],"__id":18974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8238,-1]],"__id":18975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8242,3162]],"__id":18980,"parentNodes":[16]},{"type":"beta","out_nodes":[[8246,-1]],"__id":18981,"parentNodes":[8247,8248]},{"type":"leftadapter","out_nodes":[[8242,-1]],"__id":18982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8245,3163]],"__id":18987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8245,3164]],"__id":18991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":18992,"parentNodes":[8250],"index":949,"rule":{"name":"Bootstrap183","pattern":{"type":"object","id":3484,"cls":"Fibonacci183","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap183"},{"type":"beta","out_nodes":[[8249,-1]],"__id":18993,"parentNodes":[8251,8252]},{"type":"rightadapter","out_nodes":[[8250,3165]],"__id":18998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8250,3166]],"__id":19002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19003,"parentNodes":[8254],"index":950,"rule":{"name":"Recurse183","pattern":{"type":"composite","id":3487,"leftPattern":{"type":"not","id":3485,"cls":"Fibonacci183","alias":"f"},"rightPattern":{"type":"object","id":3486,"cls":"Fibonacci183","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci183 = defined.get('Fibonacci183');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci183(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse183"},{"type":"beta","out_nodes":[[8253,-1]],"__id":19004,"parentNodes":[8255,8256]},{"type":"rightadapter","out_nodes":[[8254,3167]],"__id":19008,"parentNodes":[37]},{"type":"not","out_nodes":[[8257,-1]],"__id":19009,"parentNodes":[8258,8259],"constraint":{"type":"join-reference","out_nodes":[],"__id":19010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8254,-1]],"__id":19011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8256,3168]],"__id":19015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8256,3169]],"__id":19019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19020,"parentNodes":[8261],"index":951,"rule":{"name":"Calculate182","pattern":{"type":"composite","id":3494,"leftPattern":{"type":"composite","id":3493,"leftPattern":{"type":"composite","id":3492,"leftPattern":{"type":"object","id":3488,"cls":"Fibonacci182","alias":"f1"},"rightPattern":{"type":"object","id":3489,"cls":"Fibonacci182","alias":"f2"}},"rightPattern":{"type":"object","id":3490,"cls":"Fibonacci182","alias":"f3"}},"rightPattern":{"type":"object","id":3491,"cls":"Result182","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate182"},{"type":"beta","out_nodes":[[8260,-1]],"__id":19021,"parentNodes":[8263,8264]},{"type":"type","out_nodes":[[3,3170]],"__id":19022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result182"}},{"type":"rightadapter","out_nodes":[[8261,3170]],"__id":19025,"parentNodes":[4]},{"type":"join","out_nodes":[[8265,-1]],"__id":19026,"parentNodes":[8267,8268],"constraint":{"type":"join-reference","out_nodes":[],"__id":19027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8261,-1]],"__id":19028,"parentNodes":[]},{"type":"type","out_nodes":[[9,3171],[14,3172],[20,3173],[30,3175],[20,3177],[30,3178]],"__id":19029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci182"}},{"type":"rightadapter","out_nodes":[[8264,3171]],"__id":19032,"parentNodes":[10]},{"type":"join","out_nodes":[[8269,-1]],"__id":19033,"parentNodes":[8270,8271],"constraint":{"type":"join-reference","out_nodes":[],"__id":19034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8264,-1]],"__id":19035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8268,3172]],"__id":19040,"parentNodes":[16]},{"type":"beta","out_nodes":[[8272,-1]],"__id":19041,"parentNodes":[8273,8274]},{"type":"leftadapter","out_nodes":[[8268,-1]],"__id":19042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8271,3173]],"__id":19047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8271,3174]],"__id":19051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19052,"parentNodes":[8276],"index":952,"rule":{"name":"Bootstrap182","pattern":{"type":"object","id":3495,"cls":"Fibonacci182","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap182"},{"type":"beta","out_nodes":[[8275,-1]],"__id":19053,"parentNodes":[8277,8278]},{"type":"rightadapter","out_nodes":[[8276,3175]],"__id":19058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8276,3176]],"__id":19062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19063,"parentNodes":[8280],"index":953,"rule":{"name":"Recurse182","pattern":{"type":"composite","id":3498,"leftPattern":{"type":"not","id":3496,"cls":"Fibonacci182","alias":"f"},"rightPattern":{"type":"object","id":3497,"cls":"Fibonacci182","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci182 = defined.get('Fibonacci182');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci182(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse182"},{"type":"beta","out_nodes":[[8279,-1]],"__id":19064,"parentNodes":[8281,8282]},{"type":"rightadapter","out_nodes":[[8280,3177]],"__id":19068,"parentNodes":[37]},{"type":"not","out_nodes":[[8283,-1]],"__id":19069,"parentNodes":[8284,8285],"constraint":{"type":"join-reference","out_nodes":[],"__id":19070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8280,-1]],"__id":19071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8282,3178]],"__id":19075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8282,3179]],"__id":19079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19080,"parentNodes":[8287],"index":954,"rule":{"name":"Calculate181","pattern":{"type":"composite","id":3505,"leftPattern":{"type":"composite","id":3504,"leftPattern":{"type":"composite","id":3503,"leftPattern":{"type":"object","id":3499,"cls":"Fibonacci181","alias":"f1"},"rightPattern":{"type":"object","id":3500,"cls":"Fibonacci181","alias":"f2"}},"rightPattern":{"type":"object","id":3501,"cls":"Fibonacci181","alias":"f3"}},"rightPattern":{"type":"object","id":3502,"cls":"Result181","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate181"},{"type":"beta","out_nodes":[[8286,-1]],"__id":19081,"parentNodes":[8289,8290]},{"type":"type","out_nodes":[[3,3180]],"__id":19082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result181"}},{"type":"rightadapter","out_nodes":[[8287,3180]],"__id":19085,"parentNodes":[4]},{"type":"join","out_nodes":[[8291,-1]],"__id":19086,"parentNodes":[8293,8294],"constraint":{"type":"join-reference","out_nodes":[],"__id":19087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8287,-1]],"__id":19088,"parentNodes":[]},{"type":"type","out_nodes":[[9,3181],[14,3182],[20,3183],[30,3185],[20,3187],[30,3188]],"__id":19089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci181"}},{"type":"rightadapter","out_nodes":[[8290,3181]],"__id":19092,"parentNodes":[10]},{"type":"join","out_nodes":[[8295,-1]],"__id":19093,"parentNodes":[8296,8297],"constraint":{"type":"join-reference","out_nodes":[],"__id":19094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8290,-1]],"__id":19095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8294,3182]],"__id":19100,"parentNodes":[16]},{"type":"beta","out_nodes":[[8298,-1]],"__id":19101,"parentNodes":[8299,8300]},{"type":"leftadapter","out_nodes":[[8294,-1]],"__id":19102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8297,3183]],"__id":19107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8297,3184]],"__id":19111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19112,"parentNodes":[8302],"index":955,"rule":{"name":"Bootstrap181","pattern":{"type":"object","id":3506,"cls":"Fibonacci181","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap181"},{"type":"beta","out_nodes":[[8301,-1]],"__id":19113,"parentNodes":[8303,8304]},{"type":"rightadapter","out_nodes":[[8302,3185]],"__id":19118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8302,3186]],"__id":19122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19123,"parentNodes":[8306],"index":956,"rule":{"name":"Recurse181","pattern":{"type":"composite","id":3509,"leftPattern":{"type":"not","id":3507,"cls":"Fibonacci181","alias":"f"},"rightPattern":{"type":"object","id":3508,"cls":"Fibonacci181","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci181 = defined.get('Fibonacci181');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci181(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse181"},{"type":"beta","out_nodes":[[8305,-1]],"__id":19124,"parentNodes":[8307,8308]},{"type":"rightadapter","out_nodes":[[8306,3187]],"__id":19128,"parentNodes":[37]},{"type":"not","out_nodes":[[8309,-1]],"__id":19129,"parentNodes":[8310,8311],"constraint":{"type":"join-reference","out_nodes":[],"__id":19130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8306,-1]],"__id":19131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8308,3188]],"__id":19135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8308,3189]],"__id":19139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19140,"parentNodes":[8313],"index":957,"rule":{"name":"Calculate180","pattern":{"type":"composite","id":3516,"leftPattern":{"type":"composite","id":3515,"leftPattern":{"type":"composite","id":3514,"leftPattern":{"type":"object","id":3510,"cls":"Fibonacci180","alias":"f1"},"rightPattern":{"type":"object","id":3511,"cls":"Fibonacci180","alias":"f2"}},"rightPattern":{"type":"object","id":3512,"cls":"Fibonacci180","alias":"f3"}},"rightPattern":{"type":"object","id":3513,"cls":"Result180","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate180"},{"type":"beta","out_nodes":[[8312,-1]],"__id":19141,"parentNodes":[8315,8316]},{"type":"type","out_nodes":[[3,3190]],"__id":19142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result180"}},{"type":"rightadapter","out_nodes":[[8313,3190]],"__id":19145,"parentNodes":[4]},{"type":"join","out_nodes":[[8317,-1]],"__id":19146,"parentNodes":[8319,8320],"constraint":{"type":"join-reference","out_nodes":[],"__id":19147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8313,-1]],"__id":19148,"parentNodes":[]},{"type":"type","out_nodes":[[9,3191],[14,3192],[20,3193],[30,3195],[20,3197],[30,3198]],"__id":19149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci180"}},{"type":"rightadapter","out_nodes":[[8316,3191]],"__id":19152,"parentNodes":[10]},{"type":"join","out_nodes":[[8321,-1]],"__id":19153,"parentNodes":[8322,8323],"constraint":{"type":"join-reference","out_nodes":[],"__id":19154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8316,-1]],"__id":19155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8320,3192]],"__id":19160,"parentNodes":[16]},{"type":"beta","out_nodes":[[8324,-1]],"__id":19161,"parentNodes":[8325,8326]},{"type":"leftadapter","out_nodes":[[8320,-1]],"__id":19162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8323,3193]],"__id":19167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8323,3194]],"__id":19171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19172,"parentNodes":[8328],"index":958,"rule":{"name":"Bootstrap180","pattern":{"type":"object","id":3517,"cls":"Fibonacci180","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap180"},{"type":"beta","out_nodes":[[8327,-1]],"__id":19173,"parentNodes":[8329,8330]},{"type":"rightadapter","out_nodes":[[8328,3195]],"__id":19178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8328,3196]],"__id":19182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19183,"parentNodes":[8332],"index":959,"rule":{"name":"Recurse180","pattern":{"type":"composite","id":3520,"leftPattern":{"type":"not","id":3518,"cls":"Fibonacci180","alias":"f"},"rightPattern":{"type":"object","id":3519,"cls":"Fibonacci180","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');let Fibonacci180 = defined.get('Fibonacci180');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci180(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse180"},{"type":"beta","out_nodes":[[8331,-1]],"__id":19184,"parentNodes":[8333,8334]},{"type":"rightadapter","out_nodes":[[8332,3197]],"__id":19188,"parentNodes":[37]},{"type":"not","out_nodes":[[8335,-1]],"__id":19189,"parentNodes":[8336,8337],"constraint":{"type":"join-reference","out_nodes":[],"__id":19190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8332,-1]],"__id":19191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8334,3198]],"__id":19195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8334,3199]],"__id":19199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19200,"parentNodes":[8339],"index":960,"rule":{"name":"Calculate179","pattern":{"type":"composite","id":3527,"leftPattern":{"type":"composite","id":3526,"leftPattern":{"type":"composite","id":3525,"leftPattern":{"type":"object","id":3521,"cls":"Fibonacci179","alias":"f1"},"rightPattern":{"type":"object","id":3522,"cls":"Fibonacci179","alias":"f2"}},"rightPattern":{"type":"object","id":3523,"cls":"Fibonacci179","alias":"f3"}},"rightPattern":{"type":"object","id":3524,"cls":"Result179","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate179"},{"type":"beta","out_nodes":[[8338,-1]],"__id":19201,"parentNodes":[8341,8342]},{"type":"type","out_nodes":[[3,3200]],"__id":19202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result179"}},{"type":"rightadapter","out_nodes":[[8339,3200]],"__id":19205,"parentNodes":[4]},{"type":"join","out_nodes":[[8343,-1]],"__id":19206,"parentNodes":[8345,8346],"constraint":{"type":"join-reference","out_nodes":[],"__id":19207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8339,-1]],"__id":19208,"parentNodes":[]},{"type":"type","out_nodes":[[9,3201],[14,3202],[20,3203],[30,3205],[20,3207],[30,3208]],"__id":19209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci179"}},{"type":"rightadapter","out_nodes":[[8342,3201]],"__id":19212,"parentNodes":[10]},{"type":"join","out_nodes":[[8347,-1]],"__id":19213,"parentNodes":[8348,8349],"constraint":{"type":"join-reference","out_nodes":[],"__id":19214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8342,-1]],"__id":19215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8346,3202]],"__id":19220,"parentNodes":[16]},{"type":"beta","out_nodes":[[8350,-1]],"__id":19221,"parentNodes":[8351,8352]},{"type":"leftadapter","out_nodes":[[8346,-1]],"__id":19222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8349,3203]],"__id":19227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8349,3204]],"__id":19231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19232,"parentNodes":[8354],"index":961,"rule":{"name":"Bootstrap179","pattern":{"type":"object","id":3528,"cls":"Fibonacci179","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap179"},{"type":"beta","out_nodes":[[8353,-1]],"__id":19233,"parentNodes":[8355,8356]},{"type":"rightadapter","out_nodes":[[8354,3205]],"__id":19238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8354,3206]],"__id":19242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19243,"parentNodes":[8358],"index":962,"rule":{"name":"Recurse179","pattern":{"type":"composite","id":3531,"leftPattern":{"type":"not","id":3529,"cls":"Fibonacci179","alias":"f"},"rightPattern":{"type":"object","id":3530,"cls":"Fibonacci179","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci179 = defined.get('Fibonacci179');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci179(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse179"},{"type":"beta","out_nodes":[[8357,-1]],"__id":19244,"parentNodes":[8359,8360]},{"type":"rightadapter","out_nodes":[[8358,3207]],"__id":19248,"parentNodes":[37]},{"type":"not","out_nodes":[[8361,-1]],"__id":19249,"parentNodes":[8362,8363],"constraint":{"type":"join-reference","out_nodes":[],"__id":19250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8358,-1]],"__id":19251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8360,3208]],"__id":19255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8360,3209]],"__id":19259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19260,"parentNodes":[8365],"index":963,"rule":{"name":"Calculate178","pattern":{"type":"composite","id":3538,"leftPattern":{"type":"composite","id":3537,"leftPattern":{"type":"composite","id":3536,"leftPattern":{"type":"object","id":3532,"cls":"Fibonacci178","alias":"f1"},"rightPattern":{"type":"object","id":3533,"cls":"Fibonacci178","alias":"f2"}},"rightPattern":{"type":"object","id":3534,"cls":"Fibonacci178","alias":"f3"}},"rightPattern":{"type":"object","id":3535,"cls":"Result178","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate178"},{"type":"beta","out_nodes":[[8364,-1]],"__id":19261,"parentNodes":[8367,8368]},{"type":"type","out_nodes":[[3,3210]],"__id":19262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result178"}},{"type":"rightadapter","out_nodes":[[8365,3210]],"__id":19265,"parentNodes":[4]},{"type":"join","out_nodes":[[8369,-1]],"__id":19266,"parentNodes":[8371,8372],"constraint":{"type":"join-reference","out_nodes":[],"__id":19267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8365,-1]],"__id":19268,"parentNodes":[]},{"type":"type","out_nodes":[[9,3211],[14,3212],[20,3213],[30,3215],[20,3217],[30,3218]],"__id":19269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci178"}},{"type":"rightadapter","out_nodes":[[8368,3211]],"__id":19272,"parentNodes":[10]},{"type":"join","out_nodes":[[8373,-1]],"__id":19273,"parentNodes":[8374,8375],"constraint":{"type":"join-reference","out_nodes":[],"__id":19274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8368,-1]],"__id":19275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8372,3212]],"__id":19280,"parentNodes":[16]},{"type":"beta","out_nodes":[[8376,-1]],"__id":19281,"parentNodes":[8377,8378]},{"type":"leftadapter","out_nodes":[[8372,-1]],"__id":19282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8375,3213]],"__id":19287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8375,3214]],"__id":19291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19292,"parentNodes":[8380],"index":964,"rule":{"name":"Bootstrap178","pattern":{"type":"object","id":3539,"cls":"Fibonacci178","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap178"},{"type":"beta","out_nodes":[[8379,-1]],"__id":19293,"parentNodes":[8381,8382]},{"type":"rightadapter","out_nodes":[[8380,3215]],"__id":19298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8380,3216]],"__id":19302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19303,"parentNodes":[8384],"index":965,"rule":{"name":"Recurse178","pattern":{"type":"composite","id":3542,"leftPattern":{"type":"not","id":3540,"cls":"Fibonacci178","alias":"f"},"rightPattern":{"type":"object","id":3541,"cls":"Fibonacci178","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci178 = defined.get('Fibonacci178');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci178(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse178"},{"type":"beta","out_nodes":[[8383,-1]],"__id":19304,"parentNodes":[8385,8386]},{"type":"rightadapter","out_nodes":[[8384,3217]],"__id":19308,"parentNodes":[37]},{"type":"not","out_nodes":[[8387,-1]],"__id":19309,"parentNodes":[8388,8389],"constraint":{"type":"join-reference","out_nodes":[],"__id":19310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8384,-1]],"__id":19311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8386,3218]],"__id":19315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8386,3219]],"__id":19319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19320,"parentNodes":[8391],"index":966,"rule":{"name":"Calculate177","pattern":{"type":"composite","id":3549,"leftPattern":{"type":"composite","id":3548,"leftPattern":{"type":"composite","id":3547,"leftPattern":{"type":"object","id":3543,"cls":"Fibonacci177","alias":"f1"},"rightPattern":{"type":"object","id":3544,"cls":"Fibonacci177","alias":"f2"}},"rightPattern":{"type":"object","id":3545,"cls":"Fibonacci177","alias":"f3"}},"rightPattern":{"type":"object","id":3546,"cls":"Result177","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate177"},{"type":"beta","out_nodes":[[8390,-1]],"__id":19321,"parentNodes":[8393,8394]},{"type":"type","out_nodes":[[3,3220]],"__id":19322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result177"}},{"type":"rightadapter","out_nodes":[[8391,3220]],"__id":19325,"parentNodes":[4]},{"type":"join","out_nodes":[[8395,-1]],"__id":19326,"parentNodes":[8397,8398],"constraint":{"type":"join-reference","out_nodes":[],"__id":19327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8391,-1]],"__id":19328,"parentNodes":[]},{"type":"type","out_nodes":[[9,3221],[14,3222],[20,3223],[30,3225],[20,3227],[30,3228]],"__id":19329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci177"}},{"type":"rightadapter","out_nodes":[[8394,3221]],"__id":19332,"parentNodes":[10]},{"type":"join","out_nodes":[[8399,-1]],"__id":19333,"parentNodes":[8400,8401],"constraint":{"type":"join-reference","out_nodes":[],"__id":19334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8394,-1]],"__id":19335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8398,3222]],"__id":19340,"parentNodes":[16]},{"type":"beta","out_nodes":[[8402,-1]],"__id":19341,"parentNodes":[8403,8404]},{"type":"leftadapter","out_nodes":[[8398,-1]],"__id":19342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8401,3223]],"__id":19347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8401,3224]],"__id":19351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19352,"parentNodes":[8406],"index":967,"rule":{"name":"Bootstrap177","pattern":{"type":"object","id":3550,"cls":"Fibonacci177","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap177"},{"type":"beta","out_nodes":[[8405,-1]],"__id":19353,"parentNodes":[8407,8408]},{"type":"rightadapter","out_nodes":[[8406,3225]],"__id":19358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8406,3226]],"__id":19362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19363,"parentNodes":[8410],"index":968,"rule":{"name":"Recurse177","pattern":{"type":"composite","id":3553,"leftPattern":{"type":"not","id":3551,"cls":"Fibonacci177","alias":"f"},"rightPattern":{"type":"object","id":3552,"cls":"Fibonacci177","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci177 = defined.get('Fibonacci177');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci177(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse177"},{"type":"beta","out_nodes":[[8409,-1]],"__id":19364,"parentNodes":[8411,8412]},{"type":"rightadapter","out_nodes":[[8410,3227]],"__id":19368,"parentNodes":[37]},{"type":"not","out_nodes":[[8413,-1]],"__id":19369,"parentNodes":[8414,8415],"constraint":{"type":"join-reference","out_nodes":[],"__id":19370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8410,-1]],"__id":19371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8412,3228]],"__id":19375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8412,3229]],"__id":19379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19380,"parentNodes":[8417],"index":969,"rule":{"name":"Calculate176","pattern":{"type":"composite","id":3560,"leftPattern":{"type":"composite","id":3559,"leftPattern":{"type":"composite","id":3558,"leftPattern":{"type":"object","id":3554,"cls":"Fibonacci176","alias":"f1"},"rightPattern":{"type":"object","id":3555,"cls":"Fibonacci176","alias":"f2"}},"rightPattern":{"type":"object","id":3556,"cls":"Fibonacci176","alias":"f3"}},"rightPattern":{"type":"object","id":3557,"cls":"Result176","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate176"},{"type":"beta","out_nodes":[[8416,-1]],"__id":19381,"parentNodes":[8419,8420]},{"type":"type","out_nodes":[[3,3230]],"__id":19382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result176"}},{"type":"rightadapter","out_nodes":[[8417,3230]],"__id":19385,"parentNodes":[4]},{"type":"join","out_nodes":[[8421,-1]],"__id":19386,"parentNodes":[8423,8424],"constraint":{"type":"join-reference","out_nodes":[],"__id":19387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8417,-1]],"__id":19388,"parentNodes":[]},{"type":"type","out_nodes":[[9,3231],[14,3232],[20,3233],[30,3235],[20,3237],[30,3238]],"__id":19389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci176"}},{"type":"rightadapter","out_nodes":[[8420,3231]],"__id":19392,"parentNodes":[10]},{"type":"join","out_nodes":[[8425,-1]],"__id":19393,"parentNodes":[8426,8427],"constraint":{"type":"join-reference","out_nodes":[],"__id":19394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8420,-1]],"__id":19395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8424,3232]],"__id":19400,"parentNodes":[16]},{"type":"beta","out_nodes":[[8428,-1]],"__id":19401,"parentNodes":[8429,8430]},{"type":"leftadapter","out_nodes":[[8424,-1]],"__id":19402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8427,3233]],"__id":19407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8427,3234]],"__id":19411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19412,"parentNodes":[8432],"index":970,"rule":{"name":"Bootstrap176","pattern":{"type":"object","id":3561,"cls":"Fibonacci176","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap176"},{"type":"beta","out_nodes":[[8431,-1]],"__id":19413,"parentNodes":[8433,8434]},{"type":"rightadapter","out_nodes":[[8432,3235]],"__id":19418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8432,3236]],"__id":19422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19423,"parentNodes":[8436],"index":971,"rule":{"name":"Recurse176","pattern":{"type":"composite","id":3564,"leftPattern":{"type":"not","id":3562,"cls":"Fibonacci176","alias":"f"},"rightPattern":{"type":"object","id":3563,"cls":"Fibonacci176","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci176 = defined.get('Fibonacci176');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci176(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse176"},{"type":"beta","out_nodes":[[8435,-1]],"__id":19424,"parentNodes":[8437,8438]},{"type":"rightadapter","out_nodes":[[8436,3237]],"__id":19428,"parentNodes":[37]},{"type":"not","out_nodes":[[8439,-1]],"__id":19429,"parentNodes":[8440,8441],"constraint":{"type":"join-reference","out_nodes":[],"__id":19430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8436,-1]],"__id":19431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8438,3238]],"__id":19435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8438,3239]],"__id":19439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19440,"parentNodes":[8443],"index":972,"rule":{"name":"Calculate175","pattern":{"type":"composite","id":3571,"leftPattern":{"type":"composite","id":3570,"leftPattern":{"type":"composite","id":3569,"leftPattern":{"type":"object","id":3565,"cls":"Fibonacci175","alias":"f1"},"rightPattern":{"type":"object","id":3566,"cls":"Fibonacci175","alias":"f2"}},"rightPattern":{"type":"object","id":3567,"cls":"Fibonacci175","alias":"f3"}},"rightPattern":{"type":"object","id":3568,"cls":"Result175","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate175"},{"type":"beta","out_nodes":[[8442,-1]],"__id":19441,"parentNodes":[8445,8446]},{"type":"type","out_nodes":[[3,3240]],"__id":19442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result175"}},{"type":"rightadapter","out_nodes":[[8443,3240]],"__id":19445,"parentNodes":[4]},{"type":"join","out_nodes":[[8447,-1]],"__id":19446,"parentNodes":[8449,8450],"constraint":{"type":"join-reference","out_nodes":[],"__id":19447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8443,-1]],"__id":19448,"parentNodes":[]},{"type":"type","out_nodes":[[9,3241],[14,3242],[20,3243],[30,3245],[20,3247],[30,3248]],"__id":19449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci175"}},{"type":"rightadapter","out_nodes":[[8446,3241]],"__id":19452,"parentNodes":[10]},{"type":"join","out_nodes":[[8451,-1]],"__id":19453,"parentNodes":[8452,8453],"constraint":{"type":"join-reference","out_nodes":[],"__id":19454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8446,-1]],"__id":19455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8450,3242]],"__id":19460,"parentNodes":[16]},{"type":"beta","out_nodes":[[8454,-1]],"__id":19461,"parentNodes":[8455,8456]},{"type":"leftadapter","out_nodes":[[8450,-1]],"__id":19462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8453,3243]],"__id":19467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8453,3244]],"__id":19471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19472,"parentNodes":[8458],"index":973,"rule":{"name":"Bootstrap175","pattern":{"type":"object","id":3572,"cls":"Fibonacci175","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap175"},{"type":"beta","out_nodes":[[8457,-1]],"__id":19473,"parentNodes":[8459,8460]},{"type":"rightadapter","out_nodes":[[8458,3245]],"__id":19478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8458,3246]],"__id":19482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19483,"parentNodes":[8462],"index":974,"rule":{"name":"Recurse175","pattern":{"type":"composite","id":3575,"leftPattern":{"type":"not","id":3573,"cls":"Fibonacci175","alias":"f"},"rightPattern":{"type":"object","id":3574,"cls":"Fibonacci175","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci175 = defined.get('Fibonacci175');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci175(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse175"},{"type":"beta","out_nodes":[[8461,-1]],"__id":19484,"parentNodes":[8463,8464]},{"type":"rightadapter","out_nodes":[[8462,3247]],"__id":19488,"parentNodes":[37]},{"type":"not","out_nodes":[[8465,-1]],"__id":19489,"parentNodes":[8466,8467],"constraint":{"type":"join-reference","out_nodes":[],"__id":19490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8462,-1]],"__id":19491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8464,3248]],"__id":19495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8464,3249]],"__id":19499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19500,"parentNodes":[8469],"index":975,"rule":{"name":"Calculate174","pattern":{"type":"composite","id":3582,"leftPattern":{"type":"composite","id":3581,"leftPattern":{"type":"composite","id":3580,"leftPattern":{"type":"object","id":3576,"cls":"Fibonacci174","alias":"f1"},"rightPattern":{"type":"object","id":3577,"cls":"Fibonacci174","alias":"f2"}},"rightPattern":{"type":"object","id":3578,"cls":"Fibonacci174","alias":"f3"}},"rightPattern":{"type":"object","id":3579,"cls":"Result174","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate174"},{"type":"beta","out_nodes":[[8468,-1]],"__id":19501,"parentNodes":[8471,8472]},{"type":"type","out_nodes":[[3,3250]],"__id":19502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result174"}},{"type":"rightadapter","out_nodes":[[8469,3250]],"__id":19505,"parentNodes":[4]},{"type":"join","out_nodes":[[8473,-1]],"__id":19506,"parentNodes":[8475,8476],"constraint":{"type":"join-reference","out_nodes":[],"__id":19507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8469,-1]],"__id":19508,"parentNodes":[]},{"type":"type","out_nodes":[[9,3251],[14,3252],[20,3253],[30,3255],[20,3257],[30,3258]],"__id":19509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci174"}},{"type":"rightadapter","out_nodes":[[8472,3251]],"__id":19512,"parentNodes":[10]},{"type":"join","out_nodes":[[8477,-1]],"__id":19513,"parentNodes":[8478,8479],"constraint":{"type":"join-reference","out_nodes":[],"__id":19514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8472,-1]],"__id":19515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8476,3252]],"__id":19520,"parentNodes":[16]},{"type":"beta","out_nodes":[[8480,-1]],"__id":19521,"parentNodes":[8481,8482]},{"type":"leftadapter","out_nodes":[[8476,-1]],"__id":19522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8479,3253]],"__id":19527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8479,3254]],"__id":19531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19532,"parentNodes":[8484],"index":976,"rule":{"name":"Bootstrap174","pattern":{"type":"object","id":3583,"cls":"Fibonacci174","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap174"},{"type":"beta","out_nodes":[[8483,-1]],"__id":19533,"parentNodes":[8485,8486]},{"type":"rightadapter","out_nodes":[[8484,3255]],"__id":19538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8484,3256]],"__id":19542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19543,"parentNodes":[8488],"index":977,"rule":{"name":"Recurse174","pattern":{"type":"composite","id":3586,"leftPattern":{"type":"not","id":3584,"cls":"Fibonacci174","alias":"f"},"rightPattern":{"type":"object","id":3585,"cls":"Fibonacci174","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci174 = defined.get('Fibonacci174');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci174(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse174"},{"type":"beta","out_nodes":[[8487,-1]],"__id":19544,"parentNodes":[8489,8490]},{"type":"rightadapter","out_nodes":[[8488,3257]],"__id":19548,"parentNodes":[37]},{"type":"not","out_nodes":[[8491,-1]],"__id":19549,"parentNodes":[8492,8493],"constraint":{"type":"join-reference","out_nodes":[],"__id":19550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8488,-1]],"__id":19551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8490,3258]],"__id":19555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8490,3259]],"__id":19559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19560,"parentNodes":[8495],"index":978,"rule":{"name":"Calculate173","pattern":{"type":"composite","id":3593,"leftPattern":{"type":"composite","id":3592,"leftPattern":{"type":"composite","id":3591,"leftPattern":{"type":"object","id":3587,"cls":"Fibonacci173","alias":"f1"},"rightPattern":{"type":"object","id":3588,"cls":"Fibonacci173","alias":"f2"}},"rightPattern":{"type":"object","id":3589,"cls":"Fibonacci173","alias":"f3"}},"rightPattern":{"type":"object","id":3590,"cls":"Result173","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate173"},{"type":"beta","out_nodes":[[8494,-1]],"__id":19561,"parentNodes":[8497,8498]},{"type":"type","out_nodes":[[3,3260]],"__id":19562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result173"}},{"type":"rightadapter","out_nodes":[[8495,3260]],"__id":19565,"parentNodes":[4]},{"type":"join","out_nodes":[[8499,-1]],"__id":19566,"parentNodes":[8501,8502],"constraint":{"type":"join-reference","out_nodes":[],"__id":19567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8495,-1]],"__id":19568,"parentNodes":[]},{"type":"type","out_nodes":[[9,3261],[14,3262],[20,3263],[30,3265],[20,3267],[30,3268]],"__id":19569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci173"}},{"type":"rightadapter","out_nodes":[[8498,3261]],"__id":19572,"parentNodes":[10]},{"type":"join","out_nodes":[[8503,-1]],"__id":19573,"parentNodes":[8504,8505],"constraint":{"type":"join-reference","out_nodes":[],"__id":19574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8498,-1]],"__id":19575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8502,3262]],"__id":19580,"parentNodes":[16]},{"type":"beta","out_nodes":[[8506,-1]],"__id":19581,"parentNodes":[8507,8508]},{"type":"leftadapter","out_nodes":[[8502,-1]],"__id":19582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8505,3263]],"__id":19587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8505,3264]],"__id":19591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19592,"parentNodes":[8510],"index":979,"rule":{"name":"Bootstrap173","pattern":{"type":"object","id":3594,"cls":"Fibonacci173","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap173"},{"type":"beta","out_nodes":[[8509,-1]],"__id":19593,"parentNodes":[8511,8512]},{"type":"rightadapter","out_nodes":[[8510,3265]],"__id":19598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8510,3266]],"__id":19602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19603,"parentNodes":[8514],"index":980,"rule":{"name":"Recurse173","pattern":{"type":"composite","id":3597,"leftPattern":{"type":"not","id":3595,"cls":"Fibonacci173","alias":"f"},"rightPattern":{"type":"object","id":3596,"cls":"Fibonacci173","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci173 = defined.get('Fibonacci173');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci173(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse173"},{"type":"beta","out_nodes":[[8513,-1]],"__id":19604,"parentNodes":[8515,8516]},{"type":"rightadapter","out_nodes":[[8514,3267]],"__id":19608,"parentNodes":[37]},{"type":"not","out_nodes":[[8517,-1]],"__id":19609,"parentNodes":[8518,8519],"constraint":{"type":"join-reference","out_nodes":[],"__id":19610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8514,-1]],"__id":19611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8516,3268]],"__id":19615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8516,3269]],"__id":19619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19620,"parentNodes":[8521],"index":981,"rule":{"name":"Calculate172","pattern":{"type":"composite","id":3604,"leftPattern":{"type":"composite","id":3603,"leftPattern":{"type":"composite","id":3602,"leftPattern":{"type":"object","id":3598,"cls":"Fibonacci172","alias":"f1"},"rightPattern":{"type":"object","id":3599,"cls":"Fibonacci172","alias":"f2"}},"rightPattern":{"type":"object","id":3600,"cls":"Fibonacci172","alias":"f3"}},"rightPattern":{"type":"object","id":3601,"cls":"Result172","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate172"},{"type":"beta","out_nodes":[[8520,-1]],"__id":19621,"parentNodes":[8523,8524]},{"type":"type","out_nodes":[[3,3270]],"__id":19622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result172"}},{"type":"rightadapter","out_nodes":[[8521,3270]],"__id":19625,"parentNodes":[4]},{"type":"join","out_nodes":[[8525,-1]],"__id":19626,"parentNodes":[8527,8528],"constraint":{"type":"join-reference","out_nodes":[],"__id":19627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8521,-1]],"__id":19628,"parentNodes":[]},{"type":"type","out_nodes":[[9,3271],[14,3272],[20,3273],[30,3275],[20,3277],[30,3278]],"__id":19629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci172"}},{"type":"rightadapter","out_nodes":[[8524,3271]],"__id":19632,"parentNodes":[10]},{"type":"join","out_nodes":[[8529,-1]],"__id":19633,"parentNodes":[8530,8531],"constraint":{"type":"join-reference","out_nodes":[],"__id":19634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8524,-1]],"__id":19635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8528,3272]],"__id":19640,"parentNodes":[16]},{"type":"beta","out_nodes":[[8532,-1]],"__id":19641,"parentNodes":[8533,8534]},{"type":"leftadapter","out_nodes":[[8528,-1]],"__id":19642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8531,3273]],"__id":19647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8531,3274]],"__id":19651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19652,"parentNodes":[8536],"index":982,"rule":{"name":"Bootstrap172","pattern":{"type":"object","id":3605,"cls":"Fibonacci172","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap172"},{"type":"beta","out_nodes":[[8535,-1]],"__id":19653,"parentNodes":[8537,8538]},{"type":"rightadapter","out_nodes":[[8536,3275]],"__id":19658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8536,3276]],"__id":19662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19663,"parentNodes":[8540],"index":983,"rule":{"name":"Recurse172","pattern":{"type":"composite","id":3608,"leftPattern":{"type":"not","id":3606,"cls":"Fibonacci172","alias":"f"},"rightPattern":{"type":"object","id":3607,"cls":"Fibonacci172","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci172 = defined.get('Fibonacci172');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci172(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse172"},{"type":"beta","out_nodes":[[8539,-1]],"__id":19664,"parentNodes":[8541,8542]},{"type":"rightadapter","out_nodes":[[8540,3277]],"__id":19668,"parentNodes":[37]},{"type":"not","out_nodes":[[8543,-1]],"__id":19669,"parentNodes":[8544,8545],"constraint":{"type":"join-reference","out_nodes":[],"__id":19670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8540,-1]],"__id":19671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8542,3278]],"__id":19675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8542,3279]],"__id":19679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19680,"parentNodes":[8547],"index":984,"rule":{"name":"Calculate171","pattern":{"type":"composite","id":3615,"leftPattern":{"type":"composite","id":3614,"leftPattern":{"type":"composite","id":3613,"leftPattern":{"type":"object","id":3609,"cls":"Fibonacci171","alias":"f1"},"rightPattern":{"type":"object","id":3610,"cls":"Fibonacci171","alias":"f2"}},"rightPattern":{"type":"object","id":3611,"cls":"Fibonacci171","alias":"f3"}},"rightPattern":{"type":"object","id":3612,"cls":"Result171","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate171"},{"type":"beta","out_nodes":[[8546,-1]],"__id":19681,"parentNodes":[8549,8550]},{"type":"type","out_nodes":[[3,3280]],"__id":19682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result171"}},{"type":"rightadapter","out_nodes":[[8547,3280]],"__id":19685,"parentNodes":[4]},{"type":"join","out_nodes":[[8551,-1]],"__id":19686,"parentNodes":[8553,8554],"constraint":{"type":"join-reference","out_nodes":[],"__id":19687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8547,-1]],"__id":19688,"parentNodes":[]},{"type":"type","out_nodes":[[9,3281],[14,3282],[20,3283],[30,3285],[20,3287],[30,3288]],"__id":19689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci171"}},{"type":"rightadapter","out_nodes":[[8550,3281]],"__id":19692,"parentNodes":[10]},{"type":"join","out_nodes":[[8555,-1]],"__id":19693,"parentNodes":[8556,8557],"constraint":{"type":"join-reference","out_nodes":[],"__id":19694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8550,-1]],"__id":19695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8554,3282]],"__id":19700,"parentNodes":[16]},{"type":"beta","out_nodes":[[8558,-1]],"__id":19701,"parentNodes":[8559,8560]},{"type":"leftadapter","out_nodes":[[8554,-1]],"__id":19702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8557,3283]],"__id":19707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8557,3284]],"__id":19711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19712,"parentNodes":[8562],"index":985,"rule":{"name":"Bootstrap171","pattern":{"type":"object","id":3616,"cls":"Fibonacci171","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap171"},{"type":"beta","out_nodes":[[8561,-1]],"__id":19713,"parentNodes":[8563,8564]},{"type":"rightadapter","out_nodes":[[8562,3285]],"__id":19718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8562,3286]],"__id":19722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19723,"parentNodes":[8566],"index":986,"rule":{"name":"Recurse171","pattern":{"type":"composite","id":3619,"leftPattern":{"type":"not","id":3617,"cls":"Fibonacci171","alias":"f"},"rightPattern":{"type":"object","id":3618,"cls":"Fibonacci171","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci171 = defined.get('Fibonacci171');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci171(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse171"},{"type":"beta","out_nodes":[[8565,-1]],"__id":19724,"parentNodes":[8567,8568]},{"type":"rightadapter","out_nodes":[[8566,3287]],"__id":19728,"parentNodes":[37]},{"type":"not","out_nodes":[[8569,-1]],"__id":19729,"parentNodes":[8570,8571],"constraint":{"type":"join-reference","out_nodes":[],"__id":19730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8566,-1]],"__id":19731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8568,3288]],"__id":19735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8568,3289]],"__id":19739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19740,"parentNodes":[8573],"index":987,"rule":{"name":"Calculate170","pattern":{"type":"composite","id":3626,"leftPattern":{"type":"composite","id":3625,"leftPattern":{"type":"composite","id":3624,"leftPattern":{"type":"object","id":3620,"cls":"Fibonacci170","alias":"f1"},"rightPattern":{"type":"object","id":3621,"cls":"Fibonacci170","alias":"f2"}},"rightPattern":{"type":"object","id":3622,"cls":"Fibonacci170","alias":"f3"}},"rightPattern":{"type":"object","id":3623,"cls":"Result170","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate170"},{"type":"beta","out_nodes":[[8572,-1]],"__id":19741,"parentNodes":[8575,8576]},{"type":"type","out_nodes":[[3,3290]],"__id":19742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result170"}},{"type":"rightadapter","out_nodes":[[8573,3290]],"__id":19745,"parentNodes":[4]},{"type":"join","out_nodes":[[8577,-1]],"__id":19746,"parentNodes":[8579,8580],"constraint":{"type":"join-reference","out_nodes":[],"__id":19747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8573,-1]],"__id":19748,"parentNodes":[]},{"type":"type","out_nodes":[[9,3291],[14,3292],[20,3293],[30,3295],[20,3297],[30,3298]],"__id":19749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci170"}},{"type":"rightadapter","out_nodes":[[8576,3291]],"__id":19752,"parentNodes":[10]},{"type":"join","out_nodes":[[8581,-1]],"__id":19753,"parentNodes":[8582,8583],"constraint":{"type":"join-reference","out_nodes":[],"__id":19754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8576,-1]],"__id":19755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8580,3292]],"__id":19760,"parentNodes":[16]},{"type":"beta","out_nodes":[[8584,-1]],"__id":19761,"parentNodes":[8585,8586]},{"type":"leftadapter","out_nodes":[[8580,-1]],"__id":19762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8583,3293]],"__id":19767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8583,3294]],"__id":19771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19772,"parentNodes":[8588],"index":988,"rule":{"name":"Bootstrap170","pattern":{"type":"object","id":3627,"cls":"Fibonacci170","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap170"},{"type":"beta","out_nodes":[[8587,-1]],"__id":19773,"parentNodes":[8589,8590]},{"type":"rightadapter","out_nodes":[[8588,3295]],"__id":19778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8588,3296]],"__id":19782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19783,"parentNodes":[8592],"index":989,"rule":{"name":"Recurse170","pattern":{"type":"composite","id":3630,"leftPattern":{"type":"not","id":3628,"cls":"Fibonacci170","alias":"f"},"rightPattern":{"type":"object","id":3629,"cls":"Fibonacci170","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');let Fibonacci170 = defined.get('Fibonacci170');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci170(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse170"},{"type":"beta","out_nodes":[[8591,-1]],"__id":19784,"parentNodes":[8593,8594]},{"type":"rightadapter","out_nodes":[[8592,3297]],"__id":19788,"parentNodes":[37]},{"type":"not","out_nodes":[[8595,-1]],"__id":19789,"parentNodes":[8596,8597],"constraint":{"type":"join-reference","out_nodes":[],"__id":19790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8592,-1]],"__id":19791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8594,3298]],"__id":19795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8594,3299]],"__id":19799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19800,"parentNodes":[8599],"index":990,"rule":{"name":"Calculate169","pattern":{"type":"composite","id":3637,"leftPattern":{"type":"composite","id":3636,"leftPattern":{"type":"composite","id":3635,"leftPattern":{"type":"object","id":3631,"cls":"Fibonacci169","alias":"f1"},"rightPattern":{"type":"object","id":3632,"cls":"Fibonacci169","alias":"f2"}},"rightPattern":{"type":"object","id":3633,"cls":"Fibonacci169","alias":"f3"}},"rightPattern":{"type":"object","id":3634,"cls":"Result169","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate169"},{"type":"beta","out_nodes":[[8598,-1]],"__id":19801,"parentNodes":[8601,8602]},{"type":"type","out_nodes":[[3,3300]],"__id":19802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result169"}},{"type":"rightadapter","out_nodes":[[8599,3300]],"__id":19805,"parentNodes":[4]},{"type":"join","out_nodes":[[8603,-1]],"__id":19806,"parentNodes":[8605,8606],"constraint":{"type":"join-reference","out_nodes":[],"__id":19807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8599,-1]],"__id":19808,"parentNodes":[]},{"type":"type","out_nodes":[[9,3301],[14,3302],[20,3303],[30,3305],[20,3307],[30,3308]],"__id":19809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci169"}},{"type":"rightadapter","out_nodes":[[8602,3301]],"__id":19812,"parentNodes":[10]},{"type":"join","out_nodes":[[8607,-1]],"__id":19813,"parentNodes":[8608,8609],"constraint":{"type":"join-reference","out_nodes":[],"__id":19814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8602,-1]],"__id":19815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8606,3302]],"__id":19820,"parentNodes":[16]},{"type":"beta","out_nodes":[[8610,-1]],"__id":19821,"parentNodes":[8611,8612]},{"type":"leftadapter","out_nodes":[[8606,-1]],"__id":19822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8609,3303]],"__id":19827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8609,3304]],"__id":19831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19832,"parentNodes":[8614],"index":991,"rule":{"name":"Bootstrap169","pattern":{"type":"object","id":3638,"cls":"Fibonacci169","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap169"},{"type":"beta","out_nodes":[[8613,-1]],"__id":19833,"parentNodes":[8615,8616]},{"type":"rightadapter","out_nodes":[[8614,3305]],"__id":19838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8614,3306]],"__id":19842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19843,"parentNodes":[8618],"index":992,"rule":{"name":"Recurse169","pattern":{"type":"composite","id":3641,"leftPattern":{"type":"not","id":3639,"cls":"Fibonacci169","alias":"f"},"rightPattern":{"type":"object","id":3640,"cls":"Fibonacci169","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci169 = defined.get('Fibonacci169');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci169(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse169"},{"type":"beta","out_nodes":[[8617,-1]],"__id":19844,"parentNodes":[8619,8620]},{"type":"rightadapter","out_nodes":[[8618,3307]],"__id":19848,"parentNodes":[37]},{"type":"not","out_nodes":[[8621,-1]],"__id":19849,"parentNodes":[8622,8623],"constraint":{"type":"join-reference","out_nodes":[],"__id":19850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8618,-1]],"__id":19851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8620,3308]],"__id":19855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8620,3309]],"__id":19859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19860,"parentNodes":[8625],"index":993,"rule":{"name":"Calculate168","pattern":{"type":"composite","id":3648,"leftPattern":{"type":"composite","id":3647,"leftPattern":{"type":"composite","id":3646,"leftPattern":{"type":"object","id":3642,"cls":"Fibonacci168","alias":"f1"},"rightPattern":{"type":"object","id":3643,"cls":"Fibonacci168","alias":"f2"}},"rightPattern":{"type":"object","id":3644,"cls":"Fibonacci168","alias":"f3"}},"rightPattern":{"type":"object","id":3645,"cls":"Result168","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate168"},{"type":"beta","out_nodes":[[8624,-1]],"__id":19861,"parentNodes":[8627,8628]},{"type":"type","out_nodes":[[3,3310]],"__id":19862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result168"}},{"type":"rightadapter","out_nodes":[[8625,3310]],"__id":19865,"parentNodes":[4]},{"type":"join","out_nodes":[[8629,-1]],"__id":19866,"parentNodes":[8631,8632],"constraint":{"type":"join-reference","out_nodes":[],"__id":19867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8625,-1]],"__id":19868,"parentNodes":[]},{"type":"type","out_nodes":[[9,3311],[14,3312],[20,3313],[30,3315],[20,3317],[30,3318]],"__id":19869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci168"}},{"type":"rightadapter","out_nodes":[[8628,3311]],"__id":19872,"parentNodes":[10]},{"type":"join","out_nodes":[[8633,-1]],"__id":19873,"parentNodes":[8634,8635],"constraint":{"type":"join-reference","out_nodes":[],"__id":19874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8628,-1]],"__id":19875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8632,3312]],"__id":19880,"parentNodes":[16]},{"type":"beta","out_nodes":[[8636,-1]],"__id":19881,"parentNodes":[8637,8638]},{"type":"leftadapter","out_nodes":[[8632,-1]],"__id":19882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8635,3313]],"__id":19887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8635,3314]],"__id":19891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19892,"parentNodes":[8640],"index":994,"rule":{"name":"Bootstrap168","pattern":{"type":"object","id":3649,"cls":"Fibonacci168","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap168"},{"type":"beta","out_nodes":[[8639,-1]],"__id":19893,"parentNodes":[8641,8642]},{"type":"rightadapter","out_nodes":[[8640,3315]],"__id":19898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8640,3316]],"__id":19902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19903,"parentNodes":[8644],"index":995,"rule":{"name":"Recurse168","pattern":{"type":"composite","id":3652,"leftPattern":{"type":"not","id":3650,"cls":"Fibonacci168","alias":"f"},"rightPattern":{"type":"object","id":3651,"cls":"Fibonacci168","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci168 = defined.get('Fibonacci168');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci168(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse168"},{"type":"beta","out_nodes":[[8643,-1]],"__id":19904,"parentNodes":[8645,8646]},{"type":"rightadapter","out_nodes":[[8644,3317]],"__id":19908,"parentNodes":[37]},{"type":"not","out_nodes":[[8647,-1]],"__id":19909,"parentNodes":[8648,8649],"constraint":{"type":"join-reference","out_nodes":[],"__id":19910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8644,-1]],"__id":19911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8646,3318]],"__id":19915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8646,3319]],"__id":19919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19920,"parentNodes":[8651],"index":996,"rule":{"name":"Calculate167","pattern":{"type":"composite","id":3659,"leftPattern":{"type":"composite","id":3658,"leftPattern":{"type":"composite","id":3657,"leftPattern":{"type":"object","id":3653,"cls":"Fibonacci167","alias":"f1"},"rightPattern":{"type":"object","id":3654,"cls":"Fibonacci167","alias":"f2"}},"rightPattern":{"type":"object","id":3655,"cls":"Fibonacci167","alias":"f3"}},"rightPattern":{"type":"object","id":3656,"cls":"Result167","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate167"},{"type":"beta","out_nodes":[[8650,-1]],"__id":19921,"parentNodes":[8653,8654]},{"type":"type","out_nodes":[[3,3320]],"__id":19922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result167"}},{"type":"rightadapter","out_nodes":[[8651,3320]],"__id":19925,"parentNodes":[4]},{"type":"join","out_nodes":[[8655,-1]],"__id":19926,"parentNodes":[8657,8658],"constraint":{"type":"join-reference","out_nodes":[],"__id":19927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8651,-1]],"__id":19928,"parentNodes":[]},{"type":"type","out_nodes":[[9,3321],[14,3322],[20,3323],[30,3325],[20,3327],[30,3328]],"__id":19929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci167"}},{"type":"rightadapter","out_nodes":[[8654,3321]],"__id":19932,"parentNodes":[10]},{"type":"join","out_nodes":[[8659,-1]],"__id":19933,"parentNodes":[8660,8661],"constraint":{"type":"join-reference","out_nodes":[],"__id":19934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8654,-1]],"__id":19935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8658,3322]],"__id":19940,"parentNodes":[16]},{"type":"beta","out_nodes":[[8662,-1]],"__id":19941,"parentNodes":[8663,8664]},{"type":"leftadapter","out_nodes":[[8658,-1]],"__id":19942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8661,3323]],"__id":19947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8661,3324]],"__id":19951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19952,"parentNodes":[8666],"index":997,"rule":{"name":"Bootstrap167","pattern":{"type":"object","id":3660,"cls":"Fibonacci167","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap167"},{"type":"beta","out_nodes":[[8665,-1]],"__id":19953,"parentNodes":[8667,8668]},{"type":"rightadapter","out_nodes":[[8666,3325]],"__id":19958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8666,3326]],"__id":19962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19963,"parentNodes":[8670],"index":998,"rule":{"name":"Recurse167","pattern":{"type":"composite","id":3663,"leftPattern":{"type":"not","id":3661,"cls":"Fibonacci167","alias":"f"},"rightPattern":{"type":"object","id":3662,"cls":"Fibonacci167","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci167 = defined.get('Fibonacci167');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci167(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse167"},{"type":"beta","out_nodes":[[8669,-1]],"__id":19964,"parentNodes":[8671,8672]},{"type":"rightadapter","out_nodes":[[8670,3327]],"__id":19968,"parentNodes":[37]},{"type":"not","out_nodes":[[8673,-1]],"__id":19969,"parentNodes":[8674,8675],"constraint":{"type":"join-reference","out_nodes":[],"__id":19970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8670,-1]],"__id":19971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8672,3328]],"__id":19975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8672,3329]],"__id":19979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":19980,"parentNodes":[8677],"index":999,"rule":{"name":"Calculate166","pattern":{"type":"composite","id":3670,"leftPattern":{"type":"composite","id":3669,"leftPattern":{"type":"composite","id":3668,"leftPattern":{"type":"object","id":3664,"cls":"Fibonacci166","alias":"f1"},"rightPattern":{"type":"object","id":3665,"cls":"Fibonacci166","alias":"f2"}},"rightPattern":{"type":"object","id":3666,"cls":"Fibonacci166","alias":"f3"}},"rightPattern":{"type":"object","id":3667,"cls":"Result166","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate166"},{"type":"beta","out_nodes":[[8676,-1]],"__id":19981,"parentNodes":[8679,8680]},{"type":"type","out_nodes":[[3,3330]],"__id":19982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result166"}},{"type":"rightadapter","out_nodes":[[8677,3330]],"__id":19985,"parentNodes":[4]},{"type":"join","out_nodes":[[8681,-1]],"__id":19986,"parentNodes":[8683,8684],"constraint":{"type":"join-reference","out_nodes":[],"__id":19987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8677,-1]],"__id":19988,"parentNodes":[]},{"type":"type","out_nodes":[[9,3331],[14,3332],[20,3333],[30,3335],[20,3337],[30,3338]],"__id":19989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci166"}},{"type":"rightadapter","out_nodes":[[8680,3331]],"__id":19992,"parentNodes":[10]},{"type":"join","out_nodes":[[8685,-1]],"__id":19993,"parentNodes":[8686,8687],"constraint":{"type":"join-reference","out_nodes":[],"__id":19994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8680,-1]],"__id":19995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8684,3332]],"__id":20000,"parentNodes":[16]},{"type":"beta","out_nodes":[[8688,-1]],"__id":20001,"parentNodes":[8689,8690]},{"type":"leftadapter","out_nodes":[[8684,-1]],"__id":20002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8687,3333]],"__id":20007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8687,3334]],"__id":20011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20012,"parentNodes":[8692],"index":1000,"rule":{"name":"Bootstrap166","pattern":{"type":"object","id":3671,"cls":"Fibonacci166","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap166"},{"type":"beta","out_nodes":[[8691,-1]],"__id":20013,"parentNodes":[8693,8694]},{"type":"rightadapter","out_nodes":[[8692,3335]],"__id":20018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8692,3336]],"__id":20022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20023,"parentNodes":[8696],"index":1001,"rule":{"name":"Recurse166","pattern":{"type":"composite","id":3674,"leftPattern":{"type":"not","id":3672,"cls":"Fibonacci166","alias":"f"},"rightPattern":{"type":"object","id":3673,"cls":"Fibonacci166","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci166 = defined.get('Fibonacci166');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci166(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse166"},{"type":"beta","out_nodes":[[8695,-1]],"__id":20024,"parentNodes":[8697,8698]},{"type":"rightadapter","out_nodes":[[8696,3337]],"__id":20028,"parentNodes":[37]},{"type":"not","out_nodes":[[8699,-1]],"__id":20029,"parentNodes":[8700,8701],"constraint":{"type":"join-reference","out_nodes":[],"__id":20030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8696,-1]],"__id":20031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8698,3338]],"__id":20035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8698,3339]],"__id":20039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20040,"parentNodes":[8703],"index":1002,"rule":{"name":"Calculate165","pattern":{"type":"composite","id":3681,"leftPattern":{"type":"composite","id":3680,"leftPattern":{"type":"composite","id":3679,"leftPattern":{"type":"object","id":3675,"cls":"Fibonacci165","alias":"f1"},"rightPattern":{"type":"object","id":3676,"cls":"Fibonacci165","alias":"f2"}},"rightPattern":{"type":"object","id":3677,"cls":"Fibonacci165","alias":"f3"}},"rightPattern":{"type":"object","id":3678,"cls":"Result165","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate165"},{"type":"beta","out_nodes":[[8702,-1]],"__id":20041,"parentNodes":[8705,8706]},{"type":"type","out_nodes":[[3,3340]],"__id":20042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result165"}},{"type":"rightadapter","out_nodes":[[8703,3340]],"__id":20045,"parentNodes":[4]},{"type":"join","out_nodes":[[8707,-1]],"__id":20046,"parentNodes":[8709,8710],"constraint":{"type":"join-reference","out_nodes":[],"__id":20047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8703,-1]],"__id":20048,"parentNodes":[]},{"type":"type","out_nodes":[[9,3341],[14,3342],[20,3343],[30,3345],[20,3347],[30,3348]],"__id":20049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci165"}},{"type":"rightadapter","out_nodes":[[8706,3341]],"__id":20052,"parentNodes":[10]},{"type":"join","out_nodes":[[8711,-1]],"__id":20053,"parentNodes":[8712,8713],"constraint":{"type":"join-reference","out_nodes":[],"__id":20054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8706,-1]],"__id":20055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8710,3342]],"__id":20060,"parentNodes":[16]},{"type":"beta","out_nodes":[[8714,-1]],"__id":20061,"parentNodes":[8715,8716]},{"type":"leftadapter","out_nodes":[[8710,-1]],"__id":20062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8713,3343]],"__id":20067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8713,3344]],"__id":20071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20072,"parentNodes":[8718],"index":1003,"rule":{"name":"Bootstrap165","pattern":{"type":"object","id":3682,"cls":"Fibonacci165","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap165"},{"type":"beta","out_nodes":[[8717,-1]],"__id":20073,"parentNodes":[8719,8720]},{"type":"rightadapter","out_nodes":[[8718,3345]],"__id":20078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8718,3346]],"__id":20082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20083,"parentNodes":[8722],"index":1004,"rule":{"name":"Recurse165","pattern":{"type":"composite","id":3685,"leftPattern":{"type":"not","id":3683,"cls":"Fibonacci165","alias":"f"},"rightPattern":{"type":"object","id":3684,"cls":"Fibonacci165","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci165 = defined.get('Fibonacci165');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci165(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse165"},{"type":"beta","out_nodes":[[8721,-1]],"__id":20084,"parentNodes":[8723,8724]},{"type":"rightadapter","out_nodes":[[8722,3347]],"__id":20088,"parentNodes":[37]},{"type":"not","out_nodes":[[8725,-1]],"__id":20089,"parentNodes":[8726,8727],"constraint":{"type":"join-reference","out_nodes":[],"__id":20090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8722,-1]],"__id":20091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8724,3348]],"__id":20095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8724,3349]],"__id":20099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20100,"parentNodes":[8729],"index":1005,"rule":{"name":"Calculate164","pattern":{"type":"composite","id":3692,"leftPattern":{"type":"composite","id":3691,"leftPattern":{"type":"composite","id":3690,"leftPattern":{"type":"object","id":3686,"cls":"Fibonacci164","alias":"f1"},"rightPattern":{"type":"object","id":3687,"cls":"Fibonacci164","alias":"f2"}},"rightPattern":{"type":"object","id":3688,"cls":"Fibonacci164","alias":"f3"}},"rightPattern":{"type":"object","id":3689,"cls":"Result164","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate164"},{"type":"beta","out_nodes":[[8728,-1]],"__id":20101,"parentNodes":[8731,8732]},{"type":"type","out_nodes":[[3,3350]],"__id":20102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result164"}},{"type":"rightadapter","out_nodes":[[8729,3350]],"__id":20105,"parentNodes":[4]},{"type":"join","out_nodes":[[8733,-1]],"__id":20106,"parentNodes":[8735,8736],"constraint":{"type":"join-reference","out_nodes":[],"__id":20107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8729,-1]],"__id":20108,"parentNodes":[]},{"type":"type","out_nodes":[[9,3351],[14,3352],[20,3353],[30,3355],[20,3357],[30,3358]],"__id":20109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci164"}},{"type":"rightadapter","out_nodes":[[8732,3351]],"__id":20112,"parentNodes":[10]},{"type":"join","out_nodes":[[8737,-1]],"__id":20113,"parentNodes":[8738,8739],"constraint":{"type":"join-reference","out_nodes":[],"__id":20114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8732,-1]],"__id":20115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8736,3352]],"__id":20120,"parentNodes":[16]},{"type":"beta","out_nodes":[[8740,-1]],"__id":20121,"parentNodes":[8741,8742]},{"type":"leftadapter","out_nodes":[[8736,-1]],"__id":20122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8739,3353]],"__id":20127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8739,3354]],"__id":20131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20132,"parentNodes":[8744],"index":1006,"rule":{"name":"Bootstrap164","pattern":{"type":"object","id":3693,"cls":"Fibonacci164","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap164"},{"type":"beta","out_nodes":[[8743,-1]],"__id":20133,"parentNodes":[8745,8746]},{"type":"rightadapter","out_nodes":[[8744,3355]],"__id":20138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8744,3356]],"__id":20142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20143,"parentNodes":[8748],"index":1007,"rule":{"name":"Recurse164","pattern":{"type":"composite","id":3696,"leftPattern":{"type":"not","id":3694,"cls":"Fibonacci164","alias":"f"},"rightPattern":{"type":"object","id":3695,"cls":"Fibonacci164","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci164 = defined.get('Fibonacci164');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci164(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse164"},{"type":"beta","out_nodes":[[8747,-1]],"__id":20144,"parentNodes":[8749,8750]},{"type":"rightadapter","out_nodes":[[8748,3357]],"__id":20148,"parentNodes":[37]},{"type":"not","out_nodes":[[8751,-1]],"__id":20149,"parentNodes":[8752,8753],"constraint":{"type":"join-reference","out_nodes":[],"__id":20150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8748,-1]],"__id":20151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8750,3358]],"__id":20155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8750,3359]],"__id":20159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20160,"parentNodes":[8755],"index":1008,"rule":{"name":"Calculate163","pattern":{"type":"composite","id":3703,"leftPattern":{"type":"composite","id":3702,"leftPattern":{"type":"composite","id":3701,"leftPattern":{"type":"object","id":3697,"cls":"Fibonacci163","alias":"f1"},"rightPattern":{"type":"object","id":3698,"cls":"Fibonacci163","alias":"f2"}},"rightPattern":{"type":"object","id":3699,"cls":"Fibonacci163","alias":"f3"}},"rightPattern":{"type":"object","id":3700,"cls":"Result163","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate163"},{"type":"beta","out_nodes":[[8754,-1]],"__id":20161,"parentNodes":[8757,8758]},{"type":"type","out_nodes":[[3,3360]],"__id":20162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result163"}},{"type":"rightadapter","out_nodes":[[8755,3360]],"__id":20165,"parentNodes":[4]},{"type":"join","out_nodes":[[8759,-1]],"__id":20166,"parentNodes":[8761,8762],"constraint":{"type":"join-reference","out_nodes":[],"__id":20167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8755,-1]],"__id":20168,"parentNodes":[]},{"type":"type","out_nodes":[[9,3361],[14,3362],[20,3363],[30,3365],[20,3367],[30,3368]],"__id":20169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci163"}},{"type":"rightadapter","out_nodes":[[8758,3361]],"__id":20172,"parentNodes":[10]},{"type":"join","out_nodes":[[8763,-1]],"__id":20173,"parentNodes":[8764,8765],"constraint":{"type":"join-reference","out_nodes":[],"__id":20174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8758,-1]],"__id":20175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8762,3362]],"__id":20180,"parentNodes":[16]},{"type":"beta","out_nodes":[[8766,-1]],"__id":20181,"parentNodes":[8767,8768]},{"type":"leftadapter","out_nodes":[[8762,-1]],"__id":20182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8765,3363]],"__id":20187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8765,3364]],"__id":20191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20192,"parentNodes":[8770],"index":1009,"rule":{"name":"Bootstrap163","pattern":{"type":"object","id":3704,"cls":"Fibonacci163","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap163"},{"type":"beta","out_nodes":[[8769,-1]],"__id":20193,"parentNodes":[8771,8772]},{"type":"rightadapter","out_nodes":[[8770,3365]],"__id":20198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8770,3366]],"__id":20202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20203,"parentNodes":[8774],"index":1010,"rule":{"name":"Recurse163","pattern":{"type":"composite","id":3707,"leftPattern":{"type":"not","id":3705,"cls":"Fibonacci163","alias":"f"},"rightPattern":{"type":"object","id":3706,"cls":"Fibonacci163","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci163 = defined.get('Fibonacci163');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci163(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse163"},{"type":"beta","out_nodes":[[8773,-1]],"__id":20204,"parentNodes":[8775,8776]},{"type":"rightadapter","out_nodes":[[8774,3367]],"__id":20208,"parentNodes":[37]},{"type":"not","out_nodes":[[8777,-1]],"__id":20209,"parentNodes":[8778,8779],"constraint":{"type":"join-reference","out_nodes":[],"__id":20210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8774,-1]],"__id":20211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8776,3368]],"__id":20215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8776,3369]],"__id":20219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20220,"parentNodes":[8781],"index":1011,"rule":{"name":"Calculate162","pattern":{"type":"composite","id":3714,"leftPattern":{"type":"composite","id":3713,"leftPattern":{"type":"composite","id":3712,"leftPattern":{"type":"object","id":3708,"cls":"Fibonacci162","alias":"f1"},"rightPattern":{"type":"object","id":3709,"cls":"Fibonacci162","alias":"f2"}},"rightPattern":{"type":"object","id":3710,"cls":"Fibonacci162","alias":"f3"}},"rightPattern":{"type":"object","id":3711,"cls":"Result162","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate162"},{"type":"beta","out_nodes":[[8780,-1]],"__id":20221,"parentNodes":[8783,8784]},{"type":"type","out_nodes":[[3,3370]],"__id":20222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result162"}},{"type":"rightadapter","out_nodes":[[8781,3370]],"__id":20225,"parentNodes":[4]},{"type":"join","out_nodes":[[8785,-1]],"__id":20226,"parentNodes":[8787,8788],"constraint":{"type":"join-reference","out_nodes":[],"__id":20227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8781,-1]],"__id":20228,"parentNodes":[]},{"type":"type","out_nodes":[[9,3371],[14,3372],[20,3373],[30,3375],[20,3377],[30,3378]],"__id":20229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci162"}},{"type":"rightadapter","out_nodes":[[8784,3371]],"__id":20232,"parentNodes":[10]},{"type":"join","out_nodes":[[8789,-1]],"__id":20233,"parentNodes":[8790,8791],"constraint":{"type":"join-reference","out_nodes":[],"__id":20234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8784,-1]],"__id":20235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8788,3372]],"__id":20240,"parentNodes":[16]},{"type":"beta","out_nodes":[[8792,-1]],"__id":20241,"parentNodes":[8793,8794]},{"type":"leftadapter","out_nodes":[[8788,-1]],"__id":20242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8791,3373]],"__id":20247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8791,3374]],"__id":20251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20252,"parentNodes":[8796],"index":1012,"rule":{"name":"Bootstrap162","pattern":{"type":"object","id":3715,"cls":"Fibonacci162","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap162"},{"type":"beta","out_nodes":[[8795,-1]],"__id":20253,"parentNodes":[8797,8798]},{"type":"rightadapter","out_nodes":[[8796,3375]],"__id":20258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8796,3376]],"__id":20262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20263,"parentNodes":[8800],"index":1013,"rule":{"name":"Recurse162","pattern":{"type":"composite","id":3718,"leftPattern":{"type":"not","id":3716,"cls":"Fibonacci162","alias":"f"},"rightPattern":{"type":"object","id":3717,"cls":"Fibonacci162","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci162 = defined.get('Fibonacci162');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci162(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse162"},{"type":"beta","out_nodes":[[8799,-1]],"__id":20264,"parentNodes":[8801,8802]},{"type":"rightadapter","out_nodes":[[8800,3377]],"__id":20268,"parentNodes":[37]},{"type":"not","out_nodes":[[8803,-1]],"__id":20269,"parentNodes":[8804,8805],"constraint":{"type":"join-reference","out_nodes":[],"__id":20270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8800,-1]],"__id":20271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8802,3378]],"__id":20275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8802,3379]],"__id":20279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20280,"parentNodes":[8807],"index":1014,"rule":{"name":"Calculate161","pattern":{"type":"composite","id":3725,"leftPattern":{"type":"composite","id":3724,"leftPattern":{"type":"composite","id":3723,"leftPattern":{"type":"object","id":3719,"cls":"Fibonacci161","alias":"f1"},"rightPattern":{"type":"object","id":3720,"cls":"Fibonacci161","alias":"f2"}},"rightPattern":{"type":"object","id":3721,"cls":"Fibonacci161","alias":"f3"}},"rightPattern":{"type":"object","id":3722,"cls":"Result161","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate161"},{"type":"beta","out_nodes":[[8806,-1]],"__id":20281,"parentNodes":[8809,8810]},{"type":"type","out_nodes":[[3,3380]],"__id":20282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result161"}},{"type":"rightadapter","out_nodes":[[8807,3380]],"__id":20285,"parentNodes":[4]},{"type":"join","out_nodes":[[8811,-1]],"__id":20286,"parentNodes":[8813,8814],"constraint":{"type":"join-reference","out_nodes":[],"__id":20287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8807,-1]],"__id":20288,"parentNodes":[]},{"type":"type","out_nodes":[[9,3381],[14,3382],[20,3383],[30,3385],[20,3387],[30,3388]],"__id":20289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci161"}},{"type":"rightadapter","out_nodes":[[8810,3381]],"__id":20292,"parentNodes":[10]},{"type":"join","out_nodes":[[8815,-1]],"__id":20293,"parentNodes":[8816,8817],"constraint":{"type":"join-reference","out_nodes":[],"__id":20294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8810,-1]],"__id":20295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8814,3382]],"__id":20300,"parentNodes":[16]},{"type":"beta","out_nodes":[[8818,-1]],"__id":20301,"parentNodes":[8819,8820]},{"type":"leftadapter","out_nodes":[[8814,-1]],"__id":20302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8817,3383]],"__id":20307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8817,3384]],"__id":20311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20312,"parentNodes":[8822],"index":1015,"rule":{"name":"Bootstrap161","pattern":{"type":"object","id":3726,"cls":"Fibonacci161","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap161"},{"type":"beta","out_nodes":[[8821,-1]],"__id":20313,"parentNodes":[8823,8824]},{"type":"rightadapter","out_nodes":[[8822,3385]],"__id":20318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8822,3386]],"__id":20322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20323,"parentNodes":[8826],"index":1016,"rule":{"name":"Recurse161","pattern":{"type":"composite","id":3729,"leftPattern":{"type":"not","id":3727,"cls":"Fibonacci161","alias":"f"},"rightPattern":{"type":"object","id":3728,"cls":"Fibonacci161","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci161 = defined.get('Fibonacci161');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci161(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse161"},{"type":"beta","out_nodes":[[8825,-1]],"__id":20324,"parentNodes":[8827,8828]},{"type":"rightadapter","out_nodes":[[8826,3387]],"__id":20328,"parentNodes":[37]},{"type":"not","out_nodes":[[8829,-1]],"__id":20329,"parentNodes":[8830,8831],"constraint":{"type":"join-reference","out_nodes":[],"__id":20330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8826,-1]],"__id":20331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8828,3388]],"__id":20335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8828,3389]],"__id":20339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20340,"parentNodes":[8833],"index":1017,"rule":{"name":"Calculate160","pattern":{"type":"composite","id":3736,"leftPattern":{"type":"composite","id":3735,"leftPattern":{"type":"composite","id":3734,"leftPattern":{"type":"object","id":3730,"cls":"Fibonacci160","alias":"f1"},"rightPattern":{"type":"object","id":3731,"cls":"Fibonacci160","alias":"f2"}},"rightPattern":{"type":"object","id":3732,"cls":"Fibonacci160","alias":"f3"}},"rightPattern":{"type":"object","id":3733,"cls":"Result160","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate160"},{"type":"beta","out_nodes":[[8832,-1]],"__id":20341,"parentNodes":[8835,8836]},{"type":"type","out_nodes":[[3,3390]],"__id":20342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result160"}},{"type":"rightadapter","out_nodes":[[8833,3390]],"__id":20345,"parentNodes":[4]},{"type":"join","out_nodes":[[8837,-1]],"__id":20346,"parentNodes":[8839,8840],"constraint":{"type":"join-reference","out_nodes":[],"__id":20347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8833,-1]],"__id":20348,"parentNodes":[]},{"type":"type","out_nodes":[[9,3391],[14,3392],[20,3393],[30,3395],[20,3397],[30,3398]],"__id":20349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci160"}},{"type":"rightadapter","out_nodes":[[8836,3391]],"__id":20352,"parentNodes":[10]},{"type":"join","out_nodes":[[8841,-1]],"__id":20353,"parentNodes":[8842,8843],"constraint":{"type":"join-reference","out_nodes":[],"__id":20354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8836,-1]],"__id":20355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8840,3392]],"__id":20360,"parentNodes":[16]},{"type":"beta","out_nodes":[[8844,-1]],"__id":20361,"parentNodes":[8845,8846]},{"type":"leftadapter","out_nodes":[[8840,-1]],"__id":20362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8843,3393]],"__id":20367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8843,3394]],"__id":20371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20372,"parentNodes":[8848],"index":1018,"rule":{"name":"Bootstrap160","pattern":{"type":"object","id":3737,"cls":"Fibonacci160","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap160"},{"type":"beta","out_nodes":[[8847,-1]],"__id":20373,"parentNodes":[8849,8850]},{"type":"rightadapter","out_nodes":[[8848,3395]],"__id":20378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8848,3396]],"__id":20382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20383,"parentNodes":[8852],"index":1019,"rule":{"name":"Recurse160","pattern":{"type":"composite","id":3740,"leftPattern":{"type":"not","id":3738,"cls":"Fibonacci160","alias":"f"},"rightPattern":{"type":"object","id":3739,"cls":"Fibonacci160","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');let Fibonacci160 = defined.get('Fibonacci160');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci160(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse160"},{"type":"beta","out_nodes":[[8851,-1]],"__id":20384,"parentNodes":[8853,8854]},{"type":"rightadapter","out_nodes":[[8852,3397]],"__id":20388,"parentNodes":[37]},{"type":"not","out_nodes":[[8855,-1]],"__id":20389,"parentNodes":[8856,8857],"constraint":{"type":"join-reference","out_nodes":[],"__id":20390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8852,-1]],"__id":20391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8854,3398]],"__id":20395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8854,3399]],"__id":20399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20400,"parentNodes":[8859],"index":1020,"rule":{"name":"Calculate159","pattern":{"type":"composite","id":3747,"leftPattern":{"type":"composite","id":3746,"leftPattern":{"type":"composite","id":3745,"leftPattern":{"type":"object","id":3741,"cls":"Fibonacci159","alias":"f1"},"rightPattern":{"type":"object","id":3742,"cls":"Fibonacci159","alias":"f2"}},"rightPattern":{"type":"object","id":3743,"cls":"Fibonacci159","alias":"f3"}},"rightPattern":{"type":"object","id":3744,"cls":"Result159","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate159"},{"type":"beta","out_nodes":[[8858,-1]],"__id":20401,"parentNodes":[8861,8862]},{"type":"type","out_nodes":[[3,3400]],"__id":20402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result159"}},{"type":"rightadapter","out_nodes":[[8859,3400]],"__id":20405,"parentNodes":[4]},{"type":"join","out_nodes":[[8863,-1]],"__id":20406,"parentNodes":[8865,8866],"constraint":{"type":"join-reference","out_nodes":[],"__id":20407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8859,-1]],"__id":20408,"parentNodes":[]},{"type":"type","out_nodes":[[9,3401],[14,3402],[20,3403],[30,3405],[20,3407],[30,3408]],"__id":20409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci159"}},{"type":"rightadapter","out_nodes":[[8862,3401]],"__id":20412,"parentNodes":[10]},{"type":"join","out_nodes":[[8867,-1]],"__id":20413,"parentNodes":[8868,8869],"constraint":{"type":"join-reference","out_nodes":[],"__id":20414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8862,-1]],"__id":20415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8866,3402]],"__id":20420,"parentNodes":[16]},{"type":"beta","out_nodes":[[8870,-1]],"__id":20421,"parentNodes":[8871,8872]},{"type":"leftadapter","out_nodes":[[8866,-1]],"__id":20422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8869,3403]],"__id":20427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8869,3404]],"__id":20431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20432,"parentNodes":[8874],"index":1021,"rule":{"name":"Bootstrap159","pattern":{"type":"object","id":3748,"cls":"Fibonacci159","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap159"},{"type":"beta","out_nodes":[[8873,-1]],"__id":20433,"parentNodes":[8875,8876]},{"type":"rightadapter","out_nodes":[[8874,3405]],"__id":20438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8874,3406]],"__id":20442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20443,"parentNodes":[8878],"index":1022,"rule":{"name":"Recurse159","pattern":{"type":"composite","id":3751,"leftPattern":{"type":"not","id":3749,"cls":"Fibonacci159","alias":"f"},"rightPattern":{"type":"object","id":3750,"cls":"Fibonacci159","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci159 = defined.get('Fibonacci159');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci159(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse159"},{"type":"beta","out_nodes":[[8877,-1]],"__id":20444,"parentNodes":[8879,8880]},{"type":"rightadapter","out_nodes":[[8878,3407]],"__id":20448,"parentNodes":[37]},{"type":"not","out_nodes":[[8881,-1]],"__id":20449,"parentNodes":[8882,8883],"constraint":{"type":"join-reference","out_nodes":[],"__id":20450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8878,-1]],"__id":20451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8880,3408]],"__id":20455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8880,3409]],"__id":20459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20460,"parentNodes":[8885],"index":1023,"rule":{"name":"Calculate158","pattern":{"type":"composite","id":3758,"leftPattern":{"type":"composite","id":3757,"leftPattern":{"type":"composite","id":3756,"leftPattern":{"type":"object","id":3752,"cls":"Fibonacci158","alias":"f1"},"rightPattern":{"type":"object","id":3753,"cls":"Fibonacci158","alias":"f2"}},"rightPattern":{"type":"object","id":3754,"cls":"Fibonacci158","alias":"f3"}},"rightPattern":{"type":"object","id":3755,"cls":"Result158","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate158"},{"type":"beta","out_nodes":[[8884,-1]],"__id":20461,"parentNodes":[8887,8888]},{"type":"type","out_nodes":[[3,3410]],"__id":20462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result158"}},{"type":"rightadapter","out_nodes":[[8885,3410]],"__id":20465,"parentNodes":[4]},{"type":"join","out_nodes":[[8889,-1]],"__id":20466,"parentNodes":[8891,8892],"constraint":{"type":"join-reference","out_nodes":[],"__id":20467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8885,-1]],"__id":20468,"parentNodes":[]},{"type":"type","out_nodes":[[9,3411],[14,3412],[20,3413],[30,3415],[20,3417],[30,3418]],"__id":20469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci158"}},{"type":"rightadapter","out_nodes":[[8888,3411]],"__id":20472,"parentNodes":[10]},{"type":"join","out_nodes":[[8893,-1]],"__id":20473,"parentNodes":[8894,8895],"constraint":{"type":"join-reference","out_nodes":[],"__id":20474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8888,-1]],"__id":20475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8892,3412]],"__id":20480,"parentNodes":[16]},{"type":"beta","out_nodes":[[8896,-1]],"__id":20481,"parentNodes":[8897,8898]},{"type":"leftadapter","out_nodes":[[8892,-1]],"__id":20482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8895,3413]],"__id":20487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8895,3414]],"__id":20491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20492,"parentNodes":[8900],"index":1024,"rule":{"name":"Bootstrap158","pattern":{"type":"object","id":3759,"cls":"Fibonacci158","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap158"},{"type":"beta","out_nodes":[[8899,-1]],"__id":20493,"parentNodes":[8901,8902]},{"type":"rightadapter","out_nodes":[[8900,3415]],"__id":20498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8900,3416]],"__id":20502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20503,"parentNodes":[8904],"index":1025,"rule":{"name":"Recurse158","pattern":{"type":"composite","id":3762,"leftPattern":{"type":"not","id":3760,"cls":"Fibonacci158","alias":"f"},"rightPattern":{"type":"object","id":3761,"cls":"Fibonacci158","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci158 = defined.get('Fibonacci158');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci158(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse158"},{"type":"beta","out_nodes":[[8903,-1]],"__id":20504,"parentNodes":[8905,8906]},{"type":"rightadapter","out_nodes":[[8904,3417]],"__id":20508,"parentNodes":[37]},{"type":"not","out_nodes":[[8907,-1]],"__id":20509,"parentNodes":[8908,8909],"constraint":{"type":"join-reference","out_nodes":[],"__id":20510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8904,-1]],"__id":20511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8906,3418]],"__id":20515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8906,3419]],"__id":20519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20520,"parentNodes":[8911],"index":1026,"rule":{"name":"Calculate157","pattern":{"type":"composite","id":3769,"leftPattern":{"type":"composite","id":3768,"leftPattern":{"type":"composite","id":3767,"leftPattern":{"type":"object","id":3763,"cls":"Fibonacci157","alias":"f1"},"rightPattern":{"type":"object","id":3764,"cls":"Fibonacci157","alias":"f2"}},"rightPattern":{"type":"object","id":3765,"cls":"Fibonacci157","alias":"f3"}},"rightPattern":{"type":"object","id":3766,"cls":"Result157","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate157"},{"type":"beta","out_nodes":[[8910,-1]],"__id":20521,"parentNodes":[8913,8914]},{"type":"type","out_nodes":[[3,3420]],"__id":20522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result157"}},{"type":"rightadapter","out_nodes":[[8911,3420]],"__id":20525,"parentNodes":[4]},{"type":"join","out_nodes":[[8915,-1]],"__id":20526,"parentNodes":[8917,8918],"constraint":{"type":"join-reference","out_nodes":[],"__id":20527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8911,-1]],"__id":20528,"parentNodes":[]},{"type":"type","out_nodes":[[9,3421],[14,3422],[20,3423],[30,3425],[20,3427],[30,3428]],"__id":20529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci157"}},{"type":"rightadapter","out_nodes":[[8914,3421]],"__id":20532,"parentNodes":[10]},{"type":"join","out_nodes":[[8919,-1]],"__id":20533,"parentNodes":[8920,8921],"constraint":{"type":"join-reference","out_nodes":[],"__id":20534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8914,-1]],"__id":20535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8918,3422]],"__id":20540,"parentNodes":[16]},{"type":"beta","out_nodes":[[8922,-1]],"__id":20541,"parentNodes":[8923,8924]},{"type":"leftadapter","out_nodes":[[8918,-1]],"__id":20542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8921,3423]],"__id":20547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8921,3424]],"__id":20551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20552,"parentNodes":[8926],"index":1027,"rule":{"name":"Bootstrap157","pattern":{"type":"object","id":3770,"cls":"Fibonacci157","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap157"},{"type":"beta","out_nodes":[[8925,-1]],"__id":20553,"parentNodes":[8927,8928]},{"type":"rightadapter","out_nodes":[[8926,3425]],"__id":20558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8926,3426]],"__id":20562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20563,"parentNodes":[8930],"index":1028,"rule":{"name":"Recurse157","pattern":{"type":"composite","id":3773,"leftPattern":{"type":"not","id":3771,"cls":"Fibonacci157","alias":"f"},"rightPattern":{"type":"object","id":3772,"cls":"Fibonacci157","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci157 = defined.get('Fibonacci157');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci157(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse157"},{"type":"beta","out_nodes":[[8929,-1]],"__id":20564,"parentNodes":[8931,8932]},{"type":"rightadapter","out_nodes":[[8930,3427]],"__id":20568,"parentNodes":[37]},{"type":"not","out_nodes":[[8933,-1]],"__id":20569,"parentNodes":[8934,8935],"constraint":{"type":"join-reference","out_nodes":[],"__id":20570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8930,-1]],"__id":20571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8932,3428]],"__id":20575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8932,3429]],"__id":20579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20580,"parentNodes":[8937],"index":1029,"rule":{"name":"Calculate156","pattern":{"type":"composite","id":3780,"leftPattern":{"type":"composite","id":3779,"leftPattern":{"type":"composite","id":3778,"leftPattern":{"type":"object","id":3774,"cls":"Fibonacci156","alias":"f1"},"rightPattern":{"type":"object","id":3775,"cls":"Fibonacci156","alias":"f2"}},"rightPattern":{"type":"object","id":3776,"cls":"Fibonacci156","alias":"f3"}},"rightPattern":{"type":"object","id":3777,"cls":"Result156","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate156"},{"type":"beta","out_nodes":[[8936,-1]],"__id":20581,"parentNodes":[8939,8940]},{"type":"type","out_nodes":[[3,3430]],"__id":20582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result156"}},{"type":"rightadapter","out_nodes":[[8937,3430]],"__id":20585,"parentNodes":[4]},{"type":"join","out_nodes":[[8941,-1]],"__id":20586,"parentNodes":[8943,8944],"constraint":{"type":"join-reference","out_nodes":[],"__id":20587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8937,-1]],"__id":20588,"parentNodes":[]},{"type":"type","out_nodes":[[9,3431],[14,3432],[20,3433],[30,3435],[20,3437],[30,3438]],"__id":20589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci156"}},{"type":"rightadapter","out_nodes":[[8940,3431]],"__id":20592,"parentNodes":[10]},{"type":"join","out_nodes":[[8945,-1]],"__id":20593,"parentNodes":[8946,8947],"constraint":{"type":"join-reference","out_nodes":[],"__id":20594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8940,-1]],"__id":20595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8944,3432]],"__id":20600,"parentNodes":[16]},{"type":"beta","out_nodes":[[8948,-1]],"__id":20601,"parentNodes":[8949,8950]},{"type":"leftadapter","out_nodes":[[8944,-1]],"__id":20602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8947,3433]],"__id":20607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8947,3434]],"__id":20611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20612,"parentNodes":[8952],"index":1030,"rule":{"name":"Bootstrap156","pattern":{"type":"object","id":3781,"cls":"Fibonacci156","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap156"},{"type":"beta","out_nodes":[[8951,-1]],"__id":20613,"parentNodes":[8953,8954]},{"type":"rightadapter","out_nodes":[[8952,3435]],"__id":20618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8952,3436]],"__id":20622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20623,"parentNodes":[8956],"index":1031,"rule":{"name":"Recurse156","pattern":{"type":"composite","id":3784,"leftPattern":{"type":"not","id":3782,"cls":"Fibonacci156","alias":"f"},"rightPattern":{"type":"object","id":3783,"cls":"Fibonacci156","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci156 = defined.get('Fibonacci156');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci156(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse156"},{"type":"beta","out_nodes":[[8955,-1]],"__id":20624,"parentNodes":[8957,8958]},{"type":"rightadapter","out_nodes":[[8956,3437]],"__id":20628,"parentNodes":[37]},{"type":"not","out_nodes":[[8959,-1]],"__id":20629,"parentNodes":[8960,8961],"constraint":{"type":"join-reference","out_nodes":[],"__id":20630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8956,-1]],"__id":20631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8958,3438]],"__id":20635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8958,3439]],"__id":20639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20640,"parentNodes":[8963],"index":1032,"rule":{"name":"Calculate155","pattern":{"type":"composite","id":3791,"leftPattern":{"type":"composite","id":3790,"leftPattern":{"type":"composite","id":3789,"leftPattern":{"type":"object","id":3785,"cls":"Fibonacci155","alias":"f1"},"rightPattern":{"type":"object","id":3786,"cls":"Fibonacci155","alias":"f2"}},"rightPattern":{"type":"object","id":3787,"cls":"Fibonacci155","alias":"f3"}},"rightPattern":{"type":"object","id":3788,"cls":"Result155","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate155"},{"type":"beta","out_nodes":[[8962,-1]],"__id":20641,"parentNodes":[8965,8966]},{"type":"type","out_nodes":[[3,3440]],"__id":20642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result155"}},{"type":"rightadapter","out_nodes":[[8963,3440]],"__id":20645,"parentNodes":[4]},{"type":"join","out_nodes":[[8967,-1]],"__id":20646,"parentNodes":[8969,8970],"constraint":{"type":"join-reference","out_nodes":[],"__id":20647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8963,-1]],"__id":20648,"parentNodes":[]},{"type":"type","out_nodes":[[9,3441],[14,3442],[20,3443],[30,3445],[20,3447],[30,3448]],"__id":20649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci155"}},{"type":"rightadapter","out_nodes":[[8966,3441]],"__id":20652,"parentNodes":[10]},{"type":"join","out_nodes":[[8971,-1]],"__id":20653,"parentNodes":[8972,8973],"constraint":{"type":"join-reference","out_nodes":[],"__id":20654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8966,-1]],"__id":20655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8970,3442]],"__id":20660,"parentNodes":[16]},{"type":"beta","out_nodes":[[8974,-1]],"__id":20661,"parentNodes":[8975,8976]},{"type":"leftadapter","out_nodes":[[8970,-1]],"__id":20662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8973,3443]],"__id":20667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8973,3444]],"__id":20671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20672,"parentNodes":[8978],"index":1033,"rule":{"name":"Bootstrap155","pattern":{"type":"object","id":3792,"cls":"Fibonacci155","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap155"},{"type":"beta","out_nodes":[[8977,-1]],"__id":20673,"parentNodes":[8979,8980]},{"type":"rightadapter","out_nodes":[[8978,3445]],"__id":20678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[8978,3446]],"__id":20682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20683,"parentNodes":[8982],"index":1034,"rule":{"name":"Recurse155","pattern":{"type":"composite","id":3795,"leftPattern":{"type":"not","id":3793,"cls":"Fibonacci155","alias":"f"},"rightPattern":{"type":"object","id":3794,"cls":"Fibonacci155","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci155 = defined.get('Fibonacci155');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci155(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse155"},{"type":"beta","out_nodes":[[8981,-1]],"__id":20684,"parentNodes":[8983,8984]},{"type":"rightadapter","out_nodes":[[8982,3447]],"__id":20688,"parentNodes":[37]},{"type":"not","out_nodes":[[8985,-1]],"__id":20689,"parentNodes":[8986,8987],"constraint":{"type":"join-reference","out_nodes":[],"__id":20690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[8982,-1]],"__id":20691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8984,3448]],"__id":20695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[8984,3449]],"__id":20699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20700,"parentNodes":[8989],"index":1035,"rule":{"name":"Calculate154","pattern":{"type":"composite","id":3802,"leftPattern":{"type":"composite","id":3801,"leftPattern":{"type":"composite","id":3800,"leftPattern":{"type":"object","id":3796,"cls":"Fibonacci154","alias":"f1"},"rightPattern":{"type":"object","id":3797,"cls":"Fibonacci154","alias":"f2"}},"rightPattern":{"type":"object","id":3798,"cls":"Fibonacci154","alias":"f3"}},"rightPattern":{"type":"object","id":3799,"cls":"Result154","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate154"},{"type":"beta","out_nodes":[[8988,-1]],"__id":20701,"parentNodes":[8991,8992]},{"type":"type","out_nodes":[[3,3450]],"__id":20702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result154"}},{"type":"rightadapter","out_nodes":[[8989,3450]],"__id":20705,"parentNodes":[4]},{"type":"join","out_nodes":[[8993,-1]],"__id":20706,"parentNodes":[8995,8996],"constraint":{"type":"join-reference","out_nodes":[],"__id":20707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8989,-1]],"__id":20708,"parentNodes":[]},{"type":"type","out_nodes":[[9,3451],[14,3452],[20,3453],[30,3455],[20,3457],[30,3458]],"__id":20709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci154"}},{"type":"rightadapter","out_nodes":[[8992,3451]],"__id":20712,"parentNodes":[10]},{"type":"join","out_nodes":[[8997,-1]],"__id":20713,"parentNodes":[8998,8999],"constraint":{"type":"join-reference","out_nodes":[],"__id":20714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[8992,-1]],"__id":20715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8996,3452]],"__id":20720,"parentNodes":[16]},{"type":"beta","out_nodes":[[9000,-1]],"__id":20721,"parentNodes":[9001,9002]},{"type":"leftadapter","out_nodes":[[8996,-1]],"__id":20722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[8999,3453]],"__id":20727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[8999,3454]],"__id":20731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20732,"parentNodes":[9004],"index":1036,"rule":{"name":"Bootstrap154","pattern":{"type":"object","id":3803,"cls":"Fibonacci154","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap154"},{"type":"beta","out_nodes":[[9003,-1]],"__id":20733,"parentNodes":[9005,9006]},{"type":"rightadapter","out_nodes":[[9004,3455]],"__id":20738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9004,3456]],"__id":20742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20743,"parentNodes":[9008],"index":1037,"rule":{"name":"Recurse154","pattern":{"type":"composite","id":3806,"leftPattern":{"type":"not","id":3804,"cls":"Fibonacci154","alias":"f"},"rightPattern":{"type":"object","id":3805,"cls":"Fibonacci154","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci154 = defined.get('Fibonacci154');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci154(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse154"},{"type":"beta","out_nodes":[[9007,-1]],"__id":20744,"parentNodes":[9009,9010]},{"type":"rightadapter","out_nodes":[[9008,3457]],"__id":20748,"parentNodes":[37]},{"type":"not","out_nodes":[[9011,-1]],"__id":20749,"parentNodes":[9012,9013],"constraint":{"type":"join-reference","out_nodes":[],"__id":20750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9008,-1]],"__id":20751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9010,3458]],"__id":20755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9010,3459]],"__id":20759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20760,"parentNodes":[9015],"index":1038,"rule":{"name":"Calculate153","pattern":{"type":"composite","id":3813,"leftPattern":{"type":"composite","id":3812,"leftPattern":{"type":"composite","id":3811,"leftPattern":{"type":"object","id":3807,"cls":"Fibonacci153","alias":"f1"},"rightPattern":{"type":"object","id":3808,"cls":"Fibonacci153","alias":"f2"}},"rightPattern":{"type":"object","id":3809,"cls":"Fibonacci153","alias":"f3"}},"rightPattern":{"type":"object","id":3810,"cls":"Result153","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate153"},{"type":"beta","out_nodes":[[9014,-1]],"__id":20761,"parentNodes":[9017,9018]},{"type":"type","out_nodes":[[3,3460]],"__id":20762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result153"}},{"type":"rightadapter","out_nodes":[[9015,3460]],"__id":20765,"parentNodes":[4]},{"type":"join","out_nodes":[[9019,-1]],"__id":20766,"parentNodes":[9021,9022],"constraint":{"type":"join-reference","out_nodes":[],"__id":20767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9015,-1]],"__id":20768,"parentNodes":[]},{"type":"type","out_nodes":[[9,3461],[14,3462],[20,3463],[30,3465],[20,3467],[30,3468]],"__id":20769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci153"}},{"type":"rightadapter","out_nodes":[[9018,3461]],"__id":20772,"parentNodes":[10]},{"type":"join","out_nodes":[[9023,-1]],"__id":20773,"parentNodes":[9024,9025],"constraint":{"type":"join-reference","out_nodes":[],"__id":20774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9018,-1]],"__id":20775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9022,3462]],"__id":20780,"parentNodes":[16]},{"type":"beta","out_nodes":[[9026,-1]],"__id":20781,"parentNodes":[9027,9028]},{"type":"leftadapter","out_nodes":[[9022,-1]],"__id":20782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9025,3463]],"__id":20787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9025,3464]],"__id":20791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20792,"parentNodes":[9030],"index":1039,"rule":{"name":"Bootstrap153","pattern":{"type":"object","id":3814,"cls":"Fibonacci153","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap153"},{"type":"beta","out_nodes":[[9029,-1]],"__id":20793,"parentNodes":[9031,9032]},{"type":"rightadapter","out_nodes":[[9030,3465]],"__id":20798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9030,3466]],"__id":20802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20803,"parentNodes":[9034],"index":1040,"rule":{"name":"Recurse153","pattern":{"type":"composite","id":3817,"leftPattern":{"type":"not","id":3815,"cls":"Fibonacci153","alias":"f"},"rightPattern":{"type":"object","id":3816,"cls":"Fibonacci153","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci153 = defined.get('Fibonacci153');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci153(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse153"},{"type":"beta","out_nodes":[[9033,-1]],"__id":20804,"parentNodes":[9035,9036]},{"type":"rightadapter","out_nodes":[[9034,3467]],"__id":20808,"parentNodes":[37]},{"type":"not","out_nodes":[[9037,-1]],"__id":20809,"parentNodes":[9038,9039],"constraint":{"type":"join-reference","out_nodes":[],"__id":20810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9034,-1]],"__id":20811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9036,3468]],"__id":20815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9036,3469]],"__id":20819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20820,"parentNodes":[9041],"index":1041,"rule":{"name":"Calculate152","pattern":{"type":"composite","id":3824,"leftPattern":{"type":"composite","id":3823,"leftPattern":{"type":"composite","id":3822,"leftPattern":{"type":"object","id":3818,"cls":"Fibonacci152","alias":"f1"},"rightPattern":{"type":"object","id":3819,"cls":"Fibonacci152","alias":"f2"}},"rightPattern":{"type":"object","id":3820,"cls":"Fibonacci152","alias":"f3"}},"rightPattern":{"type":"object","id":3821,"cls":"Result152","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate152"},{"type":"beta","out_nodes":[[9040,-1]],"__id":20821,"parentNodes":[9043,9044]},{"type":"type","out_nodes":[[3,3470]],"__id":20822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result152"}},{"type":"rightadapter","out_nodes":[[9041,3470]],"__id":20825,"parentNodes":[4]},{"type":"join","out_nodes":[[9045,-1]],"__id":20826,"parentNodes":[9047,9048],"constraint":{"type":"join-reference","out_nodes":[],"__id":20827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9041,-1]],"__id":20828,"parentNodes":[]},{"type":"type","out_nodes":[[9,3471],[14,3472],[20,3473],[30,3475],[20,3477],[30,3478]],"__id":20829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci152"}},{"type":"rightadapter","out_nodes":[[9044,3471]],"__id":20832,"parentNodes":[10]},{"type":"join","out_nodes":[[9049,-1]],"__id":20833,"parentNodes":[9050,9051],"constraint":{"type":"join-reference","out_nodes":[],"__id":20834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9044,-1]],"__id":20835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9048,3472]],"__id":20840,"parentNodes":[16]},{"type":"beta","out_nodes":[[9052,-1]],"__id":20841,"parentNodes":[9053,9054]},{"type":"leftadapter","out_nodes":[[9048,-1]],"__id":20842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9051,3473]],"__id":20847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9051,3474]],"__id":20851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20852,"parentNodes":[9056],"index":1042,"rule":{"name":"Bootstrap152","pattern":{"type":"object","id":3825,"cls":"Fibonacci152","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap152"},{"type":"beta","out_nodes":[[9055,-1]],"__id":20853,"parentNodes":[9057,9058]},{"type":"rightadapter","out_nodes":[[9056,3475]],"__id":20858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9056,3476]],"__id":20862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20863,"parentNodes":[9060],"index":1043,"rule":{"name":"Recurse152","pattern":{"type":"composite","id":3828,"leftPattern":{"type":"not","id":3826,"cls":"Fibonacci152","alias":"f"},"rightPattern":{"type":"object","id":3827,"cls":"Fibonacci152","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci152 = defined.get('Fibonacci152');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci152(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse152"},{"type":"beta","out_nodes":[[9059,-1]],"__id":20864,"parentNodes":[9061,9062]},{"type":"rightadapter","out_nodes":[[9060,3477]],"__id":20868,"parentNodes":[37]},{"type":"not","out_nodes":[[9063,-1]],"__id":20869,"parentNodes":[9064,9065],"constraint":{"type":"join-reference","out_nodes":[],"__id":20870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9060,-1]],"__id":20871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9062,3478]],"__id":20875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9062,3479]],"__id":20879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20880,"parentNodes":[9067],"index":1044,"rule":{"name":"Calculate151","pattern":{"type":"composite","id":3835,"leftPattern":{"type":"composite","id":3834,"leftPattern":{"type":"composite","id":3833,"leftPattern":{"type":"object","id":3829,"cls":"Fibonacci151","alias":"f1"},"rightPattern":{"type":"object","id":3830,"cls":"Fibonacci151","alias":"f2"}},"rightPattern":{"type":"object","id":3831,"cls":"Fibonacci151","alias":"f3"}},"rightPattern":{"type":"object","id":3832,"cls":"Result151","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate151"},{"type":"beta","out_nodes":[[9066,-1]],"__id":20881,"parentNodes":[9069,9070]},{"type":"type","out_nodes":[[3,3480]],"__id":20882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result151"}},{"type":"rightadapter","out_nodes":[[9067,3480]],"__id":20885,"parentNodes":[4]},{"type":"join","out_nodes":[[9071,-1]],"__id":20886,"parentNodes":[9073,9074],"constraint":{"type":"join-reference","out_nodes":[],"__id":20887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9067,-1]],"__id":20888,"parentNodes":[]},{"type":"type","out_nodes":[[9,3481],[14,3482],[20,3483],[30,3485],[20,3487],[30,3488]],"__id":20889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci151"}},{"type":"rightadapter","out_nodes":[[9070,3481]],"__id":20892,"parentNodes":[10]},{"type":"join","out_nodes":[[9075,-1]],"__id":20893,"parentNodes":[9076,9077],"constraint":{"type":"join-reference","out_nodes":[],"__id":20894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9070,-1]],"__id":20895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9074,3482]],"__id":20900,"parentNodes":[16]},{"type":"beta","out_nodes":[[9078,-1]],"__id":20901,"parentNodes":[9079,9080]},{"type":"leftadapter","out_nodes":[[9074,-1]],"__id":20902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9077,3483]],"__id":20907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9077,3484]],"__id":20911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20912,"parentNodes":[9082],"index":1045,"rule":{"name":"Bootstrap151","pattern":{"type":"object","id":3836,"cls":"Fibonacci151","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap151"},{"type":"beta","out_nodes":[[9081,-1]],"__id":20913,"parentNodes":[9083,9084]},{"type":"rightadapter","out_nodes":[[9082,3485]],"__id":20918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9082,3486]],"__id":20922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20923,"parentNodes":[9086],"index":1046,"rule":{"name":"Recurse151","pattern":{"type":"composite","id":3839,"leftPattern":{"type":"not","id":3837,"cls":"Fibonacci151","alias":"f"},"rightPattern":{"type":"object","id":3838,"cls":"Fibonacci151","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci151 = defined.get('Fibonacci151');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci151(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse151"},{"type":"beta","out_nodes":[[9085,-1]],"__id":20924,"parentNodes":[9087,9088]},{"type":"rightadapter","out_nodes":[[9086,3487]],"__id":20928,"parentNodes":[37]},{"type":"not","out_nodes":[[9089,-1]],"__id":20929,"parentNodes":[9090,9091],"constraint":{"type":"join-reference","out_nodes":[],"__id":20930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9086,-1]],"__id":20931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9088,3488]],"__id":20935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9088,3489]],"__id":20939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20940,"parentNodes":[9093],"index":1047,"rule":{"name":"Calculate150","pattern":{"type":"composite","id":3846,"leftPattern":{"type":"composite","id":3845,"leftPattern":{"type":"composite","id":3844,"leftPattern":{"type":"object","id":3840,"cls":"Fibonacci150","alias":"f1"},"rightPattern":{"type":"object","id":3841,"cls":"Fibonacci150","alias":"f2"}},"rightPattern":{"type":"object","id":3842,"cls":"Fibonacci150","alias":"f3"}},"rightPattern":{"type":"object","id":3843,"cls":"Result150","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate150"},{"type":"beta","out_nodes":[[9092,-1]],"__id":20941,"parentNodes":[9095,9096]},{"type":"type","out_nodes":[[3,3490]],"__id":20942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result150"}},{"type":"rightadapter","out_nodes":[[9093,3490]],"__id":20945,"parentNodes":[4]},{"type":"join","out_nodes":[[9097,-1]],"__id":20946,"parentNodes":[9099,9100],"constraint":{"type":"join-reference","out_nodes":[],"__id":20947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9093,-1]],"__id":20948,"parentNodes":[]},{"type":"type","out_nodes":[[9,3491],[14,3492],[20,3493],[30,3495],[20,3497],[30,3498]],"__id":20949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci150"}},{"type":"rightadapter","out_nodes":[[9096,3491]],"__id":20952,"parentNodes":[10]},{"type":"join","out_nodes":[[9101,-1]],"__id":20953,"parentNodes":[9102,9103],"constraint":{"type":"join-reference","out_nodes":[],"__id":20954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9096,-1]],"__id":20955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9100,3492]],"__id":20960,"parentNodes":[16]},{"type":"beta","out_nodes":[[9104,-1]],"__id":20961,"parentNodes":[9105,9106]},{"type":"leftadapter","out_nodes":[[9100,-1]],"__id":20962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9103,3493]],"__id":20967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9103,3494]],"__id":20971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20972,"parentNodes":[9108],"index":1048,"rule":{"name":"Bootstrap150","pattern":{"type":"object","id":3847,"cls":"Fibonacci150","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap150"},{"type":"beta","out_nodes":[[9107,-1]],"__id":20973,"parentNodes":[9109,9110]},{"type":"rightadapter","out_nodes":[[9108,3495]],"__id":20978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9108,3496]],"__id":20982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":20983,"parentNodes":[9112],"index":1049,"rule":{"name":"Recurse150","pattern":{"type":"composite","id":3850,"leftPattern":{"type":"not","id":3848,"cls":"Fibonacci150","alias":"f"},"rightPattern":{"type":"object","id":3849,"cls":"Fibonacci150","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');let Fibonacci150 = defined.get('Fibonacci150');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci150(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse150"},{"type":"beta","out_nodes":[[9111,-1]],"__id":20984,"parentNodes":[9113,9114]},{"type":"rightadapter","out_nodes":[[9112,3497]],"__id":20988,"parentNodes":[37]},{"type":"not","out_nodes":[[9115,-1]],"__id":20989,"parentNodes":[9116,9117],"constraint":{"type":"join-reference","out_nodes":[],"__id":20990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9112,-1]],"__id":20991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9114,3498]],"__id":20995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9114,3499]],"__id":20999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21000,"parentNodes":[9119],"index":1050,"rule":{"name":"Calculate149","pattern":{"type":"composite","id":3857,"leftPattern":{"type":"composite","id":3856,"leftPattern":{"type":"composite","id":3855,"leftPattern":{"type":"object","id":3851,"cls":"Fibonacci149","alias":"f1"},"rightPattern":{"type":"object","id":3852,"cls":"Fibonacci149","alias":"f2"}},"rightPattern":{"type":"object","id":3853,"cls":"Fibonacci149","alias":"f3"}},"rightPattern":{"type":"object","id":3854,"cls":"Result149","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate149"},{"type":"beta","out_nodes":[[9118,-1]],"__id":21001,"parentNodes":[9121,9122]},{"type":"type","out_nodes":[[3,3500]],"__id":21002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result149"}},{"type":"rightadapter","out_nodes":[[9119,3500]],"__id":21005,"parentNodes":[4]},{"type":"join","out_nodes":[[9123,-1]],"__id":21006,"parentNodes":[9125,9126],"constraint":{"type":"join-reference","out_nodes":[],"__id":21007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9119,-1]],"__id":21008,"parentNodes":[]},{"type":"type","out_nodes":[[9,3501],[14,3502],[20,3503],[30,3505],[20,3507],[30,3508]],"__id":21009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci149"}},{"type":"rightadapter","out_nodes":[[9122,3501]],"__id":21012,"parentNodes":[10]},{"type":"join","out_nodes":[[9127,-1]],"__id":21013,"parentNodes":[9128,9129],"constraint":{"type":"join-reference","out_nodes":[],"__id":21014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9122,-1]],"__id":21015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9126,3502]],"__id":21020,"parentNodes":[16]},{"type":"beta","out_nodes":[[9130,-1]],"__id":21021,"parentNodes":[9131,9132]},{"type":"leftadapter","out_nodes":[[9126,-1]],"__id":21022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9129,3503]],"__id":21027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9129,3504]],"__id":21031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21032,"parentNodes":[9134],"index":1051,"rule":{"name":"Bootstrap149","pattern":{"type":"object","id":3858,"cls":"Fibonacci149","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap149"},{"type":"beta","out_nodes":[[9133,-1]],"__id":21033,"parentNodes":[9135,9136]},{"type":"rightadapter","out_nodes":[[9134,3505]],"__id":21038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9134,3506]],"__id":21042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21043,"parentNodes":[9138],"index":1052,"rule":{"name":"Recurse149","pattern":{"type":"composite","id":3861,"leftPattern":{"type":"not","id":3859,"cls":"Fibonacci149","alias":"f"},"rightPattern":{"type":"object","id":3860,"cls":"Fibonacci149","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci149 = defined.get('Fibonacci149');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci149(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse149"},{"type":"beta","out_nodes":[[9137,-1]],"__id":21044,"parentNodes":[9139,9140]},{"type":"rightadapter","out_nodes":[[9138,3507]],"__id":21048,"parentNodes":[37]},{"type":"not","out_nodes":[[9141,-1]],"__id":21049,"parentNodes":[9142,9143],"constraint":{"type":"join-reference","out_nodes":[],"__id":21050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9138,-1]],"__id":21051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9140,3508]],"__id":21055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9140,3509]],"__id":21059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21060,"parentNodes":[9145],"index":1053,"rule":{"name":"Calculate148","pattern":{"type":"composite","id":3868,"leftPattern":{"type":"composite","id":3867,"leftPattern":{"type":"composite","id":3866,"leftPattern":{"type":"object","id":3862,"cls":"Fibonacci148","alias":"f1"},"rightPattern":{"type":"object","id":3863,"cls":"Fibonacci148","alias":"f2"}},"rightPattern":{"type":"object","id":3864,"cls":"Fibonacci148","alias":"f3"}},"rightPattern":{"type":"object","id":3865,"cls":"Result148","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate148"},{"type":"beta","out_nodes":[[9144,-1]],"__id":21061,"parentNodes":[9147,9148]},{"type":"type","out_nodes":[[3,3510]],"__id":21062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result148"}},{"type":"rightadapter","out_nodes":[[9145,3510]],"__id":21065,"parentNodes":[4]},{"type":"join","out_nodes":[[9149,-1]],"__id":21066,"parentNodes":[9151,9152],"constraint":{"type":"join-reference","out_nodes":[],"__id":21067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9145,-1]],"__id":21068,"parentNodes":[]},{"type":"type","out_nodes":[[9,3511],[14,3512],[20,3513],[30,3515],[20,3517],[30,3518]],"__id":21069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci148"}},{"type":"rightadapter","out_nodes":[[9148,3511]],"__id":21072,"parentNodes":[10]},{"type":"join","out_nodes":[[9153,-1]],"__id":21073,"parentNodes":[9154,9155],"constraint":{"type":"join-reference","out_nodes":[],"__id":21074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9148,-1]],"__id":21075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9152,3512]],"__id":21080,"parentNodes":[16]},{"type":"beta","out_nodes":[[9156,-1]],"__id":21081,"parentNodes":[9157,9158]},{"type":"leftadapter","out_nodes":[[9152,-1]],"__id":21082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9155,3513]],"__id":21087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9155,3514]],"__id":21091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21092,"parentNodes":[9160],"index":1054,"rule":{"name":"Bootstrap148","pattern":{"type":"object","id":3869,"cls":"Fibonacci148","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap148"},{"type":"beta","out_nodes":[[9159,-1]],"__id":21093,"parentNodes":[9161,9162]},{"type":"rightadapter","out_nodes":[[9160,3515]],"__id":21098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9160,3516]],"__id":21102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21103,"parentNodes":[9164],"index":1055,"rule":{"name":"Recurse148","pattern":{"type":"composite","id":3872,"leftPattern":{"type":"not","id":3870,"cls":"Fibonacci148","alias":"f"},"rightPattern":{"type":"object","id":3871,"cls":"Fibonacci148","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci148 = defined.get('Fibonacci148');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci148(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse148"},{"type":"beta","out_nodes":[[9163,-1]],"__id":21104,"parentNodes":[9165,9166]},{"type":"rightadapter","out_nodes":[[9164,3517]],"__id":21108,"parentNodes":[37]},{"type":"not","out_nodes":[[9167,-1]],"__id":21109,"parentNodes":[9168,9169],"constraint":{"type":"join-reference","out_nodes":[],"__id":21110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9164,-1]],"__id":21111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9166,3518]],"__id":21115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9166,3519]],"__id":21119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21120,"parentNodes":[9171],"index":1056,"rule":{"name":"Calculate147","pattern":{"type":"composite","id":3879,"leftPattern":{"type":"composite","id":3878,"leftPattern":{"type":"composite","id":3877,"leftPattern":{"type":"object","id":3873,"cls":"Fibonacci147","alias":"f1"},"rightPattern":{"type":"object","id":3874,"cls":"Fibonacci147","alias":"f2"}},"rightPattern":{"type":"object","id":3875,"cls":"Fibonacci147","alias":"f3"}},"rightPattern":{"type":"object","id":3876,"cls":"Result147","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate147"},{"type":"beta","out_nodes":[[9170,-1]],"__id":21121,"parentNodes":[9173,9174]},{"type":"type","out_nodes":[[3,3520]],"__id":21122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result147"}},{"type":"rightadapter","out_nodes":[[9171,3520]],"__id":21125,"parentNodes":[4]},{"type":"join","out_nodes":[[9175,-1]],"__id":21126,"parentNodes":[9177,9178],"constraint":{"type":"join-reference","out_nodes":[],"__id":21127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9171,-1]],"__id":21128,"parentNodes":[]},{"type":"type","out_nodes":[[9,3521],[14,3522],[20,3523],[30,3525],[20,3527],[30,3528]],"__id":21129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci147"}},{"type":"rightadapter","out_nodes":[[9174,3521]],"__id":21132,"parentNodes":[10]},{"type":"join","out_nodes":[[9179,-1]],"__id":21133,"parentNodes":[9180,9181],"constraint":{"type":"join-reference","out_nodes":[],"__id":21134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9174,-1]],"__id":21135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9178,3522]],"__id":21140,"parentNodes":[16]},{"type":"beta","out_nodes":[[9182,-1]],"__id":21141,"parentNodes":[9183,9184]},{"type":"leftadapter","out_nodes":[[9178,-1]],"__id":21142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9181,3523]],"__id":21147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9181,3524]],"__id":21151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21152,"parentNodes":[9186],"index":1057,"rule":{"name":"Bootstrap147","pattern":{"type":"object","id":3880,"cls":"Fibonacci147","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap147"},{"type":"beta","out_nodes":[[9185,-1]],"__id":21153,"parentNodes":[9187,9188]},{"type":"rightadapter","out_nodes":[[9186,3525]],"__id":21158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9186,3526]],"__id":21162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21163,"parentNodes":[9190],"index":1058,"rule":{"name":"Recurse147","pattern":{"type":"composite","id":3883,"leftPattern":{"type":"not","id":3881,"cls":"Fibonacci147","alias":"f"},"rightPattern":{"type":"object","id":3882,"cls":"Fibonacci147","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci147 = defined.get('Fibonacci147');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci147(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse147"},{"type":"beta","out_nodes":[[9189,-1]],"__id":21164,"parentNodes":[9191,9192]},{"type":"rightadapter","out_nodes":[[9190,3527]],"__id":21168,"parentNodes":[37]},{"type":"not","out_nodes":[[9193,-1]],"__id":21169,"parentNodes":[9194,9195],"constraint":{"type":"join-reference","out_nodes":[],"__id":21170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9190,-1]],"__id":21171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9192,3528]],"__id":21175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9192,3529]],"__id":21179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21180,"parentNodes":[9197],"index":1059,"rule":{"name":"Calculate146","pattern":{"type":"composite","id":3890,"leftPattern":{"type":"composite","id":3889,"leftPattern":{"type":"composite","id":3888,"leftPattern":{"type":"object","id":3884,"cls":"Fibonacci146","alias":"f1"},"rightPattern":{"type":"object","id":3885,"cls":"Fibonacci146","alias":"f2"}},"rightPattern":{"type":"object","id":3886,"cls":"Fibonacci146","alias":"f3"}},"rightPattern":{"type":"object","id":3887,"cls":"Result146","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate146"},{"type":"beta","out_nodes":[[9196,-1]],"__id":21181,"parentNodes":[9199,9200]},{"type":"type","out_nodes":[[3,3530]],"__id":21182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result146"}},{"type":"rightadapter","out_nodes":[[9197,3530]],"__id":21185,"parentNodes":[4]},{"type":"join","out_nodes":[[9201,-1]],"__id":21186,"parentNodes":[9203,9204],"constraint":{"type":"join-reference","out_nodes":[],"__id":21187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9197,-1]],"__id":21188,"parentNodes":[]},{"type":"type","out_nodes":[[9,3531],[14,3532],[20,3533],[30,3535],[20,3537],[30,3538]],"__id":21189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci146"}},{"type":"rightadapter","out_nodes":[[9200,3531]],"__id":21192,"parentNodes":[10]},{"type":"join","out_nodes":[[9205,-1]],"__id":21193,"parentNodes":[9206,9207],"constraint":{"type":"join-reference","out_nodes":[],"__id":21194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9200,-1]],"__id":21195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9204,3532]],"__id":21200,"parentNodes":[16]},{"type":"beta","out_nodes":[[9208,-1]],"__id":21201,"parentNodes":[9209,9210]},{"type":"leftadapter","out_nodes":[[9204,-1]],"__id":21202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9207,3533]],"__id":21207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9207,3534]],"__id":21211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21212,"parentNodes":[9212],"index":1060,"rule":{"name":"Bootstrap146","pattern":{"type":"object","id":3891,"cls":"Fibonacci146","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap146"},{"type":"beta","out_nodes":[[9211,-1]],"__id":21213,"parentNodes":[9213,9214]},{"type":"rightadapter","out_nodes":[[9212,3535]],"__id":21218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9212,3536]],"__id":21222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21223,"parentNodes":[9216],"index":1061,"rule":{"name":"Recurse146","pattern":{"type":"composite","id":3894,"leftPattern":{"type":"not","id":3892,"cls":"Fibonacci146","alias":"f"},"rightPattern":{"type":"object","id":3893,"cls":"Fibonacci146","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci146 = defined.get('Fibonacci146');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci146(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse146"},{"type":"beta","out_nodes":[[9215,-1]],"__id":21224,"parentNodes":[9217,9218]},{"type":"rightadapter","out_nodes":[[9216,3537]],"__id":21228,"parentNodes":[37]},{"type":"not","out_nodes":[[9219,-1]],"__id":21229,"parentNodes":[9220,9221],"constraint":{"type":"join-reference","out_nodes":[],"__id":21230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9216,-1]],"__id":21231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9218,3538]],"__id":21235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9218,3539]],"__id":21239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21240,"parentNodes":[9223],"index":1062,"rule":{"name":"Calculate145","pattern":{"type":"composite","id":3901,"leftPattern":{"type":"composite","id":3900,"leftPattern":{"type":"composite","id":3899,"leftPattern":{"type":"object","id":3895,"cls":"Fibonacci145","alias":"f1"},"rightPattern":{"type":"object","id":3896,"cls":"Fibonacci145","alias":"f2"}},"rightPattern":{"type":"object","id":3897,"cls":"Fibonacci145","alias":"f3"}},"rightPattern":{"type":"object","id":3898,"cls":"Result145","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate145"},{"type":"beta","out_nodes":[[9222,-1]],"__id":21241,"parentNodes":[9225,9226]},{"type":"type","out_nodes":[[3,3540]],"__id":21242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result145"}},{"type":"rightadapter","out_nodes":[[9223,3540]],"__id":21245,"parentNodes":[4]},{"type":"join","out_nodes":[[9227,-1]],"__id":21246,"parentNodes":[9229,9230],"constraint":{"type":"join-reference","out_nodes":[],"__id":21247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9223,-1]],"__id":21248,"parentNodes":[]},{"type":"type","out_nodes":[[9,3541],[14,3542],[20,3543],[30,3545],[20,3547],[30,3548]],"__id":21249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci145"}},{"type":"rightadapter","out_nodes":[[9226,3541]],"__id":21252,"parentNodes":[10]},{"type":"join","out_nodes":[[9231,-1]],"__id":21253,"parentNodes":[9232,9233],"constraint":{"type":"join-reference","out_nodes":[],"__id":21254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9226,-1]],"__id":21255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9230,3542]],"__id":21260,"parentNodes":[16]},{"type":"beta","out_nodes":[[9234,-1]],"__id":21261,"parentNodes":[9235,9236]},{"type":"leftadapter","out_nodes":[[9230,-1]],"__id":21262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9233,3543]],"__id":21267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9233,3544]],"__id":21271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21272,"parentNodes":[9238],"index":1063,"rule":{"name":"Bootstrap145","pattern":{"type":"object","id":3902,"cls":"Fibonacci145","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap145"},{"type":"beta","out_nodes":[[9237,-1]],"__id":21273,"parentNodes":[9239,9240]},{"type":"rightadapter","out_nodes":[[9238,3545]],"__id":21278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9238,3546]],"__id":21282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21283,"parentNodes":[9242],"index":1064,"rule":{"name":"Recurse145","pattern":{"type":"composite","id":3905,"leftPattern":{"type":"not","id":3903,"cls":"Fibonacci145","alias":"f"},"rightPattern":{"type":"object","id":3904,"cls":"Fibonacci145","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci145 = defined.get('Fibonacci145');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci145(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse145"},{"type":"beta","out_nodes":[[9241,-1]],"__id":21284,"parentNodes":[9243,9244]},{"type":"rightadapter","out_nodes":[[9242,3547]],"__id":21288,"parentNodes":[37]},{"type":"not","out_nodes":[[9245,-1]],"__id":21289,"parentNodes":[9246,9247],"constraint":{"type":"join-reference","out_nodes":[],"__id":21290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9242,-1]],"__id":21291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9244,3548]],"__id":21295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9244,3549]],"__id":21299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21300,"parentNodes":[9249],"index":1065,"rule":{"name":"Calculate144","pattern":{"type":"composite","id":3912,"leftPattern":{"type":"composite","id":3911,"leftPattern":{"type":"composite","id":3910,"leftPattern":{"type":"object","id":3906,"cls":"Fibonacci144","alias":"f1"},"rightPattern":{"type":"object","id":3907,"cls":"Fibonacci144","alias":"f2"}},"rightPattern":{"type":"object","id":3908,"cls":"Fibonacci144","alias":"f3"}},"rightPattern":{"type":"object","id":3909,"cls":"Result144","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate144"},{"type":"beta","out_nodes":[[9248,-1]],"__id":21301,"parentNodes":[9251,9252]},{"type":"type","out_nodes":[[3,3550]],"__id":21302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result144"}},{"type":"rightadapter","out_nodes":[[9249,3550]],"__id":21305,"parentNodes":[4]},{"type":"join","out_nodes":[[9253,-1]],"__id":21306,"parentNodes":[9255,9256],"constraint":{"type":"join-reference","out_nodes":[],"__id":21307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9249,-1]],"__id":21308,"parentNodes":[]},{"type":"type","out_nodes":[[9,3551],[14,3552],[20,3553],[30,3555],[20,3557],[30,3558]],"__id":21309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci144"}},{"type":"rightadapter","out_nodes":[[9252,3551]],"__id":21312,"parentNodes":[10]},{"type":"join","out_nodes":[[9257,-1]],"__id":21313,"parentNodes":[9258,9259],"constraint":{"type":"join-reference","out_nodes":[],"__id":21314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9252,-1]],"__id":21315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9256,3552]],"__id":21320,"parentNodes":[16]},{"type":"beta","out_nodes":[[9260,-1]],"__id":21321,"parentNodes":[9261,9262]},{"type":"leftadapter","out_nodes":[[9256,-1]],"__id":21322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9259,3553]],"__id":21327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9259,3554]],"__id":21331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21332,"parentNodes":[9264],"index":1066,"rule":{"name":"Bootstrap144","pattern":{"type":"object","id":3913,"cls":"Fibonacci144","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap144"},{"type":"beta","out_nodes":[[9263,-1]],"__id":21333,"parentNodes":[9265,9266]},{"type":"rightadapter","out_nodes":[[9264,3555]],"__id":21338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9264,3556]],"__id":21342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21343,"parentNodes":[9268],"index":1067,"rule":{"name":"Recurse144","pattern":{"type":"composite","id":3916,"leftPattern":{"type":"not","id":3914,"cls":"Fibonacci144","alias":"f"},"rightPattern":{"type":"object","id":3915,"cls":"Fibonacci144","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci144 = defined.get('Fibonacci144');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci144(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse144"},{"type":"beta","out_nodes":[[9267,-1]],"__id":21344,"parentNodes":[9269,9270]},{"type":"rightadapter","out_nodes":[[9268,3557]],"__id":21348,"parentNodes":[37]},{"type":"not","out_nodes":[[9271,-1]],"__id":21349,"parentNodes":[9272,9273],"constraint":{"type":"join-reference","out_nodes":[],"__id":21350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9268,-1]],"__id":21351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9270,3558]],"__id":21355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9270,3559]],"__id":21359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21360,"parentNodes":[9275],"index":1068,"rule":{"name":"Calculate143","pattern":{"type":"composite","id":3923,"leftPattern":{"type":"composite","id":3922,"leftPattern":{"type":"composite","id":3921,"leftPattern":{"type":"object","id":3917,"cls":"Fibonacci143","alias":"f1"},"rightPattern":{"type":"object","id":3918,"cls":"Fibonacci143","alias":"f2"}},"rightPattern":{"type":"object","id":3919,"cls":"Fibonacci143","alias":"f3"}},"rightPattern":{"type":"object","id":3920,"cls":"Result143","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate143"},{"type":"beta","out_nodes":[[9274,-1]],"__id":21361,"parentNodes":[9277,9278]},{"type":"type","out_nodes":[[3,3560]],"__id":21362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result143"}},{"type":"rightadapter","out_nodes":[[9275,3560]],"__id":21365,"parentNodes":[4]},{"type":"join","out_nodes":[[9279,-1]],"__id":21366,"parentNodes":[9281,9282],"constraint":{"type":"join-reference","out_nodes":[],"__id":21367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9275,-1]],"__id":21368,"parentNodes":[]},{"type":"type","out_nodes":[[9,3561],[14,3562],[20,3563],[30,3565],[20,3567],[30,3568]],"__id":21369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci143"}},{"type":"rightadapter","out_nodes":[[9278,3561]],"__id":21372,"parentNodes":[10]},{"type":"join","out_nodes":[[9283,-1]],"__id":21373,"parentNodes":[9284,9285],"constraint":{"type":"join-reference","out_nodes":[],"__id":21374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9278,-1]],"__id":21375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9282,3562]],"__id":21380,"parentNodes":[16]},{"type":"beta","out_nodes":[[9286,-1]],"__id":21381,"parentNodes":[9287,9288]},{"type":"leftadapter","out_nodes":[[9282,-1]],"__id":21382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9285,3563]],"__id":21387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9285,3564]],"__id":21391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21392,"parentNodes":[9290],"index":1069,"rule":{"name":"Bootstrap143","pattern":{"type":"object","id":3924,"cls":"Fibonacci143","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap143"},{"type":"beta","out_nodes":[[9289,-1]],"__id":21393,"parentNodes":[9291,9292]},{"type":"rightadapter","out_nodes":[[9290,3565]],"__id":21398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9290,3566]],"__id":21402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21403,"parentNodes":[9294],"index":1070,"rule":{"name":"Recurse143","pattern":{"type":"composite","id":3927,"leftPattern":{"type":"not","id":3925,"cls":"Fibonacci143","alias":"f"},"rightPattern":{"type":"object","id":3926,"cls":"Fibonacci143","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci143 = defined.get('Fibonacci143');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci143(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse143"},{"type":"beta","out_nodes":[[9293,-1]],"__id":21404,"parentNodes":[9295,9296]},{"type":"rightadapter","out_nodes":[[9294,3567]],"__id":21408,"parentNodes":[37]},{"type":"not","out_nodes":[[9297,-1]],"__id":21409,"parentNodes":[9298,9299],"constraint":{"type":"join-reference","out_nodes":[],"__id":21410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9294,-1]],"__id":21411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9296,3568]],"__id":21415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9296,3569]],"__id":21419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21420,"parentNodes":[9301],"index":1071,"rule":{"name":"Calculate142","pattern":{"type":"composite","id":3934,"leftPattern":{"type":"composite","id":3933,"leftPattern":{"type":"composite","id":3932,"leftPattern":{"type":"object","id":3928,"cls":"Fibonacci142","alias":"f1"},"rightPattern":{"type":"object","id":3929,"cls":"Fibonacci142","alias":"f2"}},"rightPattern":{"type":"object","id":3930,"cls":"Fibonacci142","alias":"f3"}},"rightPattern":{"type":"object","id":3931,"cls":"Result142","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate142"},{"type":"beta","out_nodes":[[9300,-1]],"__id":21421,"parentNodes":[9303,9304]},{"type":"type","out_nodes":[[3,3570]],"__id":21422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result142"}},{"type":"rightadapter","out_nodes":[[9301,3570]],"__id":21425,"parentNodes":[4]},{"type":"join","out_nodes":[[9305,-1]],"__id":21426,"parentNodes":[9307,9308],"constraint":{"type":"join-reference","out_nodes":[],"__id":21427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9301,-1]],"__id":21428,"parentNodes":[]},{"type":"type","out_nodes":[[9,3571],[14,3572],[20,3573],[30,3575],[20,3577],[30,3578]],"__id":21429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci142"}},{"type":"rightadapter","out_nodes":[[9304,3571]],"__id":21432,"parentNodes":[10]},{"type":"join","out_nodes":[[9309,-1]],"__id":21433,"parentNodes":[9310,9311],"constraint":{"type":"join-reference","out_nodes":[],"__id":21434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9304,-1]],"__id":21435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9308,3572]],"__id":21440,"parentNodes":[16]},{"type":"beta","out_nodes":[[9312,-1]],"__id":21441,"parentNodes":[9313,9314]},{"type":"leftadapter","out_nodes":[[9308,-1]],"__id":21442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9311,3573]],"__id":21447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9311,3574]],"__id":21451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21452,"parentNodes":[9316],"index":1072,"rule":{"name":"Bootstrap142","pattern":{"type":"object","id":3935,"cls":"Fibonacci142","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap142"},{"type":"beta","out_nodes":[[9315,-1]],"__id":21453,"parentNodes":[9317,9318]},{"type":"rightadapter","out_nodes":[[9316,3575]],"__id":21458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9316,3576]],"__id":21462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21463,"parentNodes":[9320],"index":1073,"rule":{"name":"Recurse142","pattern":{"type":"composite","id":3938,"leftPattern":{"type":"not","id":3936,"cls":"Fibonacci142","alias":"f"},"rightPattern":{"type":"object","id":3937,"cls":"Fibonacci142","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci142 = defined.get('Fibonacci142');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci142(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse142"},{"type":"beta","out_nodes":[[9319,-1]],"__id":21464,"parentNodes":[9321,9322]},{"type":"rightadapter","out_nodes":[[9320,3577]],"__id":21468,"parentNodes":[37]},{"type":"not","out_nodes":[[9323,-1]],"__id":21469,"parentNodes":[9324,9325],"constraint":{"type":"join-reference","out_nodes":[],"__id":21470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9320,-1]],"__id":21471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9322,3578]],"__id":21475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9322,3579]],"__id":21479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21480,"parentNodes":[9327],"index":1074,"rule":{"name":"Calculate141","pattern":{"type":"composite","id":3945,"leftPattern":{"type":"composite","id":3944,"leftPattern":{"type":"composite","id":3943,"leftPattern":{"type":"object","id":3939,"cls":"Fibonacci141","alias":"f1"},"rightPattern":{"type":"object","id":3940,"cls":"Fibonacci141","alias":"f2"}},"rightPattern":{"type":"object","id":3941,"cls":"Fibonacci141","alias":"f3"}},"rightPattern":{"type":"object","id":3942,"cls":"Result141","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate141"},{"type":"beta","out_nodes":[[9326,-1]],"__id":21481,"parentNodes":[9329,9330]},{"type":"type","out_nodes":[[3,3580]],"__id":21482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result141"}},{"type":"rightadapter","out_nodes":[[9327,3580]],"__id":21485,"parentNodes":[4]},{"type":"join","out_nodes":[[9331,-1]],"__id":21486,"parentNodes":[9333,9334],"constraint":{"type":"join-reference","out_nodes":[],"__id":21487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9327,-1]],"__id":21488,"parentNodes":[]},{"type":"type","out_nodes":[[9,3581],[14,3582],[20,3583],[30,3585],[20,3587],[30,3588]],"__id":21489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci141"}},{"type":"rightadapter","out_nodes":[[9330,3581]],"__id":21492,"parentNodes":[10]},{"type":"join","out_nodes":[[9335,-1]],"__id":21493,"parentNodes":[9336,9337],"constraint":{"type":"join-reference","out_nodes":[],"__id":21494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9330,-1]],"__id":21495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9334,3582]],"__id":21500,"parentNodes":[16]},{"type":"beta","out_nodes":[[9338,-1]],"__id":21501,"parentNodes":[9339,9340]},{"type":"leftadapter","out_nodes":[[9334,-1]],"__id":21502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9337,3583]],"__id":21507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9337,3584]],"__id":21511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21512,"parentNodes":[9342],"index":1075,"rule":{"name":"Bootstrap141","pattern":{"type":"object","id":3946,"cls":"Fibonacci141","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap141"},{"type":"beta","out_nodes":[[9341,-1]],"__id":21513,"parentNodes":[9343,9344]},{"type":"rightadapter","out_nodes":[[9342,3585]],"__id":21518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9342,3586]],"__id":21522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21523,"parentNodes":[9346],"index":1076,"rule":{"name":"Recurse141","pattern":{"type":"composite","id":3949,"leftPattern":{"type":"not","id":3947,"cls":"Fibonacci141","alias":"f"},"rightPattern":{"type":"object","id":3948,"cls":"Fibonacci141","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci141 = defined.get('Fibonacci141');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci141(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse141"},{"type":"beta","out_nodes":[[9345,-1]],"__id":21524,"parentNodes":[9347,9348]},{"type":"rightadapter","out_nodes":[[9346,3587]],"__id":21528,"parentNodes":[37]},{"type":"not","out_nodes":[[9349,-1]],"__id":21529,"parentNodes":[9350,9351],"constraint":{"type":"join-reference","out_nodes":[],"__id":21530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9346,-1]],"__id":21531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9348,3588]],"__id":21535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9348,3589]],"__id":21539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21540,"parentNodes":[9353],"index":1077,"rule":{"name":"Calculate140","pattern":{"type":"composite","id":3956,"leftPattern":{"type":"composite","id":3955,"leftPattern":{"type":"composite","id":3954,"leftPattern":{"type":"object","id":3950,"cls":"Fibonacci140","alias":"f1"},"rightPattern":{"type":"object","id":3951,"cls":"Fibonacci140","alias":"f2"}},"rightPattern":{"type":"object","id":3952,"cls":"Fibonacci140","alias":"f3"}},"rightPattern":{"type":"object","id":3953,"cls":"Result140","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate140"},{"type":"beta","out_nodes":[[9352,-1]],"__id":21541,"parentNodes":[9355,9356]},{"type":"type","out_nodes":[[3,3590]],"__id":21542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result140"}},{"type":"rightadapter","out_nodes":[[9353,3590]],"__id":21545,"parentNodes":[4]},{"type":"join","out_nodes":[[9357,-1]],"__id":21546,"parentNodes":[9359,9360],"constraint":{"type":"join-reference","out_nodes":[],"__id":21547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9353,-1]],"__id":21548,"parentNodes":[]},{"type":"type","out_nodes":[[9,3591],[14,3592],[20,3593],[30,3595],[20,3597],[30,3598]],"__id":21549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci140"}},{"type":"rightadapter","out_nodes":[[9356,3591]],"__id":21552,"parentNodes":[10]},{"type":"join","out_nodes":[[9361,-1]],"__id":21553,"parentNodes":[9362,9363],"constraint":{"type":"join-reference","out_nodes":[],"__id":21554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9356,-1]],"__id":21555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9360,3592]],"__id":21560,"parentNodes":[16]},{"type":"beta","out_nodes":[[9364,-1]],"__id":21561,"parentNodes":[9365,9366]},{"type":"leftadapter","out_nodes":[[9360,-1]],"__id":21562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9363,3593]],"__id":21567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9363,3594]],"__id":21571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21572,"parentNodes":[9368],"index":1078,"rule":{"name":"Bootstrap140","pattern":{"type":"object","id":3957,"cls":"Fibonacci140","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap140"},{"type":"beta","out_nodes":[[9367,-1]],"__id":21573,"parentNodes":[9369,9370]},{"type":"rightadapter","out_nodes":[[9368,3595]],"__id":21578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9368,3596]],"__id":21582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21583,"parentNodes":[9372],"index":1079,"rule":{"name":"Recurse140","pattern":{"type":"composite","id":3960,"leftPattern":{"type":"not","id":3958,"cls":"Fibonacci140","alias":"f"},"rightPattern":{"type":"object","id":3959,"cls":"Fibonacci140","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');let Fibonacci140 = defined.get('Fibonacci140');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci140(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse140"},{"type":"beta","out_nodes":[[9371,-1]],"__id":21584,"parentNodes":[9373,9374]},{"type":"rightadapter","out_nodes":[[9372,3597]],"__id":21588,"parentNodes":[37]},{"type":"not","out_nodes":[[9375,-1]],"__id":21589,"parentNodes":[9376,9377],"constraint":{"type":"join-reference","out_nodes":[],"__id":21590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9372,-1]],"__id":21591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9374,3598]],"__id":21595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9374,3599]],"__id":21599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21600,"parentNodes":[9379],"index":1080,"rule":{"name":"Calculate139","pattern":{"type":"composite","id":3967,"leftPattern":{"type":"composite","id":3966,"leftPattern":{"type":"composite","id":3965,"leftPattern":{"type":"object","id":3961,"cls":"Fibonacci139","alias":"f1"},"rightPattern":{"type":"object","id":3962,"cls":"Fibonacci139","alias":"f2"}},"rightPattern":{"type":"object","id":3963,"cls":"Fibonacci139","alias":"f3"}},"rightPattern":{"type":"object","id":3964,"cls":"Result139","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate139"},{"type":"beta","out_nodes":[[9378,-1]],"__id":21601,"parentNodes":[9381,9382]},{"type":"type","out_nodes":[[3,3600]],"__id":21602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result139"}},{"type":"rightadapter","out_nodes":[[9379,3600]],"__id":21605,"parentNodes":[4]},{"type":"join","out_nodes":[[9383,-1]],"__id":21606,"parentNodes":[9385,9386],"constraint":{"type":"join-reference","out_nodes":[],"__id":21607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9379,-1]],"__id":21608,"parentNodes":[]},{"type":"type","out_nodes":[[9,3601],[14,3602],[20,3603],[30,3605],[20,3607],[30,3608]],"__id":21609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci139"}},{"type":"rightadapter","out_nodes":[[9382,3601]],"__id":21612,"parentNodes":[10]},{"type":"join","out_nodes":[[9387,-1]],"__id":21613,"parentNodes":[9388,9389],"constraint":{"type":"join-reference","out_nodes":[],"__id":21614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9382,-1]],"__id":21615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9386,3602]],"__id":21620,"parentNodes":[16]},{"type":"beta","out_nodes":[[9390,-1]],"__id":21621,"parentNodes":[9391,9392]},{"type":"leftadapter","out_nodes":[[9386,-1]],"__id":21622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9389,3603]],"__id":21627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9389,3604]],"__id":21631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21632,"parentNodes":[9394],"index":1081,"rule":{"name":"Bootstrap139","pattern":{"type":"object","id":3968,"cls":"Fibonacci139","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap139"},{"type":"beta","out_nodes":[[9393,-1]],"__id":21633,"parentNodes":[9395,9396]},{"type":"rightadapter","out_nodes":[[9394,3605]],"__id":21638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9394,3606]],"__id":21642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21643,"parentNodes":[9398],"index":1082,"rule":{"name":"Recurse139","pattern":{"type":"composite","id":3971,"leftPattern":{"type":"not","id":3969,"cls":"Fibonacci139","alias":"f"},"rightPattern":{"type":"object","id":3970,"cls":"Fibonacci139","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci139 = defined.get('Fibonacci139');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci139(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse139"},{"type":"beta","out_nodes":[[9397,-1]],"__id":21644,"parentNodes":[9399,9400]},{"type":"rightadapter","out_nodes":[[9398,3607]],"__id":21648,"parentNodes":[37]},{"type":"not","out_nodes":[[9401,-1]],"__id":21649,"parentNodes":[9402,9403],"constraint":{"type":"join-reference","out_nodes":[],"__id":21650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9398,-1]],"__id":21651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9400,3608]],"__id":21655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9400,3609]],"__id":21659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21660,"parentNodes":[9405],"index":1083,"rule":{"name":"Calculate138","pattern":{"type":"composite","id":3978,"leftPattern":{"type":"composite","id":3977,"leftPattern":{"type":"composite","id":3976,"leftPattern":{"type":"object","id":3972,"cls":"Fibonacci138","alias":"f1"},"rightPattern":{"type":"object","id":3973,"cls":"Fibonacci138","alias":"f2"}},"rightPattern":{"type":"object","id":3974,"cls":"Fibonacci138","alias":"f3"}},"rightPattern":{"type":"object","id":3975,"cls":"Result138","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate138"},{"type":"beta","out_nodes":[[9404,-1]],"__id":21661,"parentNodes":[9407,9408]},{"type":"type","out_nodes":[[3,3610]],"__id":21662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result138"}},{"type":"rightadapter","out_nodes":[[9405,3610]],"__id":21665,"parentNodes":[4]},{"type":"join","out_nodes":[[9409,-1]],"__id":21666,"parentNodes":[9411,9412],"constraint":{"type":"join-reference","out_nodes":[],"__id":21667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9405,-1]],"__id":21668,"parentNodes":[]},{"type":"type","out_nodes":[[9,3611],[14,3612],[20,3613],[30,3615],[20,3617],[30,3618]],"__id":21669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci138"}},{"type":"rightadapter","out_nodes":[[9408,3611]],"__id":21672,"parentNodes":[10]},{"type":"join","out_nodes":[[9413,-1]],"__id":21673,"parentNodes":[9414,9415],"constraint":{"type":"join-reference","out_nodes":[],"__id":21674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9408,-1]],"__id":21675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9412,3612]],"__id":21680,"parentNodes":[16]},{"type":"beta","out_nodes":[[9416,-1]],"__id":21681,"parentNodes":[9417,9418]},{"type":"leftadapter","out_nodes":[[9412,-1]],"__id":21682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9415,3613]],"__id":21687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9415,3614]],"__id":21691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21692,"parentNodes":[9420],"index":1084,"rule":{"name":"Bootstrap138","pattern":{"type":"object","id":3979,"cls":"Fibonacci138","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap138"},{"type":"beta","out_nodes":[[9419,-1]],"__id":21693,"parentNodes":[9421,9422]},{"type":"rightadapter","out_nodes":[[9420,3615]],"__id":21698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9420,3616]],"__id":21702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21703,"parentNodes":[9424],"index":1085,"rule":{"name":"Recurse138","pattern":{"type":"composite","id":3982,"leftPattern":{"type":"not","id":3980,"cls":"Fibonacci138","alias":"f"},"rightPattern":{"type":"object","id":3981,"cls":"Fibonacci138","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci138 = defined.get('Fibonacci138');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci138(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse138"},{"type":"beta","out_nodes":[[9423,-1]],"__id":21704,"parentNodes":[9425,9426]},{"type":"rightadapter","out_nodes":[[9424,3617]],"__id":21708,"parentNodes":[37]},{"type":"not","out_nodes":[[9427,-1]],"__id":21709,"parentNodes":[9428,9429],"constraint":{"type":"join-reference","out_nodes":[],"__id":21710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9424,-1]],"__id":21711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9426,3618]],"__id":21715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9426,3619]],"__id":21719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21720,"parentNodes":[9431],"index":1086,"rule":{"name":"Calculate137","pattern":{"type":"composite","id":3989,"leftPattern":{"type":"composite","id":3988,"leftPattern":{"type":"composite","id":3987,"leftPattern":{"type":"object","id":3983,"cls":"Fibonacci137","alias":"f1"},"rightPattern":{"type":"object","id":3984,"cls":"Fibonacci137","alias":"f2"}},"rightPattern":{"type":"object","id":3985,"cls":"Fibonacci137","alias":"f3"}},"rightPattern":{"type":"object","id":3986,"cls":"Result137","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate137"},{"type":"beta","out_nodes":[[9430,-1]],"__id":21721,"parentNodes":[9433,9434]},{"type":"type","out_nodes":[[3,3620]],"__id":21722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result137"}},{"type":"rightadapter","out_nodes":[[9431,3620]],"__id":21725,"parentNodes":[4]},{"type":"join","out_nodes":[[9435,-1]],"__id":21726,"parentNodes":[9437,9438],"constraint":{"type":"join-reference","out_nodes":[],"__id":21727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9431,-1]],"__id":21728,"parentNodes":[]},{"type":"type","out_nodes":[[9,3621],[14,3622],[20,3623],[30,3625],[20,3627],[30,3628]],"__id":21729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci137"}},{"type":"rightadapter","out_nodes":[[9434,3621]],"__id":21732,"parentNodes":[10]},{"type":"join","out_nodes":[[9439,-1]],"__id":21733,"parentNodes":[9440,9441],"constraint":{"type":"join-reference","out_nodes":[],"__id":21734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9434,-1]],"__id":21735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9438,3622]],"__id":21740,"parentNodes":[16]},{"type":"beta","out_nodes":[[9442,-1]],"__id":21741,"parentNodes":[9443,9444]},{"type":"leftadapter","out_nodes":[[9438,-1]],"__id":21742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9441,3623]],"__id":21747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9441,3624]],"__id":21751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21752,"parentNodes":[9446],"index":1087,"rule":{"name":"Bootstrap137","pattern":{"type":"object","id":3990,"cls":"Fibonacci137","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap137"},{"type":"beta","out_nodes":[[9445,-1]],"__id":21753,"parentNodes":[9447,9448]},{"type":"rightadapter","out_nodes":[[9446,3625]],"__id":21758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9446,3626]],"__id":21762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21763,"parentNodes":[9450],"index":1088,"rule":{"name":"Recurse137","pattern":{"type":"composite","id":3993,"leftPattern":{"type":"not","id":3991,"cls":"Fibonacci137","alias":"f"},"rightPattern":{"type":"object","id":3992,"cls":"Fibonacci137","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci137 = defined.get('Fibonacci137');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci137(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse137"},{"type":"beta","out_nodes":[[9449,-1]],"__id":21764,"parentNodes":[9451,9452]},{"type":"rightadapter","out_nodes":[[9450,3627]],"__id":21768,"parentNodes":[37]},{"type":"not","out_nodes":[[9453,-1]],"__id":21769,"parentNodes":[9454,9455],"constraint":{"type":"join-reference","out_nodes":[],"__id":21770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9450,-1]],"__id":21771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9452,3628]],"__id":21775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9452,3629]],"__id":21779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21780,"parentNodes":[9457],"index":1089,"rule":{"name":"Calculate136","pattern":{"type":"composite","id":4000,"leftPattern":{"type":"composite","id":3999,"leftPattern":{"type":"composite","id":3998,"leftPattern":{"type":"object","id":3994,"cls":"Fibonacci136","alias":"f1"},"rightPattern":{"type":"object","id":3995,"cls":"Fibonacci136","alias":"f2"}},"rightPattern":{"type":"object","id":3996,"cls":"Fibonacci136","alias":"f3"}},"rightPattern":{"type":"object","id":3997,"cls":"Result136","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate136"},{"type":"beta","out_nodes":[[9456,-1]],"__id":21781,"parentNodes":[9459,9460]},{"type":"type","out_nodes":[[3,3630]],"__id":21782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result136"}},{"type":"rightadapter","out_nodes":[[9457,3630]],"__id":21785,"parentNodes":[4]},{"type":"join","out_nodes":[[9461,-1]],"__id":21786,"parentNodes":[9463,9464],"constraint":{"type":"join-reference","out_nodes":[],"__id":21787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9457,-1]],"__id":21788,"parentNodes":[]},{"type":"type","out_nodes":[[9,3631],[14,3632],[20,3633],[30,3635],[20,3637],[30,3638]],"__id":21789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci136"}},{"type":"rightadapter","out_nodes":[[9460,3631]],"__id":21792,"parentNodes":[10]},{"type":"join","out_nodes":[[9465,-1]],"__id":21793,"parentNodes":[9466,9467],"constraint":{"type":"join-reference","out_nodes":[],"__id":21794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9460,-1]],"__id":21795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9464,3632]],"__id":21800,"parentNodes":[16]},{"type":"beta","out_nodes":[[9468,-1]],"__id":21801,"parentNodes":[9469,9470]},{"type":"leftadapter","out_nodes":[[9464,-1]],"__id":21802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9467,3633]],"__id":21807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9467,3634]],"__id":21811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21812,"parentNodes":[9472],"index":1090,"rule":{"name":"Bootstrap136","pattern":{"type":"object","id":4001,"cls":"Fibonacci136","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap136"},{"type":"beta","out_nodes":[[9471,-1]],"__id":21813,"parentNodes":[9473,9474]},{"type":"rightadapter","out_nodes":[[9472,3635]],"__id":21818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9472,3636]],"__id":21822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21823,"parentNodes":[9476],"index":1091,"rule":{"name":"Recurse136","pattern":{"type":"composite","id":4004,"leftPattern":{"type":"not","id":4002,"cls":"Fibonacci136","alias":"f"},"rightPattern":{"type":"object","id":4003,"cls":"Fibonacci136","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci136 = defined.get('Fibonacci136');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci136(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse136"},{"type":"beta","out_nodes":[[9475,-1]],"__id":21824,"parentNodes":[9477,9478]},{"type":"rightadapter","out_nodes":[[9476,3637]],"__id":21828,"parentNodes":[37]},{"type":"not","out_nodes":[[9479,-1]],"__id":21829,"parentNodes":[9480,9481],"constraint":{"type":"join-reference","out_nodes":[],"__id":21830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9476,-1]],"__id":21831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9478,3638]],"__id":21835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9478,3639]],"__id":21839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21840,"parentNodes":[9483],"index":1092,"rule":{"name":"Calculate135","pattern":{"type":"composite","id":4011,"leftPattern":{"type":"composite","id":4010,"leftPattern":{"type":"composite","id":4009,"leftPattern":{"type":"object","id":4005,"cls":"Fibonacci135","alias":"f1"},"rightPattern":{"type":"object","id":4006,"cls":"Fibonacci135","alias":"f2"}},"rightPattern":{"type":"object","id":4007,"cls":"Fibonacci135","alias":"f3"}},"rightPattern":{"type":"object","id":4008,"cls":"Result135","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate135"},{"type":"beta","out_nodes":[[9482,-1]],"__id":21841,"parentNodes":[9485,9486]},{"type":"type","out_nodes":[[3,3640]],"__id":21842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result135"}},{"type":"rightadapter","out_nodes":[[9483,3640]],"__id":21845,"parentNodes":[4]},{"type":"join","out_nodes":[[9487,-1]],"__id":21846,"parentNodes":[9489,9490],"constraint":{"type":"join-reference","out_nodes":[],"__id":21847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9483,-1]],"__id":21848,"parentNodes":[]},{"type":"type","out_nodes":[[9,3641],[14,3642],[20,3643],[30,3645],[20,3647],[30,3648]],"__id":21849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci135"}},{"type":"rightadapter","out_nodes":[[9486,3641]],"__id":21852,"parentNodes":[10]},{"type":"join","out_nodes":[[9491,-1]],"__id":21853,"parentNodes":[9492,9493],"constraint":{"type":"join-reference","out_nodes":[],"__id":21854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9486,-1]],"__id":21855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9490,3642]],"__id":21860,"parentNodes":[16]},{"type":"beta","out_nodes":[[9494,-1]],"__id":21861,"parentNodes":[9495,9496]},{"type":"leftadapter","out_nodes":[[9490,-1]],"__id":21862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9493,3643]],"__id":21867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9493,3644]],"__id":21871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21872,"parentNodes":[9498],"index":1093,"rule":{"name":"Bootstrap135","pattern":{"type":"object","id":4012,"cls":"Fibonacci135","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap135"},{"type":"beta","out_nodes":[[9497,-1]],"__id":21873,"parentNodes":[9499,9500]},{"type":"rightadapter","out_nodes":[[9498,3645]],"__id":21878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9498,3646]],"__id":21882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21883,"parentNodes":[9502],"index":1094,"rule":{"name":"Recurse135","pattern":{"type":"composite","id":4015,"leftPattern":{"type":"not","id":4013,"cls":"Fibonacci135","alias":"f"},"rightPattern":{"type":"object","id":4014,"cls":"Fibonacci135","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci135 = defined.get('Fibonacci135');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci135(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse135"},{"type":"beta","out_nodes":[[9501,-1]],"__id":21884,"parentNodes":[9503,9504]},{"type":"rightadapter","out_nodes":[[9502,3647]],"__id":21888,"parentNodes":[37]},{"type":"not","out_nodes":[[9505,-1]],"__id":21889,"parentNodes":[9506,9507],"constraint":{"type":"join-reference","out_nodes":[],"__id":21890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9502,-1]],"__id":21891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9504,3648]],"__id":21895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9504,3649]],"__id":21899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21900,"parentNodes":[9509],"index":1095,"rule":{"name":"Calculate134","pattern":{"type":"composite","id":4022,"leftPattern":{"type":"composite","id":4021,"leftPattern":{"type":"composite","id":4020,"leftPattern":{"type":"object","id":4016,"cls":"Fibonacci134","alias":"f1"},"rightPattern":{"type":"object","id":4017,"cls":"Fibonacci134","alias":"f2"}},"rightPattern":{"type":"object","id":4018,"cls":"Fibonacci134","alias":"f3"}},"rightPattern":{"type":"object","id":4019,"cls":"Result134","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate134"},{"type":"beta","out_nodes":[[9508,-1]],"__id":21901,"parentNodes":[9511,9512]},{"type":"type","out_nodes":[[3,3650]],"__id":21902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result134"}},{"type":"rightadapter","out_nodes":[[9509,3650]],"__id":21905,"parentNodes":[4]},{"type":"join","out_nodes":[[9513,-1]],"__id":21906,"parentNodes":[9515,9516],"constraint":{"type":"join-reference","out_nodes":[],"__id":21907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9509,-1]],"__id":21908,"parentNodes":[]},{"type":"type","out_nodes":[[9,3651],[14,3652],[20,3653],[30,3655],[20,3657],[30,3658]],"__id":21909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci134"}},{"type":"rightadapter","out_nodes":[[9512,3651]],"__id":21912,"parentNodes":[10]},{"type":"join","out_nodes":[[9517,-1]],"__id":21913,"parentNodes":[9518,9519],"constraint":{"type":"join-reference","out_nodes":[],"__id":21914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9512,-1]],"__id":21915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9516,3652]],"__id":21920,"parentNodes":[16]},{"type":"beta","out_nodes":[[9520,-1]],"__id":21921,"parentNodes":[9521,9522]},{"type":"leftadapter","out_nodes":[[9516,-1]],"__id":21922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9519,3653]],"__id":21927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9519,3654]],"__id":21931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21932,"parentNodes":[9524],"index":1096,"rule":{"name":"Bootstrap134","pattern":{"type":"object","id":4023,"cls":"Fibonacci134","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap134"},{"type":"beta","out_nodes":[[9523,-1]],"__id":21933,"parentNodes":[9525,9526]},{"type":"rightadapter","out_nodes":[[9524,3655]],"__id":21938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9524,3656]],"__id":21942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21943,"parentNodes":[9528],"index":1097,"rule":{"name":"Recurse134","pattern":{"type":"composite","id":4026,"leftPattern":{"type":"not","id":4024,"cls":"Fibonacci134","alias":"f"},"rightPattern":{"type":"object","id":4025,"cls":"Fibonacci134","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci134 = defined.get('Fibonacci134');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci134(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse134"},{"type":"beta","out_nodes":[[9527,-1]],"__id":21944,"parentNodes":[9529,9530]},{"type":"rightadapter","out_nodes":[[9528,3657]],"__id":21948,"parentNodes":[37]},{"type":"not","out_nodes":[[9531,-1]],"__id":21949,"parentNodes":[9532,9533],"constraint":{"type":"join-reference","out_nodes":[],"__id":21950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9528,-1]],"__id":21951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9530,3658]],"__id":21955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9530,3659]],"__id":21959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21960,"parentNodes":[9535],"index":1098,"rule":{"name":"Calculate133","pattern":{"type":"composite","id":4033,"leftPattern":{"type":"composite","id":4032,"leftPattern":{"type":"composite","id":4031,"leftPattern":{"type":"object","id":4027,"cls":"Fibonacci133","alias":"f1"},"rightPattern":{"type":"object","id":4028,"cls":"Fibonacci133","alias":"f2"}},"rightPattern":{"type":"object","id":4029,"cls":"Fibonacci133","alias":"f3"}},"rightPattern":{"type":"object","id":4030,"cls":"Result133","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate133"},{"type":"beta","out_nodes":[[9534,-1]],"__id":21961,"parentNodes":[9537,9538]},{"type":"type","out_nodes":[[3,3660]],"__id":21962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result133"}},{"type":"rightadapter","out_nodes":[[9535,3660]],"__id":21965,"parentNodes":[4]},{"type":"join","out_nodes":[[9539,-1]],"__id":21966,"parentNodes":[9541,9542],"constraint":{"type":"join-reference","out_nodes":[],"__id":21967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9535,-1]],"__id":21968,"parentNodes":[]},{"type":"type","out_nodes":[[9,3661],[14,3662],[20,3663],[30,3665],[20,3667],[30,3668]],"__id":21969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci133"}},{"type":"rightadapter","out_nodes":[[9538,3661]],"__id":21972,"parentNodes":[10]},{"type":"join","out_nodes":[[9543,-1]],"__id":21973,"parentNodes":[9544,9545],"constraint":{"type":"join-reference","out_nodes":[],"__id":21974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9538,-1]],"__id":21975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9542,3662]],"__id":21980,"parentNodes":[16]},{"type":"beta","out_nodes":[[9546,-1]],"__id":21981,"parentNodes":[9547,9548]},{"type":"leftadapter","out_nodes":[[9542,-1]],"__id":21982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9545,3663]],"__id":21987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9545,3664]],"__id":21991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":21992,"parentNodes":[9550],"index":1099,"rule":{"name":"Bootstrap133","pattern":{"type":"object","id":4034,"cls":"Fibonacci133","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap133"},{"type":"beta","out_nodes":[[9549,-1]],"__id":21993,"parentNodes":[9551,9552]},{"type":"rightadapter","out_nodes":[[9550,3665]],"__id":21998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9550,3666]],"__id":22002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22003,"parentNodes":[9554],"index":1100,"rule":{"name":"Recurse133","pattern":{"type":"composite","id":4037,"leftPattern":{"type":"not","id":4035,"cls":"Fibonacci133","alias":"f"},"rightPattern":{"type":"object","id":4036,"cls":"Fibonacci133","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci133 = defined.get('Fibonacci133');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci133(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse133"},{"type":"beta","out_nodes":[[9553,-1]],"__id":22004,"parentNodes":[9555,9556]},{"type":"rightadapter","out_nodes":[[9554,3667]],"__id":22008,"parentNodes":[37]},{"type":"not","out_nodes":[[9557,-1]],"__id":22009,"parentNodes":[9558,9559],"constraint":{"type":"join-reference","out_nodes":[],"__id":22010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9554,-1]],"__id":22011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9556,3668]],"__id":22015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9556,3669]],"__id":22019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22020,"parentNodes":[9561],"index":1101,"rule":{"name":"Calculate132","pattern":{"type":"composite","id":4044,"leftPattern":{"type":"composite","id":4043,"leftPattern":{"type":"composite","id":4042,"leftPattern":{"type":"object","id":4038,"cls":"Fibonacci132","alias":"f1"},"rightPattern":{"type":"object","id":4039,"cls":"Fibonacci132","alias":"f2"}},"rightPattern":{"type":"object","id":4040,"cls":"Fibonacci132","alias":"f3"}},"rightPattern":{"type":"object","id":4041,"cls":"Result132","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate132"},{"type":"beta","out_nodes":[[9560,-1]],"__id":22021,"parentNodes":[9563,9564]},{"type":"type","out_nodes":[[3,3670]],"__id":22022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result132"}},{"type":"rightadapter","out_nodes":[[9561,3670]],"__id":22025,"parentNodes":[4]},{"type":"join","out_nodes":[[9565,-1]],"__id":22026,"parentNodes":[9567,9568],"constraint":{"type":"join-reference","out_nodes":[],"__id":22027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9561,-1]],"__id":22028,"parentNodes":[]},{"type":"type","out_nodes":[[9,3671],[14,3672],[20,3673],[30,3675],[20,3677],[30,3678]],"__id":22029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci132"}},{"type":"rightadapter","out_nodes":[[9564,3671]],"__id":22032,"parentNodes":[10]},{"type":"join","out_nodes":[[9569,-1]],"__id":22033,"parentNodes":[9570,9571],"constraint":{"type":"join-reference","out_nodes":[],"__id":22034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9564,-1]],"__id":22035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9568,3672]],"__id":22040,"parentNodes":[16]},{"type":"beta","out_nodes":[[9572,-1]],"__id":22041,"parentNodes":[9573,9574]},{"type":"leftadapter","out_nodes":[[9568,-1]],"__id":22042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9571,3673]],"__id":22047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9571,3674]],"__id":22051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22052,"parentNodes":[9576],"index":1102,"rule":{"name":"Bootstrap132","pattern":{"type":"object","id":4045,"cls":"Fibonacci132","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap132"},{"type":"beta","out_nodes":[[9575,-1]],"__id":22053,"parentNodes":[9577,9578]},{"type":"rightadapter","out_nodes":[[9576,3675]],"__id":22058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9576,3676]],"__id":22062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22063,"parentNodes":[9580],"index":1103,"rule":{"name":"Recurse132","pattern":{"type":"composite","id":4048,"leftPattern":{"type":"not","id":4046,"cls":"Fibonacci132","alias":"f"},"rightPattern":{"type":"object","id":4047,"cls":"Fibonacci132","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci132 = defined.get('Fibonacci132');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci132(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse132"},{"type":"beta","out_nodes":[[9579,-1]],"__id":22064,"parentNodes":[9581,9582]},{"type":"rightadapter","out_nodes":[[9580,3677]],"__id":22068,"parentNodes":[37]},{"type":"not","out_nodes":[[9583,-1]],"__id":22069,"parentNodes":[9584,9585],"constraint":{"type":"join-reference","out_nodes":[],"__id":22070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9580,-1]],"__id":22071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9582,3678]],"__id":22075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9582,3679]],"__id":22079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22080,"parentNodes":[9587],"index":1104,"rule":{"name":"Calculate131","pattern":{"type":"composite","id":4055,"leftPattern":{"type":"composite","id":4054,"leftPattern":{"type":"composite","id":4053,"leftPattern":{"type":"object","id":4049,"cls":"Fibonacci131","alias":"f1"},"rightPattern":{"type":"object","id":4050,"cls":"Fibonacci131","alias":"f2"}},"rightPattern":{"type":"object","id":4051,"cls":"Fibonacci131","alias":"f3"}},"rightPattern":{"type":"object","id":4052,"cls":"Result131","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate131"},{"type":"beta","out_nodes":[[9586,-1]],"__id":22081,"parentNodes":[9589,9590]},{"type":"type","out_nodes":[[3,3680]],"__id":22082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result131"}},{"type":"rightadapter","out_nodes":[[9587,3680]],"__id":22085,"parentNodes":[4]},{"type":"join","out_nodes":[[9591,-1]],"__id":22086,"parentNodes":[9593,9594],"constraint":{"type":"join-reference","out_nodes":[],"__id":22087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9587,-1]],"__id":22088,"parentNodes":[]},{"type":"type","out_nodes":[[9,3681],[14,3682],[20,3683],[30,3685],[20,3687],[30,3688]],"__id":22089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci131"}},{"type":"rightadapter","out_nodes":[[9590,3681]],"__id":22092,"parentNodes":[10]},{"type":"join","out_nodes":[[9595,-1]],"__id":22093,"parentNodes":[9596,9597],"constraint":{"type":"join-reference","out_nodes":[],"__id":22094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9590,-1]],"__id":22095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9594,3682]],"__id":22100,"parentNodes":[16]},{"type":"beta","out_nodes":[[9598,-1]],"__id":22101,"parentNodes":[9599,9600]},{"type":"leftadapter","out_nodes":[[9594,-1]],"__id":22102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9597,3683]],"__id":22107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9597,3684]],"__id":22111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22112,"parentNodes":[9602],"index":1105,"rule":{"name":"Bootstrap131","pattern":{"type":"object","id":4056,"cls":"Fibonacci131","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap131"},{"type":"beta","out_nodes":[[9601,-1]],"__id":22113,"parentNodes":[9603,9604]},{"type":"rightadapter","out_nodes":[[9602,3685]],"__id":22118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9602,3686]],"__id":22122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22123,"parentNodes":[9606],"index":1106,"rule":{"name":"Recurse131","pattern":{"type":"composite","id":4059,"leftPattern":{"type":"not","id":4057,"cls":"Fibonacci131","alias":"f"},"rightPattern":{"type":"object","id":4058,"cls":"Fibonacci131","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci131 = defined.get('Fibonacci131');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci131(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse131"},{"type":"beta","out_nodes":[[9605,-1]],"__id":22124,"parentNodes":[9607,9608]},{"type":"rightadapter","out_nodes":[[9606,3687]],"__id":22128,"parentNodes":[37]},{"type":"not","out_nodes":[[9609,-1]],"__id":22129,"parentNodes":[9610,9611],"constraint":{"type":"join-reference","out_nodes":[],"__id":22130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9606,-1]],"__id":22131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9608,3688]],"__id":22135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9608,3689]],"__id":22139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22140,"parentNodes":[9613],"index":1107,"rule":{"name":"Calculate130","pattern":{"type":"composite","id":4066,"leftPattern":{"type":"composite","id":4065,"leftPattern":{"type":"composite","id":4064,"leftPattern":{"type":"object","id":4060,"cls":"Fibonacci130","alias":"f1"},"rightPattern":{"type":"object","id":4061,"cls":"Fibonacci130","alias":"f2"}},"rightPattern":{"type":"object","id":4062,"cls":"Fibonacci130","alias":"f3"}},"rightPattern":{"type":"object","id":4063,"cls":"Result130","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate130"},{"type":"beta","out_nodes":[[9612,-1]],"__id":22141,"parentNodes":[9615,9616]},{"type":"type","out_nodes":[[3,3690]],"__id":22142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result130"}},{"type":"rightadapter","out_nodes":[[9613,3690]],"__id":22145,"parentNodes":[4]},{"type":"join","out_nodes":[[9617,-1]],"__id":22146,"parentNodes":[9619,9620],"constraint":{"type":"join-reference","out_nodes":[],"__id":22147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9613,-1]],"__id":22148,"parentNodes":[]},{"type":"type","out_nodes":[[9,3691],[14,3692],[20,3693],[30,3695],[20,3697],[30,3698]],"__id":22149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci130"}},{"type":"rightadapter","out_nodes":[[9616,3691]],"__id":22152,"parentNodes":[10]},{"type":"join","out_nodes":[[9621,-1]],"__id":22153,"parentNodes":[9622,9623],"constraint":{"type":"join-reference","out_nodes":[],"__id":22154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9616,-1]],"__id":22155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9620,3692]],"__id":22160,"parentNodes":[16]},{"type":"beta","out_nodes":[[9624,-1]],"__id":22161,"parentNodes":[9625,9626]},{"type":"leftadapter","out_nodes":[[9620,-1]],"__id":22162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9623,3693]],"__id":22167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9623,3694]],"__id":22171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22172,"parentNodes":[9628],"index":1108,"rule":{"name":"Bootstrap130","pattern":{"type":"object","id":4067,"cls":"Fibonacci130","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap130"},{"type":"beta","out_nodes":[[9627,-1]],"__id":22173,"parentNodes":[9629,9630]},{"type":"rightadapter","out_nodes":[[9628,3695]],"__id":22178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9628,3696]],"__id":22182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22183,"parentNodes":[9632],"index":1109,"rule":{"name":"Recurse130","pattern":{"type":"composite","id":4070,"leftPattern":{"type":"not","id":4068,"cls":"Fibonacci130","alias":"f"},"rightPattern":{"type":"object","id":4069,"cls":"Fibonacci130","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');let Fibonacci130 = defined.get('Fibonacci130');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci130(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse130"},{"type":"beta","out_nodes":[[9631,-1]],"__id":22184,"parentNodes":[9633,9634]},{"type":"rightadapter","out_nodes":[[9632,3697]],"__id":22188,"parentNodes":[37]},{"type":"not","out_nodes":[[9635,-1]],"__id":22189,"parentNodes":[9636,9637],"constraint":{"type":"join-reference","out_nodes":[],"__id":22190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9632,-1]],"__id":22191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9634,3698]],"__id":22195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9634,3699]],"__id":22199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22200,"parentNodes":[9639],"index":1110,"rule":{"name":"Calculate129","pattern":{"type":"composite","id":4077,"leftPattern":{"type":"composite","id":4076,"leftPattern":{"type":"composite","id":4075,"leftPattern":{"type":"object","id":4071,"cls":"Fibonacci129","alias":"f1"},"rightPattern":{"type":"object","id":4072,"cls":"Fibonacci129","alias":"f2"}},"rightPattern":{"type":"object","id":4073,"cls":"Fibonacci129","alias":"f3"}},"rightPattern":{"type":"object","id":4074,"cls":"Result129","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate129"},{"type":"beta","out_nodes":[[9638,-1]],"__id":22201,"parentNodes":[9641,9642]},{"type":"type","out_nodes":[[3,3700]],"__id":22202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result129"}},{"type":"rightadapter","out_nodes":[[9639,3700]],"__id":22205,"parentNodes":[4]},{"type":"join","out_nodes":[[9643,-1]],"__id":22206,"parentNodes":[9645,9646],"constraint":{"type":"join-reference","out_nodes":[],"__id":22207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9639,-1]],"__id":22208,"parentNodes":[]},{"type":"type","out_nodes":[[9,3701],[14,3702],[20,3703],[30,3705],[20,3707],[30,3708]],"__id":22209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci129"}},{"type":"rightadapter","out_nodes":[[9642,3701]],"__id":22212,"parentNodes":[10]},{"type":"join","out_nodes":[[9647,-1]],"__id":22213,"parentNodes":[9648,9649],"constraint":{"type":"join-reference","out_nodes":[],"__id":22214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9642,-1]],"__id":22215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9646,3702]],"__id":22220,"parentNodes":[16]},{"type":"beta","out_nodes":[[9650,-1]],"__id":22221,"parentNodes":[9651,9652]},{"type":"leftadapter","out_nodes":[[9646,-1]],"__id":22222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9649,3703]],"__id":22227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9649,3704]],"__id":22231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22232,"parentNodes":[9654],"index":1111,"rule":{"name":"Bootstrap129","pattern":{"type":"object","id":4078,"cls":"Fibonacci129","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap129"},{"type":"beta","out_nodes":[[9653,-1]],"__id":22233,"parentNodes":[9655,9656]},{"type":"rightadapter","out_nodes":[[9654,3705]],"__id":22238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9654,3706]],"__id":22242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22243,"parentNodes":[9658],"index":1112,"rule":{"name":"Recurse129","pattern":{"type":"composite","id":4081,"leftPattern":{"type":"not","id":4079,"cls":"Fibonacci129","alias":"f"},"rightPattern":{"type":"object","id":4080,"cls":"Fibonacci129","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci129 = defined.get('Fibonacci129');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci129(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse129"},{"type":"beta","out_nodes":[[9657,-1]],"__id":22244,"parentNodes":[9659,9660]},{"type":"rightadapter","out_nodes":[[9658,3707]],"__id":22248,"parentNodes":[37]},{"type":"not","out_nodes":[[9661,-1]],"__id":22249,"parentNodes":[9662,9663],"constraint":{"type":"join-reference","out_nodes":[],"__id":22250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9658,-1]],"__id":22251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9660,3708]],"__id":22255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9660,3709]],"__id":22259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22260,"parentNodes":[9665],"index":1113,"rule":{"name":"Calculate128","pattern":{"type":"composite","id":4088,"leftPattern":{"type":"composite","id":4087,"leftPattern":{"type":"composite","id":4086,"leftPattern":{"type":"object","id":4082,"cls":"Fibonacci128","alias":"f1"},"rightPattern":{"type":"object","id":4083,"cls":"Fibonacci128","alias":"f2"}},"rightPattern":{"type":"object","id":4084,"cls":"Fibonacci128","alias":"f3"}},"rightPattern":{"type":"object","id":4085,"cls":"Result128","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate128"},{"type":"beta","out_nodes":[[9664,-1]],"__id":22261,"parentNodes":[9667,9668]},{"type":"type","out_nodes":[[3,3710]],"__id":22262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result128"}},{"type":"rightadapter","out_nodes":[[9665,3710]],"__id":22265,"parentNodes":[4]},{"type":"join","out_nodes":[[9669,-1]],"__id":22266,"parentNodes":[9671,9672],"constraint":{"type":"join-reference","out_nodes":[],"__id":22267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9665,-1]],"__id":22268,"parentNodes":[]},{"type":"type","out_nodes":[[9,3711],[14,3712],[20,3713],[30,3715],[20,3717],[30,3718]],"__id":22269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci128"}},{"type":"rightadapter","out_nodes":[[9668,3711]],"__id":22272,"parentNodes":[10]},{"type":"join","out_nodes":[[9673,-1]],"__id":22273,"parentNodes":[9674,9675],"constraint":{"type":"join-reference","out_nodes":[],"__id":22274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9668,-1]],"__id":22275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9672,3712]],"__id":22280,"parentNodes":[16]},{"type":"beta","out_nodes":[[9676,-1]],"__id":22281,"parentNodes":[9677,9678]},{"type":"leftadapter","out_nodes":[[9672,-1]],"__id":22282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9675,3713]],"__id":22287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9675,3714]],"__id":22291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22292,"parentNodes":[9680],"index":1114,"rule":{"name":"Bootstrap128","pattern":{"type":"object","id":4089,"cls":"Fibonacci128","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap128"},{"type":"beta","out_nodes":[[9679,-1]],"__id":22293,"parentNodes":[9681,9682]},{"type":"rightadapter","out_nodes":[[9680,3715]],"__id":22298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9680,3716]],"__id":22302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22303,"parentNodes":[9684],"index":1115,"rule":{"name":"Recurse128","pattern":{"type":"composite","id":4092,"leftPattern":{"type":"not","id":4090,"cls":"Fibonacci128","alias":"f"},"rightPattern":{"type":"object","id":4091,"cls":"Fibonacci128","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci128 = defined.get('Fibonacci128');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci128(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse128"},{"type":"beta","out_nodes":[[9683,-1]],"__id":22304,"parentNodes":[9685,9686]},{"type":"rightadapter","out_nodes":[[9684,3717]],"__id":22308,"parentNodes":[37]},{"type":"not","out_nodes":[[9687,-1]],"__id":22309,"parentNodes":[9688,9689],"constraint":{"type":"join-reference","out_nodes":[],"__id":22310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9684,-1]],"__id":22311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9686,3718]],"__id":22315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9686,3719]],"__id":22319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22320,"parentNodes":[9691],"index":1116,"rule":{"name":"Calculate127","pattern":{"type":"composite","id":4099,"leftPattern":{"type":"composite","id":4098,"leftPattern":{"type":"composite","id":4097,"leftPattern":{"type":"object","id":4093,"cls":"Fibonacci127","alias":"f1"},"rightPattern":{"type":"object","id":4094,"cls":"Fibonacci127","alias":"f2"}},"rightPattern":{"type":"object","id":4095,"cls":"Fibonacci127","alias":"f3"}},"rightPattern":{"type":"object","id":4096,"cls":"Result127","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate127"},{"type":"beta","out_nodes":[[9690,-1]],"__id":22321,"parentNodes":[9693,9694]},{"type":"type","out_nodes":[[3,3720]],"__id":22322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result127"}},{"type":"rightadapter","out_nodes":[[9691,3720]],"__id":22325,"parentNodes":[4]},{"type":"join","out_nodes":[[9695,-1]],"__id":22326,"parentNodes":[9697,9698],"constraint":{"type":"join-reference","out_nodes":[],"__id":22327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9691,-1]],"__id":22328,"parentNodes":[]},{"type":"type","out_nodes":[[9,3721],[14,3722],[20,3723],[30,3725],[20,3727],[30,3728]],"__id":22329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci127"}},{"type":"rightadapter","out_nodes":[[9694,3721]],"__id":22332,"parentNodes":[10]},{"type":"join","out_nodes":[[9699,-1]],"__id":22333,"parentNodes":[9700,9701],"constraint":{"type":"join-reference","out_nodes":[],"__id":22334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9694,-1]],"__id":22335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9698,3722]],"__id":22340,"parentNodes":[16]},{"type":"beta","out_nodes":[[9702,-1]],"__id":22341,"parentNodes":[9703,9704]},{"type":"leftadapter","out_nodes":[[9698,-1]],"__id":22342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9701,3723]],"__id":22347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9701,3724]],"__id":22351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22352,"parentNodes":[9706],"index":1117,"rule":{"name":"Bootstrap127","pattern":{"type":"object","id":4100,"cls":"Fibonacci127","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap127"},{"type":"beta","out_nodes":[[9705,-1]],"__id":22353,"parentNodes":[9707,9708]},{"type":"rightadapter","out_nodes":[[9706,3725]],"__id":22358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9706,3726]],"__id":22362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22363,"parentNodes":[9710],"index":1118,"rule":{"name":"Recurse127","pattern":{"type":"composite","id":4103,"leftPattern":{"type":"not","id":4101,"cls":"Fibonacci127","alias":"f"},"rightPattern":{"type":"object","id":4102,"cls":"Fibonacci127","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci127 = defined.get('Fibonacci127');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci127(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse127"},{"type":"beta","out_nodes":[[9709,-1]],"__id":22364,"parentNodes":[9711,9712]},{"type":"rightadapter","out_nodes":[[9710,3727]],"__id":22368,"parentNodes":[37]},{"type":"not","out_nodes":[[9713,-1]],"__id":22369,"parentNodes":[9714,9715],"constraint":{"type":"join-reference","out_nodes":[],"__id":22370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9710,-1]],"__id":22371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9712,3728]],"__id":22375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9712,3729]],"__id":22379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22380,"parentNodes":[9717],"index":1119,"rule":{"name":"Calculate126","pattern":{"type":"composite","id":4110,"leftPattern":{"type":"composite","id":4109,"leftPattern":{"type":"composite","id":4108,"leftPattern":{"type":"object","id":4104,"cls":"Fibonacci126","alias":"f1"},"rightPattern":{"type":"object","id":4105,"cls":"Fibonacci126","alias":"f2"}},"rightPattern":{"type":"object","id":4106,"cls":"Fibonacci126","alias":"f3"}},"rightPattern":{"type":"object","id":4107,"cls":"Result126","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate126"},{"type":"beta","out_nodes":[[9716,-1]],"__id":22381,"parentNodes":[9719,9720]},{"type":"type","out_nodes":[[3,3730]],"__id":22382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result126"}},{"type":"rightadapter","out_nodes":[[9717,3730]],"__id":22385,"parentNodes":[4]},{"type":"join","out_nodes":[[9721,-1]],"__id":22386,"parentNodes":[9723,9724],"constraint":{"type":"join-reference","out_nodes":[],"__id":22387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9717,-1]],"__id":22388,"parentNodes":[]},{"type":"type","out_nodes":[[9,3731],[14,3732],[20,3733],[30,3735],[20,3737],[30,3738]],"__id":22389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci126"}},{"type":"rightadapter","out_nodes":[[9720,3731]],"__id":22392,"parentNodes":[10]},{"type":"join","out_nodes":[[9725,-1]],"__id":22393,"parentNodes":[9726,9727],"constraint":{"type":"join-reference","out_nodes":[],"__id":22394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9720,-1]],"__id":22395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9724,3732]],"__id":22400,"parentNodes":[16]},{"type":"beta","out_nodes":[[9728,-1]],"__id":22401,"parentNodes":[9729,9730]},{"type":"leftadapter","out_nodes":[[9724,-1]],"__id":22402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9727,3733]],"__id":22407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9727,3734]],"__id":22411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22412,"parentNodes":[9732],"index":1120,"rule":{"name":"Bootstrap126","pattern":{"type":"object","id":4111,"cls":"Fibonacci126","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap126"},{"type":"beta","out_nodes":[[9731,-1]],"__id":22413,"parentNodes":[9733,9734]},{"type":"rightadapter","out_nodes":[[9732,3735]],"__id":22418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9732,3736]],"__id":22422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22423,"parentNodes":[9736],"index":1121,"rule":{"name":"Recurse126","pattern":{"type":"composite","id":4114,"leftPattern":{"type":"not","id":4112,"cls":"Fibonacci126","alias":"f"},"rightPattern":{"type":"object","id":4113,"cls":"Fibonacci126","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci126 = defined.get('Fibonacci126');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci126(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse126"},{"type":"beta","out_nodes":[[9735,-1]],"__id":22424,"parentNodes":[9737,9738]},{"type":"rightadapter","out_nodes":[[9736,3737]],"__id":22428,"parentNodes":[37]},{"type":"not","out_nodes":[[9739,-1]],"__id":22429,"parentNodes":[9740,9741],"constraint":{"type":"join-reference","out_nodes":[],"__id":22430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9736,-1]],"__id":22431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9738,3738]],"__id":22435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9738,3739]],"__id":22439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22440,"parentNodes":[9743],"index":1122,"rule":{"name":"Calculate125","pattern":{"type":"composite","id":4121,"leftPattern":{"type":"composite","id":4120,"leftPattern":{"type":"composite","id":4119,"leftPattern":{"type":"object","id":4115,"cls":"Fibonacci125","alias":"f1"},"rightPattern":{"type":"object","id":4116,"cls":"Fibonacci125","alias":"f2"}},"rightPattern":{"type":"object","id":4117,"cls":"Fibonacci125","alias":"f3"}},"rightPattern":{"type":"object","id":4118,"cls":"Result125","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate125"},{"type":"beta","out_nodes":[[9742,-1]],"__id":22441,"parentNodes":[9745,9746]},{"type":"type","out_nodes":[[3,3740]],"__id":22442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result125"}},{"type":"rightadapter","out_nodes":[[9743,3740]],"__id":22445,"parentNodes":[4]},{"type":"join","out_nodes":[[9747,-1]],"__id":22446,"parentNodes":[9749,9750],"constraint":{"type":"join-reference","out_nodes":[],"__id":22447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9743,-1]],"__id":22448,"parentNodes":[]},{"type":"type","out_nodes":[[9,3741],[14,3742],[20,3743],[30,3745],[20,3747],[30,3748]],"__id":22449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci125"}},{"type":"rightadapter","out_nodes":[[9746,3741]],"__id":22452,"parentNodes":[10]},{"type":"join","out_nodes":[[9751,-1]],"__id":22453,"parentNodes":[9752,9753],"constraint":{"type":"join-reference","out_nodes":[],"__id":22454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9746,-1]],"__id":22455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9750,3742]],"__id":22460,"parentNodes":[16]},{"type":"beta","out_nodes":[[9754,-1]],"__id":22461,"parentNodes":[9755,9756]},{"type":"leftadapter","out_nodes":[[9750,-1]],"__id":22462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9753,3743]],"__id":22467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9753,3744]],"__id":22471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22472,"parentNodes":[9758],"index":1123,"rule":{"name":"Bootstrap125","pattern":{"type":"object","id":4122,"cls":"Fibonacci125","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap125"},{"type":"beta","out_nodes":[[9757,-1]],"__id":22473,"parentNodes":[9759,9760]},{"type":"rightadapter","out_nodes":[[9758,3745]],"__id":22478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9758,3746]],"__id":22482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22483,"parentNodes":[9762],"index":1124,"rule":{"name":"Recurse125","pattern":{"type":"composite","id":4125,"leftPattern":{"type":"not","id":4123,"cls":"Fibonacci125","alias":"f"},"rightPattern":{"type":"object","id":4124,"cls":"Fibonacci125","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci125 = defined.get('Fibonacci125');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci125(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse125"},{"type":"beta","out_nodes":[[9761,-1]],"__id":22484,"parentNodes":[9763,9764]},{"type":"rightadapter","out_nodes":[[9762,3747]],"__id":22488,"parentNodes":[37]},{"type":"not","out_nodes":[[9765,-1]],"__id":22489,"parentNodes":[9766,9767],"constraint":{"type":"join-reference","out_nodes":[],"__id":22490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9762,-1]],"__id":22491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9764,3748]],"__id":22495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9764,3749]],"__id":22499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22500,"parentNodes":[9769],"index":1125,"rule":{"name":"Calculate124","pattern":{"type":"composite","id":4132,"leftPattern":{"type":"composite","id":4131,"leftPattern":{"type":"composite","id":4130,"leftPattern":{"type":"object","id":4126,"cls":"Fibonacci124","alias":"f1"},"rightPattern":{"type":"object","id":4127,"cls":"Fibonacci124","alias":"f2"}},"rightPattern":{"type":"object","id":4128,"cls":"Fibonacci124","alias":"f3"}},"rightPattern":{"type":"object","id":4129,"cls":"Result124","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate124"},{"type":"beta","out_nodes":[[9768,-1]],"__id":22501,"parentNodes":[9771,9772]},{"type":"type","out_nodes":[[3,3750]],"__id":22502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result124"}},{"type":"rightadapter","out_nodes":[[9769,3750]],"__id":22505,"parentNodes":[4]},{"type":"join","out_nodes":[[9773,-1]],"__id":22506,"parentNodes":[9775,9776],"constraint":{"type":"join-reference","out_nodes":[],"__id":22507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9769,-1]],"__id":22508,"parentNodes":[]},{"type":"type","out_nodes":[[9,3751],[14,3752],[20,3753],[30,3755],[20,3757],[30,3758]],"__id":22509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci124"}},{"type":"rightadapter","out_nodes":[[9772,3751]],"__id":22512,"parentNodes":[10]},{"type":"join","out_nodes":[[9777,-1]],"__id":22513,"parentNodes":[9778,9779],"constraint":{"type":"join-reference","out_nodes":[],"__id":22514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9772,-1]],"__id":22515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9776,3752]],"__id":22520,"parentNodes":[16]},{"type":"beta","out_nodes":[[9780,-1]],"__id":22521,"parentNodes":[9781,9782]},{"type":"leftadapter","out_nodes":[[9776,-1]],"__id":22522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9779,3753]],"__id":22527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9779,3754]],"__id":22531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22532,"parentNodes":[9784],"index":1126,"rule":{"name":"Bootstrap124","pattern":{"type":"object","id":4133,"cls":"Fibonacci124","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap124"},{"type":"beta","out_nodes":[[9783,-1]],"__id":22533,"parentNodes":[9785,9786]},{"type":"rightadapter","out_nodes":[[9784,3755]],"__id":22538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9784,3756]],"__id":22542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22543,"parentNodes":[9788],"index":1127,"rule":{"name":"Recurse124","pattern":{"type":"composite","id":4136,"leftPattern":{"type":"not","id":4134,"cls":"Fibonacci124","alias":"f"},"rightPattern":{"type":"object","id":4135,"cls":"Fibonacci124","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci124 = defined.get('Fibonacci124');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci124(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse124"},{"type":"beta","out_nodes":[[9787,-1]],"__id":22544,"parentNodes":[9789,9790]},{"type":"rightadapter","out_nodes":[[9788,3757]],"__id":22548,"parentNodes":[37]},{"type":"not","out_nodes":[[9791,-1]],"__id":22549,"parentNodes":[9792,9793],"constraint":{"type":"join-reference","out_nodes":[],"__id":22550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9788,-1]],"__id":22551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9790,3758]],"__id":22555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9790,3759]],"__id":22559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22560,"parentNodes":[9795],"index":1128,"rule":{"name":"Calculate123","pattern":{"type":"composite","id":4143,"leftPattern":{"type":"composite","id":4142,"leftPattern":{"type":"composite","id":4141,"leftPattern":{"type":"object","id":4137,"cls":"Fibonacci123","alias":"f1"},"rightPattern":{"type":"object","id":4138,"cls":"Fibonacci123","alias":"f2"}},"rightPattern":{"type":"object","id":4139,"cls":"Fibonacci123","alias":"f3"}},"rightPattern":{"type":"object","id":4140,"cls":"Result123","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate123"},{"type":"beta","out_nodes":[[9794,-1]],"__id":22561,"parentNodes":[9797,9798]},{"type":"type","out_nodes":[[3,3760]],"__id":22562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result123"}},{"type":"rightadapter","out_nodes":[[9795,3760]],"__id":22565,"parentNodes":[4]},{"type":"join","out_nodes":[[9799,-1]],"__id":22566,"parentNodes":[9801,9802],"constraint":{"type":"join-reference","out_nodes":[],"__id":22567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9795,-1]],"__id":22568,"parentNodes":[]},{"type":"type","out_nodes":[[9,3761],[14,3762],[20,3763],[30,3765],[20,3767],[30,3768]],"__id":22569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci123"}},{"type":"rightadapter","out_nodes":[[9798,3761]],"__id":22572,"parentNodes":[10]},{"type":"join","out_nodes":[[9803,-1]],"__id":22573,"parentNodes":[9804,9805],"constraint":{"type":"join-reference","out_nodes":[],"__id":22574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9798,-1]],"__id":22575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9802,3762]],"__id":22580,"parentNodes":[16]},{"type":"beta","out_nodes":[[9806,-1]],"__id":22581,"parentNodes":[9807,9808]},{"type":"leftadapter","out_nodes":[[9802,-1]],"__id":22582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9805,3763]],"__id":22587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9805,3764]],"__id":22591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22592,"parentNodes":[9810],"index":1129,"rule":{"name":"Bootstrap123","pattern":{"type":"object","id":4144,"cls":"Fibonacci123","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap123"},{"type":"beta","out_nodes":[[9809,-1]],"__id":22593,"parentNodes":[9811,9812]},{"type":"rightadapter","out_nodes":[[9810,3765]],"__id":22598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9810,3766]],"__id":22602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22603,"parentNodes":[9814],"index":1130,"rule":{"name":"Recurse123","pattern":{"type":"composite","id":4147,"leftPattern":{"type":"not","id":4145,"cls":"Fibonacci123","alias":"f"},"rightPattern":{"type":"object","id":4146,"cls":"Fibonacci123","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci123 = defined.get('Fibonacci123');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci123(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse123"},{"type":"beta","out_nodes":[[9813,-1]],"__id":22604,"parentNodes":[9815,9816]},{"type":"rightadapter","out_nodes":[[9814,3767]],"__id":22608,"parentNodes":[37]},{"type":"not","out_nodes":[[9817,-1]],"__id":22609,"parentNodes":[9818,9819],"constraint":{"type":"join-reference","out_nodes":[],"__id":22610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9814,-1]],"__id":22611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9816,3768]],"__id":22615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9816,3769]],"__id":22619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22620,"parentNodes":[9821],"index":1131,"rule":{"name":"Calculate122","pattern":{"type":"composite","id":4154,"leftPattern":{"type":"composite","id":4153,"leftPattern":{"type":"composite","id":4152,"leftPattern":{"type":"object","id":4148,"cls":"Fibonacci122","alias":"f1"},"rightPattern":{"type":"object","id":4149,"cls":"Fibonacci122","alias":"f2"}},"rightPattern":{"type":"object","id":4150,"cls":"Fibonacci122","alias":"f3"}},"rightPattern":{"type":"object","id":4151,"cls":"Result122","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate122"},{"type":"beta","out_nodes":[[9820,-1]],"__id":22621,"parentNodes":[9823,9824]},{"type":"type","out_nodes":[[3,3770]],"__id":22622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result122"}},{"type":"rightadapter","out_nodes":[[9821,3770]],"__id":22625,"parentNodes":[4]},{"type":"join","out_nodes":[[9825,-1]],"__id":22626,"parentNodes":[9827,9828],"constraint":{"type":"join-reference","out_nodes":[],"__id":22627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9821,-1]],"__id":22628,"parentNodes":[]},{"type":"type","out_nodes":[[9,3771],[14,3772],[20,3773],[30,3775],[20,3777],[30,3778]],"__id":22629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci122"}},{"type":"rightadapter","out_nodes":[[9824,3771]],"__id":22632,"parentNodes":[10]},{"type":"join","out_nodes":[[9829,-1]],"__id":22633,"parentNodes":[9830,9831],"constraint":{"type":"join-reference","out_nodes":[],"__id":22634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9824,-1]],"__id":22635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9828,3772]],"__id":22640,"parentNodes":[16]},{"type":"beta","out_nodes":[[9832,-1]],"__id":22641,"parentNodes":[9833,9834]},{"type":"leftadapter","out_nodes":[[9828,-1]],"__id":22642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9831,3773]],"__id":22647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9831,3774]],"__id":22651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22652,"parentNodes":[9836],"index":1132,"rule":{"name":"Bootstrap122","pattern":{"type":"object","id":4155,"cls":"Fibonacci122","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap122"},{"type":"beta","out_nodes":[[9835,-1]],"__id":22653,"parentNodes":[9837,9838]},{"type":"rightadapter","out_nodes":[[9836,3775]],"__id":22658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9836,3776]],"__id":22662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22663,"parentNodes":[9840],"index":1133,"rule":{"name":"Recurse122","pattern":{"type":"composite","id":4158,"leftPattern":{"type":"not","id":4156,"cls":"Fibonacci122","alias":"f"},"rightPattern":{"type":"object","id":4157,"cls":"Fibonacci122","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci122 = defined.get('Fibonacci122');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci122(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse122"},{"type":"beta","out_nodes":[[9839,-1]],"__id":22664,"parentNodes":[9841,9842]},{"type":"rightadapter","out_nodes":[[9840,3777]],"__id":22668,"parentNodes":[37]},{"type":"not","out_nodes":[[9843,-1]],"__id":22669,"parentNodes":[9844,9845],"constraint":{"type":"join-reference","out_nodes":[],"__id":22670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9840,-1]],"__id":22671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9842,3778]],"__id":22675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9842,3779]],"__id":22679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22680,"parentNodes":[9847],"index":1134,"rule":{"name":"Calculate121","pattern":{"type":"composite","id":4165,"leftPattern":{"type":"composite","id":4164,"leftPattern":{"type":"composite","id":4163,"leftPattern":{"type":"object","id":4159,"cls":"Fibonacci121","alias":"f1"},"rightPattern":{"type":"object","id":4160,"cls":"Fibonacci121","alias":"f2"}},"rightPattern":{"type":"object","id":4161,"cls":"Fibonacci121","alias":"f3"}},"rightPattern":{"type":"object","id":4162,"cls":"Result121","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate121"},{"type":"beta","out_nodes":[[9846,-1]],"__id":22681,"parentNodes":[9849,9850]},{"type":"type","out_nodes":[[3,3780]],"__id":22682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result121"}},{"type":"rightadapter","out_nodes":[[9847,3780]],"__id":22685,"parentNodes":[4]},{"type":"join","out_nodes":[[9851,-1]],"__id":22686,"parentNodes":[9853,9854],"constraint":{"type":"join-reference","out_nodes":[],"__id":22687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9847,-1]],"__id":22688,"parentNodes":[]},{"type":"type","out_nodes":[[9,3781],[14,3782],[20,3783],[30,3785],[20,3787],[30,3788]],"__id":22689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci121"}},{"type":"rightadapter","out_nodes":[[9850,3781]],"__id":22692,"parentNodes":[10]},{"type":"join","out_nodes":[[9855,-1]],"__id":22693,"parentNodes":[9856,9857],"constraint":{"type":"join-reference","out_nodes":[],"__id":22694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9850,-1]],"__id":22695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9854,3782]],"__id":22700,"parentNodes":[16]},{"type":"beta","out_nodes":[[9858,-1]],"__id":22701,"parentNodes":[9859,9860]},{"type":"leftadapter","out_nodes":[[9854,-1]],"__id":22702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9857,3783]],"__id":22707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9857,3784]],"__id":22711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22712,"parentNodes":[9862],"index":1135,"rule":{"name":"Bootstrap121","pattern":{"type":"object","id":4166,"cls":"Fibonacci121","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap121"},{"type":"beta","out_nodes":[[9861,-1]],"__id":22713,"parentNodes":[9863,9864]},{"type":"rightadapter","out_nodes":[[9862,3785]],"__id":22718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9862,3786]],"__id":22722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22723,"parentNodes":[9866],"index":1136,"rule":{"name":"Recurse121","pattern":{"type":"composite","id":4169,"leftPattern":{"type":"not","id":4167,"cls":"Fibonacci121","alias":"f"},"rightPattern":{"type":"object","id":4168,"cls":"Fibonacci121","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci121 = defined.get('Fibonacci121');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci121(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse121"},{"type":"beta","out_nodes":[[9865,-1]],"__id":22724,"parentNodes":[9867,9868]},{"type":"rightadapter","out_nodes":[[9866,3787]],"__id":22728,"parentNodes":[37]},{"type":"not","out_nodes":[[9869,-1]],"__id":22729,"parentNodes":[9870,9871],"constraint":{"type":"join-reference","out_nodes":[],"__id":22730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9866,-1]],"__id":22731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9868,3788]],"__id":22735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9868,3789]],"__id":22739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22740,"parentNodes":[9873],"index":1137,"rule":{"name":"Calculate120","pattern":{"type":"composite","id":4176,"leftPattern":{"type":"composite","id":4175,"leftPattern":{"type":"composite","id":4174,"leftPattern":{"type":"object","id":4170,"cls":"Fibonacci120","alias":"f1"},"rightPattern":{"type":"object","id":4171,"cls":"Fibonacci120","alias":"f2"}},"rightPattern":{"type":"object","id":4172,"cls":"Fibonacci120","alias":"f3"}},"rightPattern":{"type":"object","id":4173,"cls":"Result120","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate120"},{"type":"beta","out_nodes":[[9872,-1]],"__id":22741,"parentNodes":[9875,9876]},{"type":"type","out_nodes":[[3,3790]],"__id":22742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result120"}},{"type":"rightadapter","out_nodes":[[9873,3790]],"__id":22745,"parentNodes":[4]},{"type":"join","out_nodes":[[9877,-1]],"__id":22746,"parentNodes":[9879,9880],"constraint":{"type":"join-reference","out_nodes":[],"__id":22747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9873,-1]],"__id":22748,"parentNodes":[]},{"type":"type","out_nodes":[[9,3791],[14,3792],[20,3793],[30,3795],[20,3797],[30,3798]],"__id":22749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci120"}},{"type":"rightadapter","out_nodes":[[9876,3791]],"__id":22752,"parentNodes":[10]},{"type":"join","out_nodes":[[9881,-1]],"__id":22753,"parentNodes":[9882,9883],"constraint":{"type":"join-reference","out_nodes":[],"__id":22754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9876,-1]],"__id":22755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9880,3792]],"__id":22760,"parentNodes":[16]},{"type":"beta","out_nodes":[[9884,-1]],"__id":22761,"parentNodes":[9885,9886]},{"type":"leftadapter","out_nodes":[[9880,-1]],"__id":22762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9883,3793]],"__id":22767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9883,3794]],"__id":22771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22772,"parentNodes":[9888],"index":1138,"rule":{"name":"Bootstrap120","pattern":{"type":"object","id":4177,"cls":"Fibonacci120","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap120"},{"type":"beta","out_nodes":[[9887,-1]],"__id":22773,"parentNodes":[9889,9890]},{"type":"rightadapter","out_nodes":[[9888,3795]],"__id":22778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9888,3796]],"__id":22782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22783,"parentNodes":[9892],"index":1139,"rule":{"name":"Recurse120","pattern":{"type":"composite","id":4180,"leftPattern":{"type":"not","id":4178,"cls":"Fibonacci120","alias":"f"},"rightPattern":{"type":"object","id":4179,"cls":"Fibonacci120","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');let Fibonacci120 = defined.get('Fibonacci120');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci120(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse120"},{"type":"beta","out_nodes":[[9891,-1]],"__id":22784,"parentNodes":[9893,9894]},{"type":"rightadapter","out_nodes":[[9892,3797]],"__id":22788,"parentNodes":[37]},{"type":"not","out_nodes":[[9895,-1]],"__id":22789,"parentNodes":[9896,9897],"constraint":{"type":"join-reference","out_nodes":[],"__id":22790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9892,-1]],"__id":22791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9894,3798]],"__id":22795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9894,3799]],"__id":22799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22800,"parentNodes":[9899],"index":1140,"rule":{"name":"Calculate119","pattern":{"type":"composite","id":4187,"leftPattern":{"type":"composite","id":4186,"leftPattern":{"type":"composite","id":4185,"leftPattern":{"type":"object","id":4181,"cls":"Fibonacci119","alias":"f1"},"rightPattern":{"type":"object","id":4182,"cls":"Fibonacci119","alias":"f2"}},"rightPattern":{"type":"object","id":4183,"cls":"Fibonacci119","alias":"f3"}},"rightPattern":{"type":"object","id":4184,"cls":"Result119","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate119"},{"type":"beta","out_nodes":[[9898,-1]],"__id":22801,"parentNodes":[9901,9902]},{"type":"type","out_nodes":[[3,3800]],"__id":22802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result119"}},{"type":"rightadapter","out_nodes":[[9899,3800]],"__id":22805,"parentNodes":[4]},{"type":"join","out_nodes":[[9903,-1]],"__id":22806,"parentNodes":[9905,9906],"constraint":{"type":"join-reference","out_nodes":[],"__id":22807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9899,-1]],"__id":22808,"parentNodes":[]},{"type":"type","out_nodes":[[9,3801],[14,3802],[20,3803],[30,3805],[20,3807],[30,3808]],"__id":22809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci119"}},{"type":"rightadapter","out_nodes":[[9902,3801]],"__id":22812,"parentNodes":[10]},{"type":"join","out_nodes":[[9907,-1]],"__id":22813,"parentNodes":[9908,9909],"constraint":{"type":"join-reference","out_nodes":[],"__id":22814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9902,-1]],"__id":22815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9906,3802]],"__id":22820,"parentNodes":[16]},{"type":"beta","out_nodes":[[9910,-1]],"__id":22821,"parentNodes":[9911,9912]},{"type":"leftadapter","out_nodes":[[9906,-1]],"__id":22822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9909,3803]],"__id":22827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9909,3804]],"__id":22831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22832,"parentNodes":[9914],"index":1141,"rule":{"name":"Bootstrap119","pattern":{"type":"object","id":4188,"cls":"Fibonacci119","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap119"},{"type":"beta","out_nodes":[[9913,-1]],"__id":22833,"parentNodes":[9915,9916]},{"type":"rightadapter","out_nodes":[[9914,3805]],"__id":22838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9914,3806]],"__id":22842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22843,"parentNodes":[9918],"index":1142,"rule":{"name":"Recurse119","pattern":{"type":"composite","id":4191,"leftPattern":{"type":"not","id":4189,"cls":"Fibonacci119","alias":"f"},"rightPattern":{"type":"object","id":4190,"cls":"Fibonacci119","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci119 = defined.get('Fibonacci119');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci119(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse119"},{"type":"beta","out_nodes":[[9917,-1]],"__id":22844,"parentNodes":[9919,9920]},{"type":"rightadapter","out_nodes":[[9918,3807]],"__id":22848,"parentNodes":[37]},{"type":"not","out_nodes":[[9921,-1]],"__id":22849,"parentNodes":[9922,9923],"constraint":{"type":"join-reference","out_nodes":[],"__id":22850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9918,-1]],"__id":22851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9920,3808]],"__id":22855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9920,3809]],"__id":22859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22860,"parentNodes":[9925],"index":1143,"rule":{"name":"Calculate118","pattern":{"type":"composite","id":4198,"leftPattern":{"type":"composite","id":4197,"leftPattern":{"type":"composite","id":4196,"leftPattern":{"type":"object","id":4192,"cls":"Fibonacci118","alias":"f1"},"rightPattern":{"type":"object","id":4193,"cls":"Fibonacci118","alias":"f2"}},"rightPattern":{"type":"object","id":4194,"cls":"Fibonacci118","alias":"f3"}},"rightPattern":{"type":"object","id":4195,"cls":"Result118","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate118"},{"type":"beta","out_nodes":[[9924,-1]],"__id":22861,"parentNodes":[9927,9928]},{"type":"type","out_nodes":[[3,3810]],"__id":22862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result118"}},{"type":"rightadapter","out_nodes":[[9925,3810]],"__id":22865,"parentNodes":[4]},{"type":"join","out_nodes":[[9929,-1]],"__id":22866,"parentNodes":[9931,9932],"constraint":{"type":"join-reference","out_nodes":[],"__id":22867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9925,-1]],"__id":22868,"parentNodes":[]},{"type":"type","out_nodes":[[9,3811],[14,3812],[20,3813],[30,3815],[20,3817],[30,3818]],"__id":22869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci118"}},{"type":"rightadapter","out_nodes":[[9928,3811]],"__id":22872,"parentNodes":[10]},{"type":"join","out_nodes":[[9933,-1]],"__id":22873,"parentNodes":[9934,9935],"constraint":{"type":"join-reference","out_nodes":[],"__id":22874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9928,-1]],"__id":22875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9932,3812]],"__id":22880,"parentNodes":[16]},{"type":"beta","out_nodes":[[9936,-1]],"__id":22881,"parentNodes":[9937,9938]},{"type":"leftadapter","out_nodes":[[9932,-1]],"__id":22882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9935,3813]],"__id":22887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9935,3814]],"__id":22891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22892,"parentNodes":[9940],"index":1144,"rule":{"name":"Bootstrap118","pattern":{"type":"object","id":4199,"cls":"Fibonacci118","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap118"},{"type":"beta","out_nodes":[[9939,-1]],"__id":22893,"parentNodes":[9941,9942]},{"type":"rightadapter","out_nodes":[[9940,3815]],"__id":22898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9940,3816]],"__id":22902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22903,"parentNodes":[9944],"index":1145,"rule":{"name":"Recurse118","pattern":{"type":"composite","id":4202,"leftPattern":{"type":"not","id":4200,"cls":"Fibonacci118","alias":"f"},"rightPattern":{"type":"object","id":4201,"cls":"Fibonacci118","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci118 = defined.get('Fibonacci118');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci118(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse118"},{"type":"beta","out_nodes":[[9943,-1]],"__id":22904,"parentNodes":[9945,9946]},{"type":"rightadapter","out_nodes":[[9944,3817]],"__id":22908,"parentNodes":[37]},{"type":"not","out_nodes":[[9947,-1]],"__id":22909,"parentNodes":[9948,9949],"constraint":{"type":"join-reference","out_nodes":[],"__id":22910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9944,-1]],"__id":22911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9946,3818]],"__id":22915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9946,3819]],"__id":22919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22920,"parentNodes":[9951],"index":1146,"rule":{"name":"Calculate117","pattern":{"type":"composite","id":4209,"leftPattern":{"type":"composite","id":4208,"leftPattern":{"type":"composite","id":4207,"leftPattern":{"type":"object","id":4203,"cls":"Fibonacci117","alias":"f1"},"rightPattern":{"type":"object","id":4204,"cls":"Fibonacci117","alias":"f2"}},"rightPattern":{"type":"object","id":4205,"cls":"Fibonacci117","alias":"f3"}},"rightPattern":{"type":"object","id":4206,"cls":"Result117","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate117"},{"type":"beta","out_nodes":[[9950,-1]],"__id":22921,"parentNodes":[9953,9954]},{"type":"type","out_nodes":[[3,3820]],"__id":22922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result117"}},{"type":"rightadapter","out_nodes":[[9951,3820]],"__id":22925,"parentNodes":[4]},{"type":"join","out_nodes":[[9955,-1]],"__id":22926,"parentNodes":[9957,9958],"constraint":{"type":"join-reference","out_nodes":[],"__id":22927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9951,-1]],"__id":22928,"parentNodes":[]},{"type":"type","out_nodes":[[9,3821],[14,3822],[20,3823],[30,3825],[20,3827],[30,3828]],"__id":22929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci117"}},{"type":"rightadapter","out_nodes":[[9954,3821]],"__id":22932,"parentNodes":[10]},{"type":"join","out_nodes":[[9959,-1]],"__id":22933,"parentNodes":[9960,9961],"constraint":{"type":"join-reference","out_nodes":[],"__id":22934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9954,-1]],"__id":22935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9958,3822]],"__id":22940,"parentNodes":[16]},{"type":"beta","out_nodes":[[9962,-1]],"__id":22941,"parentNodes":[9963,9964]},{"type":"leftadapter","out_nodes":[[9958,-1]],"__id":22942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9961,3823]],"__id":22947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9961,3824]],"__id":22951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22952,"parentNodes":[9966],"index":1147,"rule":{"name":"Bootstrap117","pattern":{"type":"object","id":4210,"cls":"Fibonacci117","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap117"},{"type":"beta","out_nodes":[[9965,-1]],"__id":22953,"parentNodes":[9967,9968]},{"type":"rightadapter","out_nodes":[[9966,3825]],"__id":22958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9966,3826]],"__id":22962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22963,"parentNodes":[9970],"index":1148,"rule":{"name":"Recurse117","pattern":{"type":"composite","id":4213,"leftPattern":{"type":"not","id":4211,"cls":"Fibonacci117","alias":"f"},"rightPattern":{"type":"object","id":4212,"cls":"Fibonacci117","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci117 = defined.get('Fibonacci117');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci117(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse117"},{"type":"beta","out_nodes":[[9969,-1]],"__id":22964,"parentNodes":[9971,9972]},{"type":"rightadapter","out_nodes":[[9970,3827]],"__id":22968,"parentNodes":[37]},{"type":"not","out_nodes":[[9973,-1]],"__id":22969,"parentNodes":[9974,9975],"constraint":{"type":"join-reference","out_nodes":[],"__id":22970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9970,-1]],"__id":22971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9972,3828]],"__id":22975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9972,3829]],"__id":22979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":22980,"parentNodes":[9977],"index":1149,"rule":{"name":"Calculate116","pattern":{"type":"composite","id":4220,"leftPattern":{"type":"composite","id":4219,"leftPattern":{"type":"composite","id":4218,"leftPattern":{"type":"object","id":4214,"cls":"Fibonacci116","alias":"f1"},"rightPattern":{"type":"object","id":4215,"cls":"Fibonacci116","alias":"f2"}},"rightPattern":{"type":"object","id":4216,"cls":"Fibonacci116","alias":"f3"}},"rightPattern":{"type":"object","id":4217,"cls":"Result116","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate116"},{"type":"beta","out_nodes":[[9976,-1]],"__id":22981,"parentNodes":[9979,9980]},{"type":"type","out_nodes":[[3,3830]],"__id":22982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result116"}},{"type":"rightadapter","out_nodes":[[9977,3830]],"__id":22985,"parentNodes":[4]},{"type":"join","out_nodes":[[9981,-1]],"__id":22986,"parentNodes":[9983,9984],"constraint":{"type":"join-reference","out_nodes":[],"__id":22987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9977,-1]],"__id":22988,"parentNodes":[]},{"type":"type","out_nodes":[[9,3831],[14,3832],[20,3833],[30,3835],[20,3837],[30,3838]],"__id":22989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci116"}},{"type":"rightadapter","out_nodes":[[9980,3831]],"__id":22992,"parentNodes":[10]},{"type":"join","out_nodes":[[9985,-1]],"__id":22993,"parentNodes":[9986,9987],"constraint":{"type":"join-reference","out_nodes":[],"__id":22994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[9980,-1]],"__id":22995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9984,3832]],"__id":23000,"parentNodes":[16]},{"type":"beta","out_nodes":[[9988,-1]],"__id":23001,"parentNodes":[9989,9990]},{"type":"leftadapter","out_nodes":[[9984,-1]],"__id":23002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9987,3833]],"__id":23007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[9987,3834]],"__id":23011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23012,"parentNodes":[9992],"index":1150,"rule":{"name":"Bootstrap116","pattern":{"type":"object","id":4221,"cls":"Fibonacci116","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap116"},{"type":"beta","out_nodes":[[9991,-1]],"__id":23013,"parentNodes":[9993,9994]},{"type":"rightadapter","out_nodes":[[9992,3835]],"__id":23018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[9992,3836]],"__id":23022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23023,"parentNodes":[9996],"index":1151,"rule":{"name":"Recurse116","pattern":{"type":"composite","id":4224,"leftPattern":{"type":"not","id":4222,"cls":"Fibonacci116","alias":"f"},"rightPattern":{"type":"object","id":4223,"cls":"Fibonacci116","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci116 = defined.get('Fibonacci116');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci116(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse116"},{"type":"beta","out_nodes":[[9995,-1]],"__id":23024,"parentNodes":[9997,9998]},{"type":"rightadapter","out_nodes":[[9996,3837]],"__id":23028,"parentNodes":[37]},{"type":"not","out_nodes":[[9999,-1]],"__id":23029,"parentNodes":[10000,10001],"constraint":{"type":"join-reference","out_nodes":[],"__id":23030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[9996,-1]],"__id":23031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[9998,3838]],"__id":23035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[9998,3839]],"__id":23039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23040,"parentNodes":[10003],"index":1152,"rule":{"name":"Calculate115","pattern":{"type":"composite","id":4231,"leftPattern":{"type":"composite","id":4230,"leftPattern":{"type":"composite","id":4229,"leftPattern":{"type":"object","id":4225,"cls":"Fibonacci115","alias":"f1"},"rightPattern":{"type":"object","id":4226,"cls":"Fibonacci115","alias":"f2"}},"rightPattern":{"type":"object","id":4227,"cls":"Fibonacci115","alias":"f3"}},"rightPattern":{"type":"object","id":4228,"cls":"Result115","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate115"},{"type":"beta","out_nodes":[[10002,-1]],"__id":23041,"parentNodes":[10005,10006]},{"type":"type","out_nodes":[[3,3840]],"__id":23042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result115"}},{"type":"rightadapter","out_nodes":[[10003,3840]],"__id":23045,"parentNodes":[4]},{"type":"join","out_nodes":[[10007,-1]],"__id":23046,"parentNodes":[10009,10010],"constraint":{"type":"join-reference","out_nodes":[],"__id":23047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10003,-1]],"__id":23048,"parentNodes":[]},{"type":"type","out_nodes":[[9,3841],[14,3842],[20,3843],[30,3845],[20,3847],[30,3848]],"__id":23049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci115"}},{"type":"rightadapter","out_nodes":[[10006,3841]],"__id":23052,"parentNodes":[10]},{"type":"join","out_nodes":[[10011,-1]],"__id":23053,"parentNodes":[10012,10013],"constraint":{"type":"join-reference","out_nodes":[],"__id":23054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10006,-1]],"__id":23055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10010,3842]],"__id":23060,"parentNodes":[16]},{"type":"beta","out_nodes":[[10014,-1]],"__id":23061,"parentNodes":[10015,10016]},{"type":"leftadapter","out_nodes":[[10010,-1]],"__id":23062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10013,3843]],"__id":23067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10013,3844]],"__id":23071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23072,"parentNodes":[10018],"index":1153,"rule":{"name":"Bootstrap115","pattern":{"type":"object","id":4232,"cls":"Fibonacci115","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap115"},{"type":"beta","out_nodes":[[10017,-1]],"__id":23073,"parentNodes":[10019,10020]},{"type":"rightadapter","out_nodes":[[10018,3845]],"__id":23078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10018,3846]],"__id":23082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23083,"parentNodes":[10022],"index":1154,"rule":{"name":"Recurse115","pattern":{"type":"composite","id":4235,"leftPattern":{"type":"not","id":4233,"cls":"Fibonacci115","alias":"f"},"rightPattern":{"type":"object","id":4234,"cls":"Fibonacci115","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci115 = defined.get('Fibonacci115');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci115(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse115"},{"type":"beta","out_nodes":[[10021,-1]],"__id":23084,"parentNodes":[10023,10024]},{"type":"rightadapter","out_nodes":[[10022,3847]],"__id":23088,"parentNodes":[37]},{"type":"not","out_nodes":[[10025,-1]],"__id":23089,"parentNodes":[10026,10027],"constraint":{"type":"join-reference","out_nodes":[],"__id":23090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10022,-1]],"__id":23091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10024,3848]],"__id":23095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10024,3849]],"__id":23099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23100,"parentNodes":[10029],"index":1155,"rule":{"name":"Calculate114","pattern":{"type":"composite","id":4242,"leftPattern":{"type":"composite","id":4241,"leftPattern":{"type":"composite","id":4240,"leftPattern":{"type":"object","id":4236,"cls":"Fibonacci114","alias":"f1"},"rightPattern":{"type":"object","id":4237,"cls":"Fibonacci114","alias":"f2"}},"rightPattern":{"type":"object","id":4238,"cls":"Fibonacci114","alias":"f3"}},"rightPattern":{"type":"object","id":4239,"cls":"Result114","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate114"},{"type":"beta","out_nodes":[[10028,-1]],"__id":23101,"parentNodes":[10031,10032]},{"type":"type","out_nodes":[[3,3850]],"__id":23102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result114"}},{"type":"rightadapter","out_nodes":[[10029,3850]],"__id":23105,"parentNodes":[4]},{"type":"join","out_nodes":[[10033,-1]],"__id":23106,"parentNodes":[10035,10036],"constraint":{"type":"join-reference","out_nodes":[],"__id":23107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10029,-1]],"__id":23108,"parentNodes":[]},{"type":"type","out_nodes":[[9,3851],[14,3852],[20,3853],[30,3855],[20,3857],[30,3858]],"__id":23109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci114"}},{"type":"rightadapter","out_nodes":[[10032,3851]],"__id":23112,"parentNodes":[10]},{"type":"join","out_nodes":[[10037,-1]],"__id":23113,"parentNodes":[10038,10039],"constraint":{"type":"join-reference","out_nodes":[],"__id":23114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10032,-1]],"__id":23115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10036,3852]],"__id":23120,"parentNodes":[16]},{"type":"beta","out_nodes":[[10040,-1]],"__id":23121,"parentNodes":[10041,10042]},{"type":"leftadapter","out_nodes":[[10036,-1]],"__id":23122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10039,3853]],"__id":23127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10039,3854]],"__id":23131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23132,"parentNodes":[10044],"index":1156,"rule":{"name":"Bootstrap114","pattern":{"type":"object","id":4243,"cls":"Fibonacci114","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap114"},{"type":"beta","out_nodes":[[10043,-1]],"__id":23133,"parentNodes":[10045,10046]},{"type":"rightadapter","out_nodes":[[10044,3855]],"__id":23138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10044,3856]],"__id":23142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23143,"parentNodes":[10048],"index":1157,"rule":{"name":"Recurse114","pattern":{"type":"composite","id":4246,"leftPattern":{"type":"not","id":4244,"cls":"Fibonacci114","alias":"f"},"rightPattern":{"type":"object","id":4245,"cls":"Fibonacci114","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci114 = defined.get('Fibonacci114');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci114(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse114"},{"type":"beta","out_nodes":[[10047,-1]],"__id":23144,"parentNodes":[10049,10050]},{"type":"rightadapter","out_nodes":[[10048,3857]],"__id":23148,"parentNodes":[37]},{"type":"not","out_nodes":[[10051,-1]],"__id":23149,"parentNodes":[10052,10053],"constraint":{"type":"join-reference","out_nodes":[],"__id":23150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10048,-1]],"__id":23151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10050,3858]],"__id":23155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10050,3859]],"__id":23159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23160,"parentNodes":[10055],"index":1158,"rule":{"name":"Calculate113","pattern":{"type":"composite","id":4253,"leftPattern":{"type":"composite","id":4252,"leftPattern":{"type":"composite","id":4251,"leftPattern":{"type":"object","id":4247,"cls":"Fibonacci113","alias":"f1"},"rightPattern":{"type":"object","id":4248,"cls":"Fibonacci113","alias":"f2"}},"rightPattern":{"type":"object","id":4249,"cls":"Fibonacci113","alias":"f3"}},"rightPattern":{"type":"object","id":4250,"cls":"Result113","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate113"},{"type":"beta","out_nodes":[[10054,-1]],"__id":23161,"parentNodes":[10057,10058]},{"type":"type","out_nodes":[[3,3860]],"__id":23162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result113"}},{"type":"rightadapter","out_nodes":[[10055,3860]],"__id":23165,"parentNodes":[4]},{"type":"join","out_nodes":[[10059,-1]],"__id":23166,"parentNodes":[10061,10062],"constraint":{"type":"join-reference","out_nodes":[],"__id":23167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10055,-1]],"__id":23168,"parentNodes":[]},{"type":"type","out_nodes":[[9,3861],[14,3862],[20,3863],[30,3865],[20,3867],[30,3868]],"__id":23169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci113"}},{"type":"rightadapter","out_nodes":[[10058,3861]],"__id":23172,"parentNodes":[10]},{"type":"join","out_nodes":[[10063,-1]],"__id":23173,"parentNodes":[10064,10065],"constraint":{"type":"join-reference","out_nodes":[],"__id":23174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10058,-1]],"__id":23175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10062,3862]],"__id":23180,"parentNodes":[16]},{"type":"beta","out_nodes":[[10066,-1]],"__id":23181,"parentNodes":[10067,10068]},{"type":"leftadapter","out_nodes":[[10062,-1]],"__id":23182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10065,3863]],"__id":23187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10065,3864]],"__id":23191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23192,"parentNodes":[10070],"index":1159,"rule":{"name":"Bootstrap113","pattern":{"type":"object","id":4254,"cls":"Fibonacci113","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap113"},{"type":"beta","out_nodes":[[10069,-1]],"__id":23193,"parentNodes":[10071,10072]},{"type":"rightadapter","out_nodes":[[10070,3865]],"__id":23198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10070,3866]],"__id":23202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23203,"parentNodes":[10074],"index":1160,"rule":{"name":"Recurse113","pattern":{"type":"composite","id":4257,"leftPattern":{"type":"not","id":4255,"cls":"Fibonacci113","alias":"f"},"rightPattern":{"type":"object","id":4256,"cls":"Fibonacci113","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci113 = defined.get('Fibonacci113');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci113(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse113"},{"type":"beta","out_nodes":[[10073,-1]],"__id":23204,"parentNodes":[10075,10076]},{"type":"rightadapter","out_nodes":[[10074,3867]],"__id":23208,"parentNodes":[37]},{"type":"not","out_nodes":[[10077,-1]],"__id":23209,"parentNodes":[10078,10079],"constraint":{"type":"join-reference","out_nodes":[],"__id":23210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10074,-1]],"__id":23211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10076,3868]],"__id":23215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10076,3869]],"__id":23219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23220,"parentNodes":[10081],"index":1161,"rule":{"name":"Calculate112","pattern":{"type":"composite","id":4264,"leftPattern":{"type":"composite","id":4263,"leftPattern":{"type":"composite","id":4262,"leftPattern":{"type":"object","id":4258,"cls":"Fibonacci112","alias":"f1"},"rightPattern":{"type":"object","id":4259,"cls":"Fibonacci112","alias":"f2"}},"rightPattern":{"type":"object","id":4260,"cls":"Fibonacci112","alias":"f3"}},"rightPattern":{"type":"object","id":4261,"cls":"Result112","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate112"},{"type":"beta","out_nodes":[[10080,-1]],"__id":23221,"parentNodes":[10083,10084]},{"type":"type","out_nodes":[[3,3870]],"__id":23222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result112"}},{"type":"rightadapter","out_nodes":[[10081,3870]],"__id":23225,"parentNodes":[4]},{"type":"join","out_nodes":[[10085,-1]],"__id":23226,"parentNodes":[10087,10088],"constraint":{"type":"join-reference","out_nodes":[],"__id":23227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10081,-1]],"__id":23228,"parentNodes":[]},{"type":"type","out_nodes":[[9,3871],[14,3872],[20,3873],[30,3875],[20,3877],[30,3878]],"__id":23229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci112"}},{"type":"rightadapter","out_nodes":[[10084,3871]],"__id":23232,"parentNodes":[10]},{"type":"join","out_nodes":[[10089,-1]],"__id":23233,"parentNodes":[10090,10091],"constraint":{"type":"join-reference","out_nodes":[],"__id":23234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10084,-1]],"__id":23235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10088,3872]],"__id":23240,"parentNodes":[16]},{"type":"beta","out_nodes":[[10092,-1]],"__id":23241,"parentNodes":[10093,10094]},{"type":"leftadapter","out_nodes":[[10088,-1]],"__id":23242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10091,3873]],"__id":23247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10091,3874]],"__id":23251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23252,"parentNodes":[10096],"index":1162,"rule":{"name":"Bootstrap112","pattern":{"type":"object","id":4265,"cls":"Fibonacci112","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap112"},{"type":"beta","out_nodes":[[10095,-1]],"__id":23253,"parentNodes":[10097,10098]},{"type":"rightadapter","out_nodes":[[10096,3875]],"__id":23258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10096,3876]],"__id":23262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23263,"parentNodes":[10100],"index":1163,"rule":{"name":"Recurse112","pattern":{"type":"composite","id":4268,"leftPattern":{"type":"not","id":4266,"cls":"Fibonacci112","alias":"f"},"rightPattern":{"type":"object","id":4267,"cls":"Fibonacci112","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci112 = defined.get('Fibonacci112');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci112(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse112"},{"type":"beta","out_nodes":[[10099,-1]],"__id":23264,"parentNodes":[10101,10102]},{"type":"rightadapter","out_nodes":[[10100,3877]],"__id":23268,"parentNodes":[37]},{"type":"not","out_nodes":[[10103,-1]],"__id":23269,"parentNodes":[10104,10105],"constraint":{"type":"join-reference","out_nodes":[],"__id":23270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10100,-1]],"__id":23271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10102,3878]],"__id":23275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10102,3879]],"__id":23279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23280,"parentNodes":[10107],"index":1164,"rule":{"name":"Calculate111","pattern":{"type":"composite","id":4275,"leftPattern":{"type":"composite","id":4274,"leftPattern":{"type":"composite","id":4273,"leftPattern":{"type":"object","id":4269,"cls":"Fibonacci111","alias":"f1"},"rightPattern":{"type":"object","id":4270,"cls":"Fibonacci111","alias":"f2"}},"rightPattern":{"type":"object","id":4271,"cls":"Fibonacci111","alias":"f3"}},"rightPattern":{"type":"object","id":4272,"cls":"Result111","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate111"},{"type":"beta","out_nodes":[[10106,-1]],"__id":23281,"parentNodes":[10109,10110]},{"type":"type","out_nodes":[[3,3880]],"__id":23282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result111"}},{"type":"rightadapter","out_nodes":[[10107,3880]],"__id":23285,"parentNodes":[4]},{"type":"join","out_nodes":[[10111,-1]],"__id":23286,"parentNodes":[10113,10114],"constraint":{"type":"join-reference","out_nodes":[],"__id":23287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10107,-1]],"__id":23288,"parentNodes":[]},{"type":"type","out_nodes":[[9,3881],[14,3882],[20,3883],[30,3885],[20,3887],[30,3888]],"__id":23289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci111"}},{"type":"rightadapter","out_nodes":[[10110,3881]],"__id":23292,"parentNodes":[10]},{"type":"join","out_nodes":[[10115,-1]],"__id":23293,"parentNodes":[10116,10117],"constraint":{"type":"join-reference","out_nodes":[],"__id":23294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10110,-1]],"__id":23295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10114,3882]],"__id":23300,"parentNodes":[16]},{"type":"beta","out_nodes":[[10118,-1]],"__id":23301,"parentNodes":[10119,10120]},{"type":"leftadapter","out_nodes":[[10114,-1]],"__id":23302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10117,3883]],"__id":23307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10117,3884]],"__id":23311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23312,"parentNodes":[10122],"index":1165,"rule":{"name":"Bootstrap111","pattern":{"type":"object","id":4276,"cls":"Fibonacci111","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap111"},{"type":"beta","out_nodes":[[10121,-1]],"__id":23313,"parentNodes":[10123,10124]},{"type":"rightadapter","out_nodes":[[10122,3885]],"__id":23318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10122,3886]],"__id":23322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23323,"parentNodes":[10126],"index":1166,"rule":{"name":"Recurse111","pattern":{"type":"composite","id":4279,"leftPattern":{"type":"not","id":4277,"cls":"Fibonacci111","alias":"f"},"rightPattern":{"type":"object","id":4278,"cls":"Fibonacci111","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci111 = defined.get('Fibonacci111');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci111(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse111"},{"type":"beta","out_nodes":[[10125,-1]],"__id":23324,"parentNodes":[10127,10128]},{"type":"rightadapter","out_nodes":[[10126,3887]],"__id":23328,"parentNodes":[37]},{"type":"not","out_nodes":[[10129,-1]],"__id":23329,"parentNodes":[10130,10131],"constraint":{"type":"join-reference","out_nodes":[],"__id":23330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10126,-1]],"__id":23331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10128,3888]],"__id":23335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10128,3889]],"__id":23339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23340,"parentNodes":[10133],"index":1167,"rule":{"name":"Calculate110","pattern":{"type":"composite","id":4286,"leftPattern":{"type":"composite","id":4285,"leftPattern":{"type":"composite","id":4284,"leftPattern":{"type":"object","id":4280,"cls":"Fibonacci110","alias":"f1"},"rightPattern":{"type":"object","id":4281,"cls":"Fibonacci110","alias":"f2"}},"rightPattern":{"type":"object","id":4282,"cls":"Fibonacci110","alias":"f3"}},"rightPattern":{"type":"object","id":4283,"cls":"Result110","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate110"},{"type":"beta","out_nodes":[[10132,-1]],"__id":23341,"parentNodes":[10135,10136]},{"type":"type","out_nodes":[[3,3890]],"__id":23342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result110"}},{"type":"rightadapter","out_nodes":[[10133,3890]],"__id":23345,"parentNodes":[4]},{"type":"join","out_nodes":[[10137,-1]],"__id":23346,"parentNodes":[10139,10140],"constraint":{"type":"join-reference","out_nodes":[],"__id":23347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10133,-1]],"__id":23348,"parentNodes":[]},{"type":"type","out_nodes":[[9,3891],[14,3892],[20,3893],[30,3895],[20,3897],[30,3898]],"__id":23349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci110"}},{"type":"rightadapter","out_nodes":[[10136,3891]],"__id":23352,"parentNodes":[10]},{"type":"join","out_nodes":[[10141,-1]],"__id":23353,"parentNodes":[10142,10143],"constraint":{"type":"join-reference","out_nodes":[],"__id":23354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10136,-1]],"__id":23355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10140,3892]],"__id":23360,"parentNodes":[16]},{"type":"beta","out_nodes":[[10144,-1]],"__id":23361,"parentNodes":[10145,10146]},{"type":"leftadapter","out_nodes":[[10140,-1]],"__id":23362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10143,3893]],"__id":23367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10143,3894]],"__id":23371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23372,"parentNodes":[10148],"index":1168,"rule":{"name":"Bootstrap110","pattern":{"type":"object","id":4287,"cls":"Fibonacci110","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap110"},{"type":"beta","out_nodes":[[10147,-1]],"__id":23373,"parentNodes":[10149,10150]},{"type":"rightadapter","out_nodes":[[10148,3895]],"__id":23378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10148,3896]],"__id":23382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23383,"parentNodes":[10152],"index":1169,"rule":{"name":"Recurse110","pattern":{"type":"composite","id":4290,"leftPattern":{"type":"not","id":4288,"cls":"Fibonacci110","alias":"f"},"rightPattern":{"type":"object","id":4289,"cls":"Fibonacci110","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');let Fibonacci110 = defined.get('Fibonacci110');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci110(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse110"},{"type":"beta","out_nodes":[[10151,-1]],"__id":23384,"parentNodes":[10153,10154]},{"type":"rightadapter","out_nodes":[[10152,3897]],"__id":23388,"parentNodes":[37]},{"type":"not","out_nodes":[[10155,-1]],"__id":23389,"parentNodes":[10156,10157],"constraint":{"type":"join-reference","out_nodes":[],"__id":23390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10152,-1]],"__id":23391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10154,3898]],"__id":23395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10154,3899]],"__id":23399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23400,"parentNodes":[10159],"index":1170,"rule":{"name":"Calculate109","pattern":{"type":"composite","id":4297,"leftPattern":{"type":"composite","id":4296,"leftPattern":{"type":"composite","id":4295,"leftPattern":{"type":"object","id":4291,"cls":"Fibonacci109","alias":"f1"},"rightPattern":{"type":"object","id":4292,"cls":"Fibonacci109","alias":"f2"}},"rightPattern":{"type":"object","id":4293,"cls":"Fibonacci109","alias":"f3"}},"rightPattern":{"type":"object","id":4294,"cls":"Result109","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate109"},{"type":"beta","out_nodes":[[10158,-1]],"__id":23401,"parentNodes":[10161,10162]},{"type":"type","out_nodes":[[3,3900]],"__id":23402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result109"}},{"type":"rightadapter","out_nodes":[[10159,3900]],"__id":23405,"parentNodes":[4]},{"type":"join","out_nodes":[[10163,-1]],"__id":23406,"parentNodes":[10165,10166],"constraint":{"type":"join-reference","out_nodes":[],"__id":23407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10159,-1]],"__id":23408,"parentNodes":[]},{"type":"type","out_nodes":[[9,3901],[14,3902],[20,3903],[30,3905],[20,3907],[30,3908]],"__id":23409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci109"}},{"type":"rightadapter","out_nodes":[[10162,3901]],"__id":23412,"parentNodes":[10]},{"type":"join","out_nodes":[[10167,-1]],"__id":23413,"parentNodes":[10168,10169],"constraint":{"type":"join-reference","out_nodes":[],"__id":23414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10162,-1]],"__id":23415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10166,3902]],"__id":23420,"parentNodes":[16]},{"type":"beta","out_nodes":[[10170,-1]],"__id":23421,"parentNodes":[10171,10172]},{"type":"leftadapter","out_nodes":[[10166,-1]],"__id":23422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10169,3903]],"__id":23427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10169,3904]],"__id":23431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23432,"parentNodes":[10174],"index":1171,"rule":{"name":"Bootstrap109","pattern":{"type":"object","id":4298,"cls":"Fibonacci109","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap109"},{"type":"beta","out_nodes":[[10173,-1]],"__id":23433,"parentNodes":[10175,10176]},{"type":"rightadapter","out_nodes":[[10174,3905]],"__id":23438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10174,3906]],"__id":23442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23443,"parentNodes":[10178],"index":1172,"rule":{"name":"Recurse109","pattern":{"type":"composite","id":4301,"leftPattern":{"type":"not","id":4299,"cls":"Fibonacci109","alias":"f"},"rightPattern":{"type":"object","id":4300,"cls":"Fibonacci109","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci109 = defined.get('Fibonacci109');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci109(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse109"},{"type":"beta","out_nodes":[[10177,-1]],"__id":23444,"parentNodes":[10179,10180]},{"type":"rightadapter","out_nodes":[[10178,3907]],"__id":23448,"parentNodes":[37]},{"type":"not","out_nodes":[[10181,-1]],"__id":23449,"parentNodes":[10182,10183],"constraint":{"type":"join-reference","out_nodes":[],"__id":23450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10178,-1]],"__id":23451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10180,3908]],"__id":23455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10180,3909]],"__id":23459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23460,"parentNodes":[10185],"index":1173,"rule":{"name":"Calculate108","pattern":{"type":"composite","id":4308,"leftPattern":{"type":"composite","id":4307,"leftPattern":{"type":"composite","id":4306,"leftPattern":{"type":"object","id":4302,"cls":"Fibonacci108","alias":"f1"},"rightPattern":{"type":"object","id":4303,"cls":"Fibonacci108","alias":"f2"}},"rightPattern":{"type":"object","id":4304,"cls":"Fibonacci108","alias":"f3"}},"rightPattern":{"type":"object","id":4305,"cls":"Result108","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate108"},{"type":"beta","out_nodes":[[10184,-1]],"__id":23461,"parentNodes":[10187,10188]},{"type":"type","out_nodes":[[3,3910]],"__id":23462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result108"}},{"type":"rightadapter","out_nodes":[[10185,3910]],"__id":23465,"parentNodes":[4]},{"type":"join","out_nodes":[[10189,-1]],"__id":23466,"parentNodes":[10191,10192],"constraint":{"type":"join-reference","out_nodes":[],"__id":23467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10185,-1]],"__id":23468,"parentNodes":[]},{"type":"type","out_nodes":[[9,3911],[14,3912],[20,3913],[30,3915],[20,3917],[30,3918]],"__id":23469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci108"}},{"type":"rightadapter","out_nodes":[[10188,3911]],"__id":23472,"parentNodes":[10]},{"type":"join","out_nodes":[[10193,-1]],"__id":23473,"parentNodes":[10194,10195],"constraint":{"type":"join-reference","out_nodes":[],"__id":23474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10188,-1]],"__id":23475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10192,3912]],"__id":23480,"parentNodes":[16]},{"type":"beta","out_nodes":[[10196,-1]],"__id":23481,"parentNodes":[10197,10198]},{"type":"leftadapter","out_nodes":[[10192,-1]],"__id":23482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10195,3913]],"__id":23487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10195,3914]],"__id":23491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23492,"parentNodes":[10200],"index":1174,"rule":{"name":"Bootstrap108","pattern":{"type":"object","id":4309,"cls":"Fibonacci108","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap108"},{"type":"beta","out_nodes":[[10199,-1]],"__id":23493,"parentNodes":[10201,10202]},{"type":"rightadapter","out_nodes":[[10200,3915]],"__id":23498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10200,3916]],"__id":23502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23503,"parentNodes":[10204],"index":1175,"rule":{"name":"Recurse108","pattern":{"type":"composite","id":4312,"leftPattern":{"type":"not","id":4310,"cls":"Fibonacci108","alias":"f"},"rightPattern":{"type":"object","id":4311,"cls":"Fibonacci108","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci108 = defined.get('Fibonacci108');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci108(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse108"},{"type":"beta","out_nodes":[[10203,-1]],"__id":23504,"parentNodes":[10205,10206]},{"type":"rightadapter","out_nodes":[[10204,3917]],"__id":23508,"parentNodes":[37]},{"type":"not","out_nodes":[[10207,-1]],"__id":23509,"parentNodes":[10208,10209],"constraint":{"type":"join-reference","out_nodes":[],"__id":23510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10204,-1]],"__id":23511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10206,3918]],"__id":23515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10206,3919]],"__id":23519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23520,"parentNodes":[10211],"index":1176,"rule":{"name":"Calculate107","pattern":{"type":"composite","id":4319,"leftPattern":{"type":"composite","id":4318,"leftPattern":{"type":"composite","id":4317,"leftPattern":{"type":"object","id":4313,"cls":"Fibonacci107","alias":"f1"},"rightPattern":{"type":"object","id":4314,"cls":"Fibonacci107","alias":"f2"}},"rightPattern":{"type":"object","id":4315,"cls":"Fibonacci107","alias":"f3"}},"rightPattern":{"type":"object","id":4316,"cls":"Result107","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate107"},{"type":"beta","out_nodes":[[10210,-1]],"__id":23521,"parentNodes":[10213,10214]},{"type":"type","out_nodes":[[3,3920]],"__id":23522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result107"}},{"type":"rightadapter","out_nodes":[[10211,3920]],"__id":23525,"parentNodes":[4]},{"type":"join","out_nodes":[[10215,-1]],"__id":23526,"parentNodes":[10217,10218],"constraint":{"type":"join-reference","out_nodes":[],"__id":23527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10211,-1]],"__id":23528,"parentNodes":[]},{"type":"type","out_nodes":[[9,3921],[14,3922],[20,3923],[30,3925],[20,3927],[30,3928]],"__id":23529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci107"}},{"type":"rightadapter","out_nodes":[[10214,3921]],"__id":23532,"parentNodes":[10]},{"type":"join","out_nodes":[[10219,-1]],"__id":23533,"parentNodes":[10220,10221],"constraint":{"type":"join-reference","out_nodes":[],"__id":23534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10214,-1]],"__id":23535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10218,3922]],"__id":23540,"parentNodes":[16]},{"type":"beta","out_nodes":[[10222,-1]],"__id":23541,"parentNodes":[10223,10224]},{"type":"leftadapter","out_nodes":[[10218,-1]],"__id":23542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10221,3923]],"__id":23547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10221,3924]],"__id":23551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23552,"parentNodes":[10226],"index":1177,"rule":{"name":"Bootstrap107","pattern":{"type":"object","id":4320,"cls":"Fibonacci107","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap107"},{"type":"beta","out_nodes":[[10225,-1]],"__id":23553,"parentNodes":[10227,10228]},{"type":"rightadapter","out_nodes":[[10226,3925]],"__id":23558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10226,3926]],"__id":23562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23563,"parentNodes":[10230],"index":1178,"rule":{"name":"Recurse107","pattern":{"type":"composite","id":4323,"leftPattern":{"type":"not","id":4321,"cls":"Fibonacci107","alias":"f"},"rightPattern":{"type":"object","id":4322,"cls":"Fibonacci107","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci107 = defined.get('Fibonacci107');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci107(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse107"},{"type":"beta","out_nodes":[[10229,-1]],"__id":23564,"parentNodes":[10231,10232]},{"type":"rightadapter","out_nodes":[[10230,3927]],"__id":23568,"parentNodes":[37]},{"type":"not","out_nodes":[[10233,-1]],"__id":23569,"parentNodes":[10234,10235],"constraint":{"type":"join-reference","out_nodes":[],"__id":23570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10230,-1]],"__id":23571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10232,3928]],"__id":23575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10232,3929]],"__id":23579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23580,"parentNodes":[10237],"index":1179,"rule":{"name":"Calculate106","pattern":{"type":"composite","id":4330,"leftPattern":{"type":"composite","id":4329,"leftPattern":{"type":"composite","id":4328,"leftPattern":{"type":"object","id":4324,"cls":"Fibonacci106","alias":"f1"},"rightPattern":{"type":"object","id":4325,"cls":"Fibonacci106","alias":"f2"}},"rightPattern":{"type":"object","id":4326,"cls":"Fibonacci106","alias":"f3"}},"rightPattern":{"type":"object","id":4327,"cls":"Result106","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate106"},{"type":"beta","out_nodes":[[10236,-1]],"__id":23581,"parentNodes":[10239,10240]},{"type":"type","out_nodes":[[3,3930]],"__id":23582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result106"}},{"type":"rightadapter","out_nodes":[[10237,3930]],"__id":23585,"parentNodes":[4]},{"type":"join","out_nodes":[[10241,-1]],"__id":23586,"parentNodes":[10243,10244],"constraint":{"type":"join-reference","out_nodes":[],"__id":23587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10237,-1]],"__id":23588,"parentNodes":[]},{"type":"type","out_nodes":[[9,3931],[14,3932],[20,3933],[30,3935],[20,3937],[30,3938]],"__id":23589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci106"}},{"type":"rightadapter","out_nodes":[[10240,3931]],"__id":23592,"parentNodes":[10]},{"type":"join","out_nodes":[[10245,-1]],"__id":23593,"parentNodes":[10246,10247],"constraint":{"type":"join-reference","out_nodes":[],"__id":23594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10240,-1]],"__id":23595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10244,3932]],"__id":23600,"parentNodes":[16]},{"type":"beta","out_nodes":[[10248,-1]],"__id":23601,"parentNodes":[10249,10250]},{"type":"leftadapter","out_nodes":[[10244,-1]],"__id":23602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10247,3933]],"__id":23607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10247,3934]],"__id":23611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23612,"parentNodes":[10252],"index":1180,"rule":{"name":"Bootstrap106","pattern":{"type":"object","id":4331,"cls":"Fibonacci106","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap106"},{"type":"beta","out_nodes":[[10251,-1]],"__id":23613,"parentNodes":[10253,10254]},{"type":"rightadapter","out_nodes":[[10252,3935]],"__id":23618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10252,3936]],"__id":23622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23623,"parentNodes":[10256],"index":1181,"rule":{"name":"Recurse106","pattern":{"type":"composite","id":4334,"leftPattern":{"type":"not","id":4332,"cls":"Fibonacci106","alias":"f"},"rightPattern":{"type":"object","id":4333,"cls":"Fibonacci106","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci106 = defined.get('Fibonacci106');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci106(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse106"},{"type":"beta","out_nodes":[[10255,-1]],"__id":23624,"parentNodes":[10257,10258]},{"type":"rightadapter","out_nodes":[[10256,3937]],"__id":23628,"parentNodes":[37]},{"type":"not","out_nodes":[[10259,-1]],"__id":23629,"parentNodes":[10260,10261],"constraint":{"type":"join-reference","out_nodes":[],"__id":23630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10256,-1]],"__id":23631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10258,3938]],"__id":23635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10258,3939]],"__id":23639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23640,"parentNodes":[10263],"index":1182,"rule":{"name":"Calculate105","pattern":{"type":"composite","id":4341,"leftPattern":{"type":"composite","id":4340,"leftPattern":{"type":"composite","id":4339,"leftPattern":{"type":"object","id":4335,"cls":"Fibonacci105","alias":"f1"},"rightPattern":{"type":"object","id":4336,"cls":"Fibonacci105","alias":"f2"}},"rightPattern":{"type":"object","id":4337,"cls":"Fibonacci105","alias":"f3"}},"rightPattern":{"type":"object","id":4338,"cls":"Result105","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate105"},{"type":"beta","out_nodes":[[10262,-1]],"__id":23641,"parentNodes":[10265,10266]},{"type":"type","out_nodes":[[3,3940]],"__id":23642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result105"}},{"type":"rightadapter","out_nodes":[[10263,3940]],"__id":23645,"parentNodes":[4]},{"type":"join","out_nodes":[[10267,-1]],"__id":23646,"parentNodes":[10269,10270],"constraint":{"type":"join-reference","out_nodes":[],"__id":23647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10263,-1]],"__id":23648,"parentNodes":[]},{"type":"type","out_nodes":[[9,3941],[14,3942],[20,3943],[30,3945],[20,3947],[30,3948]],"__id":23649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci105"}},{"type":"rightadapter","out_nodes":[[10266,3941]],"__id":23652,"parentNodes":[10]},{"type":"join","out_nodes":[[10271,-1]],"__id":23653,"parentNodes":[10272,10273],"constraint":{"type":"join-reference","out_nodes":[],"__id":23654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10266,-1]],"__id":23655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10270,3942]],"__id":23660,"parentNodes":[16]},{"type":"beta","out_nodes":[[10274,-1]],"__id":23661,"parentNodes":[10275,10276]},{"type":"leftadapter","out_nodes":[[10270,-1]],"__id":23662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10273,3943]],"__id":23667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10273,3944]],"__id":23671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23672,"parentNodes":[10278],"index":1183,"rule":{"name":"Bootstrap105","pattern":{"type":"object","id":4342,"cls":"Fibonacci105","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap105"},{"type":"beta","out_nodes":[[10277,-1]],"__id":23673,"parentNodes":[10279,10280]},{"type":"rightadapter","out_nodes":[[10278,3945]],"__id":23678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10278,3946]],"__id":23682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23683,"parentNodes":[10282],"index":1184,"rule":{"name":"Recurse105","pattern":{"type":"composite","id":4345,"leftPattern":{"type":"not","id":4343,"cls":"Fibonacci105","alias":"f"},"rightPattern":{"type":"object","id":4344,"cls":"Fibonacci105","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci105 = defined.get('Fibonacci105');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci105(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse105"},{"type":"beta","out_nodes":[[10281,-1]],"__id":23684,"parentNodes":[10283,10284]},{"type":"rightadapter","out_nodes":[[10282,3947]],"__id":23688,"parentNodes":[37]},{"type":"not","out_nodes":[[10285,-1]],"__id":23689,"parentNodes":[10286,10287],"constraint":{"type":"join-reference","out_nodes":[],"__id":23690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10282,-1]],"__id":23691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10284,3948]],"__id":23695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10284,3949]],"__id":23699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23700,"parentNodes":[10289],"index":1185,"rule":{"name":"Calculate104","pattern":{"type":"composite","id":4352,"leftPattern":{"type":"composite","id":4351,"leftPattern":{"type":"composite","id":4350,"leftPattern":{"type":"object","id":4346,"cls":"Fibonacci104","alias":"f1"},"rightPattern":{"type":"object","id":4347,"cls":"Fibonacci104","alias":"f2"}},"rightPattern":{"type":"object","id":4348,"cls":"Fibonacci104","alias":"f3"}},"rightPattern":{"type":"object","id":4349,"cls":"Result104","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate104"},{"type":"beta","out_nodes":[[10288,-1]],"__id":23701,"parentNodes":[10291,10292]},{"type":"type","out_nodes":[[3,3950]],"__id":23702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result104"}},{"type":"rightadapter","out_nodes":[[10289,3950]],"__id":23705,"parentNodes":[4]},{"type":"join","out_nodes":[[10293,-1]],"__id":23706,"parentNodes":[10295,10296],"constraint":{"type":"join-reference","out_nodes":[],"__id":23707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10289,-1]],"__id":23708,"parentNodes":[]},{"type":"type","out_nodes":[[9,3951],[14,3952],[20,3953],[30,3955],[20,3957],[30,3958]],"__id":23709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci104"}},{"type":"rightadapter","out_nodes":[[10292,3951]],"__id":23712,"parentNodes":[10]},{"type":"join","out_nodes":[[10297,-1]],"__id":23713,"parentNodes":[10298,10299],"constraint":{"type":"join-reference","out_nodes":[],"__id":23714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10292,-1]],"__id":23715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10296,3952]],"__id":23720,"parentNodes":[16]},{"type":"beta","out_nodes":[[10300,-1]],"__id":23721,"parentNodes":[10301,10302]},{"type":"leftadapter","out_nodes":[[10296,-1]],"__id":23722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10299,3953]],"__id":23727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10299,3954]],"__id":23731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23732,"parentNodes":[10304],"index":1186,"rule":{"name":"Bootstrap104","pattern":{"type":"object","id":4353,"cls":"Fibonacci104","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap104"},{"type":"beta","out_nodes":[[10303,-1]],"__id":23733,"parentNodes":[10305,10306]},{"type":"rightadapter","out_nodes":[[10304,3955]],"__id":23738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10304,3956]],"__id":23742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23743,"parentNodes":[10308],"index":1187,"rule":{"name":"Recurse104","pattern":{"type":"composite","id":4356,"leftPattern":{"type":"not","id":4354,"cls":"Fibonacci104","alias":"f"},"rightPattern":{"type":"object","id":4355,"cls":"Fibonacci104","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci104 = defined.get('Fibonacci104');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci104(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse104"},{"type":"beta","out_nodes":[[10307,-1]],"__id":23744,"parentNodes":[10309,10310]},{"type":"rightadapter","out_nodes":[[10308,3957]],"__id":23748,"parentNodes":[37]},{"type":"not","out_nodes":[[10311,-1]],"__id":23749,"parentNodes":[10312,10313],"constraint":{"type":"join-reference","out_nodes":[],"__id":23750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10308,-1]],"__id":23751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10310,3958]],"__id":23755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10310,3959]],"__id":23759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23760,"parentNodes":[10315],"index":1188,"rule":{"name":"Calculate103","pattern":{"type":"composite","id":4363,"leftPattern":{"type":"composite","id":4362,"leftPattern":{"type":"composite","id":4361,"leftPattern":{"type":"object","id":4357,"cls":"Fibonacci103","alias":"f1"},"rightPattern":{"type":"object","id":4358,"cls":"Fibonacci103","alias":"f2"}},"rightPattern":{"type":"object","id":4359,"cls":"Fibonacci103","alias":"f3"}},"rightPattern":{"type":"object","id":4360,"cls":"Result103","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate103"},{"type":"beta","out_nodes":[[10314,-1]],"__id":23761,"parentNodes":[10317,10318]},{"type":"type","out_nodes":[[3,3960]],"__id":23762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result103"}},{"type":"rightadapter","out_nodes":[[10315,3960]],"__id":23765,"parentNodes":[4]},{"type":"join","out_nodes":[[10319,-1]],"__id":23766,"parentNodes":[10321,10322],"constraint":{"type":"join-reference","out_nodes":[],"__id":23767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10315,-1]],"__id":23768,"parentNodes":[]},{"type":"type","out_nodes":[[9,3961],[14,3962],[20,3963],[30,3965],[20,3967],[30,3968]],"__id":23769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci103"}},{"type":"rightadapter","out_nodes":[[10318,3961]],"__id":23772,"parentNodes":[10]},{"type":"join","out_nodes":[[10323,-1]],"__id":23773,"parentNodes":[10324,10325],"constraint":{"type":"join-reference","out_nodes":[],"__id":23774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10318,-1]],"__id":23775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10322,3962]],"__id":23780,"parentNodes":[16]},{"type":"beta","out_nodes":[[10326,-1]],"__id":23781,"parentNodes":[10327,10328]},{"type":"leftadapter","out_nodes":[[10322,-1]],"__id":23782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10325,3963]],"__id":23787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10325,3964]],"__id":23791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23792,"parentNodes":[10330],"index":1189,"rule":{"name":"Bootstrap103","pattern":{"type":"object","id":4364,"cls":"Fibonacci103","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap103"},{"type":"beta","out_nodes":[[10329,-1]],"__id":23793,"parentNodes":[10331,10332]},{"type":"rightadapter","out_nodes":[[10330,3965]],"__id":23798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10330,3966]],"__id":23802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23803,"parentNodes":[10334],"index":1190,"rule":{"name":"Recurse103","pattern":{"type":"composite","id":4367,"leftPattern":{"type":"not","id":4365,"cls":"Fibonacci103","alias":"f"},"rightPattern":{"type":"object","id":4366,"cls":"Fibonacci103","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci103 = defined.get('Fibonacci103');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci103(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse103"},{"type":"beta","out_nodes":[[10333,-1]],"__id":23804,"parentNodes":[10335,10336]},{"type":"rightadapter","out_nodes":[[10334,3967]],"__id":23808,"parentNodes":[37]},{"type":"not","out_nodes":[[10337,-1]],"__id":23809,"parentNodes":[10338,10339],"constraint":{"type":"join-reference","out_nodes":[],"__id":23810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10334,-1]],"__id":23811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10336,3968]],"__id":23815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10336,3969]],"__id":23819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23820,"parentNodes":[10341],"index":1191,"rule":{"name":"Calculate102","pattern":{"type":"composite","id":4374,"leftPattern":{"type":"composite","id":4373,"leftPattern":{"type":"composite","id":4372,"leftPattern":{"type":"object","id":4368,"cls":"Fibonacci102","alias":"f1"},"rightPattern":{"type":"object","id":4369,"cls":"Fibonacci102","alias":"f2"}},"rightPattern":{"type":"object","id":4370,"cls":"Fibonacci102","alias":"f3"}},"rightPattern":{"type":"object","id":4371,"cls":"Result102","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate102"},{"type":"beta","out_nodes":[[10340,-1]],"__id":23821,"parentNodes":[10343,10344]},{"type":"type","out_nodes":[[3,3970]],"__id":23822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result102"}},{"type":"rightadapter","out_nodes":[[10341,3970]],"__id":23825,"parentNodes":[4]},{"type":"join","out_nodes":[[10345,-1]],"__id":23826,"parentNodes":[10347,10348],"constraint":{"type":"join-reference","out_nodes":[],"__id":23827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10341,-1]],"__id":23828,"parentNodes":[]},{"type":"type","out_nodes":[[9,3971],[14,3972],[20,3973],[30,3975],[20,3977],[30,3978]],"__id":23829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci102"}},{"type":"rightadapter","out_nodes":[[10344,3971]],"__id":23832,"parentNodes":[10]},{"type":"join","out_nodes":[[10349,-1]],"__id":23833,"parentNodes":[10350,10351],"constraint":{"type":"join-reference","out_nodes":[],"__id":23834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10344,-1]],"__id":23835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10348,3972]],"__id":23840,"parentNodes":[16]},{"type":"beta","out_nodes":[[10352,-1]],"__id":23841,"parentNodes":[10353,10354]},{"type":"leftadapter","out_nodes":[[10348,-1]],"__id":23842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10351,3973]],"__id":23847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10351,3974]],"__id":23851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23852,"parentNodes":[10356],"index":1192,"rule":{"name":"Bootstrap102","pattern":{"type":"object","id":4375,"cls":"Fibonacci102","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap102"},{"type":"beta","out_nodes":[[10355,-1]],"__id":23853,"parentNodes":[10357,10358]},{"type":"rightadapter","out_nodes":[[10356,3975]],"__id":23858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10356,3976]],"__id":23862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23863,"parentNodes":[10360],"index":1193,"rule":{"name":"Recurse102","pattern":{"type":"composite","id":4378,"leftPattern":{"type":"not","id":4376,"cls":"Fibonacci102","alias":"f"},"rightPattern":{"type":"object","id":4377,"cls":"Fibonacci102","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci102 = defined.get('Fibonacci102');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci102(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse102"},{"type":"beta","out_nodes":[[10359,-1]],"__id":23864,"parentNodes":[10361,10362]},{"type":"rightadapter","out_nodes":[[10360,3977]],"__id":23868,"parentNodes":[37]},{"type":"not","out_nodes":[[10363,-1]],"__id":23869,"parentNodes":[10364,10365],"constraint":{"type":"join-reference","out_nodes":[],"__id":23870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10360,-1]],"__id":23871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10362,3978]],"__id":23875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10362,3979]],"__id":23879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23880,"parentNodes":[10367],"index":1194,"rule":{"name":"Calculate101","pattern":{"type":"composite","id":4385,"leftPattern":{"type":"composite","id":4384,"leftPattern":{"type":"composite","id":4383,"leftPattern":{"type":"object","id":4379,"cls":"Fibonacci101","alias":"f1"},"rightPattern":{"type":"object","id":4380,"cls":"Fibonacci101","alias":"f2"}},"rightPattern":{"type":"object","id":4381,"cls":"Fibonacci101","alias":"f3"}},"rightPattern":{"type":"object","id":4382,"cls":"Result101","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate101"},{"type":"beta","out_nodes":[[10366,-1]],"__id":23881,"parentNodes":[10369,10370]},{"type":"type","out_nodes":[[3,3980]],"__id":23882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result101"}},{"type":"rightadapter","out_nodes":[[10367,3980]],"__id":23885,"parentNodes":[4]},{"type":"join","out_nodes":[[10371,-1]],"__id":23886,"parentNodes":[10373,10374],"constraint":{"type":"join-reference","out_nodes":[],"__id":23887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10367,-1]],"__id":23888,"parentNodes":[]},{"type":"type","out_nodes":[[9,3981],[14,3982],[20,3983],[30,3985],[20,3987],[30,3988]],"__id":23889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci101"}},{"type":"rightadapter","out_nodes":[[10370,3981]],"__id":23892,"parentNodes":[10]},{"type":"join","out_nodes":[[10375,-1]],"__id":23893,"parentNodes":[10376,10377],"constraint":{"type":"join-reference","out_nodes":[],"__id":23894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10370,-1]],"__id":23895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10374,3982]],"__id":23900,"parentNodes":[16]},{"type":"beta","out_nodes":[[10378,-1]],"__id":23901,"parentNodes":[10379,10380]},{"type":"leftadapter","out_nodes":[[10374,-1]],"__id":23902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10377,3983]],"__id":23907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10377,3984]],"__id":23911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23912,"parentNodes":[10382],"index":1195,"rule":{"name":"Bootstrap101","pattern":{"type":"object","id":4386,"cls":"Fibonacci101","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap101"},{"type":"beta","out_nodes":[[10381,-1]],"__id":23913,"parentNodes":[10383,10384]},{"type":"rightadapter","out_nodes":[[10382,3985]],"__id":23918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10382,3986]],"__id":23922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23923,"parentNodes":[10386],"index":1196,"rule":{"name":"Recurse101","pattern":{"type":"composite","id":4389,"leftPattern":{"type":"not","id":4387,"cls":"Fibonacci101","alias":"f"},"rightPattern":{"type":"object","id":4388,"cls":"Fibonacci101","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci101 = defined.get('Fibonacci101');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci101(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse101"},{"type":"beta","out_nodes":[[10385,-1]],"__id":23924,"parentNodes":[10387,10388]},{"type":"rightadapter","out_nodes":[[10386,3987]],"__id":23928,"parentNodes":[37]},{"type":"not","out_nodes":[[10389,-1]],"__id":23929,"parentNodes":[10390,10391],"constraint":{"type":"join-reference","out_nodes":[],"__id":23930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10386,-1]],"__id":23931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10388,3988]],"__id":23935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10388,3989]],"__id":23939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23940,"parentNodes":[10393],"index":1197,"rule":{"name":"Calculate100","pattern":{"type":"composite","id":4396,"leftPattern":{"type":"composite","id":4395,"leftPattern":{"type":"composite","id":4394,"leftPattern":{"type":"object","id":4390,"cls":"Fibonacci100","alias":"f1"},"rightPattern":{"type":"object","id":4391,"cls":"Fibonacci100","alias":"f2"}},"rightPattern":{"type":"object","id":4392,"cls":"Fibonacci100","alias":"f3"}},"rightPattern":{"type":"object","id":4393,"cls":"Result100","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate100"},{"type":"beta","out_nodes":[[10392,-1]],"__id":23941,"parentNodes":[10395,10396]},{"type":"type","out_nodes":[[3,3990]],"__id":23942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result100"}},{"type":"rightadapter","out_nodes":[[10393,3990]],"__id":23945,"parentNodes":[4]},{"type":"join","out_nodes":[[10397,-1]],"__id":23946,"parentNodes":[10399,10400],"constraint":{"type":"join-reference","out_nodes":[],"__id":23947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10393,-1]],"__id":23948,"parentNodes":[]},{"type":"type","out_nodes":[[9,3991],[14,3992],[20,3993],[30,3995],[20,3997],[30,3998]],"__id":23949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci100"}},{"type":"rightadapter","out_nodes":[[10396,3991]],"__id":23952,"parentNodes":[10]},{"type":"join","out_nodes":[[10401,-1]],"__id":23953,"parentNodes":[10402,10403],"constraint":{"type":"join-reference","out_nodes":[],"__id":23954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10396,-1]],"__id":23955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10400,3992]],"__id":23960,"parentNodes":[16]},{"type":"beta","out_nodes":[[10404,-1]],"__id":23961,"parentNodes":[10405,10406]},{"type":"leftadapter","out_nodes":[[10400,-1]],"__id":23962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10403,3993]],"__id":23967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10403,3994]],"__id":23971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23972,"parentNodes":[10408],"index":1198,"rule":{"name":"Bootstrap100","pattern":{"type":"object","id":4397,"cls":"Fibonacci100","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap100"},{"type":"beta","out_nodes":[[10407,-1]],"__id":23973,"parentNodes":[10409,10410]},{"type":"rightadapter","out_nodes":[[10408,3995]],"__id":23978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10408,3996]],"__id":23982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":23983,"parentNodes":[10412],"index":1199,"rule":{"name":"Recurse100","pattern":{"type":"composite","id":4400,"leftPattern":{"type":"not","id":4398,"cls":"Fibonacci100","alias":"f"},"rightPattern":{"type":"object","id":4399,"cls":"Fibonacci100","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');let Fibonacci100 = defined.get('Fibonacci100');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci100(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse100"},{"type":"beta","out_nodes":[[10411,-1]],"__id":23984,"parentNodes":[10413,10414]},{"type":"rightadapter","out_nodes":[[10412,3997]],"__id":23988,"parentNodes":[37]},{"type":"not","out_nodes":[[10415,-1]],"__id":23989,"parentNodes":[10416,10417],"constraint":{"type":"join-reference","out_nodes":[],"__id":23990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10412,-1]],"__id":23991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10414,3998]],"__id":23995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10414,3999]],"__id":23999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24000,"parentNodes":[10419],"index":1200,"rule":{"name":"Calculate99","pattern":{"type":"composite","id":4407,"leftPattern":{"type":"composite","id":4406,"leftPattern":{"type":"composite","id":4405,"leftPattern":{"type":"object","id":4401,"cls":"Fibonacci99","alias":"f1"},"rightPattern":{"type":"object","id":4402,"cls":"Fibonacci99","alias":"f2"}},"rightPattern":{"type":"object","id":4403,"cls":"Fibonacci99","alias":"f3"}},"rightPattern":{"type":"object","id":4404,"cls":"Result99","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate99"},{"type":"beta","out_nodes":[[10418,-1]],"__id":24001,"parentNodes":[10421,10422]},{"type":"type","out_nodes":[[3,4000]],"__id":24002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result99"}},{"type":"rightadapter","out_nodes":[[10419,4000]],"__id":24005,"parentNodes":[4]},{"type":"join","out_nodes":[[10423,-1]],"__id":24006,"parentNodes":[10425,10426],"constraint":{"type":"join-reference","out_nodes":[],"__id":24007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10419,-1]],"__id":24008,"parentNodes":[]},{"type":"type","out_nodes":[[9,4001],[14,4002],[20,4003],[30,4005],[20,4007],[30,4008]],"__id":24009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci99"}},{"type":"rightadapter","out_nodes":[[10422,4001]],"__id":24012,"parentNodes":[10]},{"type":"join","out_nodes":[[10427,-1]],"__id":24013,"parentNodes":[10428,10429],"constraint":{"type":"join-reference","out_nodes":[],"__id":24014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10422,-1]],"__id":24015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10426,4002]],"__id":24020,"parentNodes":[16]},{"type":"beta","out_nodes":[[10430,-1]],"__id":24021,"parentNodes":[10431,10432]},{"type":"leftadapter","out_nodes":[[10426,-1]],"__id":24022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10429,4003]],"__id":24027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10429,4004]],"__id":24031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24032,"parentNodes":[10434],"index":1201,"rule":{"name":"Bootstrap99","pattern":{"type":"object","id":4408,"cls":"Fibonacci99","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap99"},{"type":"beta","out_nodes":[[10433,-1]],"__id":24033,"parentNodes":[10435,10436]},{"type":"rightadapter","out_nodes":[[10434,4005]],"__id":24038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10434,4006]],"__id":24042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24043,"parentNodes":[10438],"index":1202,"rule":{"name":"Recurse99","pattern":{"type":"composite","id":4411,"leftPattern":{"type":"not","id":4409,"cls":"Fibonacci99","alias":"f"},"rightPattern":{"type":"object","id":4410,"cls":"Fibonacci99","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci99 = defined.get('Fibonacci99');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci99(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse99"},{"type":"beta","out_nodes":[[10437,-1]],"__id":24044,"parentNodes":[10439,10440]},{"type":"rightadapter","out_nodes":[[10438,4007]],"__id":24048,"parentNodes":[37]},{"type":"not","out_nodes":[[10441,-1]],"__id":24049,"parentNodes":[10442,10443],"constraint":{"type":"join-reference","out_nodes":[],"__id":24050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10438,-1]],"__id":24051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10440,4008]],"__id":24055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10440,4009]],"__id":24059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24060,"parentNodes":[10445],"index":1203,"rule":{"name":"Calculate98","pattern":{"type":"composite","id":4418,"leftPattern":{"type":"composite","id":4417,"leftPattern":{"type":"composite","id":4416,"leftPattern":{"type":"object","id":4412,"cls":"Fibonacci98","alias":"f1"},"rightPattern":{"type":"object","id":4413,"cls":"Fibonacci98","alias":"f2"}},"rightPattern":{"type":"object","id":4414,"cls":"Fibonacci98","alias":"f3"}},"rightPattern":{"type":"object","id":4415,"cls":"Result98","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate98"},{"type":"beta","out_nodes":[[10444,-1]],"__id":24061,"parentNodes":[10447,10448]},{"type":"type","out_nodes":[[3,4010]],"__id":24062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result98"}},{"type":"rightadapter","out_nodes":[[10445,4010]],"__id":24065,"parentNodes":[4]},{"type":"join","out_nodes":[[10449,-1]],"__id":24066,"parentNodes":[10451,10452],"constraint":{"type":"join-reference","out_nodes":[],"__id":24067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10445,-1]],"__id":24068,"parentNodes":[]},{"type":"type","out_nodes":[[9,4011],[14,4012],[20,4013],[30,4015],[20,4017],[30,4018]],"__id":24069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci98"}},{"type":"rightadapter","out_nodes":[[10448,4011]],"__id":24072,"parentNodes":[10]},{"type":"join","out_nodes":[[10453,-1]],"__id":24073,"parentNodes":[10454,10455],"constraint":{"type":"join-reference","out_nodes":[],"__id":24074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10448,-1]],"__id":24075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10452,4012]],"__id":24080,"parentNodes":[16]},{"type":"beta","out_nodes":[[10456,-1]],"__id":24081,"parentNodes":[10457,10458]},{"type":"leftadapter","out_nodes":[[10452,-1]],"__id":24082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10455,4013]],"__id":24087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10455,4014]],"__id":24091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24092,"parentNodes":[10460],"index":1204,"rule":{"name":"Bootstrap98","pattern":{"type":"object","id":4419,"cls":"Fibonacci98","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap98"},{"type":"beta","out_nodes":[[10459,-1]],"__id":24093,"parentNodes":[10461,10462]},{"type":"rightadapter","out_nodes":[[10460,4015]],"__id":24098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10460,4016]],"__id":24102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24103,"parentNodes":[10464],"index":1205,"rule":{"name":"Recurse98","pattern":{"type":"composite","id":4422,"leftPattern":{"type":"not","id":4420,"cls":"Fibonacci98","alias":"f"},"rightPattern":{"type":"object","id":4421,"cls":"Fibonacci98","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci98 = defined.get('Fibonacci98');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci98(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse98"},{"type":"beta","out_nodes":[[10463,-1]],"__id":24104,"parentNodes":[10465,10466]},{"type":"rightadapter","out_nodes":[[10464,4017]],"__id":24108,"parentNodes":[37]},{"type":"not","out_nodes":[[10467,-1]],"__id":24109,"parentNodes":[10468,10469],"constraint":{"type":"join-reference","out_nodes":[],"__id":24110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10464,-1]],"__id":24111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10466,4018]],"__id":24115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10466,4019]],"__id":24119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24120,"parentNodes":[10471],"index":1206,"rule":{"name":"Calculate97","pattern":{"type":"composite","id":4429,"leftPattern":{"type":"composite","id":4428,"leftPattern":{"type":"composite","id":4427,"leftPattern":{"type":"object","id":4423,"cls":"Fibonacci97","alias":"f1"},"rightPattern":{"type":"object","id":4424,"cls":"Fibonacci97","alias":"f2"}},"rightPattern":{"type":"object","id":4425,"cls":"Fibonacci97","alias":"f3"}},"rightPattern":{"type":"object","id":4426,"cls":"Result97","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate97"},{"type":"beta","out_nodes":[[10470,-1]],"__id":24121,"parentNodes":[10473,10474]},{"type":"type","out_nodes":[[3,4020]],"__id":24122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result97"}},{"type":"rightadapter","out_nodes":[[10471,4020]],"__id":24125,"parentNodes":[4]},{"type":"join","out_nodes":[[10475,-1]],"__id":24126,"parentNodes":[10477,10478],"constraint":{"type":"join-reference","out_nodes":[],"__id":24127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10471,-1]],"__id":24128,"parentNodes":[]},{"type":"type","out_nodes":[[9,4021],[14,4022],[20,4023],[30,4025],[20,4027],[30,4028]],"__id":24129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci97"}},{"type":"rightadapter","out_nodes":[[10474,4021]],"__id":24132,"parentNodes":[10]},{"type":"join","out_nodes":[[10479,-1]],"__id":24133,"parentNodes":[10480,10481],"constraint":{"type":"join-reference","out_nodes":[],"__id":24134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10474,-1]],"__id":24135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10478,4022]],"__id":24140,"parentNodes":[16]},{"type":"beta","out_nodes":[[10482,-1]],"__id":24141,"parentNodes":[10483,10484]},{"type":"leftadapter","out_nodes":[[10478,-1]],"__id":24142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10481,4023]],"__id":24147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10481,4024]],"__id":24151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24152,"parentNodes":[10486],"index":1207,"rule":{"name":"Bootstrap97","pattern":{"type":"object","id":4430,"cls":"Fibonacci97","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap97"},{"type":"beta","out_nodes":[[10485,-1]],"__id":24153,"parentNodes":[10487,10488]},{"type":"rightadapter","out_nodes":[[10486,4025]],"__id":24158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10486,4026]],"__id":24162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24163,"parentNodes":[10490],"index":1208,"rule":{"name":"Recurse97","pattern":{"type":"composite","id":4433,"leftPattern":{"type":"not","id":4431,"cls":"Fibonacci97","alias":"f"},"rightPattern":{"type":"object","id":4432,"cls":"Fibonacci97","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci97 = defined.get('Fibonacci97');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci97(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse97"},{"type":"beta","out_nodes":[[10489,-1]],"__id":24164,"parentNodes":[10491,10492]},{"type":"rightadapter","out_nodes":[[10490,4027]],"__id":24168,"parentNodes":[37]},{"type":"not","out_nodes":[[10493,-1]],"__id":24169,"parentNodes":[10494,10495],"constraint":{"type":"join-reference","out_nodes":[],"__id":24170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10490,-1]],"__id":24171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10492,4028]],"__id":24175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10492,4029]],"__id":24179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24180,"parentNodes":[10497],"index":1209,"rule":{"name":"Calculate96","pattern":{"type":"composite","id":4440,"leftPattern":{"type":"composite","id":4439,"leftPattern":{"type":"composite","id":4438,"leftPattern":{"type":"object","id":4434,"cls":"Fibonacci96","alias":"f1"},"rightPattern":{"type":"object","id":4435,"cls":"Fibonacci96","alias":"f2"}},"rightPattern":{"type":"object","id":4436,"cls":"Fibonacci96","alias":"f3"}},"rightPattern":{"type":"object","id":4437,"cls":"Result96","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate96"},{"type":"beta","out_nodes":[[10496,-1]],"__id":24181,"parentNodes":[10499,10500]},{"type":"type","out_nodes":[[3,4030]],"__id":24182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result96"}},{"type":"rightadapter","out_nodes":[[10497,4030]],"__id":24185,"parentNodes":[4]},{"type":"join","out_nodes":[[10501,-1]],"__id":24186,"parentNodes":[10503,10504],"constraint":{"type":"join-reference","out_nodes":[],"__id":24187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10497,-1]],"__id":24188,"parentNodes":[]},{"type":"type","out_nodes":[[9,4031],[14,4032],[20,4033],[30,4035],[20,4037],[30,4038]],"__id":24189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci96"}},{"type":"rightadapter","out_nodes":[[10500,4031]],"__id":24192,"parentNodes":[10]},{"type":"join","out_nodes":[[10505,-1]],"__id":24193,"parentNodes":[10506,10507],"constraint":{"type":"join-reference","out_nodes":[],"__id":24194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10500,-1]],"__id":24195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10504,4032]],"__id":24200,"parentNodes":[16]},{"type":"beta","out_nodes":[[10508,-1]],"__id":24201,"parentNodes":[10509,10510]},{"type":"leftadapter","out_nodes":[[10504,-1]],"__id":24202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10507,4033]],"__id":24207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10507,4034]],"__id":24211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24212,"parentNodes":[10512],"index":1210,"rule":{"name":"Bootstrap96","pattern":{"type":"object","id":4441,"cls":"Fibonacci96","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap96"},{"type":"beta","out_nodes":[[10511,-1]],"__id":24213,"parentNodes":[10513,10514]},{"type":"rightadapter","out_nodes":[[10512,4035]],"__id":24218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10512,4036]],"__id":24222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24223,"parentNodes":[10516],"index":1211,"rule":{"name":"Recurse96","pattern":{"type":"composite","id":4444,"leftPattern":{"type":"not","id":4442,"cls":"Fibonacci96","alias":"f"},"rightPattern":{"type":"object","id":4443,"cls":"Fibonacci96","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci96 = defined.get('Fibonacci96');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci96(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse96"},{"type":"beta","out_nodes":[[10515,-1]],"__id":24224,"parentNodes":[10517,10518]},{"type":"rightadapter","out_nodes":[[10516,4037]],"__id":24228,"parentNodes":[37]},{"type":"not","out_nodes":[[10519,-1]],"__id":24229,"parentNodes":[10520,10521],"constraint":{"type":"join-reference","out_nodes":[],"__id":24230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10516,-1]],"__id":24231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10518,4038]],"__id":24235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10518,4039]],"__id":24239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24240,"parentNodes":[10523],"index":1212,"rule":{"name":"Calculate95","pattern":{"type":"composite","id":4451,"leftPattern":{"type":"composite","id":4450,"leftPattern":{"type":"composite","id":4449,"leftPattern":{"type":"object","id":4445,"cls":"Fibonacci95","alias":"f1"},"rightPattern":{"type":"object","id":4446,"cls":"Fibonacci95","alias":"f2"}},"rightPattern":{"type":"object","id":4447,"cls":"Fibonacci95","alias":"f3"}},"rightPattern":{"type":"object","id":4448,"cls":"Result95","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate95"},{"type":"beta","out_nodes":[[10522,-1]],"__id":24241,"parentNodes":[10525,10526]},{"type":"type","out_nodes":[[3,4040]],"__id":24242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result95"}},{"type":"rightadapter","out_nodes":[[10523,4040]],"__id":24245,"parentNodes":[4]},{"type":"join","out_nodes":[[10527,-1]],"__id":24246,"parentNodes":[10529,10530],"constraint":{"type":"join-reference","out_nodes":[],"__id":24247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10523,-1]],"__id":24248,"parentNodes":[]},{"type":"type","out_nodes":[[9,4041],[14,4042],[20,4043],[30,4045],[20,4047],[30,4048]],"__id":24249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci95"}},{"type":"rightadapter","out_nodes":[[10526,4041]],"__id":24252,"parentNodes":[10]},{"type":"join","out_nodes":[[10531,-1]],"__id":24253,"parentNodes":[10532,10533],"constraint":{"type":"join-reference","out_nodes":[],"__id":24254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10526,-1]],"__id":24255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10530,4042]],"__id":24260,"parentNodes":[16]},{"type":"beta","out_nodes":[[10534,-1]],"__id":24261,"parentNodes":[10535,10536]},{"type":"leftadapter","out_nodes":[[10530,-1]],"__id":24262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10533,4043]],"__id":24267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10533,4044]],"__id":24271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24272,"parentNodes":[10538],"index":1213,"rule":{"name":"Bootstrap95","pattern":{"type":"object","id":4452,"cls":"Fibonacci95","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap95"},{"type":"beta","out_nodes":[[10537,-1]],"__id":24273,"parentNodes":[10539,10540]},{"type":"rightadapter","out_nodes":[[10538,4045]],"__id":24278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10538,4046]],"__id":24282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24283,"parentNodes":[10542],"index":1214,"rule":{"name":"Recurse95","pattern":{"type":"composite","id":4455,"leftPattern":{"type":"not","id":4453,"cls":"Fibonacci95","alias":"f"},"rightPattern":{"type":"object","id":4454,"cls":"Fibonacci95","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci95 = defined.get('Fibonacci95');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci95(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse95"},{"type":"beta","out_nodes":[[10541,-1]],"__id":24284,"parentNodes":[10543,10544]},{"type":"rightadapter","out_nodes":[[10542,4047]],"__id":24288,"parentNodes":[37]},{"type":"not","out_nodes":[[10545,-1]],"__id":24289,"parentNodes":[10546,10547],"constraint":{"type":"join-reference","out_nodes":[],"__id":24290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10542,-1]],"__id":24291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10544,4048]],"__id":24295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10544,4049]],"__id":24299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24300,"parentNodes":[10549],"index":1215,"rule":{"name":"Calculate94","pattern":{"type":"composite","id":4462,"leftPattern":{"type":"composite","id":4461,"leftPattern":{"type":"composite","id":4460,"leftPattern":{"type":"object","id":4456,"cls":"Fibonacci94","alias":"f1"},"rightPattern":{"type":"object","id":4457,"cls":"Fibonacci94","alias":"f2"}},"rightPattern":{"type":"object","id":4458,"cls":"Fibonacci94","alias":"f3"}},"rightPattern":{"type":"object","id":4459,"cls":"Result94","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate94"},{"type":"beta","out_nodes":[[10548,-1]],"__id":24301,"parentNodes":[10551,10552]},{"type":"type","out_nodes":[[3,4050]],"__id":24302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result94"}},{"type":"rightadapter","out_nodes":[[10549,4050]],"__id":24305,"parentNodes":[4]},{"type":"join","out_nodes":[[10553,-1]],"__id":24306,"parentNodes":[10555,10556],"constraint":{"type":"join-reference","out_nodes":[],"__id":24307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10549,-1]],"__id":24308,"parentNodes":[]},{"type":"type","out_nodes":[[9,4051],[14,4052],[20,4053],[30,4055],[20,4057],[30,4058]],"__id":24309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci94"}},{"type":"rightadapter","out_nodes":[[10552,4051]],"__id":24312,"parentNodes":[10]},{"type":"join","out_nodes":[[10557,-1]],"__id":24313,"parentNodes":[10558,10559],"constraint":{"type":"join-reference","out_nodes":[],"__id":24314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10552,-1]],"__id":24315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10556,4052]],"__id":24320,"parentNodes":[16]},{"type":"beta","out_nodes":[[10560,-1]],"__id":24321,"parentNodes":[10561,10562]},{"type":"leftadapter","out_nodes":[[10556,-1]],"__id":24322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10559,4053]],"__id":24327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10559,4054]],"__id":24331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24332,"parentNodes":[10564],"index":1216,"rule":{"name":"Bootstrap94","pattern":{"type":"object","id":4463,"cls":"Fibonacci94","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap94"},{"type":"beta","out_nodes":[[10563,-1]],"__id":24333,"parentNodes":[10565,10566]},{"type":"rightadapter","out_nodes":[[10564,4055]],"__id":24338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10564,4056]],"__id":24342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24343,"parentNodes":[10568],"index":1217,"rule":{"name":"Recurse94","pattern":{"type":"composite","id":4466,"leftPattern":{"type":"not","id":4464,"cls":"Fibonacci94","alias":"f"},"rightPattern":{"type":"object","id":4465,"cls":"Fibonacci94","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci94 = defined.get('Fibonacci94');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci94(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse94"},{"type":"beta","out_nodes":[[10567,-1]],"__id":24344,"parentNodes":[10569,10570]},{"type":"rightadapter","out_nodes":[[10568,4057]],"__id":24348,"parentNodes":[37]},{"type":"not","out_nodes":[[10571,-1]],"__id":24349,"parentNodes":[10572,10573],"constraint":{"type":"join-reference","out_nodes":[],"__id":24350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10568,-1]],"__id":24351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10570,4058]],"__id":24355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10570,4059]],"__id":24359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24360,"parentNodes":[10575],"index":1218,"rule":{"name":"Calculate93","pattern":{"type":"composite","id":4473,"leftPattern":{"type":"composite","id":4472,"leftPattern":{"type":"composite","id":4471,"leftPattern":{"type":"object","id":4467,"cls":"Fibonacci93","alias":"f1"},"rightPattern":{"type":"object","id":4468,"cls":"Fibonacci93","alias":"f2"}},"rightPattern":{"type":"object","id":4469,"cls":"Fibonacci93","alias":"f3"}},"rightPattern":{"type":"object","id":4470,"cls":"Result93","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate93"},{"type":"beta","out_nodes":[[10574,-1]],"__id":24361,"parentNodes":[10577,10578]},{"type":"type","out_nodes":[[3,4060]],"__id":24362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result93"}},{"type":"rightadapter","out_nodes":[[10575,4060]],"__id":24365,"parentNodes":[4]},{"type":"join","out_nodes":[[10579,-1]],"__id":24366,"parentNodes":[10581,10582],"constraint":{"type":"join-reference","out_nodes":[],"__id":24367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10575,-1]],"__id":24368,"parentNodes":[]},{"type":"type","out_nodes":[[9,4061],[14,4062],[20,4063],[30,4065],[20,4067],[30,4068]],"__id":24369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci93"}},{"type":"rightadapter","out_nodes":[[10578,4061]],"__id":24372,"parentNodes":[10]},{"type":"join","out_nodes":[[10583,-1]],"__id":24373,"parentNodes":[10584,10585],"constraint":{"type":"join-reference","out_nodes":[],"__id":24374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10578,-1]],"__id":24375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10582,4062]],"__id":24380,"parentNodes":[16]},{"type":"beta","out_nodes":[[10586,-1]],"__id":24381,"parentNodes":[10587,10588]},{"type":"leftadapter","out_nodes":[[10582,-1]],"__id":24382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10585,4063]],"__id":24387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10585,4064]],"__id":24391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24392,"parentNodes":[10590],"index":1219,"rule":{"name":"Bootstrap93","pattern":{"type":"object","id":4474,"cls":"Fibonacci93","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap93"},{"type":"beta","out_nodes":[[10589,-1]],"__id":24393,"parentNodes":[10591,10592]},{"type":"rightadapter","out_nodes":[[10590,4065]],"__id":24398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10590,4066]],"__id":24402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24403,"parentNodes":[10594],"index":1220,"rule":{"name":"Recurse93","pattern":{"type":"composite","id":4477,"leftPattern":{"type":"not","id":4475,"cls":"Fibonacci93","alias":"f"},"rightPattern":{"type":"object","id":4476,"cls":"Fibonacci93","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci93 = defined.get('Fibonacci93');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci93(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse93"},{"type":"beta","out_nodes":[[10593,-1]],"__id":24404,"parentNodes":[10595,10596]},{"type":"rightadapter","out_nodes":[[10594,4067]],"__id":24408,"parentNodes":[37]},{"type":"not","out_nodes":[[10597,-1]],"__id":24409,"parentNodes":[10598,10599],"constraint":{"type":"join-reference","out_nodes":[],"__id":24410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10594,-1]],"__id":24411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10596,4068]],"__id":24415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10596,4069]],"__id":24419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24420,"parentNodes":[10601],"index":1221,"rule":{"name":"Calculate92","pattern":{"type":"composite","id":4484,"leftPattern":{"type":"composite","id":4483,"leftPattern":{"type":"composite","id":4482,"leftPattern":{"type":"object","id":4478,"cls":"Fibonacci92","alias":"f1"},"rightPattern":{"type":"object","id":4479,"cls":"Fibonacci92","alias":"f2"}},"rightPattern":{"type":"object","id":4480,"cls":"Fibonacci92","alias":"f3"}},"rightPattern":{"type":"object","id":4481,"cls":"Result92","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate92"},{"type":"beta","out_nodes":[[10600,-1]],"__id":24421,"parentNodes":[10603,10604]},{"type":"type","out_nodes":[[3,4070]],"__id":24422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result92"}},{"type":"rightadapter","out_nodes":[[10601,4070]],"__id":24425,"parentNodes":[4]},{"type":"join","out_nodes":[[10605,-1]],"__id":24426,"parentNodes":[10607,10608],"constraint":{"type":"join-reference","out_nodes":[],"__id":24427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10601,-1]],"__id":24428,"parentNodes":[]},{"type":"type","out_nodes":[[9,4071],[14,4072],[20,4073],[30,4075],[20,4077],[30,4078]],"__id":24429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci92"}},{"type":"rightadapter","out_nodes":[[10604,4071]],"__id":24432,"parentNodes":[10]},{"type":"join","out_nodes":[[10609,-1]],"__id":24433,"parentNodes":[10610,10611],"constraint":{"type":"join-reference","out_nodes":[],"__id":24434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10604,-1]],"__id":24435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10608,4072]],"__id":24440,"parentNodes":[16]},{"type":"beta","out_nodes":[[10612,-1]],"__id":24441,"parentNodes":[10613,10614]},{"type":"leftadapter","out_nodes":[[10608,-1]],"__id":24442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10611,4073]],"__id":24447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10611,4074]],"__id":24451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24452,"parentNodes":[10616],"index":1222,"rule":{"name":"Bootstrap92","pattern":{"type":"object","id":4485,"cls":"Fibonacci92","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap92"},{"type":"beta","out_nodes":[[10615,-1]],"__id":24453,"parentNodes":[10617,10618]},{"type":"rightadapter","out_nodes":[[10616,4075]],"__id":24458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10616,4076]],"__id":24462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24463,"parentNodes":[10620],"index":1223,"rule":{"name":"Recurse92","pattern":{"type":"composite","id":4488,"leftPattern":{"type":"not","id":4486,"cls":"Fibonacci92","alias":"f"},"rightPattern":{"type":"object","id":4487,"cls":"Fibonacci92","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci92 = defined.get('Fibonacci92');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci92(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse92"},{"type":"beta","out_nodes":[[10619,-1]],"__id":24464,"parentNodes":[10621,10622]},{"type":"rightadapter","out_nodes":[[10620,4077]],"__id":24468,"parentNodes":[37]},{"type":"not","out_nodes":[[10623,-1]],"__id":24469,"parentNodes":[10624,10625],"constraint":{"type":"join-reference","out_nodes":[],"__id":24470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10620,-1]],"__id":24471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10622,4078]],"__id":24475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10622,4079]],"__id":24479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24480,"parentNodes":[10627],"index":1224,"rule":{"name":"Calculate91","pattern":{"type":"composite","id":4495,"leftPattern":{"type":"composite","id":4494,"leftPattern":{"type":"composite","id":4493,"leftPattern":{"type":"object","id":4489,"cls":"Fibonacci91","alias":"f1"},"rightPattern":{"type":"object","id":4490,"cls":"Fibonacci91","alias":"f2"}},"rightPattern":{"type":"object","id":4491,"cls":"Fibonacci91","alias":"f3"}},"rightPattern":{"type":"object","id":4492,"cls":"Result91","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate91"},{"type":"beta","out_nodes":[[10626,-1]],"__id":24481,"parentNodes":[10629,10630]},{"type":"type","out_nodes":[[3,4080]],"__id":24482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result91"}},{"type":"rightadapter","out_nodes":[[10627,4080]],"__id":24485,"parentNodes":[4]},{"type":"join","out_nodes":[[10631,-1]],"__id":24486,"parentNodes":[10633,10634],"constraint":{"type":"join-reference","out_nodes":[],"__id":24487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10627,-1]],"__id":24488,"parentNodes":[]},{"type":"type","out_nodes":[[9,4081],[14,4082],[20,4083],[30,4085],[20,4087],[30,4088]],"__id":24489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci91"}},{"type":"rightadapter","out_nodes":[[10630,4081]],"__id":24492,"parentNodes":[10]},{"type":"join","out_nodes":[[10635,-1]],"__id":24493,"parentNodes":[10636,10637],"constraint":{"type":"join-reference","out_nodes":[],"__id":24494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10630,-1]],"__id":24495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10634,4082]],"__id":24500,"parentNodes":[16]},{"type":"beta","out_nodes":[[10638,-1]],"__id":24501,"parentNodes":[10639,10640]},{"type":"leftadapter","out_nodes":[[10634,-1]],"__id":24502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10637,4083]],"__id":24507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10637,4084]],"__id":24511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24512,"parentNodes":[10642],"index":1225,"rule":{"name":"Bootstrap91","pattern":{"type":"object","id":4496,"cls":"Fibonacci91","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap91"},{"type":"beta","out_nodes":[[10641,-1]],"__id":24513,"parentNodes":[10643,10644]},{"type":"rightadapter","out_nodes":[[10642,4085]],"__id":24518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10642,4086]],"__id":24522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24523,"parentNodes":[10646],"index":1226,"rule":{"name":"Recurse91","pattern":{"type":"composite","id":4499,"leftPattern":{"type":"not","id":4497,"cls":"Fibonacci91","alias":"f"},"rightPattern":{"type":"object","id":4498,"cls":"Fibonacci91","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci91 = defined.get('Fibonacci91');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci91(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse91"},{"type":"beta","out_nodes":[[10645,-1]],"__id":24524,"parentNodes":[10647,10648]},{"type":"rightadapter","out_nodes":[[10646,4087]],"__id":24528,"parentNodes":[37]},{"type":"not","out_nodes":[[10649,-1]],"__id":24529,"parentNodes":[10650,10651],"constraint":{"type":"join-reference","out_nodes":[],"__id":24530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10646,-1]],"__id":24531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10648,4088]],"__id":24535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10648,4089]],"__id":24539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24540,"parentNodes":[10653],"index":1227,"rule":{"name":"Calculate90","pattern":{"type":"composite","id":4506,"leftPattern":{"type":"composite","id":4505,"leftPattern":{"type":"composite","id":4504,"leftPattern":{"type":"object","id":4500,"cls":"Fibonacci90","alias":"f1"},"rightPattern":{"type":"object","id":4501,"cls":"Fibonacci90","alias":"f2"}},"rightPattern":{"type":"object","id":4502,"cls":"Fibonacci90","alias":"f3"}},"rightPattern":{"type":"object","id":4503,"cls":"Result90","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate90"},{"type":"beta","out_nodes":[[10652,-1]],"__id":24541,"parentNodes":[10655,10656]},{"type":"type","out_nodes":[[3,4090]],"__id":24542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result90"}},{"type":"rightadapter","out_nodes":[[10653,4090]],"__id":24545,"parentNodes":[4]},{"type":"join","out_nodes":[[10657,-1]],"__id":24546,"parentNodes":[10659,10660],"constraint":{"type":"join-reference","out_nodes":[],"__id":24547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10653,-1]],"__id":24548,"parentNodes":[]},{"type":"type","out_nodes":[[9,4091],[14,4092],[20,4093],[30,4095],[20,4097],[30,4098]],"__id":24549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci90"}},{"type":"rightadapter","out_nodes":[[10656,4091]],"__id":24552,"parentNodes":[10]},{"type":"join","out_nodes":[[10661,-1]],"__id":24553,"parentNodes":[10662,10663],"constraint":{"type":"join-reference","out_nodes":[],"__id":24554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10656,-1]],"__id":24555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10660,4092]],"__id":24560,"parentNodes":[16]},{"type":"beta","out_nodes":[[10664,-1]],"__id":24561,"parentNodes":[10665,10666]},{"type":"leftadapter","out_nodes":[[10660,-1]],"__id":24562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10663,4093]],"__id":24567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10663,4094]],"__id":24571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24572,"parentNodes":[10668],"index":1228,"rule":{"name":"Bootstrap90","pattern":{"type":"object","id":4507,"cls":"Fibonacci90","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap90"},{"type":"beta","out_nodes":[[10667,-1]],"__id":24573,"parentNodes":[10669,10670]},{"type":"rightadapter","out_nodes":[[10668,4095]],"__id":24578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10668,4096]],"__id":24582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24583,"parentNodes":[10672],"index":1229,"rule":{"name":"Recurse90","pattern":{"type":"composite","id":4510,"leftPattern":{"type":"not","id":4508,"cls":"Fibonacci90","alias":"f"},"rightPattern":{"type":"object","id":4509,"cls":"Fibonacci90","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');let Fibonacci90 = defined.get('Fibonacci90');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci90(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse90"},{"type":"beta","out_nodes":[[10671,-1]],"__id":24584,"parentNodes":[10673,10674]},{"type":"rightadapter","out_nodes":[[10672,4097]],"__id":24588,"parentNodes":[37]},{"type":"not","out_nodes":[[10675,-1]],"__id":24589,"parentNodes":[10676,10677],"constraint":{"type":"join-reference","out_nodes":[],"__id":24590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10672,-1]],"__id":24591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10674,4098]],"__id":24595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10674,4099]],"__id":24599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24600,"parentNodes":[10679],"index":1230,"rule":{"name":"Calculate89","pattern":{"type":"composite","id":4517,"leftPattern":{"type":"composite","id":4516,"leftPattern":{"type":"composite","id":4515,"leftPattern":{"type":"object","id":4511,"cls":"Fibonacci89","alias":"f1"},"rightPattern":{"type":"object","id":4512,"cls":"Fibonacci89","alias":"f2"}},"rightPattern":{"type":"object","id":4513,"cls":"Fibonacci89","alias":"f3"}},"rightPattern":{"type":"object","id":4514,"cls":"Result89","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate89"},{"type":"beta","out_nodes":[[10678,-1]],"__id":24601,"parentNodes":[10681,10682]},{"type":"type","out_nodes":[[3,4100]],"__id":24602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result89"}},{"type":"rightadapter","out_nodes":[[10679,4100]],"__id":24605,"parentNodes":[4]},{"type":"join","out_nodes":[[10683,-1]],"__id":24606,"parentNodes":[10685,10686],"constraint":{"type":"join-reference","out_nodes":[],"__id":24607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10679,-1]],"__id":24608,"parentNodes":[]},{"type":"type","out_nodes":[[9,4101],[14,4102],[20,4103],[30,4105],[20,4107],[30,4108]],"__id":24609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci89"}},{"type":"rightadapter","out_nodes":[[10682,4101]],"__id":24612,"parentNodes":[10]},{"type":"join","out_nodes":[[10687,-1]],"__id":24613,"parentNodes":[10688,10689],"constraint":{"type":"join-reference","out_nodes":[],"__id":24614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10682,-1]],"__id":24615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10686,4102]],"__id":24620,"parentNodes":[16]},{"type":"beta","out_nodes":[[10690,-1]],"__id":24621,"parentNodes":[10691,10692]},{"type":"leftadapter","out_nodes":[[10686,-1]],"__id":24622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10689,4103]],"__id":24627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10689,4104]],"__id":24631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24632,"parentNodes":[10694],"index":1231,"rule":{"name":"Bootstrap89","pattern":{"type":"object","id":4518,"cls":"Fibonacci89","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap89"},{"type":"beta","out_nodes":[[10693,-1]],"__id":24633,"parentNodes":[10695,10696]},{"type":"rightadapter","out_nodes":[[10694,4105]],"__id":24638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10694,4106]],"__id":24642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24643,"parentNodes":[10698],"index":1232,"rule":{"name":"Recurse89","pattern":{"type":"composite","id":4521,"leftPattern":{"type":"not","id":4519,"cls":"Fibonacci89","alias":"f"},"rightPattern":{"type":"object","id":4520,"cls":"Fibonacci89","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci89 = defined.get('Fibonacci89');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci89(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse89"},{"type":"beta","out_nodes":[[10697,-1]],"__id":24644,"parentNodes":[10699,10700]},{"type":"rightadapter","out_nodes":[[10698,4107]],"__id":24648,"parentNodes":[37]},{"type":"not","out_nodes":[[10701,-1]],"__id":24649,"parentNodes":[10702,10703],"constraint":{"type":"join-reference","out_nodes":[],"__id":24650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10698,-1]],"__id":24651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10700,4108]],"__id":24655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10700,4109]],"__id":24659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24660,"parentNodes":[10705],"index":1233,"rule":{"name":"Calculate88","pattern":{"type":"composite","id":4528,"leftPattern":{"type":"composite","id":4527,"leftPattern":{"type":"composite","id":4526,"leftPattern":{"type":"object","id":4522,"cls":"Fibonacci88","alias":"f1"},"rightPattern":{"type":"object","id":4523,"cls":"Fibonacci88","alias":"f2"}},"rightPattern":{"type":"object","id":4524,"cls":"Fibonacci88","alias":"f3"}},"rightPattern":{"type":"object","id":4525,"cls":"Result88","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate88"},{"type":"beta","out_nodes":[[10704,-1]],"__id":24661,"parentNodes":[10707,10708]},{"type":"type","out_nodes":[[3,4110]],"__id":24662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result88"}},{"type":"rightadapter","out_nodes":[[10705,4110]],"__id":24665,"parentNodes":[4]},{"type":"join","out_nodes":[[10709,-1]],"__id":24666,"parentNodes":[10711,10712],"constraint":{"type":"join-reference","out_nodes":[],"__id":24667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10705,-1]],"__id":24668,"parentNodes":[]},{"type":"type","out_nodes":[[9,4111],[14,4112],[20,4113],[30,4115],[20,4117],[30,4118]],"__id":24669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci88"}},{"type":"rightadapter","out_nodes":[[10708,4111]],"__id":24672,"parentNodes":[10]},{"type":"join","out_nodes":[[10713,-1]],"__id":24673,"parentNodes":[10714,10715],"constraint":{"type":"join-reference","out_nodes":[],"__id":24674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10708,-1]],"__id":24675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10712,4112]],"__id":24680,"parentNodes":[16]},{"type":"beta","out_nodes":[[10716,-1]],"__id":24681,"parentNodes":[10717,10718]},{"type":"leftadapter","out_nodes":[[10712,-1]],"__id":24682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10715,4113]],"__id":24687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10715,4114]],"__id":24691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24692,"parentNodes":[10720],"index":1234,"rule":{"name":"Bootstrap88","pattern":{"type":"object","id":4529,"cls":"Fibonacci88","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap88"},{"type":"beta","out_nodes":[[10719,-1]],"__id":24693,"parentNodes":[10721,10722]},{"type":"rightadapter","out_nodes":[[10720,4115]],"__id":24698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10720,4116]],"__id":24702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24703,"parentNodes":[10724],"index":1235,"rule":{"name":"Recurse88","pattern":{"type":"composite","id":4532,"leftPattern":{"type":"not","id":4530,"cls":"Fibonacci88","alias":"f"},"rightPattern":{"type":"object","id":4531,"cls":"Fibonacci88","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci88 = defined.get('Fibonacci88');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci88(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse88"},{"type":"beta","out_nodes":[[10723,-1]],"__id":24704,"parentNodes":[10725,10726]},{"type":"rightadapter","out_nodes":[[10724,4117]],"__id":24708,"parentNodes":[37]},{"type":"not","out_nodes":[[10727,-1]],"__id":24709,"parentNodes":[10728,10729],"constraint":{"type":"join-reference","out_nodes":[],"__id":24710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10724,-1]],"__id":24711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10726,4118]],"__id":24715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10726,4119]],"__id":24719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24720,"parentNodes":[10731],"index":1236,"rule":{"name":"Calculate87","pattern":{"type":"composite","id":4539,"leftPattern":{"type":"composite","id":4538,"leftPattern":{"type":"composite","id":4537,"leftPattern":{"type":"object","id":4533,"cls":"Fibonacci87","alias":"f1"},"rightPattern":{"type":"object","id":4534,"cls":"Fibonacci87","alias":"f2"}},"rightPattern":{"type":"object","id":4535,"cls":"Fibonacci87","alias":"f3"}},"rightPattern":{"type":"object","id":4536,"cls":"Result87","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate87"},{"type":"beta","out_nodes":[[10730,-1]],"__id":24721,"parentNodes":[10733,10734]},{"type":"type","out_nodes":[[3,4120]],"__id":24722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result87"}},{"type":"rightadapter","out_nodes":[[10731,4120]],"__id":24725,"parentNodes":[4]},{"type":"join","out_nodes":[[10735,-1]],"__id":24726,"parentNodes":[10737,10738],"constraint":{"type":"join-reference","out_nodes":[],"__id":24727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10731,-1]],"__id":24728,"parentNodes":[]},{"type":"type","out_nodes":[[9,4121],[14,4122],[20,4123],[30,4125],[20,4127],[30,4128]],"__id":24729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci87"}},{"type":"rightadapter","out_nodes":[[10734,4121]],"__id":24732,"parentNodes":[10]},{"type":"join","out_nodes":[[10739,-1]],"__id":24733,"parentNodes":[10740,10741],"constraint":{"type":"join-reference","out_nodes":[],"__id":24734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10734,-1]],"__id":24735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10738,4122]],"__id":24740,"parentNodes":[16]},{"type":"beta","out_nodes":[[10742,-1]],"__id":24741,"parentNodes":[10743,10744]},{"type":"leftadapter","out_nodes":[[10738,-1]],"__id":24742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10741,4123]],"__id":24747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10741,4124]],"__id":24751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24752,"parentNodes":[10746],"index":1237,"rule":{"name":"Bootstrap87","pattern":{"type":"object","id":4540,"cls":"Fibonacci87","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap87"},{"type":"beta","out_nodes":[[10745,-1]],"__id":24753,"parentNodes":[10747,10748]},{"type":"rightadapter","out_nodes":[[10746,4125]],"__id":24758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10746,4126]],"__id":24762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24763,"parentNodes":[10750],"index":1238,"rule":{"name":"Recurse87","pattern":{"type":"composite","id":4543,"leftPattern":{"type":"not","id":4541,"cls":"Fibonacci87","alias":"f"},"rightPattern":{"type":"object","id":4542,"cls":"Fibonacci87","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci87 = defined.get('Fibonacci87');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci87(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse87"},{"type":"beta","out_nodes":[[10749,-1]],"__id":24764,"parentNodes":[10751,10752]},{"type":"rightadapter","out_nodes":[[10750,4127]],"__id":24768,"parentNodes":[37]},{"type":"not","out_nodes":[[10753,-1]],"__id":24769,"parentNodes":[10754,10755],"constraint":{"type":"join-reference","out_nodes":[],"__id":24770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10750,-1]],"__id":24771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10752,4128]],"__id":24775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10752,4129]],"__id":24779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24780,"parentNodes":[10757],"index":1239,"rule":{"name":"Calculate86","pattern":{"type":"composite","id":4550,"leftPattern":{"type":"composite","id":4549,"leftPattern":{"type":"composite","id":4548,"leftPattern":{"type":"object","id":4544,"cls":"Fibonacci86","alias":"f1"},"rightPattern":{"type":"object","id":4545,"cls":"Fibonacci86","alias":"f2"}},"rightPattern":{"type":"object","id":4546,"cls":"Fibonacci86","alias":"f3"}},"rightPattern":{"type":"object","id":4547,"cls":"Result86","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate86"},{"type":"beta","out_nodes":[[10756,-1]],"__id":24781,"parentNodes":[10759,10760]},{"type":"type","out_nodes":[[3,4130]],"__id":24782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result86"}},{"type":"rightadapter","out_nodes":[[10757,4130]],"__id":24785,"parentNodes":[4]},{"type":"join","out_nodes":[[10761,-1]],"__id":24786,"parentNodes":[10763,10764],"constraint":{"type":"join-reference","out_nodes":[],"__id":24787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10757,-1]],"__id":24788,"parentNodes":[]},{"type":"type","out_nodes":[[9,4131],[14,4132],[20,4133],[30,4135],[20,4137],[30,4138]],"__id":24789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci86"}},{"type":"rightadapter","out_nodes":[[10760,4131]],"__id":24792,"parentNodes":[10]},{"type":"join","out_nodes":[[10765,-1]],"__id":24793,"parentNodes":[10766,10767],"constraint":{"type":"join-reference","out_nodes":[],"__id":24794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10760,-1]],"__id":24795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10764,4132]],"__id":24800,"parentNodes":[16]},{"type":"beta","out_nodes":[[10768,-1]],"__id":24801,"parentNodes":[10769,10770]},{"type":"leftadapter","out_nodes":[[10764,-1]],"__id":24802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10767,4133]],"__id":24807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10767,4134]],"__id":24811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24812,"parentNodes":[10772],"index":1240,"rule":{"name":"Bootstrap86","pattern":{"type":"object","id":4551,"cls":"Fibonacci86","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap86"},{"type":"beta","out_nodes":[[10771,-1]],"__id":24813,"parentNodes":[10773,10774]},{"type":"rightadapter","out_nodes":[[10772,4135]],"__id":24818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10772,4136]],"__id":24822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24823,"parentNodes":[10776],"index":1241,"rule":{"name":"Recurse86","pattern":{"type":"composite","id":4554,"leftPattern":{"type":"not","id":4552,"cls":"Fibonacci86","alias":"f"},"rightPattern":{"type":"object","id":4553,"cls":"Fibonacci86","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci86 = defined.get('Fibonacci86');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci86(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse86"},{"type":"beta","out_nodes":[[10775,-1]],"__id":24824,"parentNodes":[10777,10778]},{"type":"rightadapter","out_nodes":[[10776,4137]],"__id":24828,"parentNodes":[37]},{"type":"not","out_nodes":[[10779,-1]],"__id":24829,"parentNodes":[10780,10781],"constraint":{"type":"join-reference","out_nodes":[],"__id":24830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10776,-1]],"__id":24831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10778,4138]],"__id":24835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10778,4139]],"__id":24839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24840,"parentNodes":[10783],"index":1242,"rule":{"name":"Calculate85","pattern":{"type":"composite","id":4561,"leftPattern":{"type":"composite","id":4560,"leftPattern":{"type":"composite","id":4559,"leftPattern":{"type":"object","id":4555,"cls":"Fibonacci85","alias":"f1"},"rightPattern":{"type":"object","id":4556,"cls":"Fibonacci85","alias":"f2"}},"rightPattern":{"type":"object","id":4557,"cls":"Fibonacci85","alias":"f3"}},"rightPattern":{"type":"object","id":4558,"cls":"Result85","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate85"},{"type":"beta","out_nodes":[[10782,-1]],"__id":24841,"parentNodes":[10785,10786]},{"type":"type","out_nodes":[[3,4140]],"__id":24842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result85"}},{"type":"rightadapter","out_nodes":[[10783,4140]],"__id":24845,"parentNodes":[4]},{"type":"join","out_nodes":[[10787,-1]],"__id":24846,"parentNodes":[10789,10790],"constraint":{"type":"join-reference","out_nodes":[],"__id":24847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10783,-1]],"__id":24848,"parentNodes":[]},{"type":"type","out_nodes":[[9,4141],[14,4142],[20,4143],[30,4145],[20,4147],[30,4148]],"__id":24849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci85"}},{"type":"rightadapter","out_nodes":[[10786,4141]],"__id":24852,"parentNodes":[10]},{"type":"join","out_nodes":[[10791,-1]],"__id":24853,"parentNodes":[10792,10793],"constraint":{"type":"join-reference","out_nodes":[],"__id":24854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10786,-1]],"__id":24855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10790,4142]],"__id":24860,"parentNodes":[16]},{"type":"beta","out_nodes":[[10794,-1]],"__id":24861,"parentNodes":[10795,10796]},{"type":"leftadapter","out_nodes":[[10790,-1]],"__id":24862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10793,4143]],"__id":24867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10793,4144]],"__id":24871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24872,"parentNodes":[10798],"index":1243,"rule":{"name":"Bootstrap85","pattern":{"type":"object","id":4562,"cls":"Fibonacci85","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap85"},{"type":"beta","out_nodes":[[10797,-1]],"__id":24873,"parentNodes":[10799,10800]},{"type":"rightadapter","out_nodes":[[10798,4145]],"__id":24878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10798,4146]],"__id":24882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24883,"parentNodes":[10802],"index":1244,"rule":{"name":"Recurse85","pattern":{"type":"composite","id":4565,"leftPattern":{"type":"not","id":4563,"cls":"Fibonacci85","alias":"f"},"rightPattern":{"type":"object","id":4564,"cls":"Fibonacci85","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci85 = defined.get('Fibonacci85');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci85(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse85"},{"type":"beta","out_nodes":[[10801,-1]],"__id":24884,"parentNodes":[10803,10804]},{"type":"rightadapter","out_nodes":[[10802,4147]],"__id":24888,"parentNodes":[37]},{"type":"not","out_nodes":[[10805,-1]],"__id":24889,"parentNodes":[10806,10807],"constraint":{"type":"join-reference","out_nodes":[],"__id":24890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10802,-1]],"__id":24891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10804,4148]],"__id":24895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10804,4149]],"__id":24899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24900,"parentNodes":[10809],"index":1245,"rule":{"name":"Calculate84","pattern":{"type":"composite","id":4572,"leftPattern":{"type":"composite","id":4571,"leftPattern":{"type":"composite","id":4570,"leftPattern":{"type":"object","id":4566,"cls":"Fibonacci84","alias":"f1"},"rightPattern":{"type":"object","id":4567,"cls":"Fibonacci84","alias":"f2"}},"rightPattern":{"type":"object","id":4568,"cls":"Fibonacci84","alias":"f3"}},"rightPattern":{"type":"object","id":4569,"cls":"Result84","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate84"},{"type":"beta","out_nodes":[[10808,-1]],"__id":24901,"parentNodes":[10811,10812]},{"type":"type","out_nodes":[[3,4150]],"__id":24902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result84"}},{"type":"rightadapter","out_nodes":[[10809,4150]],"__id":24905,"parentNodes":[4]},{"type":"join","out_nodes":[[10813,-1]],"__id":24906,"parentNodes":[10815,10816],"constraint":{"type":"join-reference","out_nodes":[],"__id":24907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10809,-1]],"__id":24908,"parentNodes":[]},{"type":"type","out_nodes":[[9,4151],[14,4152],[20,4153],[30,4155],[20,4157],[30,4158]],"__id":24909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci84"}},{"type":"rightadapter","out_nodes":[[10812,4151]],"__id":24912,"parentNodes":[10]},{"type":"join","out_nodes":[[10817,-1]],"__id":24913,"parentNodes":[10818,10819],"constraint":{"type":"join-reference","out_nodes":[],"__id":24914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10812,-1]],"__id":24915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10816,4152]],"__id":24920,"parentNodes":[16]},{"type":"beta","out_nodes":[[10820,-1]],"__id":24921,"parentNodes":[10821,10822]},{"type":"leftadapter","out_nodes":[[10816,-1]],"__id":24922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10819,4153]],"__id":24927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10819,4154]],"__id":24931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24932,"parentNodes":[10824],"index":1246,"rule":{"name":"Bootstrap84","pattern":{"type":"object","id":4573,"cls":"Fibonacci84","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap84"},{"type":"beta","out_nodes":[[10823,-1]],"__id":24933,"parentNodes":[10825,10826]},{"type":"rightadapter","out_nodes":[[10824,4155]],"__id":24938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10824,4156]],"__id":24942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24943,"parentNodes":[10828],"index":1247,"rule":{"name":"Recurse84","pattern":{"type":"composite","id":4576,"leftPattern":{"type":"not","id":4574,"cls":"Fibonacci84","alias":"f"},"rightPattern":{"type":"object","id":4575,"cls":"Fibonacci84","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci84 = defined.get('Fibonacci84');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci84(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse84"},{"type":"beta","out_nodes":[[10827,-1]],"__id":24944,"parentNodes":[10829,10830]},{"type":"rightadapter","out_nodes":[[10828,4157]],"__id":24948,"parentNodes":[37]},{"type":"not","out_nodes":[[10831,-1]],"__id":24949,"parentNodes":[10832,10833],"constraint":{"type":"join-reference","out_nodes":[],"__id":24950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10828,-1]],"__id":24951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10830,4158]],"__id":24955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10830,4159]],"__id":24959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24960,"parentNodes":[10835],"index":1248,"rule":{"name":"Calculate83","pattern":{"type":"composite","id":4583,"leftPattern":{"type":"composite","id":4582,"leftPattern":{"type":"composite","id":4581,"leftPattern":{"type":"object","id":4577,"cls":"Fibonacci83","alias":"f1"},"rightPattern":{"type":"object","id":4578,"cls":"Fibonacci83","alias":"f2"}},"rightPattern":{"type":"object","id":4579,"cls":"Fibonacci83","alias":"f3"}},"rightPattern":{"type":"object","id":4580,"cls":"Result83","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate83"},{"type":"beta","out_nodes":[[10834,-1]],"__id":24961,"parentNodes":[10837,10838]},{"type":"type","out_nodes":[[3,4160]],"__id":24962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result83"}},{"type":"rightadapter","out_nodes":[[10835,4160]],"__id":24965,"parentNodes":[4]},{"type":"join","out_nodes":[[10839,-1]],"__id":24966,"parentNodes":[10841,10842],"constraint":{"type":"join-reference","out_nodes":[],"__id":24967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10835,-1]],"__id":24968,"parentNodes":[]},{"type":"type","out_nodes":[[9,4161],[14,4162],[20,4163],[30,4165],[20,4167],[30,4168]],"__id":24969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci83"}},{"type":"rightadapter","out_nodes":[[10838,4161]],"__id":24972,"parentNodes":[10]},{"type":"join","out_nodes":[[10843,-1]],"__id":24973,"parentNodes":[10844,10845],"constraint":{"type":"join-reference","out_nodes":[],"__id":24974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10838,-1]],"__id":24975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10842,4162]],"__id":24980,"parentNodes":[16]},{"type":"beta","out_nodes":[[10846,-1]],"__id":24981,"parentNodes":[10847,10848]},{"type":"leftadapter","out_nodes":[[10842,-1]],"__id":24982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10845,4163]],"__id":24987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10845,4164]],"__id":24991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":24992,"parentNodes":[10850],"index":1249,"rule":{"name":"Bootstrap83","pattern":{"type":"object","id":4584,"cls":"Fibonacci83","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap83"},{"type":"beta","out_nodes":[[10849,-1]],"__id":24993,"parentNodes":[10851,10852]},{"type":"rightadapter","out_nodes":[[10850,4165]],"__id":24998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10850,4166]],"__id":25002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25003,"parentNodes":[10854],"index":1250,"rule":{"name":"Recurse83","pattern":{"type":"composite","id":4587,"leftPattern":{"type":"not","id":4585,"cls":"Fibonacci83","alias":"f"},"rightPattern":{"type":"object","id":4586,"cls":"Fibonacci83","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci83 = defined.get('Fibonacci83');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci83(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse83"},{"type":"beta","out_nodes":[[10853,-1]],"__id":25004,"parentNodes":[10855,10856]},{"type":"rightadapter","out_nodes":[[10854,4167]],"__id":25008,"parentNodes":[37]},{"type":"not","out_nodes":[[10857,-1]],"__id":25009,"parentNodes":[10858,10859],"constraint":{"type":"join-reference","out_nodes":[],"__id":25010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10854,-1]],"__id":25011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10856,4168]],"__id":25015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10856,4169]],"__id":25019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25020,"parentNodes":[10861],"index":1251,"rule":{"name":"Calculate82","pattern":{"type":"composite","id":4594,"leftPattern":{"type":"composite","id":4593,"leftPattern":{"type":"composite","id":4592,"leftPattern":{"type":"object","id":4588,"cls":"Fibonacci82","alias":"f1"},"rightPattern":{"type":"object","id":4589,"cls":"Fibonacci82","alias":"f2"}},"rightPattern":{"type":"object","id":4590,"cls":"Fibonacci82","alias":"f3"}},"rightPattern":{"type":"object","id":4591,"cls":"Result82","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate82"},{"type":"beta","out_nodes":[[10860,-1]],"__id":25021,"parentNodes":[10863,10864]},{"type":"type","out_nodes":[[3,4170]],"__id":25022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result82"}},{"type":"rightadapter","out_nodes":[[10861,4170]],"__id":25025,"parentNodes":[4]},{"type":"join","out_nodes":[[10865,-1]],"__id":25026,"parentNodes":[10867,10868],"constraint":{"type":"join-reference","out_nodes":[],"__id":25027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10861,-1]],"__id":25028,"parentNodes":[]},{"type":"type","out_nodes":[[9,4171],[14,4172],[20,4173],[30,4175],[20,4177],[30,4178]],"__id":25029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci82"}},{"type":"rightadapter","out_nodes":[[10864,4171]],"__id":25032,"parentNodes":[10]},{"type":"join","out_nodes":[[10869,-1]],"__id":25033,"parentNodes":[10870,10871],"constraint":{"type":"join-reference","out_nodes":[],"__id":25034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10864,-1]],"__id":25035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10868,4172]],"__id":25040,"parentNodes":[16]},{"type":"beta","out_nodes":[[10872,-1]],"__id":25041,"parentNodes":[10873,10874]},{"type":"leftadapter","out_nodes":[[10868,-1]],"__id":25042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10871,4173]],"__id":25047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10871,4174]],"__id":25051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25052,"parentNodes":[10876],"index":1252,"rule":{"name":"Bootstrap82","pattern":{"type":"object","id":4595,"cls":"Fibonacci82","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap82"},{"type":"beta","out_nodes":[[10875,-1]],"__id":25053,"parentNodes":[10877,10878]},{"type":"rightadapter","out_nodes":[[10876,4175]],"__id":25058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10876,4176]],"__id":25062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25063,"parentNodes":[10880],"index":1253,"rule":{"name":"Recurse82","pattern":{"type":"composite","id":4598,"leftPattern":{"type":"not","id":4596,"cls":"Fibonacci82","alias":"f"},"rightPattern":{"type":"object","id":4597,"cls":"Fibonacci82","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci82 = defined.get('Fibonacci82');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci82(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse82"},{"type":"beta","out_nodes":[[10879,-1]],"__id":25064,"parentNodes":[10881,10882]},{"type":"rightadapter","out_nodes":[[10880,4177]],"__id":25068,"parentNodes":[37]},{"type":"not","out_nodes":[[10883,-1]],"__id":25069,"parentNodes":[10884,10885],"constraint":{"type":"join-reference","out_nodes":[],"__id":25070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10880,-1]],"__id":25071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10882,4178]],"__id":25075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10882,4179]],"__id":25079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25080,"parentNodes":[10887],"index":1254,"rule":{"name":"Calculate81","pattern":{"type":"composite","id":4605,"leftPattern":{"type":"composite","id":4604,"leftPattern":{"type":"composite","id":4603,"leftPattern":{"type":"object","id":4599,"cls":"Fibonacci81","alias":"f1"},"rightPattern":{"type":"object","id":4600,"cls":"Fibonacci81","alias":"f2"}},"rightPattern":{"type":"object","id":4601,"cls":"Fibonacci81","alias":"f3"}},"rightPattern":{"type":"object","id":4602,"cls":"Result81","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate81"},{"type":"beta","out_nodes":[[10886,-1]],"__id":25081,"parentNodes":[10889,10890]},{"type":"type","out_nodes":[[3,4180]],"__id":25082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result81"}},{"type":"rightadapter","out_nodes":[[10887,4180]],"__id":25085,"parentNodes":[4]},{"type":"join","out_nodes":[[10891,-1]],"__id":25086,"parentNodes":[10893,10894],"constraint":{"type":"join-reference","out_nodes":[],"__id":25087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10887,-1]],"__id":25088,"parentNodes":[]},{"type":"type","out_nodes":[[9,4181],[14,4182],[20,4183],[30,4185],[20,4187],[30,4188]],"__id":25089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci81"}},{"type":"rightadapter","out_nodes":[[10890,4181]],"__id":25092,"parentNodes":[10]},{"type":"join","out_nodes":[[10895,-1]],"__id":25093,"parentNodes":[10896,10897],"constraint":{"type":"join-reference","out_nodes":[],"__id":25094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10890,-1]],"__id":25095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10894,4182]],"__id":25100,"parentNodes":[16]},{"type":"beta","out_nodes":[[10898,-1]],"__id":25101,"parentNodes":[10899,10900]},{"type":"leftadapter","out_nodes":[[10894,-1]],"__id":25102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10897,4183]],"__id":25107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10897,4184]],"__id":25111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25112,"parentNodes":[10902],"index":1255,"rule":{"name":"Bootstrap81","pattern":{"type":"object","id":4606,"cls":"Fibonacci81","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap81"},{"type":"beta","out_nodes":[[10901,-1]],"__id":25113,"parentNodes":[10903,10904]},{"type":"rightadapter","out_nodes":[[10902,4185]],"__id":25118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10902,4186]],"__id":25122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25123,"parentNodes":[10906],"index":1256,"rule":{"name":"Recurse81","pattern":{"type":"composite","id":4609,"leftPattern":{"type":"not","id":4607,"cls":"Fibonacci81","alias":"f"},"rightPattern":{"type":"object","id":4608,"cls":"Fibonacci81","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci81 = defined.get('Fibonacci81');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci81(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse81"},{"type":"beta","out_nodes":[[10905,-1]],"__id":25124,"parentNodes":[10907,10908]},{"type":"rightadapter","out_nodes":[[10906,4187]],"__id":25128,"parentNodes":[37]},{"type":"not","out_nodes":[[10909,-1]],"__id":25129,"parentNodes":[10910,10911],"constraint":{"type":"join-reference","out_nodes":[],"__id":25130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10906,-1]],"__id":25131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10908,4188]],"__id":25135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10908,4189]],"__id":25139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25140,"parentNodes":[10913],"index":1257,"rule":{"name":"Calculate80","pattern":{"type":"composite","id":4616,"leftPattern":{"type":"composite","id":4615,"leftPattern":{"type":"composite","id":4614,"leftPattern":{"type":"object","id":4610,"cls":"Fibonacci80","alias":"f1"},"rightPattern":{"type":"object","id":4611,"cls":"Fibonacci80","alias":"f2"}},"rightPattern":{"type":"object","id":4612,"cls":"Fibonacci80","alias":"f3"}},"rightPattern":{"type":"object","id":4613,"cls":"Result80","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate80"},{"type":"beta","out_nodes":[[10912,-1]],"__id":25141,"parentNodes":[10915,10916]},{"type":"type","out_nodes":[[3,4190]],"__id":25142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result80"}},{"type":"rightadapter","out_nodes":[[10913,4190]],"__id":25145,"parentNodes":[4]},{"type":"join","out_nodes":[[10917,-1]],"__id":25146,"parentNodes":[10919,10920],"constraint":{"type":"join-reference","out_nodes":[],"__id":25147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10913,-1]],"__id":25148,"parentNodes":[]},{"type":"type","out_nodes":[[9,4191],[14,4192],[20,4193],[30,4195],[20,4197],[30,4198]],"__id":25149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci80"}},{"type":"rightadapter","out_nodes":[[10916,4191]],"__id":25152,"parentNodes":[10]},{"type":"join","out_nodes":[[10921,-1]],"__id":25153,"parentNodes":[10922,10923],"constraint":{"type":"join-reference","out_nodes":[],"__id":25154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10916,-1]],"__id":25155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10920,4192]],"__id":25160,"parentNodes":[16]},{"type":"beta","out_nodes":[[10924,-1]],"__id":25161,"parentNodes":[10925,10926]},{"type":"leftadapter","out_nodes":[[10920,-1]],"__id":25162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10923,4193]],"__id":25167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10923,4194]],"__id":25171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25172,"parentNodes":[10928],"index":1258,"rule":{"name":"Bootstrap80","pattern":{"type":"object","id":4617,"cls":"Fibonacci80","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap80"},{"type":"beta","out_nodes":[[10927,-1]],"__id":25173,"parentNodes":[10929,10930]},{"type":"rightadapter","out_nodes":[[10928,4195]],"__id":25178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10928,4196]],"__id":25182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25183,"parentNodes":[10932],"index":1259,"rule":{"name":"Recurse80","pattern":{"type":"composite","id":4620,"leftPattern":{"type":"not","id":4618,"cls":"Fibonacci80","alias":"f"},"rightPattern":{"type":"object","id":4619,"cls":"Fibonacci80","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');let Fibonacci80 = defined.get('Fibonacci80');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci80(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse80"},{"type":"beta","out_nodes":[[10931,-1]],"__id":25184,"parentNodes":[10933,10934]},{"type":"rightadapter","out_nodes":[[10932,4197]],"__id":25188,"parentNodes":[37]},{"type":"not","out_nodes":[[10935,-1]],"__id":25189,"parentNodes":[10936,10937],"constraint":{"type":"join-reference","out_nodes":[],"__id":25190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10932,-1]],"__id":25191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10934,4198]],"__id":25195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10934,4199]],"__id":25199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25200,"parentNodes":[10939],"index":1260,"rule":{"name":"Calculate79","pattern":{"type":"composite","id":4627,"leftPattern":{"type":"composite","id":4626,"leftPattern":{"type":"composite","id":4625,"leftPattern":{"type":"object","id":4621,"cls":"Fibonacci79","alias":"f1"},"rightPattern":{"type":"object","id":4622,"cls":"Fibonacci79","alias":"f2"}},"rightPattern":{"type":"object","id":4623,"cls":"Fibonacci79","alias":"f3"}},"rightPattern":{"type":"object","id":4624,"cls":"Result79","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate79"},{"type":"beta","out_nodes":[[10938,-1]],"__id":25201,"parentNodes":[10941,10942]},{"type":"type","out_nodes":[[3,4200]],"__id":25202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result79"}},{"type":"rightadapter","out_nodes":[[10939,4200]],"__id":25205,"parentNodes":[4]},{"type":"join","out_nodes":[[10943,-1]],"__id":25206,"parentNodes":[10945,10946],"constraint":{"type":"join-reference","out_nodes":[],"__id":25207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10939,-1]],"__id":25208,"parentNodes":[]},{"type":"type","out_nodes":[[9,4201],[14,4202],[20,4203],[30,4205],[20,4207],[30,4208]],"__id":25209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci79"}},{"type":"rightadapter","out_nodes":[[10942,4201]],"__id":25212,"parentNodes":[10]},{"type":"join","out_nodes":[[10947,-1]],"__id":25213,"parentNodes":[10948,10949],"constraint":{"type":"join-reference","out_nodes":[],"__id":25214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10942,-1]],"__id":25215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10946,4202]],"__id":25220,"parentNodes":[16]},{"type":"beta","out_nodes":[[10950,-1]],"__id":25221,"parentNodes":[10951,10952]},{"type":"leftadapter","out_nodes":[[10946,-1]],"__id":25222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10949,4203]],"__id":25227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10949,4204]],"__id":25231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25232,"parentNodes":[10954],"index":1261,"rule":{"name":"Bootstrap79","pattern":{"type":"object","id":4628,"cls":"Fibonacci79","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap79"},{"type":"beta","out_nodes":[[10953,-1]],"__id":25233,"parentNodes":[10955,10956]},{"type":"rightadapter","out_nodes":[[10954,4205]],"__id":25238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10954,4206]],"__id":25242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25243,"parentNodes":[10958],"index":1262,"rule":{"name":"Recurse79","pattern":{"type":"composite","id":4631,"leftPattern":{"type":"not","id":4629,"cls":"Fibonacci79","alias":"f"},"rightPattern":{"type":"object","id":4630,"cls":"Fibonacci79","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci79 = defined.get('Fibonacci79');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci79(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse79"},{"type":"beta","out_nodes":[[10957,-1]],"__id":25244,"parentNodes":[10959,10960]},{"type":"rightadapter","out_nodes":[[10958,4207]],"__id":25248,"parentNodes":[37]},{"type":"not","out_nodes":[[10961,-1]],"__id":25249,"parentNodes":[10962,10963],"constraint":{"type":"join-reference","out_nodes":[],"__id":25250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10958,-1]],"__id":25251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10960,4208]],"__id":25255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10960,4209]],"__id":25259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25260,"parentNodes":[10965],"index":1263,"rule":{"name":"Calculate78","pattern":{"type":"composite","id":4638,"leftPattern":{"type":"composite","id":4637,"leftPattern":{"type":"composite","id":4636,"leftPattern":{"type":"object","id":4632,"cls":"Fibonacci78","alias":"f1"},"rightPattern":{"type":"object","id":4633,"cls":"Fibonacci78","alias":"f2"}},"rightPattern":{"type":"object","id":4634,"cls":"Fibonacci78","alias":"f3"}},"rightPattern":{"type":"object","id":4635,"cls":"Result78","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate78"},{"type":"beta","out_nodes":[[10964,-1]],"__id":25261,"parentNodes":[10967,10968]},{"type":"type","out_nodes":[[3,4210]],"__id":25262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result78"}},{"type":"rightadapter","out_nodes":[[10965,4210]],"__id":25265,"parentNodes":[4]},{"type":"join","out_nodes":[[10969,-1]],"__id":25266,"parentNodes":[10971,10972],"constraint":{"type":"join-reference","out_nodes":[],"__id":25267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10965,-1]],"__id":25268,"parentNodes":[]},{"type":"type","out_nodes":[[9,4211],[14,4212],[20,4213],[30,4215],[20,4217],[30,4218]],"__id":25269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci78"}},{"type":"rightadapter","out_nodes":[[10968,4211]],"__id":25272,"parentNodes":[10]},{"type":"join","out_nodes":[[10973,-1]],"__id":25273,"parentNodes":[10974,10975],"constraint":{"type":"join-reference","out_nodes":[],"__id":25274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10968,-1]],"__id":25275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10972,4212]],"__id":25280,"parentNodes":[16]},{"type":"beta","out_nodes":[[10976,-1]],"__id":25281,"parentNodes":[10977,10978]},{"type":"leftadapter","out_nodes":[[10972,-1]],"__id":25282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10975,4213]],"__id":25287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[10975,4214]],"__id":25291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25292,"parentNodes":[10980],"index":1264,"rule":{"name":"Bootstrap78","pattern":{"type":"object","id":4639,"cls":"Fibonacci78","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap78"},{"type":"beta","out_nodes":[[10979,-1]],"__id":25293,"parentNodes":[10981,10982]},{"type":"rightadapter","out_nodes":[[10980,4215]],"__id":25298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[10980,4216]],"__id":25302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25303,"parentNodes":[10984],"index":1265,"rule":{"name":"Recurse78","pattern":{"type":"composite","id":4642,"leftPattern":{"type":"not","id":4640,"cls":"Fibonacci78","alias":"f"},"rightPattern":{"type":"object","id":4641,"cls":"Fibonacci78","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci78 = defined.get('Fibonacci78');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci78(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse78"},{"type":"beta","out_nodes":[[10983,-1]],"__id":25304,"parentNodes":[10985,10986]},{"type":"rightadapter","out_nodes":[[10984,4217]],"__id":25308,"parentNodes":[37]},{"type":"not","out_nodes":[[10987,-1]],"__id":25309,"parentNodes":[10988,10989],"constraint":{"type":"join-reference","out_nodes":[],"__id":25310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[10984,-1]],"__id":25311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10986,4218]],"__id":25315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[10986,4219]],"__id":25319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25320,"parentNodes":[10991],"index":1266,"rule":{"name":"Calculate77","pattern":{"type":"composite","id":4649,"leftPattern":{"type":"composite","id":4648,"leftPattern":{"type":"composite","id":4647,"leftPattern":{"type":"object","id":4643,"cls":"Fibonacci77","alias":"f1"},"rightPattern":{"type":"object","id":4644,"cls":"Fibonacci77","alias":"f2"}},"rightPattern":{"type":"object","id":4645,"cls":"Fibonacci77","alias":"f3"}},"rightPattern":{"type":"object","id":4646,"cls":"Result77","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate77"},{"type":"beta","out_nodes":[[10990,-1]],"__id":25321,"parentNodes":[10993,10994]},{"type":"type","out_nodes":[[3,4220]],"__id":25322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result77"}},{"type":"rightadapter","out_nodes":[[10991,4220]],"__id":25325,"parentNodes":[4]},{"type":"join","out_nodes":[[10995,-1]],"__id":25326,"parentNodes":[10997,10998],"constraint":{"type":"join-reference","out_nodes":[],"__id":25327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10991,-1]],"__id":25328,"parentNodes":[]},{"type":"type","out_nodes":[[9,4221],[14,4222],[20,4223],[30,4225],[20,4227],[30,4228]],"__id":25329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci77"}},{"type":"rightadapter","out_nodes":[[10994,4221]],"__id":25332,"parentNodes":[10]},{"type":"join","out_nodes":[[10999,-1]],"__id":25333,"parentNodes":[11000,11001],"constraint":{"type":"join-reference","out_nodes":[],"__id":25334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[10994,-1]],"__id":25335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[10998,4222]],"__id":25340,"parentNodes":[16]},{"type":"beta","out_nodes":[[11002,-1]],"__id":25341,"parentNodes":[11003,11004]},{"type":"leftadapter","out_nodes":[[10998,-1]],"__id":25342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11001,4223]],"__id":25347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11001,4224]],"__id":25351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25352,"parentNodes":[11006],"index":1267,"rule":{"name":"Bootstrap77","pattern":{"type":"object","id":4650,"cls":"Fibonacci77","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap77"},{"type":"beta","out_nodes":[[11005,-1]],"__id":25353,"parentNodes":[11007,11008]},{"type":"rightadapter","out_nodes":[[11006,4225]],"__id":25358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11006,4226]],"__id":25362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25363,"parentNodes":[11010],"index":1268,"rule":{"name":"Recurse77","pattern":{"type":"composite","id":4653,"leftPattern":{"type":"not","id":4651,"cls":"Fibonacci77","alias":"f"},"rightPattern":{"type":"object","id":4652,"cls":"Fibonacci77","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci77 = defined.get('Fibonacci77');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci77(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse77"},{"type":"beta","out_nodes":[[11009,-1]],"__id":25364,"parentNodes":[11011,11012]},{"type":"rightadapter","out_nodes":[[11010,4227]],"__id":25368,"parentNodes":[37]},{"type":"not","out_nodes":[[11013,-1]],"__id":25369,"parentNodes":[11014,11015],"constraint":{"type":"join-reference","out_nodes":[],"__id":25370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11010,-1]],"__id":25371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11012,4228]],"__id":25375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11012,4229]],"__id":25379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25380,"parentNodes":[11017],"index":1269,"rule":{"name":"Calculate76","pattern":{"type":"composite","id":4660,"leftPattern":{"type":"composite","id":4659,"leftPattern":{"type":"composite","id":4658,"leftPattern":{"type":"object","id":4654,"cls":"Fibonacci76","alias":"f1"},"rightPattern":{"type":"object","id":4655,"cls":"Fibonacci76","alias":"f2"}},"rightPattern":{"type":"object","id":4656,"cls":"Fibonacci76","alias":"f3"}},"rightPattern":{"type":"object","id":4657,"cls":"Result76","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate76"},{"type":"beta","out_nodes":[[11016,-1]],"__id":25381,"parentNodes":[11019,11020]},{"type":"type","out_nodes":[[3,4230]],"__id":25382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result76"}},{"type":"rightadapter","out_nodes":[[11017,4230]],"__id":25385,"parentNodes":[4]},{"type":"join","out_nodes":[[11021,-1]],"__id":25386,"parentNodes":[11023,11024],"constraint":{"type":"join-reference","out_nodes":[],"__id":25387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11017,-1]],"__id":25388,"parentNodes":[]},{"type":"type","out_nodes":[[9,4231],[14,4232],[20,4233],[30,4235],[20,4237],[30,4238]],"__id":25389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci76"}},{"type":"rightadapter","out_nodes":[[11020,4231]],"__id":25392,"parentNodes":[10]},{"type":"join","out_nodes":[[11025,-1]],"__id":25393,"parentNodes":[11026,11027],"constraint":{"type":"join-reference","out_nodes":[],"__id":25394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11020,-1]],"__id":25395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11024,4232]],"__id":25400,"parentNodes":[16]},{"type":"beta","out_nodes":[[11028,-1]],"__id":25401,"parentNodes":[11029,11030]},{"type":"leftadapter","out_nodes":[[11024,-1]],"__id":25402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11027,4233]],"__id":25407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11027,4234]],"__id":25411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25412,"parentNodes":[11032],"index":1270,"rule":{"name":"Bootstrap76","pattern":{"type":"object","id":4661,"cls":"Fibonacci76","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap76"},{"type":"beta","out_nodes":[[11031,-1]],"__id":25413,"parentNodes":[11033,11034]},{"type":"rightadapter","out_nodes":[[11032,4235]],"__id":25418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11032,4236]],"__id":25422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25423,"parentNodes":[11036],"index":1271,"rule":{"name":"Recurse76","pattern":{"type":"composite","id":4664,"leftPattern":{"type":"not","id":4662,"cls":"Fibonacci76","alias":"f"},"rightPattern":{"type":"object","id":4663,"cls":"Fibonacci76","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci76 = defined.get('Fibonacci76');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci76(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse76"},{"type":"beta","out_nodes":[[11035,-1]],"__id":25424,"parentNodes":[11037,11038]},{"type":"rightadapter","out_nodes":[[11036,4237]],"__id":25428,"parentNodes":[37]},{"type":"not","out_nodes":[[11039,-1]],"__id":25429,"parentNodes":[11040,11041],"constraint":{"type":"join-reference","out_nodes":[],"__id":25430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11036,-1]],"__id":25431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11038,4238]],"__id":25435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11038,4239]],"__id":25439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25440,"parentNodes":[11043],"index":1272,"rule":{"name":"Calculate75","pattern":{"type":"composite","id":4671,"leftPattern":{"type":"composite","id":4670,"leftPattern":{"type":"composite","id":4669,"leftPattern":{"type":"object","id":4665,"cls":"Fibonacci75","alias":"f1"},"rightPattern":{"type":"object","id":4666,"cls":"Fibonacci75","alias":"f2"}},"rightPattern":{"type":"object","id":4667,"cls":"Fibonacci75","alias":"f3"}},"rightPattern":{"type":"object","id":4668,"cls":"Result75","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate75"},{"type":"beta","out_nodes":[[11042,-1]],"__id":25441,"parentNodes":[11045,11046]},{"type":"type","out_nodes":[[3,4240]],"__id":25442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result75"}},{"type":"rightadapter","out_nodes":[[11043,4240]],"__id":25445,"parentNodes":[4]},{"type":"join","out_nodes":[[11047,-1]],"__id":25446,"parentNodes":[11049,11050],"constraint":{"type":"join-reference","out_nodes":[],"__id":25447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11043,-1]],"__id":25448,"parentNodes":[]},{"type":"type","out_nodes":[[9,4241],[14,4242],[20,4243],[30,4245],[20,4247],[30,4248]],"__id":25449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci75"}},{"type":"rightadapter","out_nodes":[[11046,4241]],"__id":25452,"parentNodes":[10]},{"type":"join","out_nodes":[[11051,-1]],"__id":25453,"parentNodes":[11052,11053],"constraint":{"type":"join-reference","out_nodes":[],"__id":25454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11046,-1]],"__id":25455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11050,4242]],"__id":25460,"parentNodes":[16]},{"type":"beta","out_nodes":[[11054,-1]],"__id":25461,"parentNodes":[11055,11056]},{"type":"leftadapter","out_nodes":[[11050,-1]],"__id":25462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11053,4243]],"__id":25467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11053,4244]],"__id":25471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25472,"parentNodes":[11058],"index":1273,"rule":{"name":"Bootstrap75","pattern":{"type":"object","id":4672,"cls":"Fibonacci75","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap75"},{"type":"beta","out_nodes":[[11057,-1]],"__id":25473,"parentNodes":[11059,11060]},{"type":"rightadapter","out_nodes":[[11058,4245]],"__id":25478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11058,4246]],"__id":25482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25483,"parentNodes":[11062],"index":1274,"rule":{"name":"Recurse75","pattern":{"type":"composite","id":4675,"leftPattern":{"type":"not","id":4673,"cls":"Fibonacci75","alias":"f"},"rightPattern":{"type":"object","id":4674,"cls":"Fibonacci75","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci75 = defined.get('Fibonacci75');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci75(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse75"},{"type":"beta","out_nodes":[[11061,-1]],"__id":25484,"parentNodes":[11063,11064]},{"type":"rightadapter","out_nodes":[[11062,4247]],"__id":25488,"parentNodes":[37]},{"type":"not","out_nodes":[[11065,-1]],"__id":25489,"parentNodes":[11066,11067],"constraint":{"type":"join-reference","out_nodes":[],"__id":25490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11062,-1]],"__id":25491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11064,4248]],"__id":25495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11064,4249]],"__id":25499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25500,"parentNodes":[11069],"index":1275,"rule":{"name":"Calculate74","pattern":{"type":"composite","id":4682,"leftPattern":{"type":"composite","id":4681,"leftPattern":{"type":"composite","id":4680,"leftPattern":{"type":"object","id":4676,"cls":"Fibonacci74","alias":"f1"},"rightPattern":{"type":"object","id":4677,"cls":"Fibonacci74","alias":"f2"}},"rightPattern":{"type":"object","id":4678,"cls":"Fibonacci74","alias":"f3"}},"rightPattern":{"type":"object","id":4679,"cls":"Result74","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate74"},{"type":"beta","out_nodes":[[11068,-1]],"__id":25501,"parentNodes":[11071,11072]},{"type":"type","out_nodes":[[3,4250]],"__id":25502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result74"}},{"type":"rightadapter","out_nodes":[[11069,4250]],"__id":25505,"parentNodes":[4]},{"type":"join","out_nodes":[[11073,-1]],"__id":25506,"parentNodes":[11075,11076],"constraint":{"type":"join-reference","out_nodes":[],"__id":25507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11069,-1]],"__id":25508,"parentNodes":[]},{"type":"type","out_nodes":[[9,4251],[14,4252],[20,4253],[30,4255],[20,4257],[30,4258]],"__id":25509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci74"}},{"type":"rightadapter","out_nodes":[[11072,4251]],"__id":25512,"parentNodes":[10]},{"type":"join","out_nodes":[[11077,-1]],"__id":25513,"parentNodes":[11078,11079],"constraint":{"type":"join-reference","out_nodes":[],"__id":25514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11072,-1]],"__id":25515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11076,4252]],"__id":25520,"parentNodes":[16]},{"type":"beta","out_nodes":[[11080,-1]],"__id":25521,"parentNodes":[11081,11082]},{"type":"leftadapter","out_nodes":[[11076,-1]],"__id":25522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11079,4253]],"__id":25527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11079,4254]],"__id":25531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25532,"parentNodes":[11084],"index":1276,"rule":{"name":"Bootstrap74","pattern":{"type":"object","id":4683,"cls":"Fibonacci74","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap74"},{"type":"beta","out_nodes":[[11083,-1]],"__id":25533,"parentNodes":[11085,11086]},{"type":"rightadapter","out_nodes":[[11084,4255]],"__id":25538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11084,4256]],"__id":25542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25543,"parentNodes":[11088],"index":1277,"rule":{"name":"Recurse74","pattern":{"type":"composite","id":4686,"leftPattern":{"type":"not","id":4684,"cls":"Fibonacci74","alias":"f"},"rightPattern":{"type":"object","id":4685,"cls":"Fibonacci74","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci74 = defined.get('Fibonacci74');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci74(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse74"},{"type":"beta","out_nodes":[[11087,-1]],"__id":25544,"parentNodes":[11089,11090]},{"type":"rightadapter","out_nodes":[[11088,4257]],"__id":25548,"parentNodes":[37]},{"type":"not","out_nodes":[[11091,-1]],"__id":25549,"parentNodes":[11092,11093],"constraint":{"type":"join-reference","out_nodes":[],"__id":25550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11088,-1]],"__id":25551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11090,4258]],"__id":25555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11090,4259]],"__id":25559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25560,"parentNodes":[11095],"index":1278,"rule":{"name":"Calculate73","pattern":{"type":"composite","id":4693,"leftPattern":{"type":"composite","id":4692,"leftPattern":{"type":"composite","id":4691,"leftPattern":{"type":"object","id":4687,"cls":"Fibonacci73","alias":"f1"},"rightPattern":{"type":"object","id":4688,"cls":"Fibonacci73","alias":"f2"}},"rightPattern":{"type":"object","id":4689,"cls":"Fibonacci73","alias":"f3"}},"rightPattern":{"type":"object","id":4690,"cls":"Result73","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate73"},{"type":"beta","out_nodes":[[11094,-1]],"__id":25561,"parentNodes":[11097,11098]},{"type":"type","out_nodes":[[3,4260]],"__id":25562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result73"}},{"type":"rightadapter","out_nodes":[[11095,4260]],"__id":25565,"parentNodes":[4]},{"type":"join","out_nodes":[[11099,-1]],"__id":25566,"parentNodes":[11101,11102],"constraint":{"type":"join-reference","out_nodes":[],"__id":25567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11095,-1]],"__id":25568,"parentNodes":[]},{"type":"type","out_nodes":[[9,4261],[14,4262],[20,4263],[30,4265],[20,4267],[30,4268]],"__id":25569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci73"}},{"type":"rightadapter","out_nodes":[[11098,4261]],"__id":25572,"parentNodes":[10]},{"type":"join","out_nodes":[[11103,-1]],"__id":25573,"parentNodes":[11104,11105],"constraint":{"type":"join-reference","out_nodes":[],"__id":25574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11098,-1]],"__id":25575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11102,4262]],"__id":25580,"parentNodes":[16]},{"type":"beta","out_nodes":[[11106,-1]],"__id":25581,"parentNodes":[11107,11108]},{"type":"leftadapter","out_nodes":[[11102,-1]],"__id":25582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11105,4263]],"__id":25587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11105,4264]],"__id":25591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25592,"parentNodes":[11110],"index":1279,"rule":{"name":"Bootstrap73","pattern":{"type":"object","id":4694,"cls":"Fibonacci73","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap73"},{"type":"beta","out_nodes":[[11109,-1]],"__id":25593,"parentNodes":[11111,11112]},{"type":"rightadapter","out_nodes":[[11110,4265]],"__id":25598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11110,4266]],"__id":25602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25603,"parentNodes":[11114],"index":1280,"rule":{"name":"Recurse73","pattern":{"type":"composite","id":4697,"leftPattern":{"type":"not","id":4695,"cls":"Fibonacci73","alias":"f"},"rightPattern":{"type":"object","id":4696,"cls":"Fibonacci73","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci73 = defined.get('Fibonacci73');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci73(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse73"},{"type":"beta","out_nodes":[[11113,-1]],"__id":25604,"parentNodes":[11115,11116]},{"type":"rightadapter","out_nodes":[[11114,4267]],"__id":25608,"parentNodes":[37]},{"type":"not","out_nodes":[[11117,-1]],"__id":25609,"parentNodes":[11118,11119],"constraint":{"type":"join-reference","out_nodes":[],"__id":25610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11114,-1]],"__id":25611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11116,4268]],"__id":25615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11116,4269]],"__id":25619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25620,"parentNodes":[11121],"index":1281,"rule":{"name":"Calculate72","pattern":{"type":"composite","id":4704,"leftPattern":{"type":"composite","id":4703,"leftPattern":{"type":"composite","id":4702,"leftPattern":{"type":"object","id":4698,"cls":"Fibonacci72","alias":"f1"},"rightPattern":{"type":"object","id":4699,"cls":"Fibonacci72","alias":"f2"}},"rightPattern":{"type":"object","id":4700,"cls":"Fibonacci72","alias":"f3"}},"rightPattern":{"type":"object","id":4701,"cls":"Result72","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate72"},{"type":"beta","out_nodes":[[11120,-1]],"__id":25621,"parentNodes":[11123,11124]},{"type":"type","out_nodes":[[3,4270]],"__id":25622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result72"}},{"type":"rightadapter","out_nodes":[[11121,4270]],"__id":25625,"parentNodes":[4]},{"type":"join","out_nodes":[[11125,-1]],"__id":25626,"parentNodes":[11127,11128],"constraint":{"type":"join-reference","out_nodes":[],"__id":25627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11121,-1]],"__id":25628,"parentNodes":[]},{"type":"type","out_nodes":[[9,4271],[14,4272],[20,4273],[30,4275],[20,4277],[30,4278]],"__id":25629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci72"}},{"type":"rightadapter","out_nodes":[[11124,4271]],"__id":25632,"parentNodes":[10]},{"type":"join","out_nodes":[[11129,-1]],"__id":25633,"parentNodes":[11130,11131],"constraint":{"type":"join-reference","out_nodes":[],"__id":25634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11124,-1]],"__id":25635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11128,4272]],"__id":25640,"parentNodes":[16]},{"type":"beta","out_nodes":[[11132,-1]],"__id":25641,"parentNodes":[11133,11134]},{"type":"leftadapter","out_nodes":[[11128,-1]],"__id":25642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11131,4273]],"__id":25647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11131,4274]],"__id":25651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25652,"parentNodes":[11136],"index":1282,"rule":{"name":"Bootstrap72","pattern":{"type":"object","id":4705,"cls":"Fibonacci72","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap72"},{"type":"beta","out_nodes":[[11135,-1]],"__id":25653,"parentNodes":[11137,11138]},{"type":"rightadapter","out_nodes":[[11136,4275]],"__id":25658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11136,4276]],"__id":25662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25663,"parentNodes":[11140],"index":1283,"rule":{"name":"Recurse72","pattern":{"type":"composite","id":4708,"leftPattern":{"type":"not","id":4706,"cls":"Fibonacci72","alias":"f"},"rightPattern":{"type":"object","id":4707,"cls":"Fibonacci72","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci72 = defined.get('Fibonacci72');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci72(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse72"},{"type":"beta","out_nodes":[[11139,-1]],"__id":25664,"parentNodes":[11141,11142]},{"type":"rightadapter","out_nodes":[[11140,4277]],"__id":25668,"parentNodes":[37]},{"type":"not","out_nodes":[[11143,-1]],"__id":25669,"parentNodes":[11144,11145],"constraint":{"type":"join-reference","out_nodes":[],"__id":25670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11140,-1]],"__id":25671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11142,4278]],"__id":25675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11142,4279]],"__id":25679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25680,"parentNodes":[11147],"index":1284,"rule":{"name":"Calculate71","pattern":{"type":"composite","id":4715,"leftPattern":{"type":"composite","id":4714,"leftPattern":{"type":"composite","id":4713,"leftPattern":{"type":"object","id":4709,"cls":"Fibonacci71","alias":"f1"},"rightPattern":{"type":"object","id":4710,"cls":"Fibonacci71","alias":"f2"}},"rightPattern":{"type":"object","id":4711,"cls":"Fibonacci71","alias":"f3"}},"rightPattern":{"type":"object","id":4712,"cls":"Result71","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate71"},{"type":"beta","out_nodes":[[11146,-1]],"__id":25681,"parentNodes":[11149,11150]},{"type":"type","out_nodes":[[3,4280]],"__id":25682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result71"}},{"type":"rightadapter","out_nodes":[[11147,4280]],"__id":25685,"parentNodes":[4]},{"type":"join","out_nodes":[[11151,-1]],"__id":25686,"parentNodes":[11153,11154],"constraint":{"type":"join-reference","out_nodes":[],"__id":25687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11147,-1]],"__id":25688,"parentNodes":[]},{"type":"type","out_nodes":[[9,4281],[14,4282],[20,4283],[30,4285],[20,4287],[30,4288]],"__id":25689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci71"}},{"type":"rightadapter","out_nodes":[[11150,4281]],"__id":25692,"parentNodes":[10]},{"type":"join","out_nodes":[[11155,-1]],"__id":25693,"parentNodes":[11156,11157],"constraint":{"type":"join-reference","out_nodes":[],"__id":25694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11150,-1]],"__id":25695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11154,4282]],"__id":25700,"parentNodes":[16]},{"type":"beta","out_nodes":[[11158,-1]],"__id":25701,"parentNodes":[11159,11160]},{"type":"leftadapter","out_nodes":[[11154,-1]],"__id":25702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11157,4283]],"__id":25707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11157,4284]],"__id":25711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25712,"parentNodes":[11162],"index":1285,"rule":{"name":"Bootstrap71","pattern":{"type":"object","id":4716,"cls":"Fibonacci71","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap71"},{"type":"beta","out_nodes":[[11161,-1]],"__id":25713,"parentNodes":[11163,11164]},{"type":"rightadapter","out_nodes":[[11162,4285]],"__id":25718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11162,4286]],"__id":25722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25723,"parentNodes":[11166],"index":1286,"rule":{"name":"Recurse71","pattern":{"type":"composite","id":4719,"leftPattern":{"type":"not","id":4717,"cls":"Fibonacci71","alias":"f"},"rightPattern":{"type":"object","id":4718,"cls":"Fibonacci71","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci71 = defined.get('Fibonacci71');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci71(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse71"},{"type":"beta","out_nodes":[[11165,-1]],"__id":25724,"parentNodes":[11167,11168]},{"type":"rightadapter","out_nodes":[[11166,4287]],"__id":25728,"parentNodes":[37]},{"type":"not","out_nodes":[[11169,-1]],"__id":25729,"parentNodes":[11170,11171],"constraint":{"type":"join-reference","out_nodes":[],"__id":25730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11166,-1]],"__id":25731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11168,4288]],"__id":25735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11168,4289]],"__id":25739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25740,"parentNodes":[11173],"index":1287,"rule":{"name":"Calculate70","pattern":{"type":"composite","id":4726,"leftPattern":{"type":"composite","id":4725,"leftPattern":{"type":"composite","id":4724,"leftPattern":{"type":"object","id":4720,"cls":"Fibonacci70","alias":"f1"},"rightPattern":{"type":"object","id":4721,"cls":"Fibonacci70","alias":"f2"}},"rightPattern":{"type":"object","id":4722,"cls":"Fibonacci70","alias":"f3"}},"rightPattern":{"type":"object","id":4723,"cls":"Result70","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate70"},{"type":"beta","out_nodes":[[11172,-1]],"__id":25741,"parentNodes":[11175,11176]},{"type":"type","out_nodes":[[3,4290]],"__id":25742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result70"}},{"type":"rightadapter","out_nodes":[[11173,4290]],"__id":25745,"parentNodes":[4]},{"type":"join","out_nodes":[[11177,-1]],"__id":25746,"parentNodes":[11179,11180],"constraint":{"type":"join-reference","out_nodes":[],"__id":25747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11173,-1]],"__id":25748,"parentNodes":[]},{"type":"type","out_nodes":[[9,4291],[14,4292],[20,4293],[30,4295],[20,4297],[30,4298]],"__id":25749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci70"}},{"type":"rightadapter","out_nodes":[[11176,4291]],"__id":25752,"parentNodes":[10]},{"type":"join","out_nodes":[[11181,-1]],"__id":25753,"parentNodes":[11182,11183],"constraint":{"type":"join-reference","out_nodes":[],"__id":25754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11176,-1]],"__id":25755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11180,4292]],"__id":25760,"parentNodes":[16]},{"type":"beta","out_nodes":[[11184,-1]],"__id":25761,"parentNodes":[11185,11186]},{"type":"leftadapter","out_nodes":[[11180,-1]],"__id":25762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11183,4293]],"__id":25767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11183,4294]],"__id":25771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25772,"parentNodes":[11188],"index":1288,"rule":{"name":"Bootstrap70","pattern":{"type":"object","id":4727,"cls":"Fibonacci70","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap70"},{"type":"beta","out_nodes":[[11187,-1]],"__id":25773,"parentNodes":[11189,11190]},{"type":"rightadapter","out_nodes":[[11188,4295]],"__id":25778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11188,4296]],"__id":25782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25783,"parentNodes":[11192],"index":1289,"rule":{"name":"Recurse70","pattern":{"type":"composite","id":4730,"leftPattern":{"type":"not","id":4728,"cls":"Fibonacci70","alias":"f"},"rightPattern":{"type":"object","id":4729,"cls":"Fibonacci70","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');let Fibonacci70 = defined.get('Fibonacci70');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci70(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse70"},{"type":"beta","out_nodes":[[11191,-1]],"__id":25784,"parentNodes":[11193,11194]},{"type":"rightadapter","out_nodes":[[11192,4297]],"__id":25788,"parentNodes":[37]},{"type":"not","out_nodes":[[11195,-1]],"__id":25789,"parentNodes":[11196,11197],"constraint":{"type":"join-reference","out_nodes":[],"__id":25790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11192,-1]],"__id":25791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11194,4298]],"__id":25795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11194,4299]],"__id":25799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25800,"parentNodes":[11199],"index":1290,"rule":{"name":"Calculate69","pattern":{"type":"composite","id":4737,"leftPattern":{"type":"composite","id":4736,"leftPattern":{"type":"composite","id":4735,"leftPattern":{"type":"object","id":4731,"cls":"Fibonacci69","alias":"f1"},"rightPattern":{"type":"object","id":4732,"cls":"Fibonacci69","alias":"f2"}},"rightPattern":{"type":"object","id":4733,"cls":"Fibonacci69","alias":"f3"}},"rightPattern":{"type":"object","id":4734,"cls":"Result69","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate69"},{"type":"beta","out_nodes":[[11198,-1]],"__id":25801,"parentNodes":[11201,11202]},{"type":"type","out_nodes":[[3,4300]],"__id":25802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result69"}},{"type":"rightadapter","out_nodes":[[11199,4300]],"__id":25805,"parentNodes":[4]},{"type":"join","out_nodes":[[11203,-1]],"__id":25806,"parentNodes":[11205,11206],"constraint":{"type":"join-reference","out_nodes":[],"__id":25807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11199,-1]],"__id":25808,"parentNodes":[]},{"type":"type","out_nodes":[[9,4301],[14,4302],[20,4303],[30,4305],[20,4307],[30,4308]],"__id":25809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci69"}},{"type":"rightadapter","out_nodes":[[11202,4301]],"__id":25812,"parentNodes":[10]},{"type":"join","out_nodes":[[11207,-1]],"__id":25813,"parentNodes":[11208,11209],"constraint":{"type":"join-reference","out_nodes":[],"__id":25814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11202,-1]],"__id":25815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11206,4302]],"__id":25820,"parentNodes":[16]},{"type":"beta","out_nodes":[[11210,-1]],"__id":25821,"parentNodes":[11211,11212]},{"type":"leftadapter","out_nodes":[[11206,-1]],"__id":25822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11209,4303]],"__id":25827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11209,4304]],"__id":25831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25832,"parentNodes":[11214],"index":1291,"rule":{"name":"Bootstrap69","pattern":{"type":"object","id":4738,"cls":"Fibonacci69","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap69"},{"type":"beta","out_nodes":[[11213,-1]],"__id":25833,"parentNodes":[11215,11216]},{"type":"rightadapter","out_nodes":[[11214,4305]],"__id":25838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11214,4306]],"__id":25842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25843,"parentNodes":[11218],"index":1292,"rule":{"name":"Recurse69","pattern":{"type":"composite","id":4741,"leftPattern":{"type":"not","id":4739,"cls":"Fibonacci69","alias":"f"},"rightPattern":{"type":"object","id":4740,"cls":"Fibonacci69","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci69 = defined.get('Fibonacci69');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci69(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse69"},{"type":"beta","out_nodes":[[11217,-1]],"__id":25844,"parentNodes":[11219,11220]},{"type":"rightadapter","out_nodes":[[11218,4307]],"__id":25848,"parentNodes":[37]},{"type":"not","out_nodes":[[11221,-1]],"__id":25849,"parentNodes":[11222,11223],"constraint":{"type":"join-reference","out_nodes":[],"__id":25850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11218,-1]],"__id":25851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11220,4308]],"__id":25855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11220,4309]],"__id":25859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25860,"parentNodes":[11225],"index":1293,"rule":{"name":"Calculate68","pattern":{"type":"composite","id":4748,"leftPattern":{"type":"composite","id":4747,"leftPattern":{"type":"composite","id":4746,"leftPattern":{"type":"object","id":4742,"cls":"Fibonacci68","alias":"f1"},"rightPattern":{"type":"object","id":4743,"cls":"Fibonacci68","alias":"f2"}},"rightPattern":{"type":"object","id":4744,"cls":"Fibonacci68","alias":"f3"}},"rightPattern":{"type":"object","id":4745,"cls":"Result68","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate68"},{"type":"beta","out_nodes":[[11224,-1]],"__id":25861,"parentNodes":[11227,11228]},{"type":"type","out_nodes":[[3,4310]],"__id":25862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result68"}},{"type":"rightadapter","out_nodes":[[11225,4310]],"__id":25865,"parentNodes":[4]},{"type":"join","out_nodes":[[11229,-1]],"__id":25866,"parentNodes":[11231,11232],"constraint":{"type":"join-reference","out_nodes":[],"__id":25867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11225,-1]],"__id":25868,"parentNodes":[]},{"type":"type","out_nodes":[[9,4311],[14,4312],[20,4313],[30,4315],[20,4317],[30,4318]],"__id":25869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci68"}},{"type":"rightadapter","out_nodes":[[11228,4311]],"__id":25872,"parentNodes":[10]},{"type":"join","out_nodes":[[11233,-1]],"__id":25873,"parentNodes":[11234,11235],"constraint":{"type":"join-reference","out_nodes":[],"__id":25874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11228,-1]],"__id":25875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11232,4312]],"__id":25880,"parentNodes":[16]},{"type":"beta","out_nodes":[[11236,-1]],"__id":25881,"parentNodes":[11237,11238]},{"type":"leftadapter","out_nodes":[[11232,-1]],"__id":25882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11235,4313]],"__id":25887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11235,4314]],"__id":25891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25892,"parentNodes":[11240],"index":1294,"rule":{"name":"Bootstrap68","pattern":{"type":"object","id":4749,"cls":"Fibonacci68","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap68"},{"type":"beta","out_nodes":[[11239,-1]],"__id":25893,"parentNodes":[11241,11242]},{"type":"rightadapter","out_nodes":[[11240,4315]],"__id":25898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11240,4316]],"__id":25902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25903,"parentNodes":[11244],"index":1295,"rule":{"name":"Recurse68","pattern":{"type":"composite","id":4752,"leftPattern":{"type":"not","id":4750,"cls":"Fibonacci68","alias":"f"},"rightPattern":{"type":"object","id":4751,"cls":"Fibonacci68","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci68 = defined.get('Fibonacci68');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci68(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse68"},{"type":"beta","out_nodes":[[11243,-1]],"__id":25904,"parentNodes":[11245,11246]},{"type":"rightadapter","out_nodes":[[11244,4317]],"__id":25908,"parentNodes":[37]},{"type":"not","out_nodes":[[11247,-1]],"__id":25909,"parentNodes":[11248,11249],"constraint":{"type":"join-reference","out_nodes":[],"__id":25910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11244,-1]],"__id":25911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11246,4318]],"__id":25915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11246,4319]],"__id":25919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25920,"parentNodes":[11251],"index":1296,"rule":{"name":"Calculate67","pattern":{"type":"composite","id":4759,"leftPattern":{"type":"composite","id":4758,"leftPattern":{"type":"composite","id":4757,"leftPattern":{"type":"object","id":4753,"cls":"Fibonacci67","alias":"f1"},"rightPattern":{"type":"object","id":4754,"cls":"Fibonacci67","alias":"f2"}},"rightPattern":{"type":"object","id":4755,"cls":"Fibonacci67","alias":"f3"}},"rightPattern":{"type":"object","id":4756,"cls":"Result67","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate67"},{"type":"beta","out_nodes":[[11250,-1]],"__id":25921,"parentNodes":[11253,11254]},{"type":"type","out_nodes":[[3,4320]],"__id":25922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result67"}},{"type":"rightadapter","out_nodes":[[11251,4320]],"__id":25925,"parentNodes":[4]},{"type":"join","out_nodes":[[11255,-1]],"__id":25926,"parentNodes":[11257,11258],"constraint":{"type":"join-reference","out_nodes":[],"__id":25927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11251,-1]],"__id":25928,"parentNodes":[]},{"type":"type","out_nodes":[[9,4321],[14,4322],[20,4323],[30,4325],[20,4327],[30,4328]],"__id":25929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci67"}},{"type":"rightadapter","out_nodes":[[11254,4321]],"__id":25932,"parentNodes":[10]},{"type":"join","out_nodes":[[11259,-1]],"__id":25933,"parentNodes":[11260,11261],"constraint":{"type":"join-reference","out_nodes":[],"__id":25934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11254,-1]],"__id":25935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11258,4322]],"__id":25940,"parentNodes":[16]},{"type":"beta","out_nodes":[[11262,-1]],"__id":25941,"parentNodes":[11263,11264]},{"type":"leftadapter","out_nodes":[[11258,-1]],"__id":25942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11261,4323]],"__id":25947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11261,4324]],"__id":25951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25952,"parentNodes":[11266],"index":1297,"rule":{"name":"Bootstrap67","pattern":{"type":"object","id":4760,"cls":"Fibonacci67","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap67"},{"type":"beta","out_nodes":[[11265,-1]],"__id":25953,"parentNodes":[11267,11268]},{"type":"rightadapter","out_nodes":[[11266,4325]],"__id":25958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11266,4326]],"__id":25962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25963,"parentNodes":[11270],"index":1298,"rule":{"name":"Recurse67","pattern":{"type":"composite","id":4763,"leftPattern":{"type":"not","id":4761,"cls":"Fibonacci67","alias":"f"},"rightPattern":{"type":"object","id":4762,"cls":"Fibonacci67","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci67 = defined.get('Fibonacci67');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci67(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse67"},{"type":"beta","out_nodes":[[11269,-1]],"__id":25964,"parentNodes":[11271,11272]},{"type":"rightadapter","out_nodes":[[11270,4327]],"__id":25968,"parentNodes":[37]},{"type":"not","out_nodes":[[11273,-1]],"__id":25969,"parentNodes":[11274,11275],"constraint":{"type":"join-reference","out_nodes":[],"__id":25970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11270,-1]],"__id":25971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11272,4328]],"__id":25975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11272,4329]],"__id":25979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":25980,"parentNodes":[11277],"index":1299,"rule":{"name":"Calculate66","pattern":{"type":"composite","id":4770,"leftPattern":{"type":"composite","id":4769,"leftPattern":{"type":"composite","id":4768,"leftPattern":{"type":"object","id":4764,"cls":"Fibonacci66","alias":"f1"},"rightPattern":{"type":"object","id":4765,"cls":"Fibonacci66","alias":"f2"}},"rightPattern":{"type":"object","id":4766,"cls":"Fibonacci66","alias":"f3"}},"rightPattern":{"type":"object","id":4767,"cls":"Result66","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate66"},{"type":"beta","out_nodes":[[11276,-1]],"__id":25981,"parentNodes":[11279,11280]},{"type":"type","out_nodes":[[3,4330]],"__id":25982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result66"}},{"type":"rightadapter","out_nodes":[[11277,4330]],"__id":25985,"parentNodes":[4]},{"type":"join","out_nodes":[[11281,-1]],"__id":25986,"parentNodes":[11283,11284],"constraint":{"type":"join-reference","out_nodes":[],"__id":25987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11277,-1]],"__id":25988,"parentNodes":[]},{"type":"type","out_nodes":[[9,4331],[14,4332],[20,4333],[30,4335],[20,4337],[30,4338]],"__id":25989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci66"}},{"type":"rightadapter","out_nodes":[[11280,4331]],"__id":25992,"parentNodes":[10]},{"type":"join","out_nodes":[[11285,-1]],"__id":25993,"parentNodes":[11286,11287],"constraint":{"type":"join-reference","out_nodes":[],"__id":25994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11280,-1]],"__id":25995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11284,4332]],"__id":26000,"parentNodes":[16]},{"type":"beta","out_nodes":[[11288,-1]],"__id":26001,"parentNodes":[11289,11290]},{"type":"leftadapter","out_nodes":[[11284,-1]],"__id":26002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11287,4333]],"__id":26007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11287,4334]],"__id":26011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26012,"parentNodes":[11292],"index":1300,"rule":{"name":"Bootstrap66","pattern":{"type":"object","id":4771,"cls":"Fibonacci66","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap66"},{"type":"beta","out_nodes":[[11291,-1]],"__id":26013,"parentNodes":[11293,11294]},{"type":"rightadapter","out_nodes":[[11292,4335]],"__id":26018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11292,4336]],"__id":26022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26023,"parentNodes":[11296],"index":1301,"rule":{"name":"Recurse66","pattern":{"type":"composite","id":4774,"leftPattern":{"type":"not","id":4772,"cls":"Fibonacci66","alias":"f"},"rightPattern":{"type":"object","id":4773,"cls":"Fibonacci66","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci66 = defined.get('Fibonacci66');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci66(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse66"},{"type":"beta","out_nodes":[[11295,-1]],"__id":26024,"parentNodes":[11297,11298]},{"type":"rightadapter","out_nodes":[[11296,4337]],"__id":26028,"parentNodes":[37]},{"type":"not","out_nodes":[[11299,-1]],"__id":26029,"parentNodes":[11300,11301],"constraint":{"type":"join-reference","out_nodes":[],"__id":26030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11296,-1]],"__id":26031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11298,4338]],"__id":26035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11298,4339]],"__id":26039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26040,"parentNodes":[11303],"index":1302,"rule":{"name":"Calculate65","pattern":{"type":"composite","id":4781,"leftPattern":{"type":"composite","id":4780,"leftPattern":{"type":"composite","id":4779,"leftPattern":{"type":"object","id":4775,"cls":"Fibonacci65","alias":"f1"},"rightPattern":{"type":"object","id":4776,"cls":"Fibonacci65","alias":"f2"}},"rightPattern":{"type":"object","id":4777,"cls":"Fibonacci65","alias":"f3"}},"rightPattern":{"type":"object","id":4778,"cls":"Result65","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate65"},{"type":"beta","out_nodes":[[11302,-1]],"__id":26041,"parentNodes":[11305,11306]},{"type":"type","out_nodes":[[3,4340]],"__id":26042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result65"}},{"type":"rightadapter","out_nodes":[[11303,4340]],"__id":26045,"parentNodes":[4]},{"type":"join","out_nodes":[[11307,-1]],"__id":26046,"parentNodes":[11309,11310],"constraint":{"type":"join-reference","out_nodes":[],"__id":26047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11303,-1]],"__id":26048,"parentNodes":[]},{"type":"type","out_nodes":[[9,4341],[14,4342],[20,4343],[30,4345],[20,4347],[30,4348]],"__id":26049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci65"}},{"type":"rightadapter","out_nodes":[[11306,4341]],"__id":26052,"parentNodes":[10]},{"type":"join","out_nodes":[[11311,-1]],"__id":26053,"parentNodes":[11312,11313],"constraint":{"type":"join-reference","out_nodes":[],"__id":26054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11306,-1]],"__id":26055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11310,4342]],"__id":26060,"parentNodes":[16]},{"type":"beta","out_nodes":[[11314,-1]],"__id":26061,"parentNodes":[11315,11316]},{"type":"leftadapter","out_nodes":[[11310,-1]],"__id":26062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11313,4343]],"__id":26067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11313,4344]],"__id":26071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26072,"parentNodes":[11318],"index":1303,"rule":{"name":"Bootstrap65","pattern":{"type":"object","id":4782,"cls":"Fibonacci65","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap65"},{"type":"beta","out_nodes":[[11317,-1]],"__id":26073,"parentNodes":[11319,11320]},{"type":"rightadapter","out_nodes":[[11318,4345]],"__id":26078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11318,4346]],"__id":26082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26083,"parentNodes":[11322],"index":1304,"rule":{"name":"Recurse65","pattern":{"type":"composite","id":4785,"leftPattern":{"type":"not","id":4783,"cls":"Fibonacci65","alias":"f"},"rightPattern":{"type":"object","id":4784,"cls":"Fibonacci65","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci65 = defined.get('Fibonacci65');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci65(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse65"},{"type":"beta","out_nodes":[[11321,-1]],"__id":26084,"parentNodes":[11323,11324]},{"type":"rightadapter","out_nodes":[[11322,4347]],"__id":26088,"parentNodes":[37]},{"type":"not","out_nodes":[[11325,-1]],"__id":26089,"parentNodes":[11326,11327],"constraint":{"type":"join-reference","out_nodes":[],"__id":26090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11322,-1]],"__id":26091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11324,4348]],"__id":26095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11324,4349]],"__id":26099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26100,"parentNodes":[11329],"index":1305,"rule":{"name":"Calculate64","pattern":{"type":"composite","id":4792,"leftPattern":{"type":"composite","id":4791,"leftPattern":{"type":"composite","id":4790,"leftPattern":{"type":"object","id":4786,"cls":"Fibonacci64","alias":"f1"},"rightPattern":{"type":"object","id":4787,"cls":"Fibonacci64","alias":"f2"}},"rightPattern":{"type":"object","id":4788,"cls":"Fibonacci64","alias":"f3"}},"rightPattern":{"type":"object","id":4789,"cls":"Result64","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate64"},{"type":"beta","out_nodes":[[11328,-1]],"__id":26101,"parentNodes":[11331,11332]},{"type":"type","out_nodes":[[3,4350]],"__id":26102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result64"}},{"type":"rightadapter","out_nodes":[[11329,4350]],"__id":26105,"parentNodes":[4]},{"type":"join","out_nodes":[[11333,-1]],"__id":26106,"parentNodes":[11335,11336],"constraint":{"type":"join-reference","out_nodes":[],"__id":26107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11329,-1]],"__id":26108,"parentNodes":[]},{"type":"type","out_nodes":[[9,4351],[14,4352],[20,4353],[30,4355],[20,4357],[30,4358]],"__id":26109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci64"}},{"type":"rightadapter","out_nodes":[[11332,4351]],"__id":26112,"parentNodes":[10]},{"type":"join","out_nodes":[[11337,-1]],"__id":26113,"parentNodes":[11338,11339],"constraint":{"type":"join-reference","out_nodes":[],"__id":26114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11332,-1]],"__id":26115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11336,4352]],"__id":26120,"parentNodes":[16]},{"type":"beta","out_nodes":[[11340,-1]],"__id":26121,"parentNodes":[11341,11342]},{"type":"leftadapter","out_nodes":[[11336,-1]],"__id":26122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11339,4353]],"__id":26127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11339,4354]],"__id":26131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26132,"parentNodes":[11344],"index":1306,"rule":{"name":"Bootstrap64","pattern":{"type":"object","id":4793,"cls":"Fibonacci64","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap64"},{"type":"beta","out_nodes":[[11343,-1]],"__id":26133,"parentNodes":[11345,11346]},{"type":"rightadapter","out_nodes":[[11344,4355]],"__id":26138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11344,4356]],"__id":26142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26143,"parentNodes":[11348],"index":1307,"rule":{"name":"Recurse64","pattern":{"type":"composite","id":4796,"leftPattern":{"type":"not","id":4794,"cls":"Fibonacci64","alias":"f"},"rightPattern":{"type":"object","id":4795,"cls":"Fibonacci64","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci64 = defined.get('Fibonacci64');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci64(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse64"},{"type":"beta","out_nodes":[[11347,-1]],"__id":26144,"parentNodes":[11349,11350]},{"type":"rightadapter","out_nodes":[[11348,4357]],"__id":26148,"parentNodes":[37]},{"type":"not","out_nodes":[[11351,-1]],"__id":26149,"parentNodes":[11352,11353],"constraint":{"type":"join-reference","out_nodes":[],"__id":26150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11348,-1]],"__id":26151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11350,4358]],"__id":26155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11350,4359]],"__id":26159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26160,"parentNodes":[11355],"index":1308,"rule":{"name":"Calculate63","pattern":{"type":"composite","id":4803,"leftPattern":{"type":"composite","id":4802,"leftPattern":{"type":"composite","id":4801,"leftPattern":{"type":"object","id":4797,"cls":"Fibonacci63","alias":"f1"},"rightPattern":{"type":"object","id":4798,"cls":"Fibonacci63","alias":"f2"}},"rightPattern":{"type":"object","id":4799,"cls":"Fibonacci63","alias":"f3"}},"rightPattern":{"type":"object","id":4800,"cls":"Result63","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate63"},{"type":"beta","out_nodes":[[11354,-1]],"__id":26161,"parentNodes":[11357,11358]},{"type":"type","out_nodes":[[3,4360]],"__id":26162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result63"}},{"type":"rightadapter","out_nodes":[[11355,4360]],"__id":26165,"parentNodes":[4]},{"type":"join","out_nodes":[[11359,-1]],"__id":26166,"parentNodes":[11361,11362],"constraint":{"type":"join-reference","out_nodes":[],"__id":26167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11355,-1]],"__id":26168,"parentNodes":[]},{"type":"type","out_nodes":[[9,4361],[14,4362],[20,4363],[30,4365],[20,4367],[30,4368]],"__id":26169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci63"}},{"type":"rightadapter","out_nodes":[[11358,4361]],"__id":26172,"parentNodes":[10]},{"type":"join","out_nodes":[[11363,-1]],"__id":26173,"parentNodes":[11364,11365],"constraint":{"type":"join-reference","out_nodes":[],"__id":26174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11358,-1]],"__id":26175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11362,4362]],"__id":26180,"parentNodes":[16]},{"type":"beta","out_nodes":[[11366,-1]],"__id":26181,"parentNodes":[11367,11368]},{"type":"leftadapter","out_nodes":[[11362,-1]],"__id":26182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11365,4363]],"__id":26187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11365,4364]],"__id":26191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26192,"parentNodes":[11370],"index":1309,"rule":{"name":"Bootstrap63","pattern":{"type":"object","id":4804,"cls":"Fibonacci63","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap63"},{"type":"beta","out_nodes":[[11369,-1]],"__id":26193,"parentNodes":[11371,11372]},{"type":"rightadapter","out_nodes":[[11370,4365]],"__id":26198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11370,4366]],"__id":26202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26203,"parentNodes":[11374],"index":1310,"rule":{"name":"Recurse63","pattern":{"type":"composite","id":4807,"leftPattern":{"type":"not","id":4805,"cls":"Fibonacci63","alias":"f"},"rightPattern":{"type":"object","id":4806,"cls":"Fibonacci63","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci63 = defined.get('Fibonacci63');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci63(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse63"},{"type":"beta","out_nodes":[[11373,-1]],"__id":26204,"parentNodes":[11375,11376]},{"type":"rightadapter","out_nodes":[[11374,4367]],"__id":26208,"parentNodes":[37]},{"type":"not","out_nodes":[[11377,-1]],"__id":26209,"parentNodes":[11378,11379],"constraint":{"type":"join-reference","out_nodes":[],"__id":26210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11374,-1]],"__id":26211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11376,4368]],"__id":26215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11376,4369]],"__id":26219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26220,"parentNodes":[11381],"index":1311,"rule":{"name":"Calculate62","pattern":{"type":"composite","id":4814,"leftPattern":{"type":"composite","id":4813,"leftPattern":{"type":"composite","id":4812,"leftPattern":{"type":"object","id":4808,"cls":"Fibonacci62","alias":"f1"},"rightPattern":{"type":"object","id":4809,"cls":"Fibonacci62","alias":"f2"}},"rightPattern":{"type":"object","id":4810,"cls":"Fibonacci62","alias":"f3"}},"rightPattern":{"type":"object","id":4811,"cls":"Result62","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate62"},{"type":"beta","out_nodes":[[11380,-1]],"__id":26221,"parentNodes":[11383,11384]},{"type":"type","out_nodes":[[3,4370]],"__id":26222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result62"}},{"type":"rightadapter","out_nodes":[[11381,4370]],"__id":26225,"parentNodes":[4]},{"type":"join","out_nodes":[[11385,-1]],"__id":26226,"parentNodes":[11387,11388],"constraint":{"type":"join-reference","out_nodes":[],"__id":26227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11381,-1]],"__id":26228,"parentNodes":[]},{"type":"type","out_nodes":[[9,4371],[14,4372],[20,4373],[30,4375],[20,4377],[30,4378]],"__id":26229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci62"}},{"type":"rightadapter","out_nodes":[[11384,4371]],"__id":26232,"parentNodes":[10]},{"type":"join","out_nodes":[[11389,-1]],"__id":26233,"parentNodes":[11390,11391],"constraint":{"type":"join-reference","out_nodes":[],"__id":26234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11384,-1]],"__id":26235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11388,4372]],"__id":26240,"parentNodes":[16]},{"type":"beta","out_nodes":[[11392,-1]],"__id":26241,"parentNodes":[11393,11394]},{"type":"leftadapter","out_nodes":[[11388,-1]],"__id":26242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11391,4373]],"__id":26247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11391,4374]],"__id":26251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26252,"parentNodes":[11396],"index":1312,"rule":{"name":"Bootstrap62","pattern":{"type":"object","id":4815,"cls":"Fibonacci62","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap62"},{"type":"beta","out_nodes":[[11395,-1]],"__id":26253,"parentNodes":[11397,11398]},{"type":"rightadapter","out_nodes":[[11396,4375]],"__id":26258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11396,4376]],"__id":26262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26263,"parentNodes":[11400],"index":1313,"rule":{"name":"Recurse62","pattern":{"type":"composite","id":4818,"leftPattern":{"type":"not","id":4816,"cls":"Fibonacci62","alias":"f"},"rightPattern":{"type":"object","id":4817,"cls":"Fibonacci62","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci62 = defined.get('Fibonacci62');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci62(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse62"},{"type":"beta","out_nodes":[[11399,-1]],"__id":26264,"parentNodes":[11401,11402]},{"type":"rightadapter","out_nodes":[[11400,4377]],"__id":26268,"parentNodes":[37]},{"type":"not","out_nodes":[[11403,-1]],"__id":26269,"parentNodes":[11404,11405],"constraint":{"type":"join-reference","out_nodes":[],"__id":26270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11400,-1]],"__id":26271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11402,4378]],"__id":26275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11402,4379]],"__id":26279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26280,"parentNodes":[11407],"index":1314,"rule":{"name":"Calculate61","pattern":{"type":"composite","id":4825,"leftPattern":{"type":"composite","id":4824,"leftPattern":{"type":"composite","id":4823,"leftPattern":{"type":"object","id":4819,"cls":"Fibonacci61","alias":"f1"},"rightPattern":{"type":"object","id":4820,"cls":"Fibonacci61","alias":"f2"}},"rightPattern":{"type":"object","id":4821,"cls":"Fibonacci61","alias":"f3"}},"rightPattern":{"type":"object","id":4822,"cls":"Result61","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate61"},{"type":"beta","out_nodes":[[11406,-1]],"__id":26281,"parentNodes":[11409,11410]},{"type":"type","out_nodes":[[3,4380]],"__id":26282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result61"}},{"type":"rightadapter","out_nodes":[[11407,4380]],"__id":26285,"parentNodes":[4]},{"type":"join","out_nodes":[[11411,-1]],"__id":26286,"parentNodes":[11413,11414],"constraint":{"type":"join-reference","out_nodes":[],"__id":26287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11407,-1]],"__id":26288,"parentNodes":[]},{"type":"type","out_nodes":[[9,4381],[14,4382],[20,4383],[30,4385],[20,4387],[30,4388]],"__id":26289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci61"}},{"type":"rightadapter","out_nodes":[[11410,4381]],"__id":26292,"parentNodes":[10]},{"type":"join","out_nodes":[[11415,-1]],"__id":26293,"parentNodes":[11416,11417],"constraint":{"type":"join-reference","out_nodes":[],"__id":26294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11410,-1]],"__id":26295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11414,4382]],"__id":26300,"parentNodes":[16]},{"type":"beta","out_nodes":[[11418,-1]],"__id":26301,"parentNodes":[11419,11420]},{"type":"leftadapter","out_nodes":[[11414,-1]],"__id":26302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11417,4383]],"__id":26307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11417,4384]],"__id":26311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26312,"parentNodes":[11422],"index":1315,"rule":{"name":"Bootstrap61","pattern":{"type":"object","id":4826,"cls":"Fibonacci61","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap61"},{"type":"beta","out_nodes":[[11421,-1]],"__id":26313,"parentNodes":[11423,11424]},{"type":"rightadapter","out_nodes":[[11422,4385]],"__id":26318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11422,4386]],"__id":26322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26323,"parentNodes":[11426],"index":1316,"rule":{"name":"Recurse61","pattern":{"type":"composite","id":4829,"leftPattern":{"type":"not","id":4827,"cls":"Fibonacci61","alias":"f"},"rightPattern":{"type":"object","id":4828,"cls":"Fibonacci61","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci61 = defined.get('Fibonacci61');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci61(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse61"},{"type":"beta","out_nodes":[[11425,-1]],"__id":26324,"parentNodes":[11427,11428]},{"type":"rightadapter","out_nodes":[[11426,4387]],"__id":26328,"parentNodes":[37]},{"type":"not","out_nodes":[[11429,-1]],"__id":26329,"parentNodes":[11430,11431],"constraint":{"type":"join-reference","out_nodes":[],"__id":26330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11426,-1]],"__id":26331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11428,4388]],"__id":26335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11428,4389]],"__id":26339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26340,"parentNodes":[11433],"index":1317,"rule":{"name":"Calculate60","pattern":{"type":"composite","id":4836,"leftPattern":{"type":"composite","id":4835,"leftPattern":{"type":"composite","id":4834,"leftPattern":{"type":"object","id":4830,"cls":"Fibonacci60","alias":"f1"},"rightPattern":{"type":"object","id":4831,"cls":"Fibonacci60","alias":"f2"}},"rightPattern":{"type":"object","id":4832,"cls":"Fibonacci60","alias":"f3"}},"rightPattern":{"type":"object","id":4833,"cls":"Result60","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate60"},{"type":"beta","out_nodes":[[11432,-1]],"__id":26341,"parentNodes":[11435,11436]},{"type":"type","out_nodes":[[3,4390]],"__id":26342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result60"}},{"type":"rightadapter","out_nodes":[[11433,4390]],"__id":26345,"parentNodes":[4]},{"type":"join","out_nodes":[[11437,-1]],"__id":26346,"parentNodes":[11439,11440],"constraint":{"type":"join-reference","out_nodes":[],"__id":26347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11433,-1]],"__id":26348,"parentNodes":[]},{"type":"type","out_nodes":[[9,4391],[14,4392],[20,4393],[30,4395],[20,4397],[30,4398]],"__id":26349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci60"}},{"type":"rightadapter","out_nodes":[[11436,4391]],"__id":26352,"parentNodes":[10]},{"type":"join","out_nodes":[[11441,-1]],"__id":26353,"parentNodes":[11442,11443],"constraint":{"type":"join-reference","out_nodes":[],"__id":26354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11436,-1]],"__id":26355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11440,4392]],"__id":26360,"parentNodes":[16]},{"type":"beta","out_nodes":[[11444,-1]],"__id":26361,"parentNodes":[11445,11446]},{"type":"leftadapter","out_nodes":[[11440,-1]],"__id":26362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11443,4393]],"__id":26367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11443,4394]],"__id":26371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26372,"parentNodes":[11448],"index":1318,"rule":{"name":"Bootstrap60","pattern":{"type":"object","id":4837,"cls":"Fibonacci60","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap60"},{"type":"beta","out_nodes":[[11447,-1]],"__id":26373,"parentNodes":[11449,11450]},{"type":"rightadapter","out_nodes":[[11448,4395]],"__id":26378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11448,4396]],"__id":26382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26383,"parentNodes":[11452],"index":1319,"rule":{"name":"Recurse60","pattern":{"type":"composite","id":4840,"leftPattern":{"type":"not","id":4838,"cls":"Fibonacci60","alias":"f"},"rightPattern":{"type":"object","id":4839,"cls":"Fibonacci60","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');let Fibonacci60 = defined.get('Fibonacci60');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci60(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse60"},{"type":"beta","out_nodes":[[11451,-1]],"__id":26384,"parentNodes":[11453,11454]},{"type":"rightadapter","out_nodes":[[11452,4397]],"__id":26388,"parentNodes":[37]},{"type":"not","out_nodes":[[11455,-1]],"__id":26389,"parentNodes":[11456,11457],"constraint":{"type":"join-reference","out_nodes":[],"__id":26390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11452,-1]],"__id":26391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11454,4398]],"__id":26395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11454,4399]],"__id":26399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26400,"parentNodes":[11459],"index":1320,"rule":{"name":"Calculate59","pattern":{"type":"composite","id":4847,"leftPattern":{"type":"composite","id":4846,"leftPattern":{"type":"composite","id":4845,"leftPattern":{"type":"object","id":4841,"cls":"Fibonacci59","alias":"f1"},"rightPattern":{"type":"object","id":4842,"cls":"Fibonacci59","alias":"f2"}},"rightPattern":{"type":"object","id":4843,"cls":"Fibonacci59","alias":"f3"}},"rightPattern":{"type":"object","id":4844,"cls":"Result59","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate59"},{"type":"beta","out_nodes":[[11458,-1]],"__id":26401,"parentNodes":[11461,11462]},{"type":"type","out_nodes":[[3,4400]],"__id":26402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result59"}},{"type":"rightadapter","out_nodes":[[11459,4400]],"__id":26405,"parentNodes":[4]},{"type":"join","out_nodes":[[11463,-1]],"__id":26406,"parentNodes":[11465,11466],"constraint":{"type":"join-reference","out_nodes":[],"__id":26407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11459,-1]],"__id":26408,"parentNodes":[]},{"type":"type","out_nodes":[[9,4401],[14,4402],[20,4403],[30,4405],[20,4407],[30,4408]],"__id":26409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci59"}},{"type":"rightadapter","out_nodes":[[11462,4401]],"__id":26412,"parentNodes":[10]},{"type":"join","out_nodes":[[11467,-1]],"__id":26413,"parentNodes":[11468,11469],"constraint":{"type":"join-reference","out_nodes":[],"__id":26414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11462,-1]],"__id":26415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11466,4402]],"__id":26420,"parentNodes":[16]},{"type":"beta","out_nodes":[[11470,-1]],"__id":26421,"parentNodes":[11471,11472]},{"type":"leftadapter","out_nodes":[[11466,-1]],"__id":26422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11469,4403]],"__id":26427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11469,4404]],"__id":26431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26432,"parentNodes":[11474],"index":1321,"rule":{"name":"Bootstrap59","pattern":{"type":"object","id":4848,"cls":"Fibonacci59","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap59"},{"type":"beta","out_nodes":[[11473,-1]],"__id":26433,"parentNodes":[11475,11476]},{"type":"rightadapter","out_nodes":[[11474,4405]],"__id":26438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11474,4406]],"__id":26442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26443,"parentNodes":[11478],"index":1322,"rule":{"name":"Recurse59","pattern":{"type":"composite","id":4851,"leftPattern":{"type":"not","id":4849,"cls":"Fibonacci59","alias":"f"},"rightPattern":{"type":"object","id":4850,"cls":"Fibonacci59","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci59 = defined.get('Fibonacci59');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci59(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse59"},{"type":"beta","out_nodes":[[11477,-1]],"__id":26444,"parentNodes":[11479,11480]},{"type":"rightadapter","out_nodes":[[11478,4407]],"__id":26448,"parentNodes":[37]},{"type":"not","out_nodes":[[11481,-1]],"__id":26449,"parentNodes":[11482,11483],"constraint":{"type":"join-reference","out_nodes":[],"__id":26450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11478,-1]],"__id":26451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11480,4408]],"__id":26455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11480,4409]],"__id":26459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26460,"parentNodes":[11485],"index":1323,"rule":{"name":"Calculate58","pattern":{"type":"composite","id":4858,"leftPattern":{"type":"composite","id":4857,"leftPattern":{"type":"composite","id":4856,"leftPattern":{"type":"object","id":4852,"cls":"Fibonacci58","alias":"f1"},"rightPattern":{"type":"object","id":4853,"cls":"Fibonacci58","alias":"f2"}},"rightPattern":{"type":"object","id":4854,"cls":"Fibonacci58","alias":"f3"}},"rightPattern":{"type":"object","id":4855,"cls":"Result58","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate58"},{"type":"beta","out_nodes":[[11484,-1]],"__id":26461,"parentNodes":[11487,11488]},{"type":"type","out_nodes":[[3,4410]],"__id":26462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result58"}},{"type":"rightadapter","out_nodes":[[11485,4410]],"__id":26465,"parentNodes":[4]},{"type":"join","out_nodes":[[11489,-1]],"__id":26466,"parentNodes":[11491,11492],"constraint":{"type":"join-reference","out_nodes":[],"__id":26467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11485,-1]],"__id":26468,"parentNodes":[]},{"type":"type","out_nodes":[[9,4411],[14,4412],[20,4413],[30,4415],[20,4417],[30,4418]],"__id":26469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci58"}},{"type":"rightadapter","out_nodes":[[11488,4411]],"__id":26472,"parentNodes":[10]},{"type":"join","out_nodes":[[11493,-1]],"__id":26473,"parentNodes":[11494,11495],"constraint":{"type":"join-reference","out_nodes":[],"__id":26474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11488,-1]],"__id":26475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11492,4412]],"__id":26480,"parentNodes":[16]},{"type":"beta","out_nodes":[[11496,-1]],"__id":26481,"parentNodes":[11497,11498]},{"type":"leftadapter","out_nodes":[[11492,-1]],"__id":26482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11495,4413]],"__id":26487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11495,4414]],"__id":26491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26492,"parentNodes":[11500],"index":1324,"rule":{"name":"Bootstrap58","pattern":{"type":"object","id":4859,"cls":"Fibonacci58","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap58"},{"type":"beta","out_nodes":[[11499,-1]],"__id":26493,"parentNodes":[11501,11502]},{"type":"rightadapter","out_nodes":[[11500,4415]],"__id":26498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11500,4416]],"__id":26502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26503,"parentNodes":[11504],"index":1325,"rule":{"name":"Recurse58","pattern":{"type":"composite","id":4862,"leftPattern":{"type":"not","id":4860,"cls":"Fibonacci58","alias":"f"},"rightPattern":{"type":"object","id":4861,"cls":"Fibonacci58","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci58 = defined.get('Fibonacci58');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci58(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse58"},{"type":"beta","out_nodes":[[11503,-1]],"__id":26504,"parentNodes":[11505,11506]},{"type":"rightadapter","out_nodes":[[11504,4417]],"__id":26508,"parentNodes":[37]},{"type":"not","out_nodes":[[11507,-1]],"__id":26509,"parentNodes":[11508,11509],"constraint":{"type":"join-reference","out_nodes":[],"__id":26510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11504,-1]],"__id":26511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11506,4418]],"__id":26515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11506,4419]],"__id":26519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26520,"parentNodes":[11511],"index":1326,"rule":{"name":"Calculate57","pattern":{"type":"composite","id":4869,"leftPattern":{"type":"composite","id":4868,"leftPattern":{"type":"composite","id":4867,"leftPattern":{"type":"object","id":4863,"cls":"Fibonacci57","alias":"f1"},"rightPattern":{"type":"object","id":4864,"cls":"Fibonacci57","alias":"f2"}},"rightPattern":{"type":"object","id":4865,"cls":"Fibonacci57","alias":"f3"}},"rightPattern":{"type":"object","id":4866,"cls":"Result57","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate57"},{"type":"beta","out_nodes":[[11510,-1]],"__id":26521,"parentNodes":[11513,11514]},{"type":"type","out_nodes":[[3,4420]],"__id":26522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result57"}},{"type":"rightadapter","out_nodes":[[11511,4420]],"__id":26525,"parentNodes":[4]},{"type":"join","out_nodes":[[11515,-1]],"__id":26526,"parentNodes":[11517,11518],"constraint":{"type":"join-reference","out_nodes":[],"__id":26527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11511,-1]],"__id":26528,"parentNodes":[]},{"type":"type","out_nodes":[[9,4421],[14,4422],[20,4423],[30,4425],[20,4427],[30,4428]],"__id":26529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci57"}},{"type":"rightadapter","out_nodes":[[11514,4421]],"__id":26532,"parentNodes":[10]},{"type":"join","out_nodes":[[11519,-1]],"__id":26533,"parentNodes":[11520,11521],"constraint":{"type":"join-reference","out_nodes":[],"__id":26534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11514,-1]],"__id":26535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11518,4422]],"__id":26540,"parentNodes":[16]},{"type":"beta","out_nodes":[[11522,-1]],"__id":26541,"parentNodes":[11523,11524]},{"type":"leftadapter","out_nodes":[[11518,-1]],"__id":26542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11521,4423]],"__id":26547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11521,4424]],"__id":26551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26552,"parentNodes":[11526],"index":1327,"rule":{"name":"Bootstrap57","pattern":{"type":"object","id":4870,"cls":"Fibonacci57","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap57"},{"type":"beta","out_nodes":[[11525,-1]],"__id":26553,"parentNodes":[11527,11528]},{"type":"rightadapter","out_nodes":[[11526,4425]],"__id":26558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11526,4426]],"__id":26562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26563,"parentNodes":[11530],"index":1328,"rule":{"name":"Recurse57","pattern":{"type":"composite","id":4873,"leftPattern":{"type":"not","id":4871,"cls":"Fibonacci57","alias":"f"},"rightPattern":{"type":"object","id":4872,"cls":"Fibonacci57","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci57 = defined.get('Fibonacci57');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci57(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse57"},{"type":"beta","out_nodes":[[11529,-1]],"__id":26564,"parentNodes":[11531,11532]},{"type":"rightadapter","out_nodes":[[11530,4427]],"__id":26568,"parentNodes":[37]},{"type":"not","out_nodes":[[11533,-1]],"__id":26569,"parentNodes":[11534,11535],"constraint":{"type":"join-reference","out_nodes":[],"__id":26570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11530,-1]],"__id":26571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11532,4428]],"__id":26575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11532,4429]],"__id":26579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26580,"parentNodes":[11537],"index":1329,"rule":{"name":"Calculate56","pattern":{"type":"composite","id":4880,"leftPattern":{"type":"composite","id":4879,"leftPattern":{"type":"composite","id":4878,"leftPattern":{"type":"object","id":4874,"cls":"Fibonacci56","alias":"f1"},"rightPattern":{"type":"object","id":4875,"cls":"Fibonacci56","alias":"f2"}},"rightPattern":{"type":"object","id":4876,"cls":"Fibonacci56","alias":"f3"}},"rightPattern":{"type":"object","id":4877,"cls":"Result56","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate56"},{"type":"beta","out_nodes":[[11536,-1]],"__id":26581,"parentNodes":[11539,11540]},{"type":"type","out_nodes":[[3,4430]],"__id":26582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result56"}},{"type":"rightadapter","out_nodes":[[11537,4430]],"__id":26585,"parentNodes":[4]},{"type":"join","out_nodes":[[11541,-1]],"__id":26586,"parentNodes":[11543,11544],"constraint":{"type":"join-reference","out_nodes":[],"__id":26587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11537,-1]],"__id":26588,"parentNodes":[]},{"type":"type","out_nodes":[[9,4431],[14,4432],[20,4433],[30,4435],[20,4437],[30,4438]],"__id":26589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci56"}},{"type":"rightadapter","out_nodes":[[11540,4431]],"__id":26592,"parentNodes":[10]},{"type":"join","out_nodes":[[11545,-1]],"__id":26593,"parentNodes":[11546,11547],"constraint":{"type":"join-reference","out_nodes":[],"__id":26594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11540,-1]],"__id":26595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11544,4432]],"__id":26600,"parentNodes":[16]},{"type":"beta","out_nodes":[[11548,-1]],"__id":26601,"parentNodes":[11549,11550]},{"type":"leftadapter","out_nodes":[[11544,-1]],"__id":26602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11547,4433]],"__id":26607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11547,4434]],"__id":26611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26612,"parentNodes":[11552],"index":1330,"rule":{"name":"Bootstrap56","pattern":{"type":"object","id":4881,"cls":"Fibonacci56","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap56"},{"type":"beta","out_nodes":[[11551,-1]],"__id":26613,"parentNodes":[11553,11554]},{"type":"rightadapter","out_nodes":[[11552,4435]],"__id":26618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11552,4436]],"__id":26622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26623,"parentNodes":[11556],"index":1331,"rule":{"name":"Recurse56","pattern":{"type":"composite","id":4884,"leftPattern":{"type":"not","id":4882,"cls":"Fibonacci56","alias":"f"},"rightPattern":{"type":"object","id":4883,"cls":"Fibonacci56","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci56 = defined.get('Fibonacci56');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci56(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse56"},{"type":"beta","out_nodes":[[11555,-1]],"__id":26624,"parentNodes":[11557,11558]},{"type":"rightadapter","out_nodes":[[11556,4437]],"__id":26628,"parentNodes":[37]},{"type":"not","out_nodes":[[11559,-1]],"__id":26629,"parentNodes":[11560,11561],"constraint":{"type":"join-reference","out_nodes":[],"__id":26630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11556,-1]],"__id":26631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11558,4438]],"__id":26635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11558,4439]],"__id":26639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26640,"parentNodes":[11563],"index":1332,"rule":{"name":"Calculate55","pattern":{"type":"composite","id":4891,"leftPattern":{"type":"composite","id":4890,"leftPattern":{"type":"composite","id":4889,"leftPattern":{"type":"object","id":4885,"cls":"Fibonacci55","alias":"f1"},"rightPattern":{"type":"object","id":4886,"cls":"Fibonacci55","alias":"f2"}},"rightPattern":{"type":"object","id":4887,"cls":"Fibonacci55","alias":"f3"}},"rightPattern":{"type":"object","id":4888,"cls":"Result55","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate55"},{"type":"beta","out_nodes":[[11562,-1]],"__id":26641,"parentNodes":[11565,11566]},{"type":"type","out_nodes":[[3,4440]],"__id":26642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result55"}},{"type":"rightadapter","out_nodes":[[11563,4440]],"__id":26645,"parentNodes":[4]},{"type":"join","out_nodes":[[11567,-1]],"__id":26646,"parentNodes":[11569,11570],"constraint":{"type":"join-reference","out_nodes":[],"__id":26647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11563,-1]],"__id":26648,"parentNodes":[]},{"type":"type","out_nodes":[[9,4441],[14,4442],[20,4443],[30,4445],[20,4447],[30,4448]],"__id":26649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci55"}},{"type":"rightadapter","out_nodes":[[11566,4441]],"__id":26652,"parentNodes":[10]},{"type":"join","out_nodes":[[11571,-1]],"__id":26653,"parentNodes":[11572,11573],"constraint":{"type":"join-reference","out_nodes":[],"__id":26654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11566,-1]],"__id":26655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11570,4442]],"__id":26660,"parentNodes":[16]},{"type":"beta","out_nodes":[[11574,-1]],"__id":26661,"parentNodes":[11575,11576]},{"type":"leftadapter","out_nodes":[[11570,-1]],"__id":26662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11573,4443]],"__id":26667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11573,4444]],"__id":26671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26672,"parentNodes":[11578],"index":1333,"rule":{"name":"Bootstrap55","pattern":{"type":"object","id":4892,"cls":"Fibonacci55","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap55"},{"type":"beta","out_nodes":[[11577,-1]],"__id":26673,"parentNodes":[11579,11580]},{"type":"rightadapter","out_nodes":[[11578,4445]],"__id":26678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11578,4446]],"__id":26682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26683,"parentNodes":[11582],"index":1334,"rule":{"name":"Recurse55","pattern":{"type":"composite","id":4895,"leftPattern":{"type":"not","id":4893,"cls":"Fibonacci55","alias":"f"},"rightPattern":{"type":"object","id":4894,"cls":"Fibonacci55","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci55 = defined.get('Fibonacci55');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci55(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse55"},{"type":"beta","out_nodes":[[11581,-1]],"__id":26684,"parentNodes":[11583,11584]},{"type":"rightadapter","out_nodes":[[11582,4447]],"__id":26688,"parentNodes":[37]},{"type":"not","out_nodes":[[11585,-1]],"__id":26689,"parentNodes":[11586,11587],"constraint":{"type":"join-reference","out_nodes":[],"__id":26690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11582,-1]],"__id":26691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11584,4448]],"__id":26695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11584,4449]],"__id":26699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26700,"parentNodes":[11589],"index":1335,"rule":{"name":"Calculate54","pattern":{"type":"composite","id":4902,"leftPattern":{"type":"composite","id":4901,"leftPattern":{"type":"composite","id":4900,"leftPattern":{"type":"object","id":4896,"cls":"Fibonacci54","alias":"f1"},"rightPattern":{"type":"object","id":4897,"cls":"Fibonacci54","alias":"f2"}},"rightPattern":{"type":"object","id":4898,"cls":"Fibonacci54","alias":"f3"}},"rightPattern":{"type":"object","id":4899,"cls":"Result54","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate54"},{"type":"beta","out_nodes":[[11588,-1]],"__id":26701,"parentNodes":[11591,11592]},{"type":"type","out_nodes":[[3,4450]],"__id":26702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result54"}},{"type":"rightadapter","out_nodes":[[11589,4450]],"__id":26705,"parentNodes":[4]},{"type":"join","out_nodes":[[11593,-1]],"__id":26706,"parentNodes":[11595,11596],"constraint":{"type":"join-reference","out_nodes":[],"__id":26707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11589,-1]],"__id":26708,"parentNodes":[]},{"type":"type","out_nodes":[[9,4451],[14,4452],[20,4453],[30,4455],[20,4457],[30,4458]],"__id":26709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci54"}},{"type":"rightadapter","out_nodes":[[11592,4451]],"__id":26712,"parentNodes":[10]},{"type":"join","out_nodes":[[11597,-1]],"__id":26713,"parentNodes":[11598,11599],"constraint":{"type":"join-reference","out_nodes":[],"__id":26714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11592,-1]],"__id":26715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11596,4452]],"__id":26720,"parentNodes":[16]},{"type":"beta","out_nodes":[[11600,-1]],"__id":26721,"parentNodes":[11601,11602]},{"type":"leftadapter","out_nodes":[[11596,-1]],"__id":26722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11599,4453]],"__id":26727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11599,4454]],"__id":26731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26732,"parentNodes":[11604],"index":1336,"rule":{"name":"Bootstrap54","pattern":{"type":"object","id":4903,"cls":"Fibonacci54","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap54"},{"type":"beta","out_nodes":[[11603,-1]],"__id":26733,"parentNodes":[11605,11606]},{"type":"rightadapter","out_nodes":[[11604,4455]],"__id":26738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11604,4456]],"__id":26742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26743,"parentNodes":[11608],"index":1337,"rule":{"name":"Recurse54","pattern":{"type":"composite","id":4906,"leftPattern":{"type":"not","id":4904,"cls":"Fibonacci54","alias":"f"},"rightPattern":{"type":"object","id":4905,"cls":"Fibonacci54","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci54 = defined.get('Fibonacci54');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci54(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse54"},{"type":"beta","out_nodes":[[11607,-1]],"__id":26744,"parentNodes":[11609,11610]},{"type":"rightadapter","out_nodes":[[11608,4457]],"__id":26748,"parentNodes":[37]},{"type":"not","out_nodes":[[11611,-1]],"__id":26749,"parentNodes":[11612,11613],"constraint":{"type":"join-reference","out_nodes":[],"__id":26750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11608,-1]],"__id":26751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11610,4458]],"__id":26755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11610,4459]],"__id":26759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26760,"parentNodes":[11615],"index":1338,"rule":{"name":"Calculate53","pattern":{"type":"composite","id":4913,"leftPattern":{"type":"composite","id":4912,"leftPattern":{"type":"composite","id":4911,"leftPattern":{"type":"object","id":4907,"cls":"Fibonacci53","alias":"f1"},"rightPattern":{"type":"object","id":4908,"cls":"Fibonacci53","alias":"f2"}},"rightPattern":{"type":"object","id":4909,"cls":"Fibonacci53","alias":"f3"}},"rightPattern":{"type":"object","id":4910,"cls":"Result53","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate53"},{"type":"beta","out_nodes":[[11614,-1]],"__id":26761,"parentNodes":[11617,11618]},{"type":"type","out_nodes":[[3,4460]],"__id":26762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result53"}},{"type":"rightadapter","out_nodes":[[11615,4460]],"__id":26765,"parentNodes":[4]},{"type":"join","out_nodes":[[11619,-1]],"__id":26766,"parentNodes":[11621,11622],"constraint":{"type":"join-reference","out_nodes":[],"__id":26767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11615,-1]],"__id":26768,"parentNodes":[]},{"type":"type","out_nodes":[[9,4461],[14,4462],[20,4463],[30,4465],[20,4467],[30,4468]],"__id":26769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci53"}},{"type":"rightadapter","out_nodes":[[11618,4461]],"__id":26772,"parentNodes":[10]},{"type":"join","out_nodes":[[11623,-1]],"__id":26773,"parentNodes":[11624,11625],"constraint":{"type":"join-reference","out_nodes":[],"__id":26774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11618,-1]],"__id":26775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11622,4462]],"__id":26780,"parentNodes":[16]},{"type":"beta","out_nodes":[[11626,-1]],"__id":26781,"parentNodes":[11627,11628]},{"type":"leftadapter","out_nodes":[[11622,-1]],"__id":26782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11625,4463]],"__id":26787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11625,4464]],"__id":26791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26792,"parentNodes":[11630],"index":1339,"rule":{"name":"Bootstrap53","pattern":{"type":"object","id":4914,"cls":"Fibonacci53","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap53"},{"type":"beta","out_nodes":[[11629,-1]],"__id":26793,"parentNodes":[11631,11632]},{"type":"rightadapter","out_nodes":[[11630,4465]],"__id":26798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11630,4466]],"__id":26802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26803,"parentNodes":[11634],"index":1340,"rule":{"name":"Recurse53","pattern":{"type":"composite","id":4917,"leftPattern":{"type":"not","id":4915,"cls":"Fibonacci53","alias":"f"},"rightPattern":{"type":"object","id":4916,"cls":"Fibonacci53","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci53 = defined.get('Fibonacci53');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci53(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse53"},{"type":"beta","out_nodes":[[11633,-1]],"__id":26804,"parentNodes":[11635,11636]},{"type":"rightadapter","out_nodes":[[11634,4467]],"__id":26808,"parentNodes":[37]},{"type":"not","out_nodes":[[11637,-1]],"__id":26809,"parentNodes":[11638,11639],"constraint":{"type":"join-reference","out_nodes":[],"__id":26810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11634,-1]],"__id":26811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11636,4468]],"__id":26815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11636,4469]],"__id":26819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26820,"parentNodes":[11641],"index":1341,"rule":{"name":"Calculate52","pattern":{"type":"composite","id":4924,"leftPattern":{"type":"composite","id":4923,"leftPattern":{"type":"composite","id":4922,"leftPattern":{"type":"object","id":4918,"cls":"Fibonacci52","alias":"f1"},"rightPattern":{"type":"object","id":4919,"cls":"Fibonacci52","alias":"f2"}},"rightPattern":{"type":"object","id":4920,"cls":"Fibonacci52","alias":"f3"}},"rightPattern":{"type":"object","id":4921,"cls":"Result52","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate52"},{"type":"beta","out_nodes":[[11640,-1]],"__id":26821,"parentNodes":[11643,11644]},{"type":"type","out_nodes":[[3,4470]],"__id":26822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result52"}},{"type":"rightadapter","out_nodes":[[11641,4470]],"__id":26825,"parentNodes":[4]},{"type":"join","out_nodes":[[11645,-1]],"__id":26826,"parentNodes":[11647,11648],"constraint":{"type":"join-reference","out_nodes":[],"__id":26827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11641,-1]],"__id":26828,"parentNodes":[]},{"type":"type","out_nodes":[[9,4471],[14,4472],[20,4473],[30,4475],[20,4477],[30,4478]],"__id":26829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci52"}},{"type":"rightadapter","out_nodes":[[11644,4471]],"__id":26832,"parentNodes":[10]},{"type":"join","out_nodes":[[11649,-1]],"__id":26833,"parentNodes":[11650,11651],"constraint":{"type":"join-reference","out_nodes":[],"__id":26834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11644,-1]],"__id":26835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11648,4472]],"__id":26840,"parentNodes":[16]},{"type":"beta","out_nodes":[[11652,-1]],"__id":26841,"parentNodes":[11653,11654]},{"type":"leftadapter","out_nodes":[[11648,-1]],"__id":26842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11651,4473]],"__id":26847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11651,4474]],"__id":26851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26852,"parentNodes":[11656],"index":1342,"rule":{"name":"Bootstrap52","pattern":{"type":"object","id":4925,"cls":"Fibonacci52","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap52"},{"type":"beta","out_nodes":[[11655,-1]],"__id":26853,"parentNodes":[11657,11658]},{"type":"rightadapter","out_nodes":[[11656,4475]],"__id":26858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11656,4476]],"__id":26862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26863,"parentNodes":[11660],"index":1343,"rule":{"name":"Recurse52","pattern":{"type":"composite","id":4928,"leftPattern":{"type":"not","id":4926,"cls":"Fibonacci52","alias":"f"},"rightPattern":{"type":"object","id":4927,"cls":"Fibonacci52","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci52 = defined.get('Fibonacci52');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci52(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse52"},{"type":"beta","out_nodes":[[11659,-1]],"__id":26864,"parentNodes":[11661,11662]},{"type":"rightadapter","out_nodes":[[11660,4477]],"__id":26868,"parentNodes":[37]},{"type":"not","out_nodes":[[11663,-1]],"__id":26869,"parentNodes":[11664,11665],"constraint":{"type":"join-reference","out_nodes":[],"__id":26870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11660,-1]],"__id":26871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11662,4478]],"__id":26875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11662,4479]],"__id":26879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26880,"parentNodes":[11667],"index":1344,"rule":{"name":"Calculate51","pattern":{"type":"composite","id":4935,"leftPattern":{"type":"composite","id":4934,"leftPattern":{"type":"composite","id":4933,"leftPattern":{"type":"object","id":4929,"cls":"Fibonacci51","alias":"f1"},"rightPattern":{"type":"object","id":4930,"cls":"Fibonacci51","alias":"f2"}},"rightPattern":{"type":"object","id":4931,"cls":"Fibonacci51","alias":"f3"}},"rightPattern":{"type":"object","id":4932,"cls":"Result51","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate51"},{"type":"beta","out_nodes":[[11666,-1]],"__id":26881,"parentNodes":[11669,11670]},{"type":"type","out_nodes":[[3,4480]],"__id":26882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result51"}},{"type":"rightadapter","out_nodes":[[11667,4480]],"__id":26885,"parentNodes":[4]},{"type":"join","out_nodes":[[11671,-1]],"__id":26886,"parentNodes":[11673,11674],"constraint":{"type":"join-reference","out_nodes":[],"__id":26887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11667,-1]],"__id":26888,"parentNodes":[]},{"type":"type","out_nodes":[[9,4481],[14,4482],[20,4483],[30,4485],[20,4487],[30,4488]],"__id":26889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci51"}},{"type":"rightadapter","out_nodes":[[11670,4481]],"__id":26892,"parentNodes":[10]},{"type":"join","out_nodes":[[11675,-1]],"__id":26893,"parentNodes":[11676,11677],"constraint":{"type":"join-reference","out_nodes":[],"__id":26894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11670,-1]],"__id":26895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11674,4482]],"__id":26900,"parentNodes":[16]},{"type":"beta","out_nodes":[[11678,-1]],"__id":26901,"parentNodes":[11679,11680]},{"type":"leftadapter","out_nodes":[[11674,-1]],"__id":26902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11677,4483]],"__id":26907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11677,4484]],"__id":26911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26912,"parentNodes":[11682],"index":1345,"rule":{"name":"Bootstrap51","pattern":{"type":"object","id":4936,"cls":"Fibonacci51","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap51"},{"type":"beta","out_nodes":[[11681,-1]],"__id":26913,"parentNodes":[11683,11684]},{"type":"rightadapter","out_nodes":[[11682,4485]],"__id":26918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11682,4486]],"__id":26922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26923,"parentNodes":[11686],"index":1346,"rule":{"name":"Recurse51","pattern":{"type":"composite","id":4939,"leftPattern":{"type":"not","id":4937,"cls":"Fibonacci51","alias":"f"},"rightPattern":{"type":"object","id":4938,"cls":"Fibonacci51","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci51 = defined.get('Fibonacci51');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci51(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse51"},{"type":"beta","out_nodes":[[11685,-1]],"__id":26924,"parentNodes":[11687,11688]},{"type":"rightadapter","out_nodes":[[11686,4487]],"__id":26928,"parentNodes":[37]},{"type":"not","out_nodes":[[11689,-1]],"__id":26929,"parentNodes":[11690,11691],"constraint":{"type":"join-reference","out_nodes":[],"__id":26930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11686,-1]],"__id":26931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11688,4488]],"__id":26935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11688,4489]],"__id":26939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26940,"parentNodes":[11693],"index":1347,"rule":{"name":"Calculate50","pattern":{"type":"composite","id":4946,"leftPattern":{"type":"composite","id":4945,"leftPattern":{"type":"composite","id":4944,"leftPattern":{"type":"object","id":4940,"cls":"Fibonacci50","alias":"f1"},"rightPattern":{"type":"object","id":4941,"cls":"Fibonacci50","alias":"f2"}},"rightPattern":{"type":"object","id":4942,"cls":"Fibonacci50","alias":"f3"}},"rightPattern":{"type":"object","id":4943,"cls":"Result50","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate50"},{"type":"beta","out_nodes":[[11692,-1]],"__id":26941,"parentNodes":[11695,11696]},{"type":"type","out_nodes":[[3,4490]],"__id":26942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result50"}},{"type":"rightadapter","out_nodes":[[11693,4490]],"__id":26945,"parentNodes":[4]},{"type":"join","out_nodes":[[11697,-1]],"__id":26946,"parentNodes":[11699,11700],"constraint":{"type":"join-reference","out_nodes":[],"__id":26947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11693,-1]],"__id":26948,"parentNodes":[]},{"type":"type","out_nodes":[[9,4491],[14,4492],[20,4493],[30,4495],[20,4497],[30,4498]],"__id":26949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci50"}},{"type":"rightadapter","out_nodes":[[11696,4491]],"__id":26952,"parentNodes":[10]},{"type":"join","out_nodes":[[11701,-1]],"__id":26953,"parentNodes":[11702,11703],"constraint":{"type":"join-reference","out_nodes":[],"__id":26954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11696,-1]],"__id":26955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11700,4492]],"__id":26960,"parentNodes":[16]},{"type":"beta","out_nodes":[[11704,-1]],"__id":26961,"parentNodes":[11705,11706]},{"type":"leftadapter","out_nodes":[[11700,-1]],"__id":26962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11703,4493]],"__id":26967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11703,4494]],"__id":26971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26972,"parentNodes":[11708],"index":1348,"rule":{"name":"Bootstrap50","pattern":{"type":"object","id":4947,"cls":"Fibonacci50","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap50"},{"type":"beta","out_nodes":[[11707,-1]],"__id":26973,"parentNodes":[11709,11710]},{"type":"rightadapter","out_nodes":[[11708,4495]],"__id":26978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11708,4496]],"__id":26982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":26983,"parentNodes":[11712],"index":1349,"rule":{"name":"Recurse50","pattern":{"type":"composite","id":4950,"leftPattern":{"type":"not","id":4948,"cls":"Fibonacci50","alias":"f"},"rightPattern":{"type":"object","id":4949,"cls":"Fibonacci50","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');let Fibonacci50 = defined.get('Fibonacci50');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci50(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse50"},{"type":"beta","out_nodes":[[11711,-1]],"__id":26984,"parentNodes":[11713,11714]},{"type":"rightadapter","out_nodes":[[11712,4497]],"__id":26988,"parentNodes":[37]},{"type":"not","out_nodes":[[11715,-1]],"__id":26989,"parentNodes":[11716,11717],"constraint":{"type":"join-reference","out_nodes":[],"__id":26990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11712,-1]],"__id":26991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11714,4498]],"__id":26995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11714,4499]],"__id":26999,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27000,"parentNodes":[11719],"index":1350,"rule":{"name":"Calculate49","pattern":{"type":"composite","id":4957,"leftPattern":{"type":"composite","id":4956,"leftPattern":{"type":"composite","id":4955,"leftPattern":{"type":"object","id":4951,"cls":"Fibonacci49","alias":"f1"},"rightPattern":{"type":"object","id":4952,"cls":"Fibonacci49","alias":"f2"}},"rightPattern":{"type":"object","id":4953,"cls":"Fibonacci49","alias":"f3"}},"rightPattern":{"type":"object","id":4954,"cls":"Result49","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate49"},{"type":"beta","out_nodes":[[11718,-1]],"__id":27001,"parentNodes":[11721,11722]},{"type":"type","out_nodes":[[3,4500]],"__id":27002,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result49"}},{"type":"rightadapter","out_nodes":[[11719,4500]],"__id":27005,"parentNodes":[4]},{"type":"join","out_nodes":[[11723,-1]],"__id":27006,"parentNodes":[11725,11726],"constraint":{"type":"join-reference","out_nodes":[],"__id":27007,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11719,-1]],"__id":27008,"parentNodes":[]},{"type":"type","out_nodes":[[9,4501],[14,4502],[20,4503],[30,4505],[20,4507],[30,4508]],"__id":27009,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci49"}},{"type":"rightadapter","out_nodes":[[11722,4501]],"__id":27012,"parentNodes":[10]},{"type":"join","out_nodes":[[11727,-1]],"__id":27013,"parentNodes":[11728,11729],"constraint":{"type":"join-reference","out_nodes":[],"__id":27014,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11722,-1]],"__id":27015,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11726,4502]],"__id":27020,"parentNodes":[16]},{"type":"beta","out_nodes":[[11730,-1]],"__id":27021,"parentNodes":[11731,11732]},{"type":"leftadapter","out_nodes":[[11726,-1]],"__id":27022,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11729,4503]],"__id":27027,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11729,4504]],"__id":27031,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27032,"parentNodes":[11734],"index":1351,"rule":{"name":"Bootstrap49","pattern":{"type":"object","id":4958,"cls":"Fibonacci49","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap49"},{"type":"beta","out_nodes":[[11733,-1]],"__id":27033,"parentNodes":[11735,11736]},{"type":"rightadapter","out_nodes":[[11734,4505]],"__id":27038,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11734,4506]],"__id":27042,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27043,"parentNodes":[11738],"index":1352,"rule":{"name":"Recurse49","pattern":{"type":"composite","id":4961,"leftPattern":{"type":"not","id":4959,"cls":"Fibonacci49","alias":"f"},"rightPattern":{"type":"object","id":4960,"cls":"Fibonacci49","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci49 = defined.get('Fibonacci49');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci49(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse49"},{"type":"beta","out_nodes":[[11737,-1]],"__id":27044,"parentNodes":[11739,11740]},{"type":"rightadapter","out_nodes":[[11738,4507]],"__id":27048,"parentNodes":[37]},{"type":"not","out_nodes":[[11741,-1]],"__id":27049,"parentNodes":[11742,11743],"constraint":{"type":"join-reference","out_nodes":[],"__id":27050,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11738,-1]],"__id":27051,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11740,4508]],"__id":27055,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11740,4509]],"__id":27059,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27060,"parentNodes":[11745],"index":1353,"rule":{"name":"Calculate48","pattern":{"type":"composite","id":4968,"leftPattern":{"type":"composite","id":4967,"leftPattern":{"type":"composite","id":4966,"leftPattern":{"type":"object","id":4962,"cls":"Fibonacci48","alias":"f1"},"rightPattern":{"type":"object","id":4963,"cls":"Fibonacci48","alias":"f2"}},"rightPattern":{"type":"object","id":4964,"cls":"Fibonacci48","alias":"f3"}},"rightPattern":{"type":"object","id":4965,"cls":"Result48","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate48"},{"type":"beta","out_nodes":[[11744,-1]],"__id":27061,"parentNodes":[11747,11748]},{"type":"type","out_nodes":[[3,4510]],"__id":27062,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result48"}},{"type":"rightadapter","out_nodes":[[11745,4510]],"__id":27065,"parentNodes":[4]},{"type":"join","out_nodes":[[11749,-1]],"__id":27066,"parentNodes":[11751,11752],"constraint":{"type":"join-reference","out_nodes":[],"__id":27067,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11745,-1]],"__id":27068,"parentNodes":[]},{"type":"type","out_nodes":[[9,4511],[14,4512],[20,4513],[30,4515],[20,4517],[30,4518]],"__id":27069,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci48"}},{"type":"rightadapter","out_nodes":[[11748,4511]],"__id":27072,"parentNodes":[10]},{"type":"join","out_nodes":[[11753,-1]],"__id":27073,"parentNodes":[11754,11755],"constraint":{"type":"join-reference","out_nodes":[],"__id":27074,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11748,-1]],"__id":27075,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11752,4512]],"__id":27080,"parentNodes":[16]},{"type":"beta","out_nodes":[[11756,-1]],"__id":27081,"parentNodes":[11757,11758]},{"type":"leftadapter","out_nodes":[[11752,-1]],"__id":27082,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11755,4513]],"__id":27087,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11755,4514]],"__id":27091,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27092,"parentNodes":[11760],"index":1354,"rule":{"name":"Bootstrap48","pattern":{"type":"object","id":4969,"cls":"Fibonacci48","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap48"},{"type":"beta","out_nodes":[[11759,-1]],"__id":27093,"parentNodes":[11761,11762]},{"type":"rightadapter","out_nodes":[[11760,4515]],"__id":27098,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11760,4516]],"__id":27102,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27103,"parentNodes":[11764],"index":1355,"rule":{"name":"Recurse48","pattern":{"type":"composite","id":4972,"leftPattern":{"type":"not","id":4970,"cls":"Fibonacci48","alias":"f"},"rightPattern":{"type":"object","id":4971,"cls":"Fibonacci48","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci48 = defined.get('Fibonacci48');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci48(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse48"},{"type":"beta","out_nodes":[[11763,-1]],"__id":27104,"parentNodes":[11765,11766]},{"type":"rightadapter","out_nodes":[[11764,4517]],"__id":27108,"parentNodes":[37]},{"type":"not","out_nodes":[[11767,-1]],"__id":27109,"parentNodes":[11768,11769],"constraint":{"type":"join-reference","out_nodes":[],"__id":27110,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11764,-1]],"__id":27111,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11766,4518]],"__id":27115,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11766,4519]],"__id":27119,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27120,"parentNodes":[11771],"index":1356,"rule":{"name":"Calculate47","pattern":{"type":"composite","id":4979,"leftPattern":{"type":"composite","id":4978,"leftPattern":{"type":"composite","id":4977,"leftPattern":{"type":"object","id":4973,"cls":"Fibonacci47","alias":"f1"},"rightPattern":{"type":"object","id":4974,"cls":"Fibonacci47","alias":"f2"}},"rightPattern":{"type":"object","id":4975,"cls":"Fibonacci47","alias":"f3"}},"rightPattern":{"type":"object","id":4976,"cls":"Result47","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate47"},{"type":"beta","out_nodes":[[11770,-1]],"__id":27121,"parentNodes":[11773,11774]},{"type":"type","out_nodes":[[3,4520]],"__id":27122,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result47"}},{"type":"rightadapter","out_nodes":[[11771,4520]],"__id":27125,"parentNodes":[4]},{"type":"join","out_nodes":[[11775,-1]],"__id":27126,"parentNodes":[11777,11778],"constraint":{"type":"join-reference","out_nodes":[],"__id":27127,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11771,-1]],"__id":27128,"parentNodes":[]},{"type":"type","out_nodes":[[9,4521],[14,4522],[20,4523],[30,4525],[20,4527],[30,4528]],"__id":27129,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci47"}},{"type":"rightadapter","out_nodes":[[11774,4521]],"__id":27132,"parentNodes":[10]},{"type":"join","out_nodes":[[11779,-1]],"__id":27133,"parentNodes":[11780,11781],"constraint":{"type":"join-reference","out_nodes":[],"__id":27134,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11774,-1]],"__id":27135,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11778,4522]],"__id":27140,"parentNodes":[16]},{"type":"beta","out_nodes":[[11782,-1]],"__id":27141,"parentNodes":[11783,11784]},{"type":"leftadapter","out_nodes":[[11778,-1]],"__id":27142,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11781,4523]],"__id":27147,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11781,4524]],"__id":27151,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27152,"parentNodes":[11786],"index":1357,"rule":{"name":"Bootstrap47","pattern":{"type":"object","id":4980,"cls":"Fibonacci47","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap47"},{"type":"beta","out_nodes":[[11785,-1]],"__id":27153,"parentNodes":[11787,11788]},{"type":"rightadapter","out_nodes":[[11786,4525]],"__id":27158,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11786,4526]],"__id":27162,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27163,"parentNodes":[11790],"index":1358,"rule":{"name":"Recurse47","pattern":{"type":"composite","id":4983,"leftPattern":{"type":"not","id":4981,"cls":"Fibonacci47","alias":"f"},"rightPattern":{"type":"object","id":4982,"cls":"Fibonacci47","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci47 = defined.get('Fibonacci47');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci47(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse47"},{"type":"beta","out_nodes":[[11789,-1]],"__id":27164,"parentNodes":[11791,11792]},{"type":"rightadapter","out_nodes":[[11790,4527]],"__id":27168,"parentNodes":[37]},{"type":"not","out_nodes":[[11793,-1]],"__id":27169,"parentNodes":[11794,11795],"constraint":{"type":"join-reference","out_nodes":[],"__id":27170,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11790,-1]],"__id":27171,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11792,4528]],"__id":27175,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11792,4529]],"__id":27179,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27180,"parentNodes":[11797],"index":1359,"rule":{"name":"Calculate46","pattern":{"type":"composite","id":4990,"leftPattern":{"type":"composite","id":4989,"leftPattern":{"type":"composite","id":4988,"leftPattern":{"type":"object","id":4984,"cls":"Fibonacci46","alias":"f1"},"rightPattern":{"type":"object","id":4985,"cls":"Fibonacci46","alias":"f2"}},"rightPattern":{"type":"object","id":4986,"cls":"Fibonacci46","alias":"f3"}},"rightPattern":{"type":"object","id":4987,"cls":"Result46","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate46"},{"type":"beta","out_nodes":[[11796,-1]],"__id":27181,"parentNodes":[11799,11800]},{"type":"type","out_nodes":[[3,4530]],"__id":27182,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result46"}},{"type":"rightadapter","out_nodes":[[11797,4530]],"__id":27185,"parentNodes":[4]},{"type":"join","out_nodes":[[11801,-1]],"__id":27186,"parentNodes":[11803,11804],"constraint":{"type":"join-reference","out_nodes":[],"__id":27187,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11797,-1]],"__id":27188,"parentNodes":[]},{"type":"type","out_nodes":[[9,4531],[14,4532],[20,4533],[30,4535],[20,4537],[30,4538]],"__id":27189,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci46"}},{"type":"rightadapter","out_nodes":[[11800,4531]],"__id":27192,"parentNodes":[10]},{"type":"join","out_nodes":[[11805,-1]],"__id":27193,"parentNodes":[11806,11807],"constraint":{"type":"join-reference","out_nodes":[],"__id":27194,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11800,-1]],"__id":27195,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11804,4532]],"__id":27200,"parentNodes":[16]},{"type":"beta","out_nodes":[[11808,-1]],"__id":27201,"parentNodes":[11809,11810]},{"type":"leftadapter","out_nodes":[[11804,-1]],"__id":27202,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11807,4533]],"__id":27207,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11807,4534]],"__id":27211,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27212,"parentNodes":[11812],"index":1360,"rule":{"name":"Bootstrap46","pattern":{"type":"object","id":4991,"cls":"Fibonacci46","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap46"},{"type":"beta","out_nodes":[[11811,-1]],"__id":27213,"parentNodes":[11813,11814]},{"type":"rightadapter","out_nodes":[[11812,4535]],"__id":27218,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11812,4536]],"__id":27222,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27223,"parentNodes":[11816],"index":1361,"rule":{"name":"Recurse46","pattern":{"type":"composite","id":4994,"leftPattern":{"type":"not","id":4992,"cls":"Fibonacci46","alias":"f"},"rightPattern":{"type":"object","id":4993,"cls":"Fibonacci46","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci46 = defined.get('Fibonacci46');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci46(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse46"},{"type":"beta","out_nodes":[[11815,-1]],"__id":27224,"parentNodes":[11817,11818]},{"type":"rightadapter","out_nodes":[[11816,4537]],"__id":27228,"parentNodes":[37]},{"type":"not","out_nodes":[[11819,-1]],"__id":27229,"parentNodes":[11820,11821],"constraint":{"type":"join-reference","out_nodes":[],"__id":27230,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11816,-1]],"__id":27231,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11818,4538]],"__id":27235,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11818,4539]],"__id":27239,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27240,"parentNodes":[11823],"index":1362,"rule":{"name":"Calculate45","pattern":{"type":"composite","id":5001,"leftPattern":{"type":"composite","id":5000,"leftPattern":{"type":"composite","id":4999,"leftPattern":{"type":"object","id":4995,"cls":"Fibonacci45","alias":"f1"},"rightPattern":{"type":"object","id":4996,"cls":"Fibonacci45","alias":"f2"}},"rightPattern":{"type":"object","id":4997,"cls":"Fibonacci45","alias":"f3"}},"rightPattern":{"type":"object","id":4998,"cls":"Result45","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate45"},{"type":"beta","out_nodes":[[11822,-1]],"__id":27241,"parentNodes":[11825,11826]},{"type":"type","out_nodes":[[3,4540]],"__id":27242,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result45"}},{"type":"rightadapter","out_nodes":[[11823,4540]],"__id":27245,"parentNodes":[4]},{"type":"join","out_nodes":[[11827,-1]],"__id":27246,"parentNodes":[11829,11830],"constraint":{"type":"join-reference","out_nodes":[],"__id":27247,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11823,-1]],"__id":27248,"parentNodes":[]},{"type":"type","out_nodes":[[9,4541],[14,4542],[20,4543],[30,4545],[20,4547],[30,4548]],"__id":27249,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci45"}},{"type":"rightadapter","out_nodes":[[11826,4541]],"__id":27252,"parentNodes":[10]},{"type":"join","out_nodes":[[11831,-1]],"__id":27253,"parentNodes":[11832,11833],"constraint":{"type":"join-reference","out_nodes":[],"__id":27254,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11826,-1]],"__id":27255,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11830,4542]],"__id":27260,"parentNodes":[16]},{"type":"beta","out_nodes":[[11834,-1]],"__id":27261,"parentNodes":[11835,11836]},{"type":"leftadapter","out_nodes":[[11830,-1]],"__id":27262,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11833,4543]],"__id":27267,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11833,4544]],"__id":27271,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27272,"parentNodes":[11838],"index":1363,"rule":{"name":"Bootstrap45","pattern":{"type":"object","id":5002,"cls":"Fibonacci45","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap45"},{"type":"beta","out_nodes":[[11837,-1]],"__id":27273,"parentNodes":[11839,11840]},{"type":"rightadapter","out_nodes":[[11838,4545]],"__id":27278,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11838,4546]],"__id":27282,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27283,"parentNodes":[11842],"index":1364,"rule":{"name":"Recurse45","pattern":{"type":"composite","id":5005,"leftPattern":{"type":"not","id":5003,"cls":"Fibonacci45","alias":"f"},"rightPattern":{"type":"object","id":5004,"cls":"Fibonacci45","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci45 = defined.get('Fibonacci45');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci45(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse45"},{"type":"beta","out_nodes":[[11841,-1]],"__id":27284,"parentNodes":[11843,11844]},{"type":"rightadapter","out_nodes":[[11842,4547]],"__id":27288,"parentNodes":[37]},{"type":"not","out_nodes":[[11845,-1]],"__id":27289,"parentNodes":[11846,11847],"constraint":{"type":"join-reference","out_nodes":[],"__id":27290,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11842,-1]],"__id":27291,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11844,4548]],"__id":27295,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11844,4549]],"__id":27299,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27300,"parentNodes":[11849],"index":1365,"rule":{"name":"Calculate44","pattern":{"type":"composite","id":5012,"leftPattern":{"type":"composite","id":5011,"leftPattern":{"type":"composite","id":5010,"leftPattern":{"type":"object","id":5006,"cls":"Fibonacci44","alias":"f1"},"rightPattern":{"type":"object","id":5007,"cls":"Fibonacci44","alias":"f2"}},"rightPattern":{"type":"object","id":5008,"cls":"Fibonacci44","alias":"f3"}},"rightPattern":{"type":"object","id":5009,"cls":"Result44","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate44"},{"type":"beta","out_nodes":[[11848,-1]],"__id":27301,"parentNodes":[11851,11852]},{"type":"type","out_nodes":[[3,4550]],"__id":27302,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result44"}},{"type":"rightadapter","out_nodes":[[11849,4550]],"__id":27305,"parentNodes":[4]},{"type":"join","out_nodes":[[11853,-1]],"__id":27306,"parentNodes":[11855,11856],"constraint":{"type":"join-reference","out_nodes":[],"__id":27307,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11849,-1]],"__id":27308,"parentNodes":[]},{"type":"type","out_nodes":[[9,4551],[14,4552],[20,4553],[30,4555],[20,4557],[30,4558]],"__id":27309,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci44"}},{"type":"rightadapter","out_nodes":[[11852,4551]],"__id":27312,"parentNodes":[10]},{"type":"join","out_nodes":[[11857,-1]],"__id":27313,"parentNodes":[11858,11859],"constraint":{"type":"join-reference","out_nodes":[],"__id":27314,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11852,-1]],"__id":27315,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11856,4552]],"__id":27320,"parentNodes":[16]},{"type":"beta","out_nodes":[[11860,-1]],"__id":27321,"parentNodes":[11861,11862]},{"type":"leftadapter","out_nodes":[[11856,-1]],"__id":27322,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11859,4553]],"__id":27327,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11859,4554]],"__id":27331,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27332,"parentNodes":[11864],"index":1366,"rule":{"name":"Bootstrap44","pattern":{"type":"object","id":5013,"cls":"Fibonacci44","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap44"},{"type":"beta","out_nodes":[[11863,-1]],"__id":27333,"parentNodes":[11865,11866]},{"type":"rightadapter","out_nodes":[[11864,4555]],"__id":27338,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11864,4556]],"__id":27342,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27343,"parentNodes":[11868],"index":1367,"rule":{"name":"Recurse44","pattern":{"type":"composite","id":5016,"leftPattern":{"type":"not","id":5014,"cls":"Fibonacci44","alias":"f"},"rightPattern":{"type":"object","id":5015,"cls":"Fibonacci44","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci44 = defined.get('Fibonacci44');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci44(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse44"},{"type":"beta","out_nodes":[[11867,-1]],"__id":27344,"parentNodes":[11869,11870]},{"type":"rightadapter","out_nodes":[[11868,4557]],"__id":27348,"parentNodes":[37]},{"type":"not","out_nodes":[[11871,-1]],"__id":27349,"parentNodes":[11872,11873],"constraint":{"type":"join-reference","out_nodes":[],"__id":27350,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11868,-1]],"__id":27351,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11870,4558]],"__id":27355,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11870,4559]],"__id":27359,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27360,"parentNodes":[11875],"index":1368,"rule":{"name":"Calculate43","pattern":{"type":"composite","id":5023,"leftPattern":{"type":"composite","id":5022,"leftPattern":{"type":"composite","id":5021,"leftPattern":{"type":"object","id":5017,"cls":"Fibonacci43","alias":"f1"},"rightPattern":{"type":"object","id":5018,"cls":"Fibonacci43","alias":"f2"}},"rightPattern":{"type":"object","id":5019,"cls":"Fibonacci43","alias":"f3"}},"rightPattern":{"type":"object","id":5020,"cls":"Result43","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate43"},{"type":"beta","out_nodes":[[11874,-1]],"__id":27361,"parentNodes":[11877,11878]},{"type":"type","out_nodes":[[3,4560]],"__id":27362,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result43"}},{"type":"rightadapter","out_nodes":[[11875,4560]],"__id":27365,"parentNodes":[4]},{"type":"join","out_nodes":[[11879,-1]],"__id":27366,"parentNodes":[11881,11882],"constraint":{"type":"join-reference","out_nodes":[],"__id":27367,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11875,-1]],"__id":27368,"parentNodes":[]},{"type":"type","out_nodes":[[9,4561],[14,4562],[20,4563],[30,4565],[20,4567],[30,4568]],"__id":27369,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci43"}},{"type":"rightadapter","out_nodes":[[11878,4561]],"__id":27372,"parentNodes":[10]},{"type":"join","out_nodes":[[11883,-1]],"__id":27373,"parentNodes":[11884,11885],"constraint":{"type":"join-reference","out_nodes":[],"__id":27374,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11878,-1]],"__id":27375,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11882,4562]],"__id":27380,"parentNodes":[16]},{"type":"beta","out_nodes":[[11886,-1]],"__id":27381,"parentNodes":[11887,11888]},{"type":"leftadapter","out_nodes":[[11882,-1]],"__id":27382,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11885,4563]],"__id":27387,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11885,4564]],"__id":27391,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27392,"parentNodes":[11890],"index":1369,"rule":{"name":"Bootstrap43","pattern":{"type":"object","id":5024,"cls":"Fibonacci43","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap43"},{"type":"beta","out_nodes":[[11889,-1]],"__id":27393,"parentNodes":[11891,11892]},{"type":"rightadapter","out_nodes":[[11890,4565]],"__id":27398,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11890,4566]],"__id":27402,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27403,"parentNodes":[11894],"index":1370,"rule":{"name":"Recurse43","pattern":{"type":"composite","id":5027,"leftPattern":{"type":"not","id":5025,"cls":"Fibonacci43","alias":"f"},"rightPattern":{"type":"object","id":5026,"cls":"Fibonacci43","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci43 = defined.get('Fibonacci43');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci43(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse43"},{"type":"beta","out_nodes":[[11893,-1]],"__id":27404,"parentNodes":[11895,11896]},{"type":"rightadapter","out_nodes":[[11894,4567]],"__id":27408,"parentNodes":[37]},{"type":"not","out_nodes":[[11897,-1]],"__id":27409,"parentNodes":[11898,11899],"constraint":{"type":"join-reference","out_nodes":[],"__id":27410,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11894,-1]],"__id":27411,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11896,4568]],"__id":27415,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11896,4569]],"__id":27419,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27420,"parentNodes":[11901],"index":1371,"rule":{"name":"Calculate42","pattern":{"type":"composite","id":5034,"leftPattern":{"type":"composite","id":5033,"leftPattern":{"type":"composite","id":5032,"leftPattern":{"type":"object","id":5028,"cls":"Fibonacci42","alias":"f1"},"rightPattern":{"type":"object","id":5029,"cls":"Fibonacci42","alias":"f2"}},"rightPattern":{"type":"object","id":5030,"cls":"Fibonacci42","alias":"f3"}},"rightPattern":{"type":"object","id":5031,"cls":"Result42","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate42"},{"type":"beta","out_nodes":[[11900,-1]],"__id":27421,"parentNodes":[11903,11904]},{"type":"type","out_nodes":[[3,4570]],"__id":27422,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result42"}},{"type":"rightadapter","out_nodes":[[11901,4570]],"__id":27425,"parentNodes":[4]},{"type":"join","out_nodes":[[11905,-1]],"__id":27426,"parentNodes":[11907,11908],"constraint":{"type":"join-reference","out_nodes":[],"__id":27427,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11901,-1]],"__id":27428,"parentNodes":[]},{"type":"type","out_nodes":[[9,4571],[14,4572],[20,4573],[30,4575],[20,4577],[30,4578]],"__id":27429,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci42"}},{"type":"rightadapter","out_nodes":[[11904,4571]],"__id":27432,"parentNodes":[10]},{"type":"join","out_nodes":[[11909,-1]],"__id":27433,"parentNodes":[11910,11911],"constraint":{"type":"join-reference","out_nodes":[],"__id":27434,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11904,-1]],"__id":27435,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11908,4572]],"__id":27440,"parentNodes":[16]},{"type":"beta","out_nodes":[[11912,-1]],"__id":27441,"parentNodes":[11913,11914]},{"type":"leftadapter","out_nodes":[[11908,-1]],"__id":27442,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11911,4573]],"__id":27447,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11911,4574]],"__id":27451,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27452,"parentNodes":[11916],"index":1372,"rule":{"name":"Bootstrap42","pattern":{"type":"object","id":5035,"cls":"Fibonacci42","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap42"},{"type":"beta","out_nodes":[[11915,-1]],"__id":27453,"parentNodes":[11917,11918]},{"type":"rightadapter","out_nodes":[[11916,4575]],"__id":27458,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11916,4576]],"__id":27462,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27463,"parentNodes":[11920],"index":1373,"rule":{"name":"Recurse42","pattern":{"type":"composite","id":5038,"leftPattern":{"type":"not","id":5036,"cls":"Fibonacci42","alias":"f"},"rightPattern":{"type":"object","id":5037,"cls":"Fibonacci42","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci42 = defined.get('Fibonacci42');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci42(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse42"},{"type":"beta","out_nodes":[[11919,-1]],"__id":27464,"parentNodes":[11921,11922]},{"type":"rightadapter","out_nodes":[[11920,4577]],"__id":27468,"parentNodes":[37]},{"type":"not","out_nodes":[[11923,-1]],"__id":27469,"parentNodes":[11924,11925],"constraint":{"type":"join-reference","out_nodes":[],"__id":27470,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11920,-1]],"__id":27471,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11922,4578]],"__id":27475,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11922,4579]],"__id":27479,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27480,"parentNodes":[11927],"index":1374,"rule":{"name":"Calculate41","pattern":{"type":"composite","id":5045,"leftPattern":{"type":"composite","id":5044,"leftPattern":{"type":"composite","id":5043,"leftPattern":{"type":"object","id":5039,"cls":"Fibonacci41","alias":"f1"},"rightPattern":{"type":"object","id":5040,"cls":"Fibonacci41","alias":"f2"}},"rightPattern":{"type":"object","id":5041,"cls":"Fibonacci41","alias":"f3"}},"rightPattern":{"type":"object","id":5042,"cls":"Result41","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate41"},{"type":"beta","out_nodes":[[11926,-1]],"__id":27481,"parentNodes":[11929,11930]},{"type":"type","out_nodes":[[3,4580]],"__id":27482,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result41"}},{"type":"rightadapter","out_nodes":[[11927,4580]],"__id":27485,"parentNodes":[4]},{"type":"join","out_nodes":[[11931,-1]],"__id":27486,"parentNodes":[11933,11934],"constraint":{"type":"join-reference","out_nodes":[],"__id":27487,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11927,-1]],"__id":27488,"parentNodes":[]},{"type":"type","out_nodes":[[9,4581],[14,4582],[20,4583],[30,4585],[20,4587],[30,4588]],"__id":27489,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci41"}},{"type":"rightadapter","out_nodes":[[11930,4581]],"__id":27492,"parentNodes":[10]},{"type":"join","out_nodes":[[11935,-1]],"__id":27493,"parentNodes":[11936,11937],"constraint":{"type":"join-reference","out_nodes":[],"__id":27494,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11930,-1]],"__id":27495,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11934,4582]],"__id":27500,"parentNodes":[16]},{"type":"beta","out_nodes":[[11938,-1]],"__id":27501,"parentNodes":[11939,11940]},{"type":"leftadapter","out_nodes":[[11934,-1]],"__id":27502,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11937,4583]],"__id":27507,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11937,4584]],"__id":27511,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27512,"parentNodes":[11942],"index":1375,"rule":{"name":"Bootstrap41","pattern":{"type":"object","id":5046,"cls":"Fibonacci41","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap41"},{"type":"beta","out_nodes":[[11941,-1]],"__id":27513,"parentNodes":[11943,11944]},{"type":"rightadapter","out_nodes":[[11942,4585]],"__id":27518,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11942,4586]],"__id":27522,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27523,"parentNodes":[11946],"index":1376,"rule":{"name":"Recurse41","pattern":{"type":"composite","id":5049,"leftPattern":{"type":"not","id":5047,"cls":"Fibonacci41","alias":"f"},"rightPattern":{"type":"object","id":5048,"cls":"Fibonacci41","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci41 = defined.get('Fibonacci41');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci41(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse41"},{"type":"beta","out_nodes":[[11945,-1]],"__id":27524,"parentNodes":[11947,11948]},{"type":"rightadapter","out_nodes":[[11946,4587]],"__id":27528,"parentNodes":[37]},{"type":"not","out_nodes":[[11949,-1]],"__id":27529,"parentNodes":[11950,11951],"constraint":{"type":"join-reference","out_nodes":[],"__id":27530,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11946,-1]],"__id":27531,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11948,4588]],"__id":27535,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11948,4589]],"__id":27539,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27540,"parentNodes":[11953],"index":1377,"rule":{"name":"Calculate40","pattern":{"type":"composite","id":5056,"leftPattern":{"type":"composite","id":5055,"leftPattern":{"type":"composite","id":5054,"leftPattern":{"type":"object","id":5050,"cls":"Fibonacci40","alias":"f1"},"rightPattern":{"type":"object","id":5051,"cls":"Fibonacci40","alias":"f2"}},"rightPattern":{"type":"object","id":5052,"cls":"Fibonacci40","alias":"f3"}},"rightPattern":{"type":"object","id":5053,"cls":"Result40","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate40"},{"type":"beta","out_nodes":[[11952,-1]],"__id":27541,"parentNodes":[11955,11956]},{"type":"type","out_nodes":[[3,4590]],"__id":27542,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result40"}},{"type":"rightadapter","out_nodes":[[11953,4590]],"__id":27545,"parentNodes":[4]},{"type":"join","out_nodes":[[11957,-1]],"__id":27546,"parentNodes":[11959,11960],"constraint":{"type":"join-reference","out_nodes":[],"__id":27547,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11953,-1]],"__id":27548,"parentNodes":[]},{"type":"type","out_nodes":[[9,4591],[14,4592],[20,4593],[30,4595],[20,4597],[30,4598]],"__id":27549,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci40"}},{"type":"rightadapter","out_nodes":[[11956,4591]],"__id":27552,"parentNodes":[10]},{"type":"join","out_nodes":[[11961,-1]],"__id":27553,"parentNodes":[11962,11963],"constraint":{"type":"join-reference","out_nodes":[],"__id":27554,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11956,-1]],"__id":27555,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11960,4592]],"__id":27560,"parentNodes":[16]},{"type":"beta","out_nodes":[[11964,-1]],"__id":27561,"parentNodes":[11965,11966]},{"type":"leftadapter","out_nodes":[[11960,-1]],"__id":27562,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11963,4593]],"__id":27567,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11963,4594]],"__id":27571,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27572,"parentNodes":[11968],"index":1378,"rule":{"name":"Bootstrap40","pattern":{"type":"object","id":5057,"cls":"Fibonacci40","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap40"},{"type":"beta","out_nodes":[[11967,-1]],"__id":27573,"parentNodes":[11969,11970]},{"type":"rightadapter","out_nodes":[[11968,4595]],"__id":27578,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11968,4596]],"__id":27582,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27583,"parentNodes":[11972],"index":1379,"rule":{"name":"Recurse40","pattern":{"type":"composite","id":5060,"leftPattern":{"type":"not","id":5058,"cls":"Fibonacci40","alias":"f"},"rightPattern":{"type":"object","id":5059,"cls":"Fibonacci40","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');let Fibonacci40 = defined.get('Fibonacci40');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci40(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse40"},{"type":"beta","out_nodes":[[11971,-1]],"__id":27584,"parentNodes":[11973,11974]},{"type":"rightadapter","out_nodes":[[11972,4597]],"__id":27588,"parentNodes":[37]},{"type":"not","out_nodes":[[11975,-1]],"__id":27589,"parentNodes":[11976,11977],"constraint":{"type":"join-reference","out_nodes":[],"__id":27590,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11972,-1]],"__id":27591,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11974,4598]],"__id":27595,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[11974,4599]],"__id":27599,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27600,"parentNodes":[11979],"index":1380,"rule":{"name":"Calculate39","pattern":{"type":"composite","id":5067,"leftPattern":{"type":"composite","id":5066,"leftPattern":{"type":"composite","id":5065,"leftPattern":{"type":"object","id":5061,"cls":"Fibonacci39","alias":"f1"},"rightPattern":{"type":"object","id":5062,"cls":"Fibonacci39","alias":"f2"}},"rightPattern":{"type":"object","id":5063,"cls":"Fibonacci39","alias":"f3"}},"rightPattern":{"type":"object","id":5064,"cls":"Result39","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate39"},{"type":"beta","out_nodes":[[11978,-1]],"__id":27601,"parentNodes":[11981,11982]},{"type":"type","out_nodes":[[3,4600]],"__id":27602,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result39"}},{"type":"rightadapter","out_nodes":[[11979,4600]],"__id":27605,"parentNodes":[4]},{"type":"join","out_nodes":[[11983,-1]],"__id":27606,"parentNodes":[11985,11986],"constraint":{"type":"join-reference","out_nodes":[],"__id":27607,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11979,-1]],"__id":27608,"parentNodes":[]},{"type":"type","out_nodes":[[9,4601],[14,4602],[20,4603],[30,4605],[20,4607],[30,4608]],"__id":27609,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci39"}},{"type":"rightadapter","out_nodes":[[11982,4601]],"__id":27612,"parentNodes":[10]},{"type":"join","out_nodes":[[11987,-1]],"__id":27613,"parentNodes":[11988,11989],"constraint":{"type":"join-reference","out_nodes":[],"__id":27614,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[11982,-1]],"__id":27615,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11986,4602]],"__id":27620,"parentNodes":[16]},{"type":"beta","out_nodes":[[11990,-1]],"__id":27621,"parentNodes":[11991,11992]},{"type":"leftadapter","out_nodes":[[11986,-1]],"__id":27622,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[11989,4603]],"__id":27627,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[11989,4604]],"__id":27631,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27632,"parentNodes":[11994],"index":1381,"rule":{"name":"Bootstrap39","pattern":{"type":"object","id":5068,"cls":"Fibonacci39","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap39"},{"type":"beta","out_nodes":[[11993,-1]],"__id":27633,"parentNodes":[11995,11996]},{"type":"rightadapter","out_nodes":[[11994,4605]],"__id":27638,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[11994,4606]],"__id":27642,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27643,"parentNodes":[11998],"index":1382,"rule":{"name":"Recurse39","pattern":{"type":"composite","id":5071,"leftPattern":{"type":"not","id":5069,"cls":"Fibonacci39","alias":"f"},"rightPattern":{"type":"object","id":5070,"cls":"Fibonacci39","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci39 = defined.get('Fibonacci39');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci39(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse39"},{"type":"beta","out_nodes":[[11997,-1]],"__id":27644,"parentNodes":[11999,12000]},{"type":"rightadapter","out_nodes":[[11998,4607]],"__id":27648,"parentNodes":[37]},{"type":"not","out_nodes":[[12001,-1]],"__id":27649,"parentNodes":[12002,12003],"constraint":{"type":"join-reference","out_nodes":[],"__id":27650,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[11998,-1]],"__id":27651,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12000,4608]],"__id":27655,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12000,4609]],"__id":27659,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27660,"parentNodes":[12005],"index":1383,"rule":{"name":"Calculate38","pattern":{"type":"composite","id":5078,"leftPattern":{"type":"composite","id":5077,"leftPattern":{"type":"composite","id":5076,"leftPattern":{"type":"object","id":5072,"cls":"Fibonacci38","alias":"f1"},"rightPattern":{"type":"object","id":5073,"cls":"Fibonacci38","alias":"f2"}},"rightPattern":{"type":"object","id":5074,"cls":"Fibonacci38","alias":"f3"}},"rightPattern":{"type":"object","id":5075,"cls":"Result38","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate38"},{"type":"beta","out_nodes":[[12004,-1]],"__id":27661,"parentNodes":[12007,12008]},{"type":"type","out_nodes":[[3,4610]],"__id":27662,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result38"}},{"type":"rightadapter","out_nodes":[[12005,4610]],"__id":27665,"parentNodes":[4]},{"type":"join","out_nodes":[[12009,-1]],"__id":27666,"parentNodes":[12011,12012],"constraint":{"type":"join-reference","out_nodes":[],"__id":27667,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12005,-1]],"__id":27668,"parentNodes":[]},{"type":"type","out_nodes":[[9,4611],[14,4612],[20,4613],[30,4615],[20,4617],[30,4618]],"__id":27669,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci38"}},{"type":"rightadapter","out_nodes":[[12008,4611]],"__id":27672,"parentNodes":[10]},{"type":"join","out_nodes":[[12013,-1]],"__id":27673,"parentNodes":[12014,12015],"constraint":{"type":"join-reference","out_nodes":[],"__id":27674,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12008,-1]],"__id":27675,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12012,4612]],"__id":27680,"parentNodes":[16]},{"type":"beta","out_nodes":[[12016,-1]],"__id":27681,"parentNodes":[12017,12018]},{"type":"leftadapter","out_nodes":[[12012,-1]],"__id":27682,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12015,4613]],"__id":27687,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12015,4614]],"__id":27691,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27692,"parentNodes":[12020],"index":1384,"rule":{"name":"Bootstrap38","pattern":{"type":"object","id":5079,"cls":"Fibonacci38","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap38"},{"type":"beta","out_nodes":[[12019,-1]],"__id":27693,"parentNodes":[12021,12022]},{"type":"rightadapter","out_nodes":[[12020,4615]],"__id":27698,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12020,4616]],"__id":27702,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27703,"parentNodes":[12024],"index":1385,"rule":{"name":"Recurse38","pattern":{"type":"composite","id":5082,"leftPattern":{"type":"not","id":5080,"cls":"Fibonacci38","alias":"f"},"rightPattern":{"type":"object","id":5081,"cls":"Fibonacci38","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci38 = defined.get('Fibonacci38');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci38(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse38"},{"type":"beta","out_nodes":[[12023,-1]],"__id":27704,"parentNodes":[12025,12026]},{"type":"rightadapter","out_nodes":[[12024,4617]],"__id":27708,"parentNodes":[37]},{"type":"not","out_nodes":[[12027,-1]],"__id":27709,"parentNodes":[12028,12029],"constraint":{"type":"join-reference","out_nodes":[],"__id":27710,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12024,-1]],"__id":27711,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12026,4618]],"__id":27715,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12026,4619]],"__id":27719,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27720,"parentNodes":[12031],"index":1386,"rule":{"name":"Calculate37","pattern":{"type":"composite","id":5089,"leftPattern":{"type":"composite","id":5088,"leftPattern":{"type":"composite","id":5087,"leftPattern":{"type":"object","id":5083,"cls":"Fibonacci37","alias":"f1"},"rightPattern":{"type":"object","id":5084,"cls":"Fibonacci37","alias":"f2"}},"rightPattern":{"type":"object","id":5085,"cls":"Fibonacci37","alias":"f3"}},"rightPattern":{"type":"object","id":5086,"cls":"Result37","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate37"},{"type":"beta","out_nodes":[[12030,-1]],"__id":27721,"parentNodes":[12033,12034]},{"type":"type","out_nodes":[[3,4620]],"__id":27722,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result37"}},{"type":"rightadapter","out_nodes":[[12031,4620]],"__id":27725,"parentNodes":[4]},{"type":"join","out_nodes":[[12035,-1]],"__id":27726,"parentNodes":[12037,12038],"constraint":{"type":"join-reference","out_nodes":[],"__id":27727,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12031,-1]],"__id":27728,"parentNodes":[]},{"type":"type","out_nodes":[[9,4621],[14,4622],[20,4623],[30,4625],[20,4627],[30,4628]],"__id":27729,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci37"}},{"type":"rightadapter","out_nodes":[[12034,4621]],"__id":27732,"parentNodes":[10]},{"type":"join","out_nodes":[[12039,-1]],"__id":27733,"parentNodes":[12040,12041],"constraint":{"type":"join-reference","out_nodes":[],"__id":27734,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12034,-1]],"__id":27735,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12038,4622]],"__id":27740,"parentNodes":[16]},{"type":"beta","out_nodes":[[12042,-1]],"__id":27741,"parentNodes":[12043,12044]},{"type":"leftadapter","out_nodes":[[12038,-1]],"__id":27742,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12041,4623]],"__id":27747,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12041,4624]],"__id":27751,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27752,"parentNodes":[12046],"index":1387,"rule":{"name":"Bootstrap37","pattern":{"type":"object","id":5090,"cls":"Fibonacci37","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap37"},{"type":"beta","out_nodes":[[12045,-1]],"__id":27753,"parentNodes":[12047,12048]},{"type":"rightadapter","out_nodes":[[12046,4625]],"__id":27758,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12046,4626]],"__id":27762,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27763,"parentNodes":[12050],"index":1388,"rule":{"name":"Recurse37","pattern":{"type":"composite","id":5093,"leftPattern":{"type":"not","id":5091,"cls":"Fibonacci37","alias":"f"},"rightPattern":{"type":"object","id":5092,"cls":"Fibonacci37","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci37 = defined.get('Fibonacci37');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci37(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse37"},{"type":"beta","out_nodes":[[12049,-1]],"__id":27764,"parentNodes":[12051,12052]},{"type":"rightadapter","out_nodes":[[12050,4627]],"__id":27768,"parentNodes":[37]},{"type":"not","out_nodes":[[12053,-1]],"__id":27769,"parentNodes":[12054,12055],"constraint":{"type":"join-reference","out_nodes":[],"__id":27770,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12050,-1]],"__id":27771,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12052,4628]],"__id":27775,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12052,4629]],"__id":27779,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27780,"parentNodes":[12057],"index":1389,"rule":{"name":"Calculate36","pattern":{"type":"composite","id":5100,"leftPattern":{"type":"composite","id":5099,"leftPattern":{"type":"composite","id":5098,"leftPattern":{"type":"object","id":5094,"cls":"Fibonacci36","alias":"f1"},"rightPattern":{"type":"object","id":5095,"cls":"Fibonacci36","alias":"f2"}},"rightPattern":{"type":"object","id":5096,"cls":"Fibonacci36","alias":"f3"}},"rightPattern":{"type":"object","id":5097,"cls":"Result36","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate36"},{"type":"beta","out_nodes":[[12056,-1]],"__id":27781,"parentNodes":[12059,12060]},{"type":"type","out_nodes":[[3,4630]],"__id":27782,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result36"}},{"type":"rightadapter","out_nodes":[[12057,4630]],"__id":27785,"parentNodes":[4]},{"type":"join","out_nodes":[[12061,-1]],"__id":27786,"parentNodes":[12063,12064],"constraint":{"type":"join-reference","out_nodes":[],"__id":27787,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12057,-1]],"__id":27788,"parentNodes":[]},{"type":"type","out_nodes":[[9,4631],[14,4632],[20,4633],[30,4635],[20,4637],[30,4638]],"__id":27789,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci36"}},{"type":"rightadapter","out_nodes":[[12060,4631]],"__id":27792,"parentNodes":[10]},{"type":"join","out_nodes":[[12065,-1]],"__id":27793,"parentNodes":[12066,12067],"constraint":{"type":"join-reference","out_nodes":[],"__id":27794,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12060,-1]],"__id":27795,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12064,4632]],"__id":27800,"parentNodes":[16]},{"type":"beta","out_nodes":[[12068,-1]],"__id":27801,"parentNodes":[12069,12070]},{"type":"leftadapter","out_nodes":[[12064,-1]],"__id":27802,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12067,4633]],"__id":27807,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12067,4634]],"__id":27811,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27812,"parentNodes":[12072],"index":1390,"rule":{"name":"Bootstrap36","pattern":{"type":"object","id":5101,"cls":"Fibonacci36","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap36"},{"type":"beta","out_nodes":[[12071,-1]],"__id":27813,"parentNodes":[12073,12074]},{"type":"rightadapter","out_nodes":[[12072,4635]],"__id":27818,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12072,4636]],"__id":27822,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27823,"parentNodes":[12076],"index":1391,"rule":{"name":"Recurse36","pattern":{"type":"composite","id":5104,"leftPattern":{"type":"not","id":5102,"cls":"Fibonacci36","alias":"f"},"rightPattern":{"type":"object","id":5103,"cls":"Fibonacci36","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci36 = defined.get('Fibonacci36');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci36(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse36"},{"type":"beta","out_nodes":[[12075,-1]],"__id":27824,"parentNodes":[12077,12078]},{"type":"rightadapter","out_nodes":[[12076,4637]],"__id":27828,"parentNodes":[37]},{"type":"not","out_nodes":[[12079,-1]],"__id":27829,"parentNodes":[12080,12081],"constraint":{"type":"join-reference","out_nodes":[],"__id":27830,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12076,-1]],"__id":27831,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12078,4638]],"__id":27835,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12078,4639]],"__id":27839,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27840,"parentNodes":[12083],"index":1392,"rule":{"name":"Calculate35","pattern":{"type":"composite","id":5111,"leftPattern":{"type":"composite","id":5110,"leftPattern":{"type":"composite","id":5109,"leftPattern":{"type":"object","id":5105,"cls":"Fibonacci35","alias":"f1"},"rightPattern":{"type":"object","id":5106,"cls":"Fibonacci35","alias":"f2"}},"rightPattern":{"type":"object","id":5107,"cls":"Fibonacci35","alias":"f3"}},"rightPattern":{"type":"object","id":5108,"cls":"Result35","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate35"},{"type":"beta","out_nodes":[[12082,-1]],"__id":27841,"parentNodes":[12085,12086]},{"type":"type","out_nodes":[[3,4640]],"__id":27842,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result35"}},{"type":"rightadapter","out_nodes":[[12083,4640]],"__id":27845,"parentNodes":[4]},{"type":"join","out_nodes":[[12087,-1]],"__id":27846,"parentNodes":[12089,12090],"constraint":{"type":"join-reference","out_nodes":[],"__id":27847,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12083,-1]],"__id":27848,"parentNodes":[]},{"type":"type","out_nodes":[[9,4641],[14,4642],[20,4643],[30,4645],[20,4647],[30,4648]],"__id":27849,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci35"}},{"type":"rightadapter","out_nodes":[[12086,4641]],"__id":27852,"parentNodes":[10]},{"type":"join","out_nodes":[[12091,-1]],"__id":27853,"parentNodes":[12092,12093],"constraint":{"type":"join-reference","out_nodes":[],"__id":27854,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12086,-1]],"__id":27855,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12090,4642]],"__id":27860,"parentNodes":[16]},{"type":"beta","out_nodes":[[12094,-1]],"__id":27861,"parentNodes":[12095,12096]},{"type":"leftadapter","out_nodes":[[12090,-1]],"__id":27862,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12093,4643]],"__id":27867,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12093,4644]],"__id":27871,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27872,"parentNodes":[12098],"index":1393,"rule":{"name":"Bootstrap35","pattern":{"type":"object","id":5112,"cls":"Fibonacci35","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap35"},{"type":"beta","out_nodes":[[12097,-1]],"__id":27873,"parentNodes":[12099,12100]},{"type":"rightadapter","out_nodes":[[12098,4645]],"__id":27878,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12098,4646]],"__id":27882,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27883,"parentNodes":[12102],"index":1394,"rule":{"name":"Recurse35","pattern":{"type":"composite","id":5115,"leftPattern":{"type":"not","id":5113,"cls":"Fibonacci35","alias":"f"},"rightPattern":{"type":"object","id":5114,"cls":"Fibonacci35","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci35 = defined.get('Fibonacci35');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci35(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse35"},{"type":"beta","out_nodes":[[12101,-1]],"__id":27884,"parentNodes":[12103,12104]},{"type":"rightadapter","out_nodes":[[12102,4647]],"__id":27888,"parentNodes":[37]},{"type":"not","out_nodes":[[12105,-1]],"__id":27889,"parentNodes":[12106,12107],"constraint":{"type":"join-reference","out_nodes":[],"__id":27890,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12102,-1]],"__id":27891,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12104,4648]],"__id":27895,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12104,4649]],"__id":27899,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27900,"parentNodes":[12109],"index":1395,"rule":{"name":"Calculate34","pattern":{"type":"composite","id":5122,"leftPattern":{"type":"composite","id":5121,"leftPattern":{"type":"composite","id":5120,"leftPattern":{"type":"object","id":5116,"cls":"Fibonacci34","alias":"f1"},"rightPattern":{"type":"object","id":5117,"cls":"Fibonacci34","alias":"f2"}},"rightPattern":{"type":"object","id":5118,"cls":"Fibonacci34","alias":"f3"}},"rightPattern":{"type":"object","id":5119,"cls":"Result34","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate34"},{"type":"beta","out_nodes":[[12108,-1]],"__id":27901,"parentNodes":[12111,12112]},{"type":"type","out_nodes":[[3,4650]],"__id":27902,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result34"}},{"type":"rightadapter","out_nodes":[[12109,4650]],"__id":27905,"parentNodes":[4]},{"type":"join","out_nodes":[[12113,-1]],"__id":27906,"parentNodes":[12115,12116],"constraint":{"type":"join-reference","out_nodes":[],"__id":27907,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12109,-1]],"__id":27908,"parentNodes":[]},{"type":"type","out_nodes":[[9,4651],[14,4652],[20,4653],[30,4655],[20,4657],[30,4658]],"__id":27909,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci34"}},{"type":"rightadapter","out_nodes":[[12112,4651]],"__id":27912,"parentNodes":[10]},{"type":"join","out_nodes":[[12117,-1]],"__id":27913,"parentNodes":[12118,12119],"constraint":{"type":"join-reference","out_nodes":[],"__id":27914,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12112,-1]],"__id":27915,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12116,4652]],"__id":27920,"parentNodes":[16]},{"type":"beta","out_nodes":[[12120,-1]],"__id":27921,"parentNodes":[12121,12122]},{"type":"leftadapter","out_nodes":[[12116,-1]],"__id":27922,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12119,4653]],"__id":27927,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12119,4654]],"__id":27931,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27932,"parentNodes":[12124],"index":1396,"rule":{"name":"Bootstrap34","pattern":{"type":"object","id":5123,"cls":"Fibonacci34","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap34"},{"type":"beta","out_nodes":[[12123,-1]],"__id":27933,"parentNodes":[12125,12126]},{"type":"rightadapter","out_nodes":[[12124,4655]],"__id":27938,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12124,4656]],"__id":27942,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27943,"parentNodes":[12128],"index":1397,"rule":{"name":"Recurse34","pattern":{"type":"composite","id":5126,"leftPattern":{"type":"not","id":5124,"cls":"Fibonacci34","alias":"f"},"rightPattern":{"type":"object","id":5125,"cls":"Fibonacci34","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci34 = defined.get('Fibonacci34');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci34(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse34"},{"type":"beta","out_nodes":[[12127,-1]],"__id":27944,"parentNodes":[12129,12130]},{"type":"rightadapter","out_nodes":[[12128,4657]],"__id":27948,"parentNodes":[37]},{"type":"not","out_nodes":[[12131,-1]],"__id":27949,"parentNodes":[12132,12133],"constraint":{"type":"join-reference","out_nodes":[],"__id":27950,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12128,-1]],"__id":27951,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12130,4658]],"__id":27955,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12130,4659]],"__id":27959,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27960,"parentNodes":[12135],"index":1398,"rule":{"name":"Calculate33","pattern":{"type":"composite","id":5133,"leftPattern":{"type":"composite","id":5132,"leftPattern":{"type":"composite","id":5131,"leftPattern":{"type":"object","id":5127,"cls":"Fibonacci33","alias":"f1"},"rightPattern":{"type":"object","id":5128,"cls":"Fibonacci33","alias":"f2"}},"rightPattern":{"type":"object","id":5129,"cls":"Fibonacci33","alias":"f3"}},"rightPattern":{"type":"object","id":5130,"cls":"Result33","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate33"},{"type":"beta","out_nodes":[[12134,-1]],"__id":27961,"parentNodes":[12137,12138]},{"type":"type","out_nodes":[[3,4660]],"__id":27962,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result33"}},{"type":"rightadapter","out_nodes":[[12135,4660]],"__id":27965,"parentNodes":[4]},{"type":"join","out_nodes":[[12139,-1]],"__id":27966,"parentNodes":[12141,12142],"constraint":{"type":"join-reference","out_nodes":[],"__id":27967,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12135,-1]],"__id":27968,"parentNodes":[]},{"type":"type","out_nodes":[[9,4661],[14,4662],[20,4663],[30,4665],[20,4667],[30,4668]],"__id":27969,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci33"}},{"type":"rightadapter","out_nodes":[[12138,4661]],"__id":27972,"parentNodes":[10]},{"type":"join","out_nodes":[[12143,-1]],"__id":27973,"parentNodes":[12144,12145],"constraint":{"type":"join-reference","out_nodes":[],"__id":27974,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12138,-1]],"__id":27975,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12142,4662]],"__id":27980,"parentNodes":[16]},{"type":"beta","out_nodes":[[12146,-1]],"__id":27981,"parentNodes":[12147,12148]},{"type":"leftadapter","out_nodes":[[12142,-1]],"__id":27982,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12145,4663]],"__id":27987,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12145,4664]],"__id":27991,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":27992,"parentNodes":[12150],"index":1399,"rule":{"name":"Bootstrap33","pattern":{"type":"object","id":5134,"cls":"Fibonacci33","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap33"},{"type":"beta","out_nodes":[[12149,-1]],"__id":27993,"parentNodes":[12151,12152]},{"type":"rightadapter","out_nodes":[[12150,4665]],"__id":27998,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12150,4666]],"__id":28002,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28003,"parentNodes":[12154],"index":1400,"rule":{"name":"Recurse33","pattern":{"type":"composite","id":5137,"leftPattern":{"type":"not","id":5135,"cls":"Fibonacci33","alias":"f"},"rightPattern":{"type":"object","id":5136,"cls":"Fibonacci33","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci33 = defined.get('Fibonacci33');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci33(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse33"},{"type":"beta","out_nodes":[[12153,-1]],"__id":28004,"parentNodes":[12155,12156]},{"type":"rightadapter","out_nodes":[[12154,4667]],"__id":28008,"parentNodes":[37]},{"type":"not","out_nodes":[[12157,-1]],"__id":28009,"parentNodes":[12158,12159],"constraint":{"type":"join-reference","out_nodes":[],"__id":28010,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12154,-1]],"__id":28011,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12156,4668]],"__id":28015,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12156,4669]],"__id":28019,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28020,"parentNodes":[12161],"index":1401,"rule":{"name":"Calculate32","pattern":{"type":"composite","id":5144,"leftPattern":{"type":"composite","id":5143,"leftPattern":{"type":"composite","id":5142,"leftPattern":{"type":"object","id":5138,"cls":"Fibonacci32","alias":"f1"},"rightPattern":{"type":"object","id":5139,"cls":"Fibonacci32","alias":"f2"}},"rightPattern":{"type":"object","id":5140,"cls":"Fibonacci32","alias":"f3"}},"rightPattern":{"type":"object","id":5141,"cls":"Result32","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate32"},{"type":"beta","out_nodes":[[12160,-1]],"__id":28021,"parentNodes":[12163,12164]},{"type":"type","out_nodes":[[3,4670]],"__id":28022,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result32"}},{"type":"rightadapter","out_nodes":[[12161,4670]],"__id":28025,"parentNodes":[4]},{"type":"join","out_nodes":[[12165,-1]],"__id":28026,"parentNodes":[12167,12168],"constraint":{"type":"join-reference","out_nodes":[],"__id":28027,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12161,-1]],"__id":28028,"parentNodes":[]},{"type":"type","out_nodes":[[9,4671],[14,4672],[20,4673],[30,4675],[20,4677],[30,4678]],"__id":28029,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci32"}},{"type":"rightadapter","out_nodes":[[12164,4671]],"__id":28032,"parentNodes":[10]},{"type":"join","out_nodes":[[12169,-1]],"__id":28033,"parentNodes":[12170,12171],"constraint":{"type":"join-reference","out_nodes":[],"__id":28034,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12164,-1]],"__id":28035,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12168,4672]],"__id":28040,"parentNodes":[16]},{"type":"beta","out_nodes":[[12172,-1]],"__id":28041,"parentNodes":[12173,12174]},{"type":"leftadapter","out_nodes":[[12168,-1]],"__id":28042,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12171,4673]],"__id":28047,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12171,4674]],"__id":28051,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28052,"parentNodes":[12176],"index":1402,"rule":{"name":"Bootstrap32","pattern":{"type":"object","id":5145,"cls":"Fibonacci32","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap32"},{"type":"beta","out_nodes":[[12175,-1]],"__id":28053,"parentNodes":[12177,12178]},{"type":"rightadapter","out_nodes":[[12176,4675]],"__id":28058,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12176,4676]],"__id":28062,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28063,"parentNodes":[12180],"index":1403,"rule":{"name":"Recurse32","pattern":{"type":"composite","id":5148,"leftPattern":{"type":"not","id":5146,"cls":"Fibonacci32","alias":"f"},"rightPattern":{"type":"object","id":5147,"cls":"Fibonacci32","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci32 = defined.get('Fibonacci32');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci32(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse32"},{"type":"beta","out_nodes":[[12179,-1]],"__id":28064,"parentNodes":[12181,12182]},{"type":"rightadapter","out_nodes":[[12180,4677]],"__id":28068,"parentNodes":[37]},{"type":"not","out_nodes":[[12183,-1]],"__id":28069,"parentNodes":[12184,12185],"constraint":{"type":"join-reference","out_nodes":[],"__id":28070,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12180,-1]],"__id":28071,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12182,4678]],"__id":28075,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12182,4679]],"__id":28079,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28080,"parentNodes":[12187],"index":1404,"rule":{"name":"Calculate31","pattern":{"type":"composite","id":5155,"leftPattern":{"type":"composite","id":5154,"leftPattern":{"type":"composite","id":5153,"leftPattern":{"type":"object","id":5149,"cls":"Fibonacci31","alias":"f1"},"rightPattern":{"type":"object","id":5150,"cls":"Fibonacci31","alias":"f2"}},"rightPattern":{"type":"object","id":5151,"cls":"Fibonacci31","alias":"f3"}},"rightPattern":{"type":"object","id":5152,"cls":"Result31","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate31"},{"type":"beta","out_nodes":[[12186,-1]],"__id":28081,"parentNodes":[12189,12190]},{"type":"type","out_nodes":[[3,4680]],"__id":28082,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result31"}},{"type":"rightadapter","out_nodes":[[12187,4680]],"__id":28085,"parentNodes":[4]},{"type":"join","out_nodes":[[12191,-1]],"__id":28086,"parentNodes":[12193,12194],"constraint":{"type":"join-reference","out_nodes":[],"__id":28087,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12187,-1]],"__id":28088,"parentNodes":[]},{"type":"type","out_nodes":[[9,4681],[14,4682],[20,4683],[30,4685],[20,4687],[30,4688]],"__id":28089,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci31"}},{"type":"rightadapter","out_nodes":[[12190,4681]],"__id":28092,"parentNodes":[10]},{"type":"join","out_nodes":[[12195,-1]],"__id":28093,"parentNodes":[12196,12197],"constraint":{"type":"join-reference","out_nodes":[],"__id":28094,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12190,-1]],"__id":28095,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12194,4682]],"__id":28100,"parentNodes":[16]},{"type":"beta","out_nodes":[[12198,-1]],"__id":28101,"parentNodes":[12199,12200]},{"type":"leftadapter","out_nodes":[[12194,-1]],"__id":28102,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12197,4683]],"__id":28107,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12197,4684]],"__id":28111,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28112,"parentNodes":[12202],"index":1405,"rule":{"name":"Bootstrap31","pattern":{"type":"object","id":5156,"cls":"Fibonacci31","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap31"},{"type":"beta","out_nodes":[[12201,-1]],"__id":28113,"parentNodes":[12203,12204]},{"type":"rightadapter","out_nodes":[[12202,4685]],"__id":28118,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12202,4686]],"__id":28122,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28123,"parentNodes":[12206],"index":1406,"rule":{"name":"Recurse31","pattern":{"type":"composite","id":5159,"leftPattern":{"type":"not","id":5157,"cls":"Fibonacci31","alias":"f"},"rightPattern":{"type":"object","id":5158,"cls":"Fibonacci31","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci31 = defined.get('Fibonacci31');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci31(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse31"},{"type":"beta","out_nodes":[[12205,-1]],"__id":28124,"parentNodes":[12207,12208]},{"type":"rightadapter","out_nodes":[[12206,4687]],"__id":28128,"parentNodes":[37]},{"type":"not","out_nodes":[[12209,-1]],"__id":28129,"parentNodes":[12210,12211],"constraint":{"type":"join-reference","out_nodes":[],"__id":28130,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12206,-1]],"__id":28131,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12208,4688]],"__id":28135,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12208,4689]],"__id":28139,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28140,"parentNodes":[12213],"index":1407,"rule":{"name":"Calculate30","pattern":{"type":"composite","id":5166,"leftPattern":{"type":"composite","id":5165,"leftPattern":{"type":"composite","id":5164,"leftPattern":{"type":"object","id":5160,"cls":"Fibonacci30","alias":"f1"},"rightPattern":{"type":"object","id":5161,"cls":"Fibonacci30","alias":"f2"}},"rightPattern":{"type":"object","id":5162,"cls":"Fibonacci30","alias":"f3"}},"rightPattern":{"type":"object","id":5163,"cls":"Result30","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate30"},{"type":"beta","out_nodes":[[12212,-1]],"__id":28141,"parentNodes":[12215,12216]},{"type":"type","out_nodes":[[3,4690]],"__id":28142,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result30"}},{"type":"rightadapter","out_nodes":[[12213,4690]],"__id":28145,"parentNodes":[4]},{"type":"join","out_nodes":[[12217,-1]],"__id":28146,"parentNodes":[12219,12220],"constraint":{"type":"join-reference","out_nodes":[],"__id":28147,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12213,-1]],"__id":28148,"parentNodes":[]},{"type":"type","out_nodes":[[9,4691],[14,4692],[20,4693],[30,4695],[20,4697],[30,4698]],"__id":28149,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci30"}},{"type":"rightadapter","out_nodes":[[12216,4691]],"__id":28152,"parentNodes":[10]},{"type":"join","out_nodes":[[12221,-1]],"__id":28153,"parentNodes":[12222,12223],"constraint":{"type":"join-reference","out_nodes":[],"__id":28154,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12216,-1]],"__id":28155,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12220,4692]],"__id":28160,"parentNodes":[16]},{"type":"beta","out_nodes":[[12224,-1]],"__id":28161,"parentNodes":[12225,12226]},{"type":"leftadapter","out_nodes":[[12220,-1]],"__id":28162,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12223,4693]],"__id":28167,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12223,4694]],"__id":28171,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28172,"parentNodes":[12228],"index":1408,"rule":{"name":"Bootstrap30","pattern":{"type":"object","id":5167,"cls":"Fibonacci30","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap30"},{"type":"beta","out_nodes":[[12227,-1]],"__id":28173,"parentNodes":[12229,12230]},{"type":"rightadapter","out_nodes":[[12228,4695]],"__id":28178,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12228,4696]],"__id":28182,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28183,"parentNodes":[12232],"index":1409,"rule":{"name":"Recurse30","pattern":{"type":"composite","id":5170,"leftPattern":{"type":"not","id":5168,"cls":"Fibonacci30","alias":"f"},"rightPattern":{"type":"object","id":5169,"cls":"Fibonacci30","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');let Fibonacci30 = defined.get('Fibonacci30');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci30(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse30"},{"type":"beta","out_nodes":[[12231,-1]],"__id":28184,"parentNodes":[12233,12234]},{"type":"rightadapter","out_nodes":[[12232,4697]],"__id":28188,"parentNodes":[37]},{"type":"not","out_nodes":[[12235,-1]],"__id":28189,"parentNodes":[12236,12237],"constraint":{"type":"join-reference","out_nodes":[],"__id":28190,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12232,-1]],"__id":28191,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12234,4698]],"__id":28195,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12234,4699]],"__id":28199,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28200,"parentNodes":[12239],"index":1410,"rule":{"name":"Calculate29","pattern":{"type":"composite","id":5177,"leftPattern":{"type":"composite","id":5176,"leftPattern":{"type":"composite","id":5175,"leftPattern":{"type":"object","id":5171,"cls":"Fibonacci29","alias":"f1"},"rightPattern":{"type":"object","id":5172,"cls":"Fibonacci29","alias":"f2"}},"rightPattern":{"type":"object","id":5173,"cls":"Fibonacci29","alias":"f3"}},"rightPattern":{"type":"object","id":5174,"cls":"Result29","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate29"},{"type":"beta","out_nodes":[[12238,-1]],"__id":28201,"parentNodes":[12241,12242]},{"type":"type","out_nodes":[[3,4700]],"__id":28202,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result29"}},{"type":"rightadapter","out_nodes":[[12239,4700]],"__id":28205,"parentNodes":[4]},{"type":"join","out_nodes":[[12243,-1]],"__id":28206,"parentNodes":[12245,12246],"constraint":{"type":"join-reference","out_nodes":[],"__id":28207,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12239,-1]],"__id":28208,"parentNodes":[]},{"type":"type","out_nodes":[[9,4701],[14,4702],[20,4703],[30,4705],[20,4707],[30,4708]],"__id":28209,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci29"}},{"type":"rightadapter","out_nodes":[[12242,4701]],"__id":28212,"parentNodes":[10]},{"type":"join","out_nodes":[[12247,-1]],"__id":28213,"parentNodes":[12248,12249],"constraint":{"type":"join-reference","out_nodes":[],"__id":28214,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12242,-1]],"__id":28215,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12246,4702]],"__id":28220,"parentNodes":[16]},{"type":"beta","out_nodes":[[12250,-1]],"__id":28221,"parentNodes":[12251,12252]},{"type":"leftadapter","out_nodes":[[12246,-1]],"__id":28222,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12249,4703]],"__id":28227,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12249,4704]],"__id":28231,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28232,"parentNodes":[12254],"index":1411,"rule":{"name":"Bootstrap29","pattern":{"type":"object","id":5178,"cls":"Fibonacci29","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap29"},{"type":"beta","out_nodes":[[12253,-1]],"__id":28233,"parentNodes":[12255,12256]},{"type":"rightadapter","out_nodes":[[12254,4705]],"__id":28238,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12254,4706]],"__id":28242,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28243,"parentNodes":[12258],"index":1412,"rule":{"name":"Recurse29","pattern":{"type":"composite","id":5181,"leftPattern":{"type":"not","id":5179,"cls":"Fibonacci29","alias":"f"},"rightPattern":{"type":"object","id":5180,"cls":"Fibonacci29","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci29 = defined.get('Fibonacci29');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci29(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse29"},{"type":"beta","out_nodes":[[12257,-1]],"__id":28244,"parentNodes":[12259,12260]},{"type":"rightadapter","out_nodes":[[12258,4707]],"__id":28248,"parentNodes":[37]},{"type":"not","out_nodes":[[12261,-1]],"__id":28249,"parentNodes":[12262,12263],"constraint":{"type":"join-reference","out_nodes":[],"__id":28250,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12258,-1]],"__id":28251,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12260,4708]],"__id":28255,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12260,4709]],"__id":28259,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28260,"parentNodes":[12265],"index":1413,"rule":{"name":"Calculate28","pattern":{"type":"composite","id":5188,"leftPattern":{"type":"composite","id":5187,"leftPattern":{"type":"composite","id":5186,"leftPattern":{"type":"object","id":5182,"cls":"Fibonacci28","alias":"f1"},"rightPattern":{"type":"object","id":5183,"cls":"Fibonacci28","alias":"f2"}},"rightPattern":{"type":"object","id":5184,"cls":"Fibonacci28","alias":"f3"}},"rightPattern":{"type":"object","id":5185,"cls":"Result28","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate28"},{"type":"beta","out_nodes":[[12264,-1]],"__id":28261,"parentNodes":[12267,12268]},{"type":"type","out_nodes":[[3,4710]],"__id":28262,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result28"}},{"type":"rightadapter","out_nodes":[[12265,4710]],"__id":28265,"parentNodes":[4]},{"type":"join","out_nodes":[[12269,-1]],"__id":28266,"parentNodes":[12271,12272],"constraint":{"type":"join-reference","out_nodes":[],"__id":28267,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12265,-1]],"__id":28268,"parentNodes":[]},{"type":"type","out_nodes":[[9,4711],[14,4712],[20,4713],[30,4715],[20,4717],[30,4718]],"__id":28269,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci28"}},{"type":"rightadapter","out_nodes":[[12268,4711]],"__id":28272,"parentNodes":[10]},{"type":"join","out_nodes":[[12273,-1]],"__id":28273,"parentNodes":[12274,12275],"constraint":{"type":"join-reference","out_nodes":[],"__id":28274,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12268,-1]],"__id":28275,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12272,4712]],"__id":28280,"parentNodes":[16]},{"type":"beta","out_nodes":[[12276,-1]],"__id":28281,"parentNodes":[12277,12278]},{"type":"leftadapter","out_nodes":[[12272,-1]],"__id":28282,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12275,4713]],"__id":28287,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12275,4714]],"__id":28291,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28292,"parentNodes":[12280],"index":1414,"rule":{"name":"Bootstrap28","pattern":{"type":"object","id":5189,"cls":"Fibonacci28","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap28"},{"type":"beta","out_nodes":[[12279,-1]],"__id":28293,"parentNodes":[12281,12282]},{"type":"rightadapter","out_nodes":[[12280,4715]],"__id":28298,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12280,4716]],"__id":28302,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28303,"parentNodes":[12284],"index":1415,"rule":{"name":"Recurse28","pattern":{"type":"composite","id":5192,"leftPattern":{"type":"not","id":5190,"cls":"Fibonacci28","alias":"f"},"rightPattern":{"type":"object","id":5191,"cls":"Fibonacci28","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci28 = defined.get('Fibonacci28');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci28(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse28"},{"type":"beta","out_nodes":[[12283,-1]],"__id":28304,"parentNodes":[12285,12286]},{"type":"rightadapter","out_nodes":[[12284,4717]],"__id":28308,"parentNodes":[37]},{"type":"not","out_nodes":[[12287,-1]],"__id":28309,"parentNodes":[12288,12289],"constraint":{"type":"join-reference","out_nodes":[],"__id":28310,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12284,-1]],"__id":28311,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12286,4718]],"__id":28315,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12286,4719]],"__id":28319,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28320,"parentNodes":[12291],"index":1416,"rule":{"name":"Calculate27","pattern":{"type":"composite","id":5199,"leftPattern":{"type":"composite","id":5198,"leftPattern":{"type":"composite","id":5197,"leftPattern":{"type":"object","id":5193,"cls":"Fibonacci27","alias":"f1"},"rightPattern":{"type":"object","id":5194,"cls":"Fibonacci27","alias":"f2"}},"rightPattern":{"type":"object","id":5195,"cls":"Fibonacci27","alias":"f3"}},"rightPattern":{"type":"object","id":5196,"cls":"Result27","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate27"},{"type":"beta","out_nodes":[[12290,-1]],"__id":28321,"parentNodes":[12293,12294]},{"type":"type","out_nodes":[[3,4720]],"__id":28322,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result27"}},{"type":"rightadapter","out_nodes":[[12291,4720]],"__id":28325,"parentNodes":[4]},{"type":"join","out_nodes":[[12295,-1]],"__id":28326,"parentNodes":[12297,12298],"constraint":{"type":"join-reference","out_nodes":[],"__id":28327,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12291,-1]],"__id":28328,"parentNodes":[]},{"type":"type","out_nodes":[[9,4721],[14,4722],[20,4723],[30,4725],[20,4727],[30,4728]],"__id":28329,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci27"}},{"type":"rightadapter","out_nodes":[[12294,4721]],"__id":28332,"parentNodes":[10]},{"type":"join","out_nodes":[[12299,-1]],"__id":28333,"parentNodes":[12300,12301],"constraint":{"type":"join-reference","out_nodes":[],"__id":28334,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12294,-1]],"__id":28335,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12298,4722]],"__id":28340,"parentNodes":[16]},{"type":"beta","out_nodes":[[12302,-1]],"__id":28341,"parentNodes":[12303,12304]},{"type":"leftadapter","out_nodes":[[12298,-1]],"__id":28342,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12301,4723]],"__id":28347,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12301,4724]],"__id":28351,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28352,"parentNodes":[12306],"index":1417,"rule":{"name":"Bootstrap27","pattern":{"type":"object","id":5200,"cls":"Fibonacci27","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap27"},{"type":"beta","out_nodes":[[12305,-1]],"__id":28353,"parentNodes":[12307,12308]},{"type":"rightadapter","out_nodes":[[12306,4725]],"__id":28358,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12306,4726]],"__id":28362,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28363,"parentNodes":[12310],"index":1418,"rule":{"name":"Recurse27","pattern":{"type":"composite","id":5203,"leftPattern":{"type":"not","id":5201,"cls":"Fibonacci27","alias":"f"},"rightPattern":{"type":"object","id":5202,"cls":"Fibonacci27","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci27 = defined.get('Fibonacci27');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci27(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse27"},{"type":"beta","out_nodes":[[12309,-1]],"__id":28364,"parentNodes":[12311,12312]},{"type":"rightadapter","out_nodes":[[12310,4727]],"__id":28368,"parentNodes":[37]},{"type":"not","out_nodes":[[12313,-1]],"__id":28369,"parentNodes":[12314,12315],"constraint":{"type":"join-reference","out_nodes":[],"__id":28370,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12310,-1]],"__id":28371,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12312,4728]],"__id":28375,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12312,4729]],"__id":28379,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28380,"parentNodes":[12317],"index":1419,"rule":{"name":"Calculate26","pattern":{"type":"composite","id":5210,"leftPattern":{"type":"composite","id":5209,"leftPattern":{"type":"composite","id":5208,"leftPattern":{"type":"object","id":5204,"cls":"Fibonacci26","alias":"f1"},"rightPattern":{"type":"object","id":5205,"cls":"Fibonacci26","alias":"f2"}},"rightPattern":{"type":"object","id":5206,"cls":"Fibonacci26","alias":"f3"}},"rightPattern":{"type":"object","id":5207,"cls":"Result26","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate26"},{"type":"beta","out_nodes":[[12316,-1]],"__id":28381,"parentNodes":[12319,12320]},{"type":"type","out_nodes":[[3,4730]],"__id":28382,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result26"}},{"type":"rightadapter","out_nodes":[[12317,4730]],"__id":28385,"parentNodes":[4]},{"type":"join","out_nodes":[[12321,-1]],"__id":28386,"parentNodes":[12323,12324],"constraint":{"type":"join-reference","out_nodes":[],"__id":28387,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12317,-1]],"__id":28388,"parentNodes":[]},{"type":"type","out_nodes":[[9,4731],[14,4732],[20,4733],[30,4735],[20,4737],[30,4738]],"__id":28389,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci26"}},{"type":"rightadapter","out_nodes":[[12320,4731]],"__id":28392,"parentNodes":[10]},{"type":"join","out_nodes":[[12325,-1]],"__id":28393,"parentNodes":[12326,12327],"constraint":{"type":"join-reference","out_nodes":[],"__id":28394,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12320,-1]],"__id":28395,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12324,4732]],"__id":28400,"parentNodes":[16]},{"type":"beta","out_nodes":[[12328,-1]],"__id":28401,"parentNodes":[12329,12330]},{"type":"leftadapter","out_nodes":[[12324,-1]],"__id":28402,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12327,4733]],"__id":28407,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12327,4734]],"__id":28411,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28412,"parentNodes":[12332],"index":1420,"rule":{"name":"Bootstrap26","pattern":{"type":"object","id":5211,"cls":"Fibonacci26","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap26"},{"type":"beta","out_nodes":[[12331,-1]],"__id":28413,"parentNodes":[12333,12334]},{"type":"rightadapter","out_nodes":[[12332,4735]],"__id":28418,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12332,4736]],"__id":28422,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28423,"parentNodes":[12336],"index":1421,"rule":{"name":"Recurse26","pattern":{"type":"composite","id":5214,"leftPattern":{"type":"not","id":5212,"cls":"Fibonacci26","alias":"f"},"rightPattern":{"type":"object","id":5213,"cls":"Fibonacci26","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci26 = defined.get('Fibonacci26');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci26(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse26"},{"type":"beta","out_nodes":[[12335,-1]],"__id":28424,"parentNodes":[12337,12338]},{"type":"rightadapter","out_nodes":[[12336,4737]],"__id":28428,"parentNodes":[37]},{"type":"not","out_nodes":[[12339,-1]],"__id":28429,"parentNodes":[12340,12341],"constraint":{"type":"join-reference","out_nodes":[],"__id":28430,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12336,-1]],"__id":28431,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12338,4738]],"__id":28435,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12338,4739]],"__id":28439,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28440,"parentNodes":[12343],"index":1422,"rule":{"name":"Calculate25","pattern":{"type":"composite","id":5221,"leftPattern":{"type":"composite","id":5220,"leftPattern":{"type":"composite","id":5219,"leftPattern":{"type":"object","id":5215,"cls":"Fibonacci25","alias":"f1"},"rightPattern":{"type":"object","id":5216,"cls":"Fibonacci25","alias":"f2"}},"rightPattern":{"type":"object","id":5217,"cls":"Fibonacci25","alias":"f3"}},"rightPattern":{"type":"object","id":5218,"cls":"Result25","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate25"},{"type":"beta","out_nodes":[[12342,-1]],"__id":28441,"parentNodes":[12345,12346]},{"type":"type","out_nodes":[[3,4740]],"__id":28442,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result25"}},{"type":"rightadapter","out_nodes":[[12343,4740]],"__id":28445,"parentNodes":[4]},{"type":"join","out_nodes":[[12347,-1]],"__id":28446,"parentNodes":[12349,12350],"constraint":{"type":"join-reference","out_nodes":[],"__id":28447,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12343,-1]],"__id":28448,"parentNodes":[]},{"type":"type","out_nodes":[[9,4741],[14,4742],[20,4743],[30,4745],[20,4747],[30,4748]],"__id":28449,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci25"}},{"type":"rightadapter","out_nodes":[[12346,4741]],"__id":28452,"parentNodes":[10]},{"type":"join","out_nodes":[[12351,-1]],"__id":28453,"parentNodes":[12352,12353],"constraint":{"type":"join-reference","out_nodes":[],"__id":28454,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12346,-1]],"__id":28455,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12350,4742]],"__id":28460,"parentNodes":[16]},{"type":"beta","out_nodes":[[12354,-1]],"__id":28461,"parentNodes":[12355,12356]},{"type":"leftadapter","out_nodes":[[12350,-1]],"__id":28462,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12353,4743]],"__id":28467,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12353,4744]],"__id":28471,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28472,"parentNodes":[12358],"index":1423,"rule":{"name":"Bootstrap25","pattern":{"type":"object","id":5222,"cls":"Fibonacci25","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap25"},{"type":"beta","out_nodes":[[12357,-1]],"__id":28473,"parentNodes":[12359,12360]},{"type":"rightadapter","out_nodes":[[12358,4745]],"__id":28478,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12358,4746]],"__id":28482,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28483,"parentNodes":[12362],"index":1424,"rule":{"name":"Recurse25","pattern":{"type":"composite","id":5225,"leftPattern":{"type":"not","id":5223,"cls":"Fibonacci25","alias":"f"},"rightPattern":{"type":"object","id":5224,"cls":"Fibonacci25","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci25 = defined.get('Fibonacci25');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci25(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse25"},{"type":"beta","out_nodes":[[12361,-1]],"__id":28484,"parentNodes":[12363,12364]},{"type":"rightadapter","out_nodes":[[12362,4747]],"__id":28488,"parentNodes":[37]},{"type":"not","out_nodes":[[12365,-1]],"__id":28489,"parentNodes":[12366,12367],"constraint":{"type":"join-reference","out_nodes":[],"__id":28490,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12362,-1]],"__id":28491,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12364,4748]],"__id":28495,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12364,4749]],"__id":28499,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28500,"parentNodes":[12369],"index":1425,"rule":{"name":"Calculate24","pattern":{"type":"composite","id":5232,"leftPattern":{"type":"composite","id":5231,"leftPattern":{"type":"composite","id":5230,"leftPattern":{"type":"object","id":5226,"cls":"Fibonacci24","alias":"f1"},"rightPattern":{"type":"object","id":5227,"cls":"Fibonacci24","alias":"f2"}},"rightPattern":{"type":"object","id":5228,"cls":"Fibonacci24","alias":"f3"}},"rightPattern":{"type":"object","id":5229,"cls":"Result24","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate24"},{"type":"beta","out_nodes":[[12368,-1]],"__id":28501,"parentNodes":[12371,12372]},{"type":"type","out_nodes":[[3,4750]],"__id":28502,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result24"}},{"type":"rightadapter","out_nodes":[[12369,4750]],"__id":28505,"parentNodes":[4]},{"type":"join","out_nodes":[[12373,-1]],"__id":28506,"parentNodes":[12375,12376],"constraint":{"type":"join-reference","out_nodes":[],"__id":28507,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12369,-1]],"__id":28508,"parentNodes":[]},{"type":"type","out_nodes":[[9,4751],[14,4752],[20,4753],[30,4755],[20,4757],[30,4758]],"__id":28509,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci24"}},{"type":"rightadapter","out_nodes":[[12372,4751]],"__id":28512,"parentNodes":[10]},{"type":"join","out_nodes":[[12377,-1]],"__id":28513,"parentNodes":[12378,12379],"constraint":{"type":"join-reference","out_nodes":[],"__id":28514,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12372,-1]],"__id":28515,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12376,4752]],"__id":28520,"parentNodes":[16]},{"type":"beta","out_nodes":[[12380,-1]],"__id":28521,"parentNodes":[12381,12382]},{"type":"leftadapter","out_nodes":[[12376,-1]],"__id":28522,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12379,4753]],"__id":28527,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12379,4754]],"__id":28531,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28532,"parentNodes":[12384],"index":1426,"rule":{"name":"Bootstrap24","pattern":{"type":"object","id":5233,"cls":"Fibonacci24","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap24"},{"type":"beta","out_nodes":[[12383,-1]],"__id":28533,"parentNodes":[12385,12386]},{"type":"rightadapter","out_nodes":[[12384,4755]],"__id":28538,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12384,4756]],"__id":28542,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28543,"parentNodes":[12388],"index":1427,"rule":{"name":"Recurse24","pattern":{"type":"composite","id":5236,"leftPattern":{"type":"not","id":5234,"cls":"Fibonacci24","alias":"f"},"rightPattern":{"type":"object","id":5235,"cls":"Fibonacci24","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci24 = defined.get('Fibonacci24');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci24(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse24"},{"type":"beta","out_nodes":[[12387,-1]],"__id":28544,"parentNodes":[12389,12390]},{"type":"rightadapter","out_nodes":[[12388,4757]],"__id":28548,"parentNodes":[37]},{"type":"not","out_nodes":[[12391,-1]],"__id":28549,"parentNodes":[12392,12393],"constraint":{"type":"join-reference","out_nodes":[],"__id":28550,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12388,-1]],"__id":28551,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12390,4758]],"__id":28555,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12390,4759]],"__id":28559,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28560,"parentNodes":[12395],"index":1428,"rule":{"name":"Calculate23","pattern":{"type":"composite","id":5243,"leftPattern":{"type":"composite","id":5242,"leftPattern":{"type":"composite","id":5241,"leftPattern":{"type":"object","id":5237,"cls":"Fibonacci23","alias":"f1"},"rightPattern":{"type":"object","id":5238,"cls":"Fibonacci23","alias":"f2"}},"rightPattern":{"type":"object","id":5239,"cls":"Fibonacci23","alias":"f3"}},"rightPattern":{"type":"object","id":5240,"cls":"Result23","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate23"},{"type":"beta","out_nodes":[[12394,-1]],"__id":28561,"parentNodes":[12397,12398]},{"type":"type","out_nodes":[[3,4760]],"__id":28562,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result23"}},{"type":"rightadapter","out_nodes":[[12395,4760]],"__id":28565,"parentNodes":[4]},{"type":"join","out_nodes":[[12399,-1]],"__id":28566,"parentNodes":[12401,12402],"constraint":{"type":"join-reference","out_nodes":[],"__id":28567,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12395,-1]],"__id":28568,"parentNodes":[]},{"type":"type","out_nodes":[[9,4761],[14,4762],[20,4763],[30,4765],[20,4767],[30,4768]],"__id":28569,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci23"}},{"type":"rightadapter","out_nodes":[[12398,4761]],"__id":28572,"parentNodes":[10]},{"type":"join","out_nodes":[[12403,-1]],"__id":28573,"parentNodes":[12404,12405],"constraint":{"type":"join-reference","out_nodes":[],"__id":28574,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12398,-1]],"__id":28575,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12402,4762]],"__id":28580,"parentNodes":[16]},{"type":"beta","out_nodes":[[12406,-1]],"__id":28581,"parentNodes":[12407,12408]},{"type":"leftadapter","out_nodes":[[12402,-1]],"__id":28582,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12405,4763]],"__id":28587,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12405,4764]],"__id":28591,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28592,"parentNodes":[12410],"index":1429,"rule":{"name":"Bootstrap23","pattern":{"type":"object","id":5244,"cls":"Fibonacci23","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap23"},{"type":"beta","out_nodes":[[12409,-1]],"__id":28593,"parentNodes":[12411,12412]},{"type":"rightadapter","out_nodes":[[12410,4765]],"__id":28598,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12410,4766]],"__id":28602,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28603,"parentNodes":[12414],"index":1430,"rule":{"name":"Recurse23","pattern":{"type":"composite","id":5247,"leftPattern":{"type":"not","id":5245,"cls":"Fibonacci23","alias":"f"},"rightPattern":{"type":"object","id":5246,"cls":"Fibonacci23","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci23 = defined.get('Fibonacci23');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci23(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse23"},{"type":"beta","out_nodes":[[12413,-1]],"__id":28604,"parentNodes":[12415,12416]},{"type":"rightadapter","out_nodes":[[12414,4767]],"__id":28608,"parentNodes":[37]},{"type":"not","out_nodes":[[12417,-1]],"__id":28609,"parentNodes":[12418,12419],"constraint":{"type":"join-reference","out_nodes":[],"__id":28610,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12414,-1]],"__id":28611,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12416,4768]],"__id":28615,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12416,4769]],"__id":28619,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28620,"parentNodes":[12421],"index":1431,"rule":{"name":"Calculate22","pattern":{"type":"composite","id":5254,"leftPattern":{"type":"composite","id":5253,"leftPattern":{"type":"composite","id":5252,"leftPattern":{"type":"object","id":5248,"cls":"Fibonacci22","alias":"f1"},"rightPattern":{"type":"object","id":5249,"cls":"Fibonacci22","alias":"f2"}},"rightPattern":{"type":"object","id":5250,"cls":"Fibonacci22","alias":"f3"}},"rightPattern":{"type":"object","id":5251,"cls":"Result22","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate22"},{"type":"beta","out_nodes":[[12420,-1]],"__id":28621,"parentNodes":[12423,12424]},{"type":"type","out_nodes":[[3,4770]],"__id":28622,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result22"}},{"type":"rightadapter","out_nodes":[[12421,4770]],"__id":28625,"parentNodes":[4]},{"type":"join","out_nodes":[[12425,-1]],"__id":28626,"parentNodes":[12427,12428],"constraint":{"type":"join-reference","out_nodes":[],"__id":28627,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12421,-1]],"__id":28628,"parentNodes":[]},{"type":"type","out_nodes":[[9,4771],[14,4772],[20,4773],[30,4775],[20,4777],[30,4778]],"__id":28629,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci22"}},{"type":"rightadapter","out_nodes":[[12424,4771]],"__id":28632,"parentNodes":[10]},{"type":"join","out_nodes":[[12429,-1]],"__id":28633,"parentNodes":[12430,12431],"constraint":{"type":"join-reference","out_nodes":[],"__id":28634,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12424,-1]],"__id":28635,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12428,4772]],"__id":28640,"parentNodes":[16]},{"type":"beta","out_nodes":[[12432,-1]],"__id":28641,"parentNodes":[12433,12434]},{"type":"leftadapter","out_nodes":[[12428,-1]],"__id":28642,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12431,4773]],"__id":28647,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12431,4774]],"__id":28651,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28652,"parentNodes":[12436],"index":1432,"rule":{"name":"Bootstrap22","pattern":{"type":"object","id":5255,"cls":"Fibonacci22","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap22"},{"type":"beta","out_nodes":[[12435,-1]],"__id":28653,"parentNodes":[12437,12438]},{"type":"rightadapter","out_nodes":[[12436,4775]],"__id":28658,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12436,4776]],"__id":28662,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28663,"parentNodes":[12440],"index":1433,"rule":{"name":"Recurse22","pattern":{"type":"composite","id":5258,"leftPattern":{"type":"not","id":5256,"cls":"Fibonacci22","alias":"f"},"rightPattern":{"type":"object","id":5257,"cls":"Fibonacci22","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci22 = defined.get('Fibonacci22');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci22(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse22"},{"type":"beta","out_nodes":[[12439,-1]],"__id":28664,"parentNodes":[12441,12442]},{"type":"rightadapter","out_nodes":[[12440,4777]],"__id":28668,"parentNodes":[37]},{"type":"not","out_nodes":[[12443,-1]],"__id":28669,"parentNodes":[12444,12445],"constraint":{"type":"join-reference","out_nodes":[],"__id":28670,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12440,-1]],"__id":28671,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12442,4778]],"__id":28675,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12442,4779]],"__id":28679,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28680,"parentNodes":[12447],"index":1434,"rule":{"name":"Calculate21","pattern":{"type":"composite","id":5265,"leftPattern":{"type":"composite","id":5264,"leftPattern":{"type":"composite","id":5263,"leftPattern":{"type":"object","id":5259,"cls":"Fibonacci21","alias":"f1"},"rightPattern":{"type":"object","id":5260,"cls":"Fibonacci21","alias":"f2"}},"rightPattern":{"type":"object","id":5261,"cls":"Fibonacci21","alias":"f3"}},"rightPattern":{"type":"object","id":5262,"cls":"Result21","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate21"},{"type":"beta","out_nodes":[[12446,-1]],"__id":28681,"parentNodes":[12449,12450]},{"type":"type","out_nodes":[[3,4780]],"__id":28682,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result21"}},{"type":"rightadapter","out_nodes":[[12447,4780]],"__id":28685,"parentNodes":[4]},{"type":"join","out_nodes":[[12451,-1]],"__id":28686,"parentNodes":[12453,12454],"constraint":{"type":"join-reference","out_nodes":[],"__id":28687,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12447,-1]],"__id":28688,"parentNodes":[]},{"type":"type","out_nodes":[[9,4781],[14,4782],[20,4783],[30,4785],[20,4787],[30,4788]],"__id":28689,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci21"}},{"type":"rightadapter","out_nodes":[[12450,4781]],"__id":28692,"parentNodes":[10]},{"type":"join","out_nodes":[[12455,-1]],"__id":28693,"parentNodes":[12456,12457],"constraint":{"type":"join-reference","out_nodes":[],"__id":28694,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12450,-1]],"__id":28695,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12454,4782]],"__id":28700,"parentNodes":[16]},{"type":"beta","out_nodes":[[12458,-1]],"__id":28701,"parentNodes":[12459,12460]},{"type":"leftadapter","out_nodes":[[12454,-1]],"__id":28702,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12457,4783]],"__id":28707,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12457,4784]],"__id":28711,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28712,"parentNodes":[12462],"index":1435,"rule":{"name":"Bootstrap21","pattern":{"type":"object","id":5266,"cls":"Fibonacci21","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap21"},{"type":"beta","out_nodes":[[12461,-1]],"__id":28713,"parentNodes":[12463,12464]},{"type":"rightadapter","out_nodes":[[12462,4785]],"__id":28718,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12462,4786]],"__id":28722,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28723,"parentNodes":[12466],"index":1436,"rule":{"name":"Recurse21","pattern":{"type":"composite","id":5269,"leftPattern":{"type":"not","id":5267,"cls":"Fibonacci21","alias":"f"},"rightPattern":{"type":"object","id":5268,"cls":"Fibonacci21","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci21 = defined.get('Fibonacci21');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci21(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse21"},{"type":"beta","out_nodes":[[12465,-1]],"__id":28724,"parentNodes":[12467,12468]},{"type":"rightadapter","out_nodes":[[12466,4787]],"__id":28728,"parentNodes":[37]},{"type":"not","out_nodes":[[12469,-1]],"__id":28729,"parentNodes":[12470,12471],"constraint":{"type":"join-reference","out_nodes":[],"__id":28730,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12466,-1]],"__id":28731,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12468,4788]],"__id":28735,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12468,4789]],"__id":28739,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28740,"parentNodes":[12473],"index":1437,"rule":{"name":"Calculate20","pattern":{"type":"composite","id":5276,"leftPattern":{"type":"composite","id":5275,"leftPattern":{"type":"composite","id":5274,"leftPattern":{"type":"object","id":5270,"cls":"Fibonacci20","alias":"f1"},"rightPattern":{"type":"object","id":5271,"cls":"Fibonacci20","alias":"f2"}},"rightPattern":{"type":"object","id":5272,"cls":"Fibonacci20","alias":"f3"}},"rightPattern":{"type":"object","id":5273,"cls":"Result20","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate20"},{"type":"beta","out_nodes":[[12472,-1]],"__id":28741,"parentNodes":[12475,12476]},{"type":"type","out_nodes":[[3,4790]],"__id":28742,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result20"}},{"type":"rightadapter","out_nodes":[[12473,4790]],"__id":28745,"parentNodes":[4]},{"type":"join","out_nodes":[[12477,-1]],"__id":28746,"parentNodes":[12479,12480],"constraint":{"type":"join-reference","out_nodes":[],"__id":28747,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12473,-1]],"__id":28748,"parentNodes":[]},{"type":"type","out_nodes":[[9,4791],[14,4792],[20,4793],[30,4795],[20,4797],[30,4798]],"__id":28749,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci20"}},{"type":"rightadapter","out_nodes":[[12476,4791]],"__id":28752,"parentNodes":[10]},{"type":"join","out_nodes":[[12481,-1]],"__id":28753,"parentNodes":[12482,12483],"constraint":{"type":"join-reference","out_nodes":[],"__id":28754,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12476,-1]],"__id":28755,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12480,4792]],"__id":28760,"parentNodes":[16]},{"type":"beta","out_nodes":[[12484,-1]],"__id":28761,"parentNodes":[12485,12486]},{"type":"leftadapter","out_nodes":[[12480,-1]],"__id":28762,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12483,4793]],"__id":28767,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12483,4794]],"__id":28771,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28772,"parentNodes":[12488],"index":1438,"rule":{"name":"Bootstrap20","pattern":{"type":"object","id":5277,"cls":"Fibonacci20","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap20"},{"type":"beta","out_nodes":[[12487,-1]],"__id":28773,"parentNodes":[12489,12490]},{"type":"rightadapter","out_nodes":[[12488,4795]],"__id":28778,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12488,4796]],"__id":28782,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28783,"parentNodes":[12492],"index":1439,"rule":{"name":"Recurse20","pattern":{"type":"composite","id":5280,"leftPattern":{"type":"not","id":5278,"cls":"Fibonacci20","alias":"f"},"rightPattern":{"type":"object","id":5279,"cls":"Fibonacci20","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');let Fibonacci20 = defined.get('Fibonacci20');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci20(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse20"},{"type":"beta","out_nodes":[[12491,-1]],"__id":28784,"parentNodes":[12493,12494]},{"type":"rightadapter","out_nodes":[[12492,4797]],"__id":28788,"parentNodes":[37]},{"type":"not","out_nodes":[[12495,-1]],"__id":28789,"parentNodes":[12496,12497],"constraint":{"type":"join-reference","out_nodes":[],"__id":28790,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12492,-1]],"__id":28791,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12494,4798]],"__id":28795,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12494,4799]],"__id":28799,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28800,"parentNodes":[12499],"index":1440,"rule":{"name":"Calculate19","pattern":{"type":"composite","id":5287,"leftPattern":{"type":"composite","id":5286,"leftPattern":{"type":"composite","id":5285,"leftPattern":{"type":"object","id":5281,"cls":"Fibonacci19","alias":"f1"},"rightPattern":{"type":"object","id":5282,"cls":"Fibonacci19","alias":"f2"}},"rightPattern":{"type":"object","id":5283,"cls":"Fibonacci19","alias":"f3"}},"rightPattern":{"type":"object","id":5284,"cls":"Result19","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate19"},{"type":"beta","out_nodes":[[12498,-1]],"__id":28801,"parentNodes":[12501,12502]},{"type":"type","out_nodes":[[3,4800]],"__id":28802,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result19"}},{"type":"rightadapter","out_nodes":[[12499,4800]],"__id":28805,"parentNodes":[4]},{"type":"join","out_nodes":[[12503,-1]],"__id":28806,"parentNodes":[12505,12506],"constraint":{"type":"join-reference","out_nodes":[],"__id":28807,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12499,-1]],"__id":28808,"parentNodes":[]},{"type":"type","out_nodes":[[9,4801],[14,4802],[20,4803],[30,4805],[20,4807],[30,4808]],"__id":28809,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci19"}},{"type":"rightadapter","out_nodes":[[12502,4801]],"__id":28812,"parentNodes":[10]},{"type":"join","out_nodes":[[12507,-1]],"__id":28813,"parentNodes":[12508,12509],"constraint":{"type":"join-reference","out_nodes":[],"__id":28814,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12502,-1]],"__id":28815,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12506,4802]],"__id":28820,"parentNodes":[16]},{"type":"beta","out_nodes":[[12510,-1]],"__id":28821,"parentNodes":[12511,12512]},{"type":"leftadapter","out_nodes":[[12506,-1]],"__id":28822,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12509,4803]],"__id":28827,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12509,4804]],"__id":28831,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28832,"parentNodes":[12514],"index":1441,"rule":{"name":"Bootstrap19","pattern":{"type":"object","id":5288,"cls":"Fibonacci19","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap19"},{"type":"beta","out_nodes":[[12513,-1]],"__id":28833,"parentNodes":[12515,12516]},{"type":"rightadapter","out_nodes":[[12514,4805]],"__id":28838,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12514,4806]],"__id":28842,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28843,"parentNodes":[12518],"index":1442,"rule":{"name":"Recurse19","pattern":{"type":"composite","id":5291,"leftPattern":{"type":"not","id":5289,"cls":"Fibonacci19","alias":"f"},"rightPattern":{"type":"object","id":5290,"cls":"Fibonacci19","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci19 = defined.get('Fibonacci19');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci19(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse19"},{"type":"beta","out_nodes":[[12517,-1]],"__id":28844,"parentNodes":[12519,12520]},{"type":"rightadapter","out_nodes":[[12518,4807]],"__id":28848,"parentNodes":[37]},{"type":"not","out_nodes":[[12521,-1]],"__id":28849,"parentNodes":[12522,12523],"constraint":{"type":"join-reference","out_nodes":[],"__id":28850,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12518,-1]],"__id":28851,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12520,4808]],"__id":28855,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12520,4809]],"__id":28859,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28860,"parentNodes":[12525],"index":1443,"rule":{"name":"Calculate18","pattern":{"type":"composite","id":5298,"leftPattern":{"type":"composite","id":5297,"leftPattern":{"type":"composite","id":5296,"leftPattern":{"type":"object","id":5292,"cls":"Fibonacci18","alias":"f1"},"rightPattern":{"type":"object","id":5293,"cls":"Fibonacci18","alias":"f2"}},"rightPattern":{"type":"object","id":5294,"cls":"Fibonacci18","alias":"f3"}},"rightPattern":{"type":"object","id":5295,"cls":"Result18","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate18"},{"type":"beta","out_nodes":[[12524,-1]],"__id":28861,"parentNodes":[12527,12528]},{"type":"type","out_nodes":[[3,4810]],"__id":28862,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result18"}},{"type":"rightadapter","out_nodes":[[12525,4810]],"__id":28865,"parentNodes":[4]},{"type":"join","out_nodes":[[12529,-1]],"__id":28866,"parentNodes":[12531,12532],"constraint":{"type":"join-reference","out_nodes":[],"__id":28867,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12525,-1]],"__id":28868,"parentNodes":[]},{"type":"type","out_nodes":[[9,4811],[14,4812],[20,4813],[30,4815],[20,4817],[30,4818]],"__id":28869,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci18"}},{"type":"rightadapter","out_nodes":[[12528,4811]],"__id":28872,"parentNodes":[10]},{"type":"join","out_nodes":[[12533,-1]],"__id":28873,"parentNodes":[12534,12535],"constraint":{"type":"join-reference","out_nodes":[],"__id":28874,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12528,-1]],"__id":28875,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12532,4812]],"__id":28880,"parentNodes":[16]},{"type":"beta","out_nodes":[[12536,-1]],"__id":28881,"parentNodes":[12537,12538]},{"type":"leftadapter","out_nodes":[[12532,-1]],"__id":28882,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12535,4813]],"__id":28887,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12535,4814]],"__id":28891,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28892,"parentNodes":[12540],"index":1444,"rule":{"name":"Bootstrap18","pattern":{"type":"object","id":5299,"cls":"Fibonacci18","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap18"},{"type":"beta","out_nodes":[[12539,-1]],"__id":28893,"parentNodes":[12541,12542]},{"type":"rightadapter","out_nodes":[[12540,4815]],"__id":28898,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12540,4816]],"__id":28902,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28903,"parentNodes":[12544],"index":1445,"rule":{"name":"Recurse18","pattern":{"type":"composite","id":5302,"leftPattern":{"type":"not","id":5300,"cls":"Fibonacci18","alias":"f"},"rightPattern":{"type":"object","id":5301,"cls":"Fibonacci18","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci18 = defined.get('Fibonacci18');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci18(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse18"},{"type":"beta","out_nodes":[[12543,-1]],"__id":28904,"parentNodes":[12545,12546]},{"type":"rightadapter","out_nodes":[[12544,4817]],"__id":28908,"parentNodes":[37]},{"type":"not","out_nodes":[[12547,-1]],"__id":28909,"parentNodes":[12548,12549],"constraint":{"type":"join-reference","out_nodes":[],"__id":28910,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12544,-1]],"__id":28911,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12546,4818]],"__id":28915,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12546,4819]],"__id":28919,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28920,"parentNodes":[12551],"index":1446,"rule":{"name":"Calculate17","pattern":{"type":"composite","id":5309,"leftPattern":{"type":"composite","id":5308,"leftPattern":{"type":"composite","id":5307,"leftPattern":{"type":"object","id":5303,"cls":"Fibonacci17","alias":"f1"},"rightPattern":{"type":"object","id":5304,"cls":"Fibonacci17","alias":"f2"}},"rightPattern":{"type":"object","id":5305,"cls":"Fibonacci17","alias":"f3"}},"rightPattern":{"type":"object","id":5306,"cls":"Result17","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate17"},{"type":"beta","out_nodes":[[12550,-1]],"__id":28921,"parentNodes":[12553,12554]},{"type":"type","out_nodes":[[3,4820]],"__id":28922,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result17"}},{"type":"rightadapter","out_nodes":[[12551,4820]],"__id":28925,"parentNodes":[4]},{"type":"join","out_nodes":[[12555,-1]],"__id":28926,"parentNodes":[12557,12558],"constraint":{"type":"join-reference","out_nodes":[],"__id":28927,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12551,-1]],"__id":28928,"parentNodes":[]},{"type":"type","out_nodes":[[9,4821],[14,4822],[20,4823],[30,4825],[20,4827],[30,4828]],"__id":28929,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci17"}},{"type":"rightadapter","out_nodes":[[12554,4821]],"__id":28932,"parentNodes":[10]},{"type":"join","out_nodes":[[12559,-1]],"__id":28933,"parentNodes":[12560,12561],"constraint":{"type":"join-reference","out_nodes":[],"__id":28934,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12554,-1]],"__id":28935,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12558,4822]],"__id":28940,"parentNodes":[16]},{"type":"beta","out_nodes":[[12562,-1]],"__id":28941,"parentNodes":[12563,12564]},{"type":"leftadapter","out_nodes":[[12558,-1]],"__id":28942,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12561,4823]],"__id":28947,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12561,4824]],"__id":28951,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28952,"parentNodes":[12566],"index":1447,"rule":{"name":"Bootstrap17","pattern":{"type":"object","id":5310,"cls":"Fibonacci17","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap17"},{"type":"beta","out_nodes":[[12565,-1]],"__id":28953,"parentNodes":[12567,12568]},{"type":"rightadapter","out_nodes":[[12566,4825]],"__id":28958,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12566,4826]],"__id":28962,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28963,"parentNodes":[12570],"index":1448,"rule":{"name":"Recurse17","pattern":{"type":"composite","id":5313,"leftPattern":{"type":"not","id":5311,"cls":"Fibonacci17","alias":"f"},"rightPattern":{"type":"object","id":5312,"cls":"Fibonacci17","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci17 = defined.get('Fibonacci17');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci17(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse17"},{"type":"beta","out_nodes":[[12569,-1]],"__id":28964,"parentNodes":[12571,12572]},{"type":"rightadapter","out_nodes":[[12570,4827]],"__id":28968,"parentNodes":[37]},{"type":"not","out_nodes":[[12573,-1]],"__id":28969,"parentNodes":[12574,12575],"constraint":{"type":"join-reference","out_nodes":[],"__id":28970,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12570,-1]],"__id":28971,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12572,4828]],"__id":28975,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12572,4829]],"__id":28979,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":28980,"parentNodes":[12577],"index":1449,"rule":{"name":"Calculate16","pattern":{"type":"composite","id":5320,"leftPattern":{"type":"composite","id":5319,"leftPattern":{"type":"composite","id":5318,"leftPattern":{"type":"object","id":5314,"cls":"Fibonacci16","alias":"f1"},"rightPattern":{"type":"object","id":5315,"cls":"Fibonacci16","alias":"f2"}},"rightPattern":{"type":"object","id":5316,"cls":"Fibonacci16","alias":"f3"}},"rightPattern":{"type":"object","id":5317,"cls":"Result16","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate16"},{"type":"beta","out_nodes":[[12576,-1]],"__id":28981,"parentNodes":[12579,12580]},{"type":"type","out_nodes":[[3,4830]],"__id":28982,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result16"}},{"type":"rightadapter","out_nodes":[[12577,4830]],"__id":28985,"parentNodes":[4]},{"type":"join","out_nodes":[[12581,-1]],"__id":28986,"parentNodes":[12583,12584],"constraint":{"type":"join-reference","out_nodes":[],"__id":28987,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12577,-1]],"__id":28988,"parentNodes":[]},{"type":"type","out_nodes":[[9,4831],[14,4832],[20,4833],[30,4835],[20,4837],[30,4838]],"__id":28989,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci16"}},{"type":"rightadapter","out_nodes":[[12580,4831]],"__id":28992,"parentNodes":[10]},{"type":"join","out_nodes":[[12585,-1]],"__id":28993,"parentNodes":[12586,12587],"constraint":{"type":"join-reference","out_nodes":[],"__id":28994,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12580,-1]],"__id":28995,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12584,4832]],"__id":29000,"parentNodes":[16]},{"type":"beta","out_nodes":[[12588,-1]],"__id":29001,"parentNodes":[12589,12590]},{"type":"leftadapter","out_nodes":[[12584,-1]],"__id":29002,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12587,4833]],"__id":29007,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12587,4834]],"__id":29011,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29012,"parentNodes":[12592],"index":1450,"rule":{"name":"Bootstrap16","pattern":{"type":"object","id":5321,"cls":"Fibonacci16","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap16"},{"type":"beta","out_nodes":[[12591,-1]],"__id":29013,"parentNodes":[12593,12594]},{"type":"rightadapter","out_nodes":[[12592,4835]],"__id":29018,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12592,4836]],"__id":29022,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29023,"parentNodes":[12596],"index":1451,"rule":{"name":"Recurse16","pattern":{"type":"composite","id":5324,"leftPattern":{"type":"not","id":5322,"cls":"Fibonacci16","alias":"f"},"rightPattern":{"type":"object","id":5323,"cls":"Fibonacci16","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci16 = defined.get('Fibonacci16');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci16(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse16"},{"type":"beta","out_nodes":[[12595,-1]],"__id":29024,"parentNodes":[12597,12598]},{"type":"rightadapter","out_nodes":[[12596,4837]],"__id":29028,"parentNodes":[37]},{"type":"not","out_nodes":[[12599,-1]],"__id":29029,"parentNodes":[12600,12601],"constraint":{"type":"join-reference","out_nodes":[],"__id":29030,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12596,-1]],"__id":29031,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12598,4838]],"__id":29035,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12598,4839]],"__id":29039,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29040,"parentNodes":[12603],"index":1452,"rule":{"name":"Calculate15","pattern":{"type":"composite","id":5331,"leftPattern":{"type":"composite","id":5330,"leftPattern":{"type":"composite","id":5329,"leftPattern":{"type":"object","id":5325,"cls":"Fibonacci15","alias":"f1"},"rightPattern":{"type":"object","id":5326,"cls":"Fibonacci15","alias":"f2"}},"rightPattern":{"type":"object","id":5327,"cls":"Fibonacci15","alias":"f3"}},"rightPattern":{"type":"object","id":5328,"cls":"Result15","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate15"},{"type":"beta","out_nodes":[[12602,-1]],"__id":29041,"parentNodes":[12605,12606]},{"type":"type","out_nodes":[[3,4840]],"__id":29042,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result15"}},{"type":"rightadapter","out_nodes":[[12603,4840]],"__id":29045,"parentNodes":[4]},{"type":"join","out_nodes":[[12607,-1]],"__id":29046,"parentNodes":[12609,12610],"constraint":{"type":"join-reference","out_nodes":[],"__id":29047,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12603,-1]],"__id":29048,"parentNodes":[]},{"type":"type","out_nodes":[[9,4841],[14,4842],[20,4843],[30,4845],[20,4847],[30,4848]],"__id":29049,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci15"}},{"type":"rightadapter","out_nodes":[[12606,4841]],"__id":29052,"parentNodes":[10]},{"type":"join","out_nodes":[[12611,-1]],"__id":29053,"parentNodes":[12612,12613],"constraint":{"type":"join-reference","out_nodes":[],"__id":29054,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12606,-1]],"__id":29055,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12610,4842]],"__id":29060,"parentNodes":[16]},{"type":"beta","out_nodes":[[12614,-1]],"__id":29061,"parentNodes":[12615,12616]},{"type":"leftadapter","out_nodes":[[12610,-1]],"__id":29062,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12613,4843]],"__id":29067,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12613,4844]],"__id":29071,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29072,"parentNodes":[12618],"index":1453,"rule":{"name":"Bootstrap15","pattern":{"type":"object","id":5332,"cls":"Fibonacci15","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap15"},{"type":"beta","out_nodes":[[12617,-1]],"__id":29073,"parentNodes":[12619,12620]},{"type":"rightadapter","out_nodes":[[12618,4845]],"__id":29078,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12618,4846]],"__id":29082,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29083,"parentNodes":[12622],"index":1454,"rule":{"name":"Recurse15","pattern":{"type":"composite","id":5335,"leftPattern":{"type":"not","id":5333,"cls":"Fibonacci15","alias":"f"},"rightPattern":{"type":"object","id":5334,"cls":"Fibonacci15","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci15 = defined.get('Fibonacci15');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci15(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse15"},{"type":"beta","out_nodes":[[12621,-1]],"__id":29084,"parentNodes":[12623,12624]},{"type":"rightadapter","out_nodes":[[12622,4847]],"__id":29088,"parentNodes":[37]},{"type":"not","out_nodes":[[12625,-1]],"__id":29089,"parentNodes":[12626,12627],"constraint":{"type":"join-reference","out_nodes":[],"__id":29090,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12622,-1]],"__id":29091,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12624,4848]],"__id":29095,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12624,4849]],"__id":29099,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29100,"parentNodes":[12629],"index":1455,"rule":{"name":"Calculate14","pattern":{"type":"composite","id":5342,"leftPattern":{"type":"composite","id":5341,"leftPattern":{"type":"composite","id":5340,"leftPattern":{"type":"object","id":5336,"cls":"Fibonacci14","alias":"f1"},"rightPattern":{"type":"object","id":5337,"cls":"Fibonacci14","alias":"f2"}},"rightPattern":{"type":"object","id":5338,"cls":"Fibonacci14","alias":"f3"}},"rightPattern":{"type":"object","id":5339,"cls":"Result14","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate14"},{"type":"beta","out_nodes":[[12628,-1]],"__id":29101,"parentNodes":[12631,12632]},{"type":"type","out_nodes":[[3,4850]],"__id":29102,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result14"}},{"type":"rightadapter","out_nodes":[[12629,4850]],"__id":29105,"parentNodes":[4]},{"type":"join","out_nodes":[[12633,-1]],"__id":29106,"parentNodes":[12635,12636],"constraint":{"type":"join-reference","out_nodes":[],"__id":29107,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12629,-1]],"__id":29108,"parentNodes":[]},{"type":"type","out_nodes":[[9,4851],[14,4852],[20,4853],[30,4855],[20,4857],[30,4858]],"__id":29109,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci14"}},{"type":"rightadapter","out_nodes":[[12632,4851]],"__id":29112,"parentNodes":[10]},{"type":"join","out_nodes":[[12637,-1]],"__id":29113,"parentNodes":[12638,12639],"constraint":{"type":"join-reference","out_nodes":[],"__id":29114,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12632,-1]],"__id":29115,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12636,4852]],"__id":29120,"parentNodes":[16]},{"type":"beta","out_nodes":[[12640,-1]],"__id":29121,"parentNodes":[12641,12642]},{"type":"leftadapter","out_nodes":[[12636,-1]],"__id":29122,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12639,4853]],"__id":29127,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12639,4854]],"__id":29131,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29132,"parentNodes":[12644],"index":1456,"rule":{"name":"Bootstrap14","pattern":{"type":"object","id":5343,"cls":"Fibonacci14","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap14"},{"type":"beta","out_nodes":[[12643,-1]],"__id":29133,"parentNodes":[12645,12646]},{"type":"rightadapter","out_nodes":[[12644,4855]],"__id":29138,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12644,4856]],"__id":29142,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29143,"parentNodes":[12648],"index":1457,"rule":{"name":"Recurse14","pattern":{"type":"composite","id":5346,"leftPattern":{"type":"not","id":5344,"cls":"Fibonacci14","alias":"f"},"rightPattern":{"type":"object","id":5345,"cls":"Fibonacci14","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci14 = defined.get('Fibonacci14');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci14(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse14"},{"type":"beta","out_nodes":[[12647,-1]],"__id":29144,"parentNodes":[12649,12650]},{"type":"rightadapter","out_nodes":[[12648,4857]],"__id":29148,"parentNodes":[37]},{"type":"not","out_nodes":[[12651,-1]],"__id":29149,"parentNodes":[12652,12653],"constraint":{"type":"join-reference","out_nodes":[],"__id":29150,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12648,-1]],"__id":29151,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12650,4858]],"__id":29155,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12650,4859]],"__id":29159,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29160,"parentNodes":[12655],"index":1458,"rule":{"name":"Calculate13","pattern":{"type":"composite","id":5353,"leftPattern":{"type":"composite","id":5352,"leftPattern":{"type":"composite","id":5351,"leftPattern":{"type":"object","id":5347,"cls":"Fibonacci13","alias":"f1"},"rightPattern":{"type":"object","id":5348,"cls":"Fibonacci13","alias":"f2"}},"rightPattern":{"type":"object","id":5349,"cls":"Fibonacci13","alias":"f3"}},"rightPattern":{"type":"object","id":5350,"cls":"Result13","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate13"},{"type":"beta","out_nodes":[[12654,-1]],"__id":29161,"parentNodes":[12657,12658]},{"type":"type","out_nodes":[[3,4860]],"__id":29162,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result13"}},{"type":"rightadapter","out_nodes":[[12655,4860]],"__id":29165,"parentNodes":[4]},{"type":"join","out_nodes":[[12659,-1]],"__id":29166,"parentNodes":[12661,12662],"constraint":{"type":"join-reference","out_nodes":[],"__id":29167,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12655,-1]],"__id":29168,"parentNodes":[]},{"type":"type","out_nodes":[[9,4861],[14,4862],[20,4863],[30,4865],[20,4867],[30,4868]],"__id":29169,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci13"}},{"type":"rightadapter","out_nodes":[[12658,4861]],"__id":29172,"parentNodes":[10]},{"type":"join","out_nodes":[[12663,-1]],"__id":29173,"parentNodes":[12664,12665],"constraint":{"type":"join-reference","out_nodes":[],"__id":29174,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12658,-1]],"__id":29175,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12662,4862]],"__id":29180,"parentNodes":[16]},{"type":"beta","out_nodes":[[12666,-1]],"__id":29181,"parentNodes":[12667,12668]},{"type":"leftadapter","out_nodes":[[12662,-1]],"__id":29182,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12665,4863]],"__id":29187,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12665,4864]],"__id":29191,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29192,"parentNodes":[12670],"index":1459,"rule":{"name":"Bootstrap13","pattern":{"type":"object","id":5354,"cls":"Fibonacci13","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap13"},{"type":"beta","out_nodes":[[12669,-1]],"__id":29193,"parentNodes":[12671,12672]},{"type":"rightadapter","out_nodes":[[12670,4865]],"__id":29198,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12670,4866]],"__id":29202,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29203,"parentNodes":[12674],"index":1460,"rule":{"name":"Recurse13","pattern":{"type":"composite","id":5357,"leftPattern":{"type":"not","id":5355,"cls":"Fibonacci13","alias":"f"},"rightPattern":{"type":"object","id":5356,"cls":"Fibonacci13","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci13 = defined.get('Fibonacci13');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci13(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse13"},{"type":"beta","out_nodes":[[12673,-1]],"__id":29204,"parentNodes":[12675,12676]},{"type":"rightadapter","out_nodes":[[12674,4867]],"__id":29208,"parentNodes":[37]},{"type":"not","out_nodes":[[12677,-1]],"__id":29209,"parentNodes":[12678,12679],"constraint":{"type":"join-reference","out_nodes":[],"__id":29210,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12674,-1]],"__id":29211,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12676,4868]],"__id":29215,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12676,4869]],"__id":29219,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29220,"parentNodes":[12681],"index":1461,"rule":{"name":"Calculate12","pattern":{"type":"composite","id":5364,"leftPattern":{"type":"composite","id":5363,"leftPattern":{"type":"composite","id":5362,"leftPattern":{"type":"object","id":5358,"cls":"Fibonacci12","alias":"f1"},"rightPattern":{"type":"object","id":5359,"cls":"Fibonacci12","alias":"f2"}},"rightPattern":{"type":"object","id":5360,"cls":"Fibonacci12","alias":"f3"}},"rightPattern":{"type":"object","id":5361,"cls":"Result12","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate12"},{"type":"beta","out_nodes":[[12680,-1]],"__id":29221,"parentNodes":[12683,12684]},{"type":"type","out_nodes":[[3,4870]],"__id":29222,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result12"}},{"type":"rightadapter","out_nodes":[[12681,4870]],"__id":29225,"parentNodes":[4]},{"type":"join","out_nodes":[[12685,-1]],"__id":29226,"parentNodes":[12687,12688],"constraint":{"type":"join-reference","out_nodes":[],"__id":29227,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12681,-1]],"__id":29228,"parentNodes":[]},{"type":"type","out_nodes":[[9,4871],[14,4872],[20,4873],[30,4875],[20,4877],[30,4878]],"__id":29229,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci12"}},{"type":"rightadapter","out_nodes":[[12684,4871]],"__id":29232,"parentNodes":[10]},{"type":"join","out_nodes":[[12689,-1]],"__id":29233,"parentNodes":[12690,12691],"constraint":{"type":"join-reference","out_nodes":[],"__id":29234,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12684,-1]],"__id":29235,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12688,4872]],"__id":29240,"parentNodes":[16]},{"type":"beta","out_nodes":[[12692,-1]],"__id":29241,"parentNodes":[12693,12694]},{"type":"leftadapter","out_nodes":[[12688,-1]],"__id":29242,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12691,4873]],"__id":29247,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12691,4874]],"__id":29251,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29252,"parentNodes":[12696],"index":1462,"rule":{"name":"Bootstrap12","pattern":{"type":"object","id":5365,"cls":"Fibonacci12","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap12"},{"type":"beta","out_nodes":[[12695,-1]],"__id":29253,"parentNodes":[12697,12698]},{"type":"rightadapter","out_nodes":[[12696,4875]],"__id":29258,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12696,4876]],"__id":29262,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29263,"parentNodes":[12700],"index":1463,"rule":{"name":"Recurse12","pattern":{"type":"composite","id":5368,"leftPattern":{"type":"not","id":5366,"cls":"Fibonacci12","alias":"f"},"rightPattern":{"type":"object","id":5367,"cls":"Fibonacci12","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci12 = defined.get('Fibonacci12');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci12(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse12"},{"type":"beta","out_nodes":[[12699,-1]],"__id":29264,"parentNodes":[12701,12702]},{"type":"rightadapter","out_nodes":[[12700,4877]],"__id":29268,"parentNodes":[37]},{"type":"not","out_nodes":[[12703,-1]],"__id":29269,"parentNodes":[12704,12705],"constraint":{"type":"join-reference","out_nodes":[],"__id":29270,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12700,-1]],"__id":29271,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12702,4878]],"__id":29275,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12702,4879]],"__id":29279,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29280,"parentNodes":[12707],"index":1464,"rule":{"name":"Calculate11","pattern":{"type":"composite","id":5375,"leftPattern":{"type":"composite","id":5374,"leftPattern":{"type":"composite","id":5373,"leftPattern":{"type":"object","id":5369,"cls":"Fibonacci11","alias":"f1"},"rightPattern":{"type":"object","id":5370,"cls":"Fibonacci11","alias":"f2"}},"rightPattern":{"type":"object","id":5371,"cls":"Fibonacci11","alias":"f3"}},"rightPattern":{"type":"object","id":5372,"cls":"Result11","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate11"},{"type":"beta","out_nodes":[[12706,-1]],"__id":29281,"parentNodes":[12709,12710]},{"type":"type","out_nodes":[[3,4880]],"__id":29282,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result11"}},{"type":"rightadapter","out_nodes":[[12707,4880]],"__id":29285,"parentNodes":[4]},{"type":"join","out_nodes":[[12711,-1]],"__id":29286,"parentNodes":[12713,12714],"constraint":{"type":"join-reference","out_nodes":[],"__id":29287,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12707,-1]],"__id":29288,"parentNodes":[]},{"type":"type","out_nodes":[[9,4881],[14,4882],[20,4883],[30,4885],[20,4887],[30,4888]],"__id":29289,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci11"}},{"type":"rightadapter","out_nodes":[[12710,4881]],"__id":29292,"parentNodes":[10]},{"type":"join","out_nodes":[[12715,-1]],"__id":29293,"parentNodes":[12716,12717],"constraint":{"type":"join-reference","out_nodes":[],"__id":29294,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12710,-1]],"__id":29295,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12714,4882]],"__id":29300,"parentNodes":[16]},{"type":"beta","out_nodes":[[12718,-1]],"__id":29301,"parentNodes":[12719,12720]},{"type":"leftadapter","out_nodes":[[12714,-1]],"__id":29302,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12717,4883]],"__id":29307,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12717,4884]],"__id":29311,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29312,"parentNodes":[12722],"index":1465,"rule":{"name":"Bootstrap11","pattern":{"type":"object","id":5376,"cls":"Fibonacci11","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap11"},{"type":"beta","out_nodes":[[12721,-1]],"__id":29313,"parentNodes":[12723,12724]},{"type":"rightadapter","out_nodes":[[12722,4885]],"__id":29318,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12722,4886]],"__id":29322,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29323,"parentNodes":[12726],"index":1466,"rule":{"name":"Recurse11","pattern":{"type":"composite","id":5379,"leftPattern":{"type":"not","id":5377,"cls":"Fibonacci11","alias":"f"},"rightPattern":{"type":"object","id":5378,"cls":"Fibonacci11","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci11 = defined.get('Fibonacci11');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci11(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse11"},{"type":"beta","out_nodes":[[12725,-1]],"__id":29324,"parentNodes":[12727,12728]},{"type":"rightadapter","out_nodes":[[12726,4887]],"__id":29328,"parentNodes":[37]},{"type":"not","out_nodes":[[12729,-1]],"__id":29329,"parentNodes":[12730,12731],"constraint":{"type":"join-reference","out_nodes":[],"__id":29330,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12726,-1]],"__id":29331,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12728,4888]],"__id":29335,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12728,4889]],"__id":29339,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29340,"parentNodes":[12733],"index":1467,"rule":{"name":"Calculate10","pattern":{"type":"composite","id":5386,"leftPattern":{"type":"composite","id":5385,"leftPattern":{"type":"composite","id":5384,"leftPattern":{"type":"object","id":5380,"cls":"Fibonacci10","alias":"f1"},"rightPattern":{"type":"object","id":5381,"cls":"Fibonacci10","alias":"f2"}},"rightPattern":{"type":"object","id":5382,"cls":"Fibonacci10","alias":"f3"}},"rightPattern":{"type":"object","id":5383,"cls":"Result10","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate10"},{"type":"beta","out_nodes":[[12732,-1]],"__id":29341,"parentNodes":[12735,12736]},{"type":"type","out_nodes":[[3,4890]],"__id":29342,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result10"}},{"type":"rightadapter","out_nodes":[[12733,4890]],"__id":29345,"parentNodes":[4]},{"type":"join","out_nodes":[[12737,-1]],"__id":29346,"parentNodes":[12739,12740],"constraint":{"type":"join-reference","out_nodes":[],"__id":29347,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12733,-1]],"__id":29348,"parentNodes":[]},{"type":"type","out_nodes":[[9,4891],[14,4892],[20,4893],[30,4895],[20,4897],[30,4898]],"__id":29349,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci10"}},{"type":"rightadapter","out_nodes":[[12736,4891]],"__id":29352,"parentNodes":[10]},{"type":"join","out_nodes":[[12741,-1]],"__id":29353,"parentNodes":[12742,12743],"constraint":{"type":"join-reference","out_nodes":[],"__id":29354,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12736,-1]],"__id":29355,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12740,4892]],"__id":29360,"parentNodes":[16]},{"type":"beta","out_nodes":[[12744,-1]],"__id":29361,"parentNodes":[12745,12746]},{"type":"leftadapter","out_nodes":[[12740,-1]],"__id":29362,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12743,4893]],"__id":29367,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12743,4894]],"__id":29371,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29372,"parentNodes":[12748],"index":1468,"rule":{"name":"Bootstrap10","pattern":{"type":"object","id":5387,"cls":"Fibonacci10","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap10"},{"type":"beta","out_nodes":[[12747,-1]],"__id":29373,"parentNodes":[12749,12750]},{"type":"rightadapter","out_nodes":[[12748,4895]],"__id":29378,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12748,4896]],"__id":29382,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29383,"parentNodes":[12752],"index":1469,"rule":{"name":"Recurse10","pattern":{"type":"composite","id":5390,"leftPattern":{"type":"not","id":5388,"cls":"Fibonacci10","alias":"f"},"rightPattern":{"type":"object","id":5389,"cls":"Fibonacci10","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');let Fibonacci10 = defined.get('Fibonacci10');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci10(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse10"},{"type":"beta","out_nodes":[[12751,-1]],"__id":29384,"parentNodes":[12753,12754]},{"type":"rightadapter","out_nodes":[[12752,4897]],"__id":29388,"parentNodes":[37]},{"type":"not","out_nodes":[[12755,-1]],"__id":29389,"parentNodes":[12756,12757],"constraint":{"type":"join-reference","out_nodes":[],"__id":29390,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12752,-1]],"__id":29391,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12754,4898]],"__id":29395,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12754,4899]],"__id":29399,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29400,"parentNodes":[12759],"index":1470,"rule":{"name":"Calculate9","pattern":{"type":"composite","id":5397,"leftPattern":{"type":"composite","id":5396,"leftPattern":{"type":"composite","id":5395,"leftPattern":{"type":"object","id":5391,"cls":"Fibonacci9","alias":"f1"},"rightPattern":{"type":"object","id":5392,"cls":"Fibonacci9","alias":"f2"}},"rightPattern":{"type":"object","id":5393,"cls":"Fibonacci9","alias":"f3"}},"rightPattern":{"type":"object","id":5394,"cls":"Result9","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate9"},{"type":"beta","out_nodes":[[12758,-1]],"__id":29401,"parentNodes":[12761,12762]},{"type":"type","out_nodes":[[3,4900]],"__id":29402,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result9"}},{"type":"rightadapter","out_nodes":[[12759,4900]],"__id":29405,"parentNodes":[4]},{"type":"join","out_nodes":[[12763,-1]],"__id":29406,"parentNodes":[12765,12766],"constraint":{"type":"join-reference","out_nodes":[],"__id":29407,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12759,-1]],"__id":29408,"parentNodes":[]},{"type":"type","out_nodes":[[9,4901],[14,4902],[20,4903],[30,4905],[20,4907],[30,4908]],"__id":29409,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci9"}},{"type":"rightadapter","out_nodes":[[12762,4901]],"__id":29412,"parentNodes":[10]},{"type":"join","out_nodes":[[12767,-1]],"__id":29413,"parentNodes":[12768,12769],"constraint":{"type":"join-reference","out_nodes":[],"__id":29414,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12762,-1]],"__id":29415,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12766,4902]],"__id":29420,"parentNodes":[16]},{"type":"beta","out_nodes":[[12770,-1]],"__id":29421,"parentNodes":[12771,12772]},{"type":"leftadapter","out_nodes":[[12766,-1]],"__id":29422,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12769,4903]],"__id":29427,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12769,4904]],"__id":29431,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29432,"parentNodes":[12774],"index":1471,"rule":{"name":"Bootstrap9","pattern":{"type":"object","id":5398,"cls":"Fibonacci9","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap9"},{"type":"beta","out_nodes":[[12773,-1]],"__id":29433,"parentNodes":[12775,12776]},{"type":"rightadapter","out_nodes":[[12774,4905]],"__id":29438,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12774,4906]],"__id":29442,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29443,"parentNodes":[12778],"index":1472,"rule":{"name":"Recurse9","pattern":{"type":"composite","id":5401,"leftPattern":{"type":"not","id":5399,"cls":"Fibonacci9","alias":"f"},"rightPattern":{"type":"object","id":5400,"cls":"Fibonacci9","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci9 = defined.get('Fibonacci9');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci9(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse9"},{"type":"beta","out_nodes":[[12777,-1]],"__id":29444,"parentNodes":[12779,12780]},{"type":"rightadapter","out_nodes":[[12778,4907]],"__id":29448,"parentNodes":[37]},{"type":"not","out_nodes":[[12781,-1]],"__id":29449,"parentNodes":[12782,12783],"constraint":{"type":"join-reference","out_nodes":[],"__id":29450,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12778,-1]],"__id":29451,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12780,4908]],"__id":29455,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12780,4909]],"__id":29459,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29460,"parentNodes":[12785],"index":1473,"rule":{"name":"Calculate8","pattern":{"type":"composite","id":5408,"leftPattern":{"type":"composite","id":5407,"leftPattern":{"type":"composite","id":5406,"leftPattern":{"type":"object","id":5402,"cls":"Fibonacci8","alias":"f1"},"rightPattern":{"type":"object","id":5403,"cls":"Fibonacci8","alias":"f2"}},"rightPattern":{"type":"object","id":5404,"cls":"Fibonacci8","alias":"f3"}},"rightPattern":{"type":"object","id":5405,"cls":"Result8","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate8"},{"type":"beta","out_nodes":[[12784,-1]],"__id":29461,"parentNodes":[12787,12788]},{"type":"type","out_nodes":[[3,4910]],"__id":29462,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result8"}},{"type":"rightadapter","out_nodes":[[12785,4910]],"__id":29465,"parentNodes":[4]},{"type":"join","out_nodes":[[12789,-1]],"__id":29466,"parentNodes":[12791,12792],"constraint":{"type":"join-reference","out_nodes":[],"__id":29467,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12785,-1]],"__id":29468,"parentNodes":[]},{"type":"type","out_nodes":[[9,4911],[14,4912],[20,4913],[30,4915],[20,4917],[30,4918]],"__id":29469,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci8"}},{"type":"rightadapter","out_nodes":[[12788,4911]],"__id":29472,"parentNodes":[10]},{"type":"join","out_nodes":[[12793,-1]],"__id":29473,"parentNodes":[12794,12795],"constraint":{"type":"join-reference","out_nodes":[],"__id":29474,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12788,-1]],"__id":29475,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12792,4912]],"__id":29480,"parentNodes":[16]},{"type":"beta","out_nodes":[[12796,-1]],"__id":29481,"parentNodes":[12797,12798]},{"type":"leftadapter","out_nodes":[[12792,-1]],"__id":29482,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12795,4913]],"__id":29487,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12795,4914]],"__id":29491,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29492,"parentNodes":[12800],"index":1474,"rule":{"name":"Bootstrap8","pattern":{"type":"object","id":5409,"cls":"Fibonacci8","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap8"},{"type":"beta","out_nodes":[[12799,-1]],"__id":29493,"parentNodes":[12801,12802]},{"type":"rightadapter","out_nodes":[[12800,4915]],"__id":29498,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12800,4916]],"__id":29502,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29503,"parentNodes":[12804],"index":1475,"rule":{"name":"Recurse8","pattern":{"type":"composite","id":5412,"leftPattern":{"type":"not","id":5410,"cls":"Fibonacci8","alias":"f"},"rightPattern":{"type":"object","id":5411,"cls":"Fibonacci8","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci8 = defined.get('Fibonacci8');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci8(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse8"},{"type":"beta","out_nodes":[[12803,-1]],"__id":29504,"parentNodes":[12805,12806]},{"type":"rightadapter","out_nodes":[[12804,4917]],"__id":29508,"parentNodes":[37]},{"type":"not","out_nodes":[[12807,-1]],"__id":29509,"parentNodes":[12808,12809],"constraint":{"type":"join-reference","out_nodes":[],"__id":29510,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12804,-1]],"__id":29511,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12806,4918]],"__id":29515,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12806,4919]],"__id":29519,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29520,"parentNodes":[12811],"index":1476,"rule":{"name":"Calculate7","pattern":{"type":"composite","id":5419,"leftPattern":{"type":"composite","id":5418,"leftPattern":{"type":"composite","id":5417,"leftPattern":{"type":"object","id":5413,"cls":"Fibonacci7","alias":"f1"},"rightPattern":{"type":"object","id":5414,"cls":"Fibonacci7","alias":"f2"}},"rightPattern":{"type":"object","id":5415,"cls":"Fibonacci7","alias":"f3"}},"rightPattern":{"type":"object","id":5416,"cls":"Result7","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate7"},{"type":"beta","out_nodes":[[12810,-1]],"__id":29521,"parentNodes":[12813,12814]},{"type":"type","out_nodes":[[3,4920]],"__id":29522,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result7"}},{"type":"rightadapter","out_nodes":[[12811,4920]],"__id":29525,"parentNodes":[4]},{"type":"join","out_nodes":[[12815,-1]],"__id":29526,"parentNodes":[12817,12818],"constraint":{"type":"join-reference","out_nodes":[],"__id":29527,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12811,-1]],"__id":29528,"parentNodes":[]},{"type":"type","out_nodes":[[9,4921],[14,4922],[20,4923],[30,4925],[20,4927],[30,4928]],"__id":29529,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci7"}},{"type":"rightadapter","out_nodes":[[12814,4921]],"__id":29532,"parentNodes":[10]},{"type":"join","out_nodes":[[12819,-1]],"__id":29533,"parentNodes":[12820,12821],"constraint":{"type":"join-reference","out_nodes":[],"__id":29534,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12814,-1]],"__id":29535,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12818,4922]],"__id":29540,"parentNodes":[16]},{"type":"beta","out_nodes":[[12822,-1]],"__id":29541,"parentNodes":[12823,12824]},{"type":"leftadapter","out_nodes":[[12818,-1]],"__id":29542,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12821,4923]],"__id":29547,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12821,4924]],"__id":29551,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29552,"parentNodes":[12826],"index":1477,"rule":{"name":"Bootstrap7","pattern":{"type":"object","id":5420,"cls":"Fibonacci7","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap7"},{"type":"beta","out_nodes":[[12825,-1]],"__id":29553,"parentNodes":[12827,12828]},{"type":"rightadapter","out_nodes":[[12826,4925]],"__id":29558,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12826,4926]],"__id":29562,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29563,"parentNodes":[12830],"index":1478,"rule":{"name":"Recurse7","pattern":{"type":"composite","id":5423,"leftPattern":{"type":"not","id":5421,"cls":"Fibonacci7","alias":"f"},"rightPattern":{"type":"object","id":5422,"cls":"Fibonacci7","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci7 = defined.get('Fibonacci7');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci7(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse7"},{"type":"beta","out_nodes":[[12829,-1]],"__id":29564,"parentNodes":[12831,12832]},{"type":"rightadapter","out_nodes":[[12830,4927]],"__id":29568,"parentNodes":[37]},{"type":"not","out_nodes":[[12833,-1]],"__id":29569,"parentNodes":[12834,12835],"constraint":{"type":"join-reference","out_nodes":[],"__id":29570,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12830,-1]],"__id":29571,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12832,4928]],"__id":29575,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12832,4929]],"__id":29579,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29580,"parentNodes":[12837],"index":1479,"rule":{"name":"Calculate6","pattern":{"type":"composite","id":5430,"leftPattern":{"type":"composite","id":5429,"leftPattern":{"type":"composite","id":5428,"leftPattern":{"type":"object","id":5424,"cls":"Fibonacci6","alias":"f1"},"rightPattern":{"type":"object","id":5425,"cls":"Fibonacci6","alias":"f2"}},"rightPattern":{"type":"object","id":5426,"cls":"Fibonacci6","alias":"f3"}},"rightPattern":{"type":"object","id":5427,"cls":"Result6","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate6"},{"type":"beta","out_nodes":[[12836,-1]],"__id":29581,"parentNodes":[12839,12840]},{"type":"type","out_nodes":[[3,4930]],"__id":29582,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result6"}},{"type":"rightadapter","out_nodes":[[12837,4930]],"__id":29585,"parentNodes":[4]},{"type":"join","out_nodes":[[12841,-1]],"__id":29586,"parentNodes":[12843,12844],"constraint":{"type":"join-reference","out_nodes":[],"__id":29587,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12837,-1]],"__id":29588,"parentNodes":[]},{"type":"type","out_nodes":[[9,4931],[14,4932],[20,4933],[30,4935],[20,4937],[30,4938]],"__id":29589,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci6"}},{"type":"rightadapter","out_nodes":[[12840,4931]],"__id":29592,"parentNodes":[10]},{"type":"join","out_nodes":[[12845,-1]],"__id":29593,"parentNodes":[12846,12847],"constraint":{"type":"join-reference","out_nodes":[],"__id":29594,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12840,-1]],"__id":29595,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12844,4932]],"__id":29600,"parentNodes":[16]},{"type":"beta","out_nodes":[[12848,-1]],"__id":29601,"parentNodes":[12849,12850]},{"type":"leftadapter","out_nodes":[[12844,-1]],"__id":29602,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12847,4933]],"__id":29607,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12847,4934]],"__id":29611,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29612,"parentNodes":[12852],"index":1480,"rule":{"name":"Bootstrap6","pattern":{"type":"object","id":5431,"cls":"Fibonacci6","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap6"},{"type":"beta","out_nodes":[[12851,-1]],"__id":29613,"parentNodes":[12853,12854]},{"type":"rightadapter","out_nodes":[[12852,4935]],"__id":29618,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12852,4936]],"__id":29622,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29623,"parentNodes":[12856],"index":1481,"rule":{"name":"Recurse6","pattern":{"type":"composite","id":5434,"leftPattern":{"type":"not","id":5432,"cls":"Fibonacci6","alias":"f"},"rightPattern":{"type":"object","id":5433,"cls":"Fibonacci6","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci6 = defined.get('Fibonacci6');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci6(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse6"},{"type":"beta","out_nodes":[[12855,-1]],"__id":29624,"parentNodes":[12857,12858]},{"type":"rightadapter","out_nodes":[[12856,4937]],"__id":29628,"parentNodes":[37]},{"type":"not","out_nodes":[[12859,-1]],"__id":29629,"parentNodes":[12860,12861],"constraint":{"type":"join-reference","out_nodes":[],"__id":29630,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12856,-1]],"__id":29631,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12858,4938]],"__id":29635,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12858,4939]],"__id":29639,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29640,"parentNodes":[12863],"index":1482,"rule":{"name":"Calculate5","pattern":{"type":"composite","id":5441,"leftPattern":{"type":"composite","id":5440,"leftPattern":{"type":"composite","id":5439,"leftPattern":{"type":"object","id":5435,"cls":"Fibonacci5","alias":"f1"},"rightPattern":{"type":"object","id":5436,"cls":"Fibonacci5","alias":"f2"}},"rightPattern":{"type":"object","id":5437,"cls":"Fibonacci5","alias":"f3"}},"rightPattern":{"type":"object","id":5438,"cls":"Result5","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate5"},{"type":"beta","out_nodes":[[12862,-1]],"__id":29641,"parentNodes":[12865,12866]},{"type":"type","out_nodes":[[3,4940]],"__id":29642,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result5"}},{"type":"rightadapter","out_nodes":[[12863,4940]],"__id":29645,"parentNodes":[4]},{"type":"join","out_nodes":[[12867,-1]],"__id":29646,"parentNodes":[12869,12870],"constraint":{"type":"join-reference","out_nodes":[],"__id":29647,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12863,-1]],"__id":29648,"parentNodes":[]},{"type":"type","out_nodes":[[9,4941],[14,4942],[20,4943],[30,4945],[20,4947],[30,4948]],"__id":29649,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci5"}},{"type":"rightadapter","out_nodes":[[12866,4941]],"__id":29652,"parentNodes":[10]},{"type":"join","out_nodes":[[12871,-1]],"__id":29653,"parentNodes":[12872,12873],"constraint":{"type":"join-reference","out_nodes":[],"__id":29654,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12866,-1]],"__id":29655,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12870,4942]],"__id":29660,"parentNodes":[16]},{"type":"beta","out_nodes":[[12874,-1]],"__id":29661,"parentNodes":[12875,12876]},{"type":"leftadapter","out_nodes":[[12870,-1]],"__id":29662,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12873,4943]],"__id":29667,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12873,4944]],"__id":29671,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29672,"parentNodes":[12878],"index":1483,"rule":{"name":"Bootstrap5","pattern":{"type":"object","id":5442,"cls":"Fibonacci5","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap5"},{"type":"beta","out_nodes":[[12877,-1]],"__id":29673,"parentNodes":[12879,12880]},{"type":"rightadapter","out_nodes":[[12878,4945]],"__id":29678,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12878,4946]],"__id":29682,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29683,"parentNodes":[12882],"index":1484,"rule":{"name":"Recurse5","pattern":{"type":"composite","id":5445,"leftPattern":{"type":"not","id":5443,"cls":"Fibonacci5","alias":"f"},"rightPattern":{"type":"object","id":5444,"cls":"Fibonacci5","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci5 = defined.get('Fibonacci5');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci5(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse5"},{"type":"beta","out_nodes":[[12881,-1]],"__id":29684,"parentNodes":[12883,12884]},{"type":"rightadapter","out_nodes":[[12882,4947]],"__id":29688,"parentNodes":[37]},{"type":"not","out_nodes":[[12885,-1]],"__id":29689,"parentNodes":[12886,12887],"constraint":{"type":"join-reference","out_nodes":[],"__id":29690,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12882,-1]],"__id":29691,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12884,4948]],"__id":29695,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12884,4949]],"__id":29699,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29700,"parentNodes":[12889],"index":1485,"rule":{"name":"Calculate4","pattern":{"type":"composite","id":5452,"leftPattern":{"type":"composite","id":5451,"leftPattern":{"type":"composite","id":5450,"leftPattern":{"type":"object","id":5446,"cls":"Fibonacci4","alias":"f1"},"rightPattern":{"type":"object","id":5447,"cls":"Fibonacci4","alias":"f2"}},"rightPattern":{"type":"object","id":5448,"cls":"Fibonacci4","alias":"f3"}},"rightPattern":{"type":"object","id":5449,"cls":"Result4","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate4"},{"type":"beta","out_nodes":[[12888,-1]],"__id":29701,"parentNodes":[12891,12892]},{"type":"type","out_nodes":[[3,4950]],"__id":29702,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result4"}},{"type":"rightadapter","out_nodes":[[12889,4950]],"__id":29705,"parentNodes":[4]},{"type":"join","out_nodes":[[12893,-1]],"__id":29706,"parentNodes":[12895,12896],"constraint":{"type":"join-reference","out_nodes":[],"__id":29707,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12889,-1]],"__id":29708,"parentNodes":[]},{"type":"type","out_nodes":[[9,4951],[14,4952],[20,4953],[30,4955],[20,4957],[30,4958]],"__id":29709,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci4"}},{"type":"rightadapter","out_nodes":[[12892,4951]],"__id":29712,"parentNodes":[10]},{"type":"join","out_nodes":[[12897,-1]],"__id":29713,"parentNodes":[12898,12899],"constraint":{"type":"join-reference","out_nodes":[],"__id":29714,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12892,-1]],"__id":29715,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12896,4952]],"__id":29720,"parentNodes":[16]},{"type":"beta","out_nodes":[[12900,-1]],"__id":29721,"parentNodes":[12901,12902]},{"type":"leftadapter","out_nodes":[[12896,-1]],"__id":29722,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12899,4953]],"__id":29727,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12899,4954]],"__id":29731,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29732,"parentNodes":[12904],"index":1486,"rule":{"name":"Bootstrap4","pattern":{"type":"object","id":5453,"cls":"Fibonacci4","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap4"},{"type":"beta","out_nodes":[[12903,-1]],"__id":29733,"parentNodes":[12905,12906]},{"type":"rightadapter","out_nodes":[[12904,4955]],"__id":29738,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12904,4956]],"__id":29742,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29743,"parentNodes":[12908],"index":1487,"rule":{"name":"Recurse4","pattern":{"type":"composite","id":5456,"leftPattern":{"type":"not","id":5454,"cls":"Fibonacci4","alias":"f"},"rightPattern":{"type":"object","id":5455,"cls":"Fibonacci4","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci4 = defined.get('Fibonacci4');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci4(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse4"},{"type":"beta","out_nodes":[[12907,-1]],"__id":29744,"parentNodes":[12909,12910]},{"type":"rightadapter","out_nodes":[[12908,4957]],"__id":29748,"parentNodes":[37]},{"type":"not","out_nodes":[[12911,-1]],"__id":29749,"parentNodes":[12912,12913],"constraint":{"type":"join-reference","out_nodes":[],"__id":29750,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12908,-1]],"__id":29751,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12910,4958]],"__id":29755,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12910,4959]],"__id":29759,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29760,"parentNodes":[12915],"index":1488,"rule":{"name":"Calculate3","pattern":{"type":"composite","id":5463,"leftPattern":{"type":"composite","id":5462,"leftPattern":{"type":"composite","id":5461,"leftPattern":{"type":"object","id":5457,"cls":"Fibonacci3","alias":"f1"},"rightPattern":{"type":"object","id":5458,"cls":"Fibonacci3","alias":"f2"}},"rightPattern":{"type":"object","id":5459,"cls":"Fibonacci3","alias":"f3"}},"rightPattern":{"type":"object","id":5460,"cls":"Result3","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate3"},{"type":"beta","out_nodes":[[12914,-1]],"__id":29761,"parentNodes":[12917,12918]},{"type":"type","out_nodes":[[3,4960]],"__id":29762,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result3"}},{"type":"rightadapter","out_nodes":[[12915,4960]],"__id":29765,"parentNodes":[4]},{"type":"join","out_nodes":[[12919,-1]],"__id":29766,"parentNodes":[12921,12922],"constraint":{"type":"join-reference","out_nodes":[],"__id":29767,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12915,-1]],"__id":29768,"parentNodes":[]},{"type":"type","out_nodes":[[9,4961],[14,4962],[20,4963],[30,4965],[20,4967],[30,4968]],"__id":29769,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci3"}},{"type":"rightadapter","out_nodes":[[12918,4961]],"__id":29772,"parentNodes":[10]},{"type":"join","out_nodes":[[12923,-1]],"__id":29773,"parentNodes":[12924,12925],"constraint":{"type":"join-reference","out_nodes":[],"__id":29774,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12918,-1]],"__id":29775,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12922,4962]],"__id":29780,"parentNodes":[16]},{"type":"beta","out_nodes":[[12926,-1]],"__id":29781,"parentNodes":[12927,12928]},{"type":"leftadapter","out_nodes":[[12922,-1]],"__id":29782,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12925,4963]],"__id":29787,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12925,4964]],"__id":29791,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29792,"parentNodes":[12930],"index":1489,"rule":{"name":"Bootstrap3","pattern":{"type":"object","id":5464,"cls":"Fibonacci3","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap3"},{"type":"beta","out_nodes":[[12929,-1]],"__id":29793,"parentNodes":[12931,12932]},{"type":"rightadapter","out_nodes":[[12930,4965]],"__id":29798,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12930,4966]],"__id":29802,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29803,"parentNodes":[12934],"index":1490,"rule":{"name":"Recurse3","pattern":{"type":"composite","id":5467,"leftPattern":{"type":"not","id":5465,"cls":"Fibonacci3","alias":"f"},"rightPattern":{"type":"object","id":5466,"cls":"Fibonacci3","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci3 = defined.get('Fibonacci3');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci3(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse3"},{"type":"beta","out_nodes":[[12933,-1]],"__id":29804,"parentNodes":[12935,12936]},{"type":"rightadapter","out_nodes":[[12934,4967]],"__id":29808,"parentNodes":[37]},{"type":"not","out_nodes":[[12937,-1]],"__id":29809,"parentNodes":[12938,12939],"constraint":{"type":"join-reference","out_nodes":[],"__id":29810,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12934,-1]],"__id":29811,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12936,4968]],"__id":29815,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12936,4969]],"__id":29819,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29820,"parentNodes":[12941],"index":1491,"rule":{"name":"Calculate2","pattern":{"type":"composite","id":5474,"leftPattern":{"type":"composite","id":5473,"leftPattern":{"type":"composite","id":5472,"leftPattern":{"type":"object","id":5468,"cls":"Fibonacci2","alias":"f1"},"rightPattern":{"type":"object","id":5469,"cls":"Fibonacci2","alias":"f2"}},"rightPattern":{"type":"object","id":5470,"cls":"Fibonacci2","alias":"f3"}},"rightPattern":{"type":"object","id":5471,"cls":"Result2","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate2"},{"type":"beta","out_nodes":[[12940,-1]],"__id":29821,"parentNodes":[12943,12944]},{"type":"type","out_nodes":[[3,4970]],"__id":29822,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result2"}},{"type":"rightadapter","out_nodes":[[12941,4970]],"__id":29825,"parentNodes":[4]},{"type":"join","out_nodes":[[12945,-1]],"__id":29826,"parentNodes":[12947,12948],"constraint":{"type":"join-reference","out_nodes":[],"__id":29827,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12941,-1]],"__id":29828,"parentNodes":[]},{"type":"type","out_nodes":[[9,4971],[14,4972],[20,4973],[30,4975],[20,4977],[30,4978]],"__id":29829,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci2"}},{"type":"rightadapter","out_nodes":[[12944,4971]],"__id":29832,"parentNodes":[10]},{"type":"join","out_nodes":[[12949,-1]],"__id":29833,"parentNodes":[12950,12951],"constraint":{"type":"join-reference","out_nodes":[],"__id":29834,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12944,-1]],"__id":29835,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12948,4972]],"__id":29840,"parentNodes":[16]},{"type":"beta","out_nodes":[[12952,-1]],"__id":29841,"parentNodes":[12953,12954]},{"type":"leftadapter","out_nodes":[[12948,-1]],"__id":29842,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12951,4973]],"__id":29847,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12951,4974]],"__id":29851,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29852,"parentNodes":[12956],"index":1492,"rule":{"name":"Bootstrap2","pattern":{"type":"object","id":5475,"cls":"Fibonacci2","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap2"},{"type":"beta","out_nodes":[[12955,-1]],"__id":29853,"parentNodes":[12957,12958]},{"type":"rightadapter","out_nodes":[[12956,4975]],"__id":29858,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12956,4976]],"__id":29862,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29863,"parentNodes":[12960],"index":1493,"rule":{"name":"Recurse2","pattern":{"type":"composite","id":5478,"leftPattern":{"type":"not","id":5476,"cls":"Fibonacci2","alias":"f"},"rightPattern":{"type":"object","id":5477,"cls":"Fibonacci2","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci2 = defined.get('Fibonacci2');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci2(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse2"},{"type":"beta","out_nodes":[[12959,-1]],"__id":29864,"parentNodes":[12961,12962]},{"type":"rightadapter","out_nodes":[[12960,4977]],"__id":29868,"parentNodes":[37]},{"type":"not","out_nodes":[[12963,-1]],"__id":29869,"parentNodes":[12964,12965],"constraint":{"type":"join-reference","out_nodes":[],"__id":29870,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12960,-1]],"__id":29871,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12962,4978]],"__id":29875,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12962,4979]],"__id":29879,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29880,"parentNodes":[12967],"index":1494,"rule":{"name":"Calculate1","pattern":{"type":"composite","id":5485,"leftPattern":{"type":"composite","id":5484,"leftPattern":{"type":"composite","id":5483,"leftPattern":{"type":"object","id":5479,"cls":"Fibonacci1","alias":"f1"},"rightPattern":{"type":"object","id":5480,"cls":"Fibonacci1","alias":"f2"}},"rightPattern":{"type":"object","id":5481,"cls":"Fibonacci1","alias":"f3"}},"rightPattern":{"type":"object","id":5482,"cls":"Result1","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate1"},{"type":"beta","out_nodes":[[12966,-1]],"__id":29881,"parentNodes":[12969,12970]},{"type":"type","out_nodes":[[3,4980]],"__id":29882,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result1"}},{"type":"rightadapter","out_nodes":[[12967,4980]],"__id":29885,"parentNodes":[4]},{"type":"join","out_nodes":[[12971,-1]],"__id":29886,"parentNodes":[12973,12974],"constraint":{"type":"join-reference","out_nodes":[],"__id":29887,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12967,-1]],"__id":29888,"parentNodes":[]},{"type":"type","out_nodes":[[9,4981],[14,4982],[20,4983],[30,4985],[20,4987],[30,4988]],"__id":29889,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci1"}},{"type":"rightadapter","out_nodes":[[12970,4981]],"__id":29892,"parentNodes":[10]},{"type":"join","out_nodes":[[12975,-1]],"__id":29893,"parentNodes":[12976,12977],"constraint":{"type":"join-reference","out_nodes":[],"__id":29894,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12970,-1]],"__id":29895,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12974,4982]],"__id":29900,"parentNodes":[16]},{"type":"beta","out_nodes":[[12978,-1]],"__id":29901,"parentNodes":[12979,12980]},{"type":"leftadapter","out_nodes":[[12974,-1]],"__id":29902,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12977,4983]],"__id":29907,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[12977,4984]],"__id":29911,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29912,"parentNodes":[12982],"index":1495,"rule":{"name":"Bootstrap1","pattern":{"type":"object","id":5486,"cls":"Fibonacci1","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap1"},{"type":"beta","out_nodes":[[12981,-1]],"__id":29913,"parentNodes":[12983,12984]},{"type":"rightadapter","out_nodes":[[12982,4985]],"__id":29918,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[12982,4986]],"__id":29922,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29923,"parentNodes":[12986],"index":1496,"rule":{"name":"Recurse1","pattern":{"type":"composite","id":5489,"leftPattern":{"type":"not","id":5487,"cls":"Fibonacci1","alias":"f"},"rightPattern":{"type":"object","id":5488,"cls":"Fibonacci1","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci1 = defined.get('Fibonacci1');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci1(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse1"},{"type":"beta","out_nodes":[[12985,-1]],"__id":29924,"parentNodes":[12987,12988]},{"type":"rightadapter","out_nodes":[[12986,4987]],"__id":29928,"parentNodes":[37]},{"type":"not","out_nodes":[[12989,-1]],"__id":29929,"parentNodes":[12990,12991],"constraint":{"type":"join-reference","out_nodes":[],"__id":29930,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[12986,-1]],"__id":29931,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[12988,4988]],"__id":29935,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[12988,4989]],"__id":29939,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29940,"parentNodes":[12993],"index":1497,"rule":{"name":"Calculate0","pattern":{"type":"composite","id":5496,"leftPattern":{"type":"composite","id":5495,"leftPattern":{"type":"composite","id":5494,"leftPattern":{"type":"object","id":5490,"cls":"Fibonacci0","alias":"f1"},"rightPattern":{"type":"object","id":5491,"cls":"Fibonacci0","alias":"f2"}},"rightPattern":{"type":"object","id":5492,"cls":"Fibonacci0","alias":"f3"}},"rightPattern":{"type":"object","id":5493,"cls":"Result0","alias":"r"}},"action":"let f1 = facts.get('f1');let f2 = facts.get('f2');let f3 = facts.get('f3');let r = facts.get('r');const modify=(...args)=>{flow.modify(...args)};const retract=(...args)=>{flow.retract(...args)};f3.value = r.result = f1.value + f2.value; \t\tmodify(f3); \t\tretract(f1);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Calculate0"},{"type":"beta","out_nodes":[[12992,-1]],"__id":29941,"parentNodes":[12995,12996]},{"type":"type","out_nodes":[[3,4990]],"__id":29942,"parentNodes":[],"constraint":{"type":"object","alias":"r","cls":"Result0"}},{"type":"rightadapter","out_nodes":[[12993,4990]],"__id":29945,"parentNodes":[4]},{"type":"join","out_nodes":[[12997,-1]],"__id":29946,"parentNodes":[12999,13000],"constraint":{"type":"join-reference","out_nodes":[],"__id":29947,"parentNodes":[],"constraint":{"options":{"alias":"f3","scope":{},"pattern":"f3.value == -1 && f3.sequence == s2 + 1"},"op":"eq","type":"reference_equality","alias":"f3","constraint":[[["f3",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s2",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s2"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12993,-1]],"__id":29948,"parentNodes":[]},{"type":"type","out_nodes":[[9,4991],[14,4992],[20,4993],[30,4995],[20,4997],[30,4998]],"__id":29949,"parentNodes":[],"constraint":{"type":"object","alias":"f3","cls":"Fibonacci0"}},{"type":"rightadapter","out_nodes":[[12996,4991]],"__id":29952,"parentNodes":[10]},{"type":"join","out_nodes":[[13001,-1]],"__id":29953,"parentNodes":[13002,13003],"constraint":{"type":"join-reference","out_nodes":[],"__id":29954,"parentNodes":[],"constraint":{"options":{"alias":"f2","scope":{},"pattern":"f2.value != -1 && f2.sequence == s1 + 1"},"op":"eq","type":"reference_equality","alias":"f2","constraint":[[["f2",null,"identifier"],["sequence",null,"identifier"],"prop"],[["s1",null,"identifier"],[1,null,"number"],"plus"],"eq"],"vars":["s1"]},"isDefault":false}},{"type":"leftadapter","out_nodes":[[12996,-1]],"__id":29955,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[13000,4992]],"__id":29960,"parentNodes":[16]},{"type":"beta","out_nodes":[[13004,-1]],"__id":29961,"parentNodes":[13005,13006]},{"type":"leftadapter","out_nodes":[[13000,-1]],"__id":29962,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[13003,4993]],"__id":29967,"parentNodes":[22]},{"type":"leftadapter","out_nodes":[[13003,4994]],"__id":29971,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29972,"parentNodes":[13008],"index":1498,"rule":{"name":"Bootstrap0","pattern":{"type":"object","id":5497,"cls":"Fibonacci0","alias":"f"},"action":"let f = facts.get('f');const modify=(...args)=>{flow.modify(...args)};f.value = 1; \t\tmodify(f);","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Bootstrap0"},{"type":"beta","out_nodes":[[13007,-1]],"__id":29973,"parentNodes":[13009,13010]},{"type":"rightadapter","out_nodes":[[13008,4995]],"__id":29978,"parentNodes":[32]},{"type":"leftadapter","out_nodes":[[13008,4996]],"__id":29982,"parentNodes":[26]},{"type":"terminal","out_nodes":[],"__id":29983,"parentNodes":[13012],"index":1499,"rule":{"name":"Recurse0","pattern":{"type":"composite","id":5500,"leftPattern":{"type":"not","id":5498,"cls":"Fibonacci0","alias":"f"},"rightPattern":{"type":"object","id":5499,"cls":"Fibonacci0","alias":"f1"}},"action":"let f = facts.get('f');facts.has('f') && (f = facts.get('f'));let f1 = facts.get('f1');let Fibonacci0 = defined.get('Fibonacci0');const assert=(...args)=>{flow.assert(...args)};assert(new Fibonacci0(f1.sequence - 1));","priority":0,"agendaGroup":null,"autoFocus":false},"name":"Recurse0"},{"type":"beta","out_nodes":[[13011,-1]],"__id":29984,"parentNodes":[13013,13014]},{"type":"rightadapter","out_nodes":[[13012,4997]],"__id":29988,"parentNodes":[37]},{"type":"not","out_nodes":[[13015,-1]],"__id":29989,"parentNodes":[13016,13017],"constraint":{"type":"join-reference","out_nodes":[],"__id":29990,"parentNodes":[],"constraint":{},"isDefault":true}},{"type":"leftadapter","out_nodes":[[13012,-1]],"__id":29991,"parentNodes":[]},{"type":"rightadapter","out_nodes":[[13014,4998]],"__id":29995,"parentNodes":[41]},{"type":"leftadapter","out_nodes":[[13014,4999]],"__id":29999,"parentNodes":[26]}],"patterns":[{"type":"object","id":4,"cls":"Result499","alias":"r"},{"type":"object","id":3,"cls":"Fibonacci499","alias":"f3"},{"type":"object","id":2,"cls":"Fibonacci499","alias":"f2"},{"type":"object","id":1,"cls":"Fibonacci499","alias":"f1"},{"type":"initial_fact","id":5501,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":8,"cls":"Fibonacci499","alias":"f"},{"type":"initial_fact","id":5503,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":10,"cls":"Fibonacci499","alias":"f1"},{"type":"not","id":9,"cls":"Fibonacci499","alias":"f"},{"type":"initial_fact","id":5505,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":15,"cls":"Result498","alias":"r"},{"type":"object","id":14,"cls":"Fibonacci498","alias":"f3"},{"type":"object","id":13,"cls":"Fibonacci498","alias":"f2"},{"type":"object","id":12,"cls":"Fibonacci498","alias":"f1"},{"type":"initial_fact","id":5507,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":19,"cls":"Fibonacci498","alias":"f"},{"type":"initial_fact","id":5509,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":21,"cls":"Fibonacci498","alias":"f1"},{"type":"not","id":20,"cls":"Fibonacci498","alias":"f"},{"type":"initial_fact","id":5511,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":26,"cls":"Result497","alias":"r"},{"type":"object","id":25,"cls":"Fibonacci497","alias":"f3"},{"type":"object","id":24,"cls":"Fibonacci497","alias":"f2"},{"type":"object","id":23,"cls":"Fibonacci497","alias":"f1"},{"type":"initial_fact","id":5513,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":30,"cls":"Fibonacci497","alias":"f"},{"type":"initial_fact","id":5515,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":32,"cls":"Fibonacci497","alias":"f1"},{"type":"not","id":31,"cls":"Fibonacci497","alias":"f"},{"type":"initial_fact","id":5517,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":37,"cls":"Result496","alias":"r"},{"type":"object","id":36,"cls":"Fibonacci496","alias":"f3"},{"type":"object","id":35,"cls":"Fibonacci496","alias":"f2"},{"type":"object","id":34,"cls":"Fibonacci496","alias":"f1"},{"type":"initial_fact","id":5519,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":41,"cls":"Fibonacci496","alias":"f"},{"type":"initial_fact","id":5521,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":43,"cls":"Fibonacci496","alias":"f1"},{"type":"not","id":42,"cls":"Fibonacci496","alias":"f"},{"type":"initial_fact","id":5523,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":48,"cls":"Result495","alias":"r"},{"type":"object","id":47,"cls":"Fibonacci495","alias":"f3"},{"type":"object","id":46,"cls":"Fibonacci495","alias":"f2"},{"type":"object","id":45,"cls":"Fibonacci495","alias":"f1"},{"type":"initial_fact","id":5525,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":52,"cls":"Fibonacci495","alias":"f"},{"type":"initial_fact","id":5527,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":54,"cls":"Fibonacci495","alias":"f1"},{"type":"not","id":53,"cls":"Fibonacci495","alias":"f"},{"type":"initial_fact","id":5529,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":59,"cls":"Result494","alias":"r"},{"type":"object","id":58,"cls":"Fibonacci494","alias":"f3"},{"type":"object","id":57,"cls":"Fibonacci494","alias":"f2"},{"type":"object","id":56,"cls":"Fibonacci494","alias":"f1"},{"type":"initial_fact","id":5531,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":63,"cls":"Fibonacci494","alias":"f"},{"type":"initial_fact","id":5533,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":65,"cls":"Fibonacci494","alias":"f1"},{"type":"not","id":64,"cls":"Fibonacci494","alias":"f"},{"type":"initial_fact","id":5535,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":70,"cls":"Result493","alias":"r"},{"type":"object","id":69,"cls":"Fibonacci493","alias":"f3"},{"type":"object","id":68,"cls":"Fibonacci493","alias":"f2"},{"type":"object","id":67,"cls":"Fibonacci493","alias":"f1"},{"type":"initial_fact","id":5537,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":74,"cls":"Fibonacci493","alias":"f"},{"type":"initial_fact","id":5539,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":76,"cls":"Fibonacci493","alias":"f1"},{"type":"not","id":75,"cls":"Fibonacci493","alias":"f"},{"type":"initial_fact","id":5541,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":81,"cls":"Result492","alias":"r"},{"type":"object","id":80,"cls":"Fibonacci492","alias":"f3"},{"type":"object","id":79,"cls":"Fibonacci492","alias":"f2"},{"type":"object","id":78,"cls":"Fibonacci492","alias":"f1"},{"type":"initial_fact","id":5543,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":85,"cls":"Fibonacci492","alias":"f"},{"type":"initial_fact","id":5545,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":87,"cls":"Fibonacci492","alias":"f1"},{"type":"not","id":86,"cls":"Fibonacci492","alias":"f"},{"type":"initial_fact","id":5547,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":92,"cls":"Result491","alias":"r"},{"type":"object","id":91,"cls":"Fibonacci491","alias":"f3"},{"type":"object","id":90,"cls":"Fibonacci491","alias":"f2"},{"type":"object","id":89,"cls":"Fibonacci491","alias":"f1"},{"type":"initial_fact","id":5549,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":96,"cls":"Fibonacci491","alias":"f"},{"type":"initial_fact","id":5551,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":98,"cls":"Fibonacci491","alias":"f1"},{"type":"not","id":97,"cls":"Fibonacci491","alias":"f"},{"type":"initial_fact","id":5553,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":103,"cls":"Result490","alias":"r"},{"type":"object","id":102,"cls":"Fibonacci490","alias":"f3"},{"type":"object","id":101,"cls":"Fibonacci490","alias":"f2"},{"type":"object","id":100,"cls":"Fibonacci490","alias":"f1"},{"type":"initial_fact","id":5555,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":107,"cls":"Fibonacci490","alias":"f"},{"type":"initial_fact","id":5557,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":109,"cls":"Fibonacci490","alias":"f1"},{"type":"not","id":108,"cls":"Fibonacci490","alias":"f"},{"type":"initial_fact","id":5559,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":114,"cls":"Result489","alias":"r"},{"type":"object","id":113,"cls":"Fibonacci489","alias":"f3"},{"type":"object","id":112,"cls":"Fibonacci489","alias":"f2"},{"type":"object","id":111,"cls":"Fibonacci489","alias":"f1"},{"type":"initial_fact","id":5561,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":118,"cls":"Fibonacci489","alias":"f"},{"type":"initial_fact","id":5563,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":120,"cls":"Fibonacci489","alias":"f1"},{"type":"not","id":119,"cls":"Fibonacci489","alias":"f"},{"type":"initial_fact","id":5565,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":125,"cls":"Result488","alias":"r"},{"type":"object","id":124,"cls":"Fibonacci488","alias":"f3"},{"type":"object","id":123,"cls":"Fibonacci488","alias":"f2"},{"type":"object","id":122,"cls":"Fibonacci488","alias":"f1"},{"type":"initial_fact","id":5567,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":129,"cls":"Fibonacci488","alias":"f"},{"type":"initial_fact","id":5569,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":131,"cls":"Fibonacci488","alias":"f1"},{"type":"not","id":130,"cls":"Fibonacci488","alias":"f"},{"type":"initial_fact","id":5571,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":136,"cls":"Result487","alias":"r"},{"type":"object","id":135,"cls":"Fibonacci487","alias":"f3"},{"type":"object","id":134,"cls":"Fibonacci487","alias":"f2"},{"type":"object","id":133,"cls":"Fibonacci487","alias":"f1"},{"type":"initial_fact","id":5573,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":140,"cls":"Fibonacci487","alias":"f"},{"type":"initial_fact","id":5575,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":142,"cls":"Fibonacci487","alias":"f1"},{"type":"not","id":141,"cls":"Fibonacci487","alias":"f"},{"type":"initial_fact","id":5577,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":147,"cls":"Result486","alias":"r"},{"type":"object","id":146,"cls":"Fibonacci486","alias":"f3"},{"type":"object","id":145,"cls":"Fibonacci486","alias":"f2"},{"type":"object","id":144,"cls":"Fibonacci486","alias":"f1"},{"type":"initial_fact","id":5579,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":151,"cls":"Fibonacci486","alias":"f"},{"type":"initial_fact","id":5581,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":153,"cls":"Fibonacci486","alias":"f1"},{"type":"not","id":152,"cls":"Fibonacci486","alias":"f"},{"type":"initial_fact","id":5583,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":158,"cls":"Result485","alias":"r"},{"type":"object","id":157,"cls":"Fibonacci485","alias":"f3"},{"type":"object","id":156,"cls":"Fibonacci485","alias":"f2"},{"type":"object","id":155,"cls":"Fibonacci485","alias":"f1"},{"type":"initial_fact","id":5585,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":162,"cls":"Fibonacci485","alias":"f"},{"type":"initial_fact","id":5587,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":164,"cls":"Fibonacci485","alias":"f1"},{"type":"not","id":163,"cls":"Fibonacci485","alias":"f"},{"type":"initial_fact","id":5589,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":169,"cls":"Result484","alias":"r"},{"type":"object","id":168,"cls":"Fibonacci484","alias":"f3"},{"type":"object","id":167,"cls":"Fibonacci484","alias":"f2"},{"type":"object","id":166,"cls":"Fibonacci484","alias":"f1"},{"type":"initial_fact","id":5591,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":173,"cls":"Fibonacci484","alias":"f"},{"type":"initial_fact","id":5593,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":175,"cls":"Fibonacci484","alias":"f1"},{"type":"not","id":174,"cls":"Fibonacci484","alias":"f"},{"type":"initial_fact","id":5595,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":180,"cls":"Result483","alias":"r"},{"type":"object","id":179,"cls":"Fibonacci483","alias":"f3"},{"type":"object","id":178,"cls":"Fibonacci483","alias":"f2"},{"type":"object","id":177,"cls":"Fibonacci483","alias":"f1"},{"type":"initial_fact","id":5597,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":184,"cls":"Fibonacci483","alias":"f"},{"type":"initial_fact","id":5599,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":186,"cls":"Fibonacci483","alias":"f1"},{"type":"not","id":185,"cls":"Fibonacci483","alias":"f"},{"type":"initial_fact","id":5601,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":191,"cls":"Result482","alias":"r"},{"type":"object","id":190,"cls":"Fibonacci482","alias":"f3"},{"type":"object","id":189,"cls":"Fibonacci482","alias":"f2"},{"type":"object","id":188,"cls":"Fibonacci482","alias":"f1"},{"type":"initial_fact","id":5603,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":195,"cls":"Fibonacci482","alias":"f"},{"type":"initial_fact","id":5605,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":197,"cls":"Fibonacci482","alias":"f1"},{"type":"not","id":196,"cls":"Fibonacci482","alias":"f"},{"type":"initial_fact","id":5607,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":202,"cls":"Result481","alias":"r"},{"type":"object","id":201,"cls":"Fibonacci481","alias":"f3"},{"type":"object","id":200,"cls":"Fibonacci481","alias":"f2"},{"type":"object","id":199,"cls":"Fibonacci481","alias":"f1"},{"type":"initial_fact","id":5609,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":206,"cls":"Fibonacci481","alias":"f"},{"type":"initial_fact","id":5611,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":208,"cls":"Fibonacci481","alias":"f1"},{"type":"not","id":207,"cls":"Fibonacci481","alias":"f"},{"type":"initial_fact","id":5613,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":213,"cls":"Result480","alias":"r"},{"type":"object","id":212,"cls":"Fibonacci480","alias":"f3"},{"type":"object","id":211,"cls":"Fibonacci480","alias":"f2"},{"type":"object","id":210,"cls":"Fibonacci480","alias":"f1"},{"type":"initial_fact","id":5615,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":217,"cls":"Fibonacci480","alias":"f"},{"type":"initial_fact","id":5617,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":219,"cls":"Fibonacci480","alias":"f1"},{"type":"not","id":218,"cls":"Fibonacci480","alias":"f"},{"type":"initial_fact","id":5619,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":224,"cls":"Result479","alias":"r"},{"type":"object","id":223,"cls":"Fibonacci479","alias":"f3"},{"type":"object","id":222,"cls":"Fibonacci479","alias":"f2"},{"type":"object","id":221,"cls":"Fibonacci479","alias":"f1"},{"type":"initial_fact","id":5621,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":228,"cls":"Fibonacci479","alias":"f"},{"type":"initial_fact","id":5623,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":230,"cls":"Fibonacci479","alias":"f1"},{"type":"not","id":229,"cls":"Fibonacci479","alias":"f"},{"type":"initial_fact","id":5625,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":235,"cls":"Result478","alias":"r"},{"type":"object","id":234,"cls":"Fibonacci478","alias":"f3"},{"type":"object","id":233,"cls":"Fibonacci478","alias":"f2"},{"type":"object","id":232,"cls":"Fibonacci478","alias":"f1"},{"type":"initial_fact","id":5627,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":239,"cls":"Fibonacci478","alias":"f"},{"type":"initial_fact","id":5629,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":241,"cls":"Fibonacci478","alias":"f1"},{"type":"not","id":240,"cls":"Fibonacci478","alias":"f"},{"type":"initial_fact","id":5631,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":246,"cls":"Result477","alias":"r"},{"type":"object","id":245,"cls":"Fibonacci477","alias":"f3"},{"type":"object","id":244,"cls":"Fibonacci477","alias":"f2"},{"type":"object","id":243,"cls":"Fibonacci477","alias":"f1"},{"type":"initial_fact","id":5633,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":250,"cls":"Fibonacci477","alias":"f"},{"type":"initial_fact","id":5635,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":252,"cls":"Fibonacci477","alias":"f1"},{"type":"not","id":251,"cls":"Fibonacci477","alias":"f"},{"type":"initial_fact","id":5637,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":257,"cls":"Result476","alias":"r"},{"type":"object","id":256,"cls":"Fibonacci476","alias":"f3"},{"type":"object","id":255,"cls":"Fibonacci476","alias":"f2"},{"type":"object","id":254,"cls":"Fibonacci476","alias":"f1"},{"type":"initial_fact","id":5639,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":261,"cls":"Fibonacci476","alias":"f"},{"type":"initial_fact","id":5641,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":263,"cls":"Fibonacci476","alias":"f1"},{"type":"not","id":262,"cls":"Fibonacci476","alias":"f"},{"type":"initial_fact","id":5643,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":268,"cls":"Result475","alias":"r"},{"type":"object","id":267,"cls":"Fibonacci475","alias":"f3"},{"type":"object","id":266,"cls":"Fibonacci475","alias":"f2"},{"type":"object","id":265,"cls":"Fibonacci475","alias":"f1"},{"type":"initial_fact","id":5645,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":272,"cls":"Fibonacci475","alias":"f"},{"type":"initial_fact","id":5647,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":274,"cls":"Fibonacci475","alias":"f1"},{"type":"not","id":273,"cls":"Fibonacci475","alias":"f"},{"type":"initial_fact","id":5649,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":279,"cls":"Result474","alias":"r"},{"type":"object","id":278,"cls":"Fibonacci474","alias":"f3"},{"type":"object","id":277,"cls":"Fibonacci474","alias":"f2"},{"type":"object","id":276,"cls":"Fibonacci474","alias":"f1"},{"type":"initial_fact","id":5651,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":283,"cls":"Fibonacci474","alias":"f"},{"type":"initial_fact","id":5653,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":285,"cls":"Fibonacci474","alias":"f1"},{"type":"not","id":284,"cls":"Fibonacci474","alias":"f"},{"type":"initial_fact","id":5655,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":290,"cls":"Result473","alias":"r"},{"type":"object","id":289,"cls":"Fibonacci473","alias":"f3"},{"type":"object","id":288,"cls":"Fibonacci473","alias":"f2"},{"type":"object","id":287,"cls":"Fibonacci473","alias":"f1"},{"type":"initial_fact","id":5657,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":294,"cls":"Fibonacci473","alias":"f"},{"type":"initial_fact","id":5659,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":296,"cls":"Fibonacci473","alias":"f1"},{"type":"not","id":295,"cls":"Fibonacci473","alias":"f"},{"type":"initial_fact","id":5661,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":301,"cls":"Result472","alias":"r"},{"type":"object","id":300,"cls":"Fibonacci472","alias":"f3"},{"type":"object","id":299,"cls":"Fibonacci472","alias":"f2"},{"type":"object","id":298,"cls":"Fibonacci472","alias":"f1"},{"type":"initial_fact","id":5663,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":305,"cls":"Fibonacci472","alias":"f"},{"type":"initial_fact","id":5665,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":307,"cls":"Fibonacci472","alias":"f1"},{"type":"not","id":306,"cls":"Fibonacci472","alias":"f"},{"type":"initial_fact","id":5667,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":312,"cls":"Result471","alias":"r"},{"type":"object","id":311,"cls":"Fibonacci471","alias":"f3"},{"type":"object","id":310,"cls":"Fibonacci471","alias":"f2"},{"type":"object","id":309,"cls":"Fibonacci471","alias":"f1"},{"type":"initial_fact","id":5669,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":316,"cls":"Fibonacci471","alias":"f"},{"type":"initial_fact","id":5671,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":318,"cls":"Fibonacci471","alias":"f1"},{"type":"not","id":317,"cls":"Fibonacci471","alias":"f"},{"type":"initial_fact","id":5673,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":323,"cls":"Result470","alias":"r"},{"type":"object","id":322,"cls":"Fibonacci470","alias":"f3"},{"type":"object","id":321,"cls":"Fibonacci470","alias":"f2"},{"type":"object","id":320,"cls":"Fibonacci470","alias":"f1"},{"type":"initial_fact","id":5675,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":327,"cls":"Fibonacci470","alias":"f"},{"type":"initial_fact","id":5677,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":329,"cls":"Fibonacci470","alias":"f1"},{"type":"not","id":328,"cls":"Fibonacci470","alias":"f"},{"type":"initial_fact","id":5679,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":334,"cls":"Result469","alias":"r"},{"type":"object","id":333,"cls":"Fibonacci469","alias":"f3"},{"type":"object","id":332,"cls":"Fibonacci469","alias":"f2"},{"type":"object","id":331,"cls":"Fibonacci469","alias":"f1"},{"type":"initial_fact","id":5681,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":338,"cls":"Fibonacci469","alias":"f"},{"type":"initial_fact","id":5683,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":340,"cls":"Fibonacci469","alias":"f1"},{"type":"not","id":339,"cls":"Fibonacci469","alias":"f"},{"type":"initial_fact","id":5685,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":345,"cls":"Result468","alias":"r"},{"type":"object","id":344,"cls":"Fibonacci468","alias":"f3"},{"type":"object","id":343,"cls":"Fibonacci468","alias":"f2"},{"type":"object","id":342,"cls":"Fibonacci468","alias":"f1"},{"type":"initial_fact","id":5687,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":349,"cls":"Fibonacci468","alias":"f"},{"type":"initial_fact","id":5689,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":351,"cls":"Fibonacci468","alias":"f1"},{"type":"not","id":350,"cls":"Fibonacci468","alias":"f"},{"type":"initial_fact","id":5691,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":356,"cls":"Result467","alias":"r"},{"type":"object","id":355,"cls":"Fibonacci467","alias":"f3"},{"type":"object","id":354,"cls":"Fibonacci467","alias":"f2"},{"type":"object","id":353,"cls":"Fibonacci467","alias":"f1"},{"type":"initial_fact","id":5693,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":360,"cls":"Fibonacci467","alias":"f"},{"type":"initial_fact","id":5695,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":362,"cls":"Fibonacci467","alias":"f1"},{"type":"not","id":361,"cls":"Fibonacci467","alias":"f"},{"type":"initial_fact","id":5697,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":367,"cls":"Result466","alias":"r"},{"type":"object","id":366,"cls":"Fibonacci466","alias":"f3"},{"type":"object","id":365,"cls":"Fibonacci466","alias":"f2"},{"type":"object","id":364,"cls":"Fibonacci466","alias":"f1"},{"type":"initial_fact","id":5699,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":371,"cls":"Fibonacci466","alias":"f"},{"type":"initial_fact","id":5701,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":373,"cls":"Fibonacci466","alias":"f1"},{"type":"not","id":372,"cls":"Fibonacci466","alias":"f"},{"type":"initial_fact","id":5703,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":378,"cls":"Result465","alias":"r"},{"type":"object","id":377,"cls":"Fibonacci465","alias":"f3"},{"type":"object","id":376,"cls":"Fibonacci465","alias":"f2"},{"type":"object","id":375,"cls":"Fibonacci465","alias":"f1"},{"type":"initial_fact","id":5705,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":382,"cls":"Fibonacci465","alias":"f"},{"type":"initial_fact","id":5707,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":384,"cls":"Fibonacci465","alias":"f1"},{"type":"not","id":383,"cls":"Fibonacci465","alias":"f"},{"type":"initial_fact","id":5709,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":389,"cls":"Result464","alias":"r"},{"type":"object","id":388,"cls":"Fibonacci464","alias":"f3"},{"type":"object","id":387,"cls":"Fibonacci464","alias":"f2"},{"type":"object","id":386,"cls":"Fibonacci464","alias":"f1"},{"type":"initial_fact","id":5711,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":393,"cls":"Fibonacci464","alias":"f"},{"type":"initial_fact","id":5713,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":395,"cls":"Fibonacci464","alias":"f1"},{"type":"not","id":394,"cls":"Fibonacci464","alias":"f"},{"type":"initial_fact","id":5715,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":400,"cls":"Result463","alias":"r"},{"type":"object","id":399,"cls":"Fibonacci463","alias":"f3"},{"type":"object","id":398,"cls":"Fibonacci463","alias":"f2"},{"type":"object","id":397,"cls":"Fibonacci463","alias":"f1"},{"type":"initial_fact","id":5717,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":404,"cls":"Fibonacci463","alias":"f"},{"type":"initial_fact","id":5719,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":406,"cls":"Fibonacci463","alias":"f1"},{"type":"not","id":405,"cls":"Fibonacci463","alias":"f"},{"type":"initial_fact","id":5721,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":411,"cls":"Result462","alias":"r"},{"type":"object","id":410,"cls":"Fibonacci462","alias":"f3"},{"type":"object","id":409,"cls":"Fibonacci462","alias":"f2"},{"type":"object","id":408,"cls":"Fibonacci462","alias":"f1"},{"type":"initial_fact","id":5723,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":415,"cls":"Fibonacci462","alias":"f"},{"type":"initial_fact","id":5725,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":417,"cls":"Fibonacci462","alias":"f1"},{"type":"not","id":416,"cls":"Fibonacci462","alias":"f"},{"type":"initial_fact","id":5727,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":422,"cls":"Result461","alias":"r"},{"type":"object","id":421,"cls":"Fibonacci461","alias":"f3"},{"type":"object","id":420,"cls":"Fibonacci461","alias":"f2"},{"type":"object","id":419,"cls":"Fibonacci461","alias":"f1"},{"type":"initial_fact","id":5729,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":426,"cls":"Fibonacci461","alias":"f"},{"type":"initial_fact","id":5731,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":428,"cls":"Fibonacci461","alias":"f1"},{"type":"not","id":427,"cls":"Fibonacci461","alias":"f"},{"type":"initial_fact","id":5733,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":433,"cls":"Result460","alias":"r"},{"type":"object","id":432,"cls":"Fibonacci460","alias":"f3"},{"type":"object","id":431,"cls":"Fibonacci460","alias":"f2"},{"type":"object","id":430,"cls":"Fibonacci460","alias":"f1"},{"type":"initial_fact","id":5735,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":437,"cls":"Fibonacci460","alias":"f"},{"type":"initial_fact","id":5737,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":439,"cls":"Fibonacci460","alias":"f1"},{"type":"not","id":438,"cls":"Fibonacci460","alias":"f"},{"type":"initial_fact","id":5739,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":444,"cls":"Result459","alias":"r"},{"type":"object","id":443,"cls":"Fibonacci459","alias":"f3"},{"type":"object","id":442,"cls":"Fibonacci459","alias":"f2"},{"type":"object","id":441,"cls":"Fibonacci459","alias":"f1"},{"type":"initial_fact","id":5741,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":448,"cls":"Fibonacci459","alias":"f"},{"type":"initial_fact","id":5743,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":450,"cls":"Fibonacci459","alias":"f1"},{"type":"not","id":449,"cls":"Fibonacci459","alias":"f"},{"type":"initial_fact","id":5745,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":455,"cls":"Result458","alias":"r"},{"type":"object","id":454,"cls":"Fibonacci458","alias":"f3"},{"type":"object","id":453,"cls":"Fibonacci458","alias":"f2"},{"type":"object","id":452,"cls":"Fibonacci458","alias":"f1"},{"type":"initial_fact","id":5747,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":459,"cls":"Fibonacci458","alias":"f"},{"type":"initial_fact","id":5749,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":461,"cls":"Fibonacci458","alias":"f1"},{"type":"not","id":460,"cls":"Fibonacci458","alias":"f"},{"type":"initial_fact","id":5751,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":466,"cls":"Result457","alias":"r"},{"type":"object","id":465,"cls":"Fibonacci457","alias":"f3"},{"type":"object","id":464,"cls":"Fibonacci457","alias":"f2"},{"type":"object","id":463,"cls":"Fibonacci457","alias":"f1"},{"type":"initial_fact","id":5753,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":470,"cls":"Fibonacci457","alias":"f"},{"type":"initial_fact","id":5755,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":472,"cls":"Fibonacci457","alias":"f1"},{"type":"not","id":471,"cls":"Fibonacci457","alias":"f"},{"type":"initial_fact","id":5757,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":477,"cls":"Result456","alias":"r"},{"type":"object","id":476,"cls":"Fibonacci456","alias":"f3"},{"type":"object","id":475,"cls":"Fibonacci456","alias":"f2"},{"type":"object","id":474,"cls":"Fibonacci456","alias":"f1"},{"type":"initial_fact","id":5759,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":481,"cls":"Fibonacci456","alias":"f"},{"type":"initial_fact","id":5761,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":483,"cls":"Fibonacci456","alias":"f1"},{"type":"not","id":482,"cls":"Fibonacci456","alias":"f"},{"type":"initial_fact","id":5763,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":488,"cls":"Result455","alias":"r"},{"type":"object","id":487,"cls":"Fibonacci455","alias":"f3"},{"type":"object","id":486,"cls":"Fibonacci455","alias":"f2"},{"type":"object","id":485,"cls":"Fibonacci455","alias":"f1"},{"type":"initial_fact","id":5765,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":492,"cls":"Fibonacci455","alias":"f"},{"type":"initial_fact","id":5767,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":494,"cls":"Fibonacci455","alias":"f1"},{"type":"not","id":493,"cls":"Fibonacci455","alias":"f"},{"type":"initial_fact","id":5769,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":499,"cls":"Result454","alias":"r"},{"type":"object","id":498,"cls":"Fibonacci454","alias":"f3"},{"type":"object","id":497,"cls":"Fibonacci454","alias":"f2"},{"type":"object","id":496,"cls":"Fibonacci454","alias":"f1"},{"type":"initial_fact","id":5771,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":503,"cls":"Fibonacci454","alias":"f"},{"type":"initial_fact","id":5773,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":505,"cls":"Fibonacci454","alias":"f1"},{"type":"not","id":504,"cls":"Fibonacci454","alias":"f"},{"type":"initial_fact","id":5775,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":510,"cls":"Result453","alias":"r"},{"type":"object","id":509,"cls":"Fibonacci453","alias":"f3"},{"type":"object","id":508,"cls":"Fibonacci453","alias":"f2"},{"type":"object","id":507,"cls":"Fibonacci453","alias":"f1"},{"type":"initial_fact","id":5777,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":514,"cls":"Fibonacci453","alias":"f"},{"type":"initial_fact","id":5779,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":516,"cls":"Fibonacci453","alias":"f1"},{"type":"not","id":515,"cls":"Fibonacci453","alias":"f"},{"type":"initial_fact","id":5781,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":521,"cls":"Result452","alias":"r"},{"type":"object","id":520,"cls":"Fibonacci452","alias":"f3"},{"type":"object","id":519,"cls":"Fibonacci452","alias":"f2"},{"type":"object","id":518,"cls":"Fibonacci452","alias":"f1"},{"type":"initial_fact","id":5783,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":525,"cls":"Fibonacci452","alias":"f"},{"type":"initial_fact","id":5785,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":527,"cls":"Fibonacci452","alias":"f1"},{"type":"not","id":526,"cls":"Fibonacci452","alias":"f"},{"type":"initial_fact","id":5787,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":532,"cls":"Result451","alias":"r"},{"type":"object","id":531,"cls":"Fibonacci451","alias":"f3"},{"type":"object","id":530,"cls":"Fibonacci451","alias":"f2"},{"type":"object","id":529,"cls":"Fibonacci451","alias":"f1"},{"type":"initial_fact","id":5789,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":536,"cls":"Fibonacci451","alias":"f"},{"type":"initial_fact","id":5791,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":538,"cls":"Fibonacci451","alias":"f1"},{"type":"not","id":537,"cls":"Fibonacci451","alias":"f"},{"type":"initial_fact","id":5793,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":543,"cls":"Result450","alias":"r"},{"type":"object","id":542,"cls":"Fibonacci450","alias":"f3"},{"type":"object","id":541,"cls":"Fibonacci450","alias":"f2"},{"type":"object","id":540,"cls":"Fibonacci450","alias":"f1"},{"type":"initial_fact","id":5795,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":547,"cls":"Fibonacci450","alias":"f"},{"type":"initial_fact","id":5797,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":549,"cls":"Fibonacci450","alias":"f1"},{"type":"not","id":548,"cls":"Fibonacci450","alias":"f"},{"type":"initial_fact","id":5799,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":554,"cls":"Result449","alias":"r"},{"type":"object","id":553,"cls":"Fibonacci449","alias":"f3"},{"type":"object","id":552,"cls":"Fibonacci449","alias":"f2"},{"type":"object","id":551,"cls":"Fibonacci449","alias":"f1"},{"type":"initial_fact","id":5801,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":558,"cls":"Fibonacci449","alias":"f"},{"type":"initial_fact","id":5803,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":560,"cls":"Fibonacci449","alias":"f1"},{"type":"not","id":559,"cls":"Fibonacci449","alias":"f"},{"type":"initial_fact","id":5805,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":565,"cls":"Result448","alias":"r"},{"type":"object","id":564,"cls":"Fibonacci448","alias":"f3"},{"type":"object","id":563,"cls":"Fibonacci448","alias":"f2"},{"type":"object","id":562,"cls":"Fibonacci448","alias":"f1"},{"type":"initial_fact","id":5807,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":569,"cls":"Fibonacci448","alias":"f"},{"type":"initial_fact","id":5809,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":571,"cls":"Fibonacci448","alias":"f1"},{"type":"not","id":570,"cls":"Fibonacci448","alias":"f"},{"type":"initial_fact","id":5811,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":576,"cls":"Result447","alias":"r"},{"type":"object","id":575,"cls":"Fibonacci447","alias":"f3"},{"type":"object","id":574,"cls":"Fibonacci447","alias":"f2"},{"type":"object","id":573,"cls":"Fibonacci447","alias":"f1"},{"type":"initial_fact","id":5813,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":580,"cls":"Fibonacci447","alias":"f"},{"type":"initial_fact","id":5815,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":582,"cls":"Fibonacci447","alias":"f1"},{"type":"not","id":581,"cls":"Fibonacci447","alias":"f"},{"type":"initial_fact","id":5817,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":587,"cls":"Result446","alias":"r"},{"type":"object","id":586,"cls":"Fibonacci446","alias":"f3"},{"type":"object","id":585,"cls":"Fibonacci446","alias":"f2"},{"type":"object","id":584,"cls":"Fibonacci446","alias":"f1"},{"type":"initial_fact","id":5819,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":591,"cls":"Fibonacci446","alias":"f"},{"type":"initial_fact","id":5821,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":593,"cls":"Fibonacci446","alias":"f1"},{"type":"not","id":592,"cls":"Fibonacci446","alias":"f"},{"type":"initial_fact","id":5823,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":598,"cls":"Result445","alias":"r"},{"type":"object","id":597,"cls":"Fibonacci445","alias":"f3"},{"type":"object","id":596,"cls":"Fibonacci445","alias":"f2"},{"type":"object","id":595,"cls":"Fibonacci445","alias":"f1"},{"type":"initial_fact","id":5825,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":602,"cls":"Fibonacci445","alias":"f"},{"type":"initial_fact","id":5827,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":604,"cls":"Fibonacci445","alias":"f1"},{"type":"not","id":603,"cls":"Fibonacci445","alias":"f"},{"type":"initial_fact","id":5829,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":609,"cls":"Result444","alias":"r"},{"type":"object","id":608,"cls":"Fibonacci444","alias":"f3"},{"type":"object","id":607,"cls":"Fibonacci444","alias":"f2"},{"type":"object","id":606,"cls":"Fibonacci444","alias":"f1"},{"type":"initial_fact","id":5831,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":613,"cls":"Fibonacci444","alias":"f"},{"type":"initial_fact","id":5833,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":615,"cls":"Fibonacci444","alias":"f1"},{"type":"not","id":614,"cls":"Fibonacci444","alias":"f"},{"type":"initial_fact","id":5835,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":620,"cls":"Result443","alias":"r"},{"type":"object","id":619,"cls":"Fibonacci443","alias":"f3"},{"type":"object","id":618,"cls":"Fibonacci443","alias":"f2"},{"type":"object","id":617,"cls":"Fibonacci443","alias":"f1"},{"type":"initial_fact","id":5837,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":624,"cls":"Fibonacci443","alias":"f"},{"type":"initial_fact","id":5839,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":626,"cls":"Fibonacci443","alias":"f1"},{"type":"not","id":625,"cls":"Fibonacci443","alias":"f"},{"type":"initial_fact","id":5841,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":631,"cls":"Result442","alias":"r"},{"type":"object","id":630,"cls":"Fibonacci442","alias":"f3"},{"type":"object","id":629,"cls":"Fibonacci442","alias":"f2"},{"type":"object","id":628,"cls":"Fibonacci442","alias":"f1"},{"type":"initial_fact","id":5843,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":635,"cls":"Fibonacci442","alias":"f"},{"type":"initial_fact","id":5845,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":637,"cls":"Fibonacci442","alias":"f1"},{"type":"not","id":636,"cls":"Fibonacci442","alias":"f"},{"type":"initial_fact","id":5847,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":642,"cls":"Result441","alias":"r"},{"type":"object","id":641,"cls":"Fibonacci441","alias":"f3"},{"type":"object","id":640,"cls":"Fibonacci441","alias":"f2"},{"type":"object","id":639,"cls":"Fibonacci441","alias":"f1"},{"type":"initial_fact","id":5849,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":646,"cls":"Fibonacci441","alias":"f"},{"type":"initial_fact","id":5851,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":648,"cls":"Fibonacci441","alias":"f1"},{"type":"not","id":647,"cls":"Fibonacci441","alias":"f"},{"type":"initial_fact","id":5853,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":653,"cls":"Result440","alias":"r"},{"type":"object","id":652,"cls":"Fibonacci440","alias":"f3"},{"type":"object","id":651,"cls":"Fibonacci440","alias":"f2"},{"type":"object","id":650,"cls":"Fibonacci440","alias":"f1"},{"type":"initial_fact","id":5855,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":657,"cls":"Fibonacci440","alias":"f"},{"type":"initial_fact","id":5857,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":659,"cls":"Fibonacci440","alias":"f1"},{"type":"not","id":658,"cls":"Fibonacci440","alias":"f"},{"type":"initial_fact","id":5859,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":664,"cls":"Result439","alias":"r"},{"type":"object","id":663,"cls":"Fibonacci439","alias":"f3"},{"type":"object","id":662,"cls":"Fibonacci439","alias":"f2"},{"type":"object","id":661,"cls":"Fibonacci439","alias":"f1"},{"type":"initial_fact","id":5861,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":668,"cls":"Fibonacci439","alias":"f"},{"type":"initial_fact","id":5863,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":670,"cls":"Fibonacci439","alias":"f1"},{"type":"not","id":669,"cls":"Fibonacci439","alias":"f"},{"type":"initial_fact","id":5865,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":675,"cls":"Result438","alias":"r"},{"type":"object","id":674,"cls":"Fibonacci438","alias":"f3"},{"type":"object","id":673,"cls":"Fibonacci438","alias":"f2"},{"type":"object","id":672,"cls":"Fibonacci438","alias":"f1"},{"type":"initial_fact","id":5867,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":679,"cls":"Fibonacci438","alias":"f"},{"type":"initial_fact","id":5869,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":681,"cls":"Fibonacci438","alias":"f1"},{"type":"not","id":680,"cls":"Fibonacci438","alias":"f"},{"type":"initial_fact","id":5871,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":686,"cls":"Result437","alias":"r"},{"type":"object","id":685,"cls":"Fibonacci437","alias":"f3"},{"type":"object","id":684,"cls":"Fibonacci437","alias":"f2"},{"type":"object","id":683,"cls":"Fibonacci437","alias":"f1"},{"type":"initial_fact","id":5873,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":690,"cls":"Fibonacci437","alias":"f"},{"type":"initial_fact","id":5875,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":692,"cls":"Fibonacci437","alias":"f1"},{"type":"not","id":691,"cls":"Fibonacci437","alias":"f"},{"type":"initial_fact","id":5877,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":697,"cls":"Result436","alias":"r"},{"type":"object","id":696,"cls":"Fibonacci436","alias":"f3"},{"type":"object","id":695,"cls":"Fibonacci436","alias":"f2"},{"type":"object","id":694,"cls":"Fibonacci436","alias":"f1"},{"type":"initial_fact","id":5879,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":701,"cls":"Fibonacci436","alias":"f"},{"type":"initial_fact","id":5881,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":703,"cls":"Fibonacci436","alias":"f1"},{"type":"not","id":702,"cls":"Fibonacci436","alias":"f"},{"type":"initial_fact","id":5883,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":708,"cls":"Result435","alias":"r"},{"type":"object","id":707,"cls":"Fibonacci435","alias":"f3"},{"type":"object","id":706,"cls":"Fibonacci435","alias":"f2"},{"type":"object","id":705,"cls":"Fibonacci435","alias":"f1"},{"type":"initial_fact","id":5885,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":712,"cls":"Fibonacci435","alias":"f"},{"type":"initial_fact","id":5887,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":714,"cls":"Fibonacci435","alias":"f1"},{"type":"not","id":713,"cls":"Fibonacci435","alias":"f"},{"type":"initial_fact","id":5889,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":719,"cls":"Result434","alias":"r"},{"type":"object","id":718,"cls":"Fibonacci434","alias":"f3"},{"type":"object","id":717,"cls":"Fibonacci434","alias":"f2"},{"type":"object","id":716,"cls":"Fibonacci434","alias":"f1"},{"type":"initial_fact","id":5891,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":723,"cls":"Fibonacci434","alias":"f"},{"type":"initial_fact","id":5893,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":725,"cls":"Fibonacci434","alias":"f1"},{"type":"not","id":724,"cls":"Fibonacci434","alias":"f"},{"type":"initial_fact","id":5895,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":730,"cls":"Result433","alias":"r"},{"type":"object","id":729,"cls":"Fibonacci433","alias":"f3"},{"type":"object","id":728,"cls":"Fibonacci433","alias":"f2"},{"type":"object","id":727,"cls":"Fibonacci433","alias":"f1"},{"type":"initial_fact","id":5897,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":734,"cls":"Fibonacci433","alias":"f"},{"type":"initial_fact","id":5899,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":736,"cls":"Fibonacci433","alias":"f1"},{"type":"not","id":735,"cls":"Fibonacci433","alias":"f"},{"type":"initial_fact","id":5901,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":741,"cls":"Result432","alias":"r"},{"type":"object","id":740,"cls":"Fibonacci432","alias":"f3"},{"type":"object","id":739,"cls":"Fibonacci432","alias":"f2"},{"type":"object","id":738,"cls":"Fibonacci432","alias":"f1"},{"type":"initial_fact","id":5903,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":745,"cls":"Fibonacci432","alias":"f"},{"type":"initial_fact","id":5905,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":747,"cls":"Fibonacci432","alias":"f1"},{"type":"not","id":746,"cls":"Fibonacci432","alias":"f"},{"type":"initial_fact","id":5907,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":752,"cls":"Result431","alias":"r"},{"type":"object","id":751,"cls":"Fibonacci431","alias":"f3"},{"type":"object","id":750,"cls":"Fibonacci431","alias":"f2"},{"type":"object","id":749,"cls":"Fibonacci431","alias":"f1"},{"type":"initial_fact","id":5909,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":756,"cls":"Fibonacci431","alias":"f"},{"type":"initial_fact","id":5911,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":758,"cls":"Fibonacci431","alias":"f1"},{"type":"not","id":757,"cls":"Fibonacci431","alias":"f"},{"type":"initial_fact","id":5913,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":763,"cls":"Result430","alias":"r"},{"type":"object","id":762,"cls":"Fibonacci430","alias":"f3"},{"type":"object","id":761,"cls":"Fibonacci430","alias":"f2"},{"type":"object","id":760,"cls":"Fibonacci430","alias":"f1"},{"type":"initial_fact","id":5915,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":767,"cls":"Fibonacci430","alias":"f"},{"type":"initial_fact","id":5917,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":769,"cls":"Fibonacci430","alias":"f1"},{"type":"not","id":768,"cls":"Fibonacci430","alias":"f"},{"type":"initial_fact","id":5919,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":774,"cls":"Result429","alias":"r"},{"type":"object","id":773,"cls":"Fibonacci429","alias":"f3"},{"type":"object","id":772,"cls":"Fibonacci429","alias":"f2"},{"type":"object","id":771,"cls":"Fibonacci429","alias":"f1"},{"type":"initial_fact","id":5921,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":778,"cls":"Fibonacci429","alias":"f"},{"type":"initial_fact","id":5923,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":780,"cls":"Fibonacci429","alias":"f1"},{"type":"not","id":779,"cls":"Fibonacci429","alias":"f"},{"type":"initial_fact","id":5925,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":785,"cls":"Result428","alias":"r"},{"type":"object","id":784,"cls":"Fibonacci428","alias":"f3"},{"type":"object","id":783,"cls":"Fibonacci428","alias":"f2"},{"type":"object","id":782,"cls":"Fibonacci428","alias":"f1"},{"type":"initial_fact","id":5927,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":789,"cls":"Fibonacci428","alias":"f"},{"type":"initial_fact","id":5929,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":791,"cls":"Fibonacci428","alias":"f1"},{"type":"not","id":790,"cls":"Fibonacci428","alias":"f"},{"type":"initial_fact","id":5931,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":796,"cls":"Result427","alias":"r"},{"type":"object","id":795,"cls":"Fibonacci427","alias":"f3"},{"type":"object","id":794,"cls":"Fibonacci427","alias":"f2"},{"type":"object","id":793,"cls":"Fibonacci427","alias":"f1"},{"type":"initial_fact","id":5933,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":800,"cls":"Fibonacci427","alias":"f"},{"type":"initial_fact","id":5935,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":802,"cls":"Fibonacci427","alias":"f1"},{"type":"not","id":801,"cls":"Fibonacci427","alias":"f"},{"type":"initial_fact","id":5937,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":807,"cls":"Result426","alias":"r"},{"type":"object","id":806,"cls":"Fibonacci426","alias":"f3"},{"type":"object","id":805,"cls":"Fibonacci426","alias":"f2"},{"type":"object","id":804,"cls":"Fibonacci426","alias":"f1"},{"type":"initial_fact","id":5939,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":811,"cls":"Fibonacci426","alias":"f"},{"type":"initial_fact","id":5941,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":813,"cls":"Fibonacci426","alias":"f1"},{"type":"not","id":812,"cls":"Fibonacci426","alias":"f"},{"type":"initial_fact","id":5943,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":818,"cls":"Result425","alias":"r"},{"type":"object","id":817,"cls":"Fibonacci425","alias":"f3"},{"type":"object","id":816,"cls":"Fibonacci425","alias":"f2"},{"type":"object","id":815,"cls":"Fibonacci425","alias":"f1"},{"type":"initial_fact","id":5945,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":822,"cls":"Fibonacci425","alias":"f"},{"type":"initial_fact","id":5947,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":824,"cls":"Fibonacci425","alias":"f1"},{"type":"not","id":823,"cls":"Fibonacci425","alias":"f"},{"type":"initial_fact","id":5949,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":829,"cls":"Result424","alias":"r"},{"type":"object","id":828,"cls":"Fibonacci424","alias":"f3"},{"type":"object","id":827,"cls":"Fibonacci424","alias":"f2"},{"type":"object","id":826,"cls":"Fibonacci424","alias":"f1"},{"type":"initial_fact","id":5951,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":833,"cls":"Fibonacci424","alias":"f"},{"type":"initial_fact","id":5953,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":835,"cls":"Fibonacci424","alias":"f1"},{"type":"not","id":834,"cls":"Fibonacci424","alias":"f"},{"type":"initial_fact","id":5955,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":840,"cls":"Result423","alias":"r"},{"type":"object","id":839,"cls":"Fibonacci423","alias":"f3"},{"type":"object","id":838,"cls":"Fibonacci423","alias":"f2"},{"type":"object","id":837,"cls":"Fibonacci423","alias":"f1"},{"type":"initial_fact","id":5957,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":844,"cls":"Fibonacci423","alias":"f"},{"type":"initial_fact","id":5959,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":846,"cls":"Fibonacci423","alias":"f1"},{"type":"not","id":845,"cls":"Fibonacci423","alias":"f"},{"type":"initial_fact","id":5961,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":851,"cls":"Result422","alias":"r"},{"type":"object","id":850,"cls":"Fibonacci422","alias":"f3"},{"type":"object","id":849,"cls":"Fibonacci422","alias":"f2"},{"type":"object","id":848,"cls":"Fibonacci422","alias":"f1"},{"type":"initial_fact","id":5963,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":855,"cls":"Fibonacci422","alias":"f"},{"type":"initial_fact","id":5965,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":857,"cls":"Fibonacci422","alias":"f1"},{"type":"not","id":856,"cls":"Fibonacci422","alias":"f"},{"type":"initial_fact","id":5967,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":862,"cls":"Result421","alias":"r"},{"type":"object","id":861,"cls":"Fibonacci421","alias":"f3"},{"type":"object","id":860,"cls":"Fibonacci421","alias":"f2"},{"type":"object","id":859,"cls":"Fibonacci421","alias":"f1"},{"type":"initial_fact","id":5969,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":866,"cls":"Fibonacci421","alias":"f"},{"type":"initial_fact","id":5971,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":868,"cls":"Fibonacci421","alias":"f1"},{"type":"not","id":867,"cls":"Fibonacci421","alias":"f"},{"type":"initial_fact","id":5973,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":873,"cls":"Result420","alias":"r"},{"type":"object","id":872,"cls":"Fibonacci420","alias":"f3"},{"type":"object","id":871,"cls":"Fibonacci420","alias":"f2"},{"type":"object","id":870,"cls":"Fibonacci420","alias":"f1"},{"type":"initial_fact","id":5975,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":877,"cls":"Fibonacci420","alias":"f"},{"type":"initial_fact","id":5977,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":879,"cls":"Fibonacci420","alias":"f1"},{"type":"not","id":878,"cls":"Fibonacci420","alias":"f"},{"type":"initial_fact","id":5979,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":884,"cls":"Result419","alias":"r"},{"type":"object","id":883,"cls":"Fibonacci419","alias":"f3"},{"type":"object","id":882,"cls":"Fibonacci419","alias":"f2"},{"type":"object","id":881,"cls":"Fibonacci419","alias":"f1"},{"type":"initial_fact","id":5981,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":888,"cls":"Fibonacci419","alias":"f"},{"type":"initial_fact","id":5983,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":890,"cls":"Fibonacci419","alias":"f1"},{"type":"not","id":889,"cls":"Fibonacci419","alias":"f"},{"type":"initial_fact","id":5985,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":895,"cls":"Result418","alias":"r"},{"type":"object","id":894,"cls":"Fibonacci418","alias":"f3"},{"type":"object","id":893,"cls":"Fibonacci418","alias":"f2"},{"type":"object","id":892,"cls":"Fibonacci418","alias":"f1"},{"type":"initial_fact","id":5987,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":899,"cls":"Fibonacci418","alias":"f"},{"type":"initial_fact","id":5989,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":901,"cls":"Fibonacci418","alias":"f1"},{"type":"not","id":900,"cls":"Fibonacci418","alias":"f"},{"type":"initial_fact","id":5991,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":906,"cls":"Result417","alias":"r"},{"type":"object","id":905,"cls":"Fibonacci417","alias":"f3"},{"type":"object","id":904,"cls":"Fibonacci417","alias":"f2"},{"type":"object","id":903,"cls":"Fibonacci417","alias":"f1"},{"type":"initial_fact","id":5993,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":910,"cls":"Fibonacci417","alias":"f"},{"type":"initial_fact","id":5995,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":912,"cls":"Fibonacci417","alias":"f1"},{"type":"not","id":911,"cls":"Fibonacci417","alias":"f"},{"type":"initial_fact","id":5997,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":917,"cls":"Result416","alias":"r"},{"type":"object","id":916,"cls":"Fibonacci416","alias":"f3"},{"type":"object","id":915,"cls":"Fibonacci416","alias":"f2"},{"type":"object","id":914,"cls":"Fibonacci416","alias":"f1"},{"type":"initial_fact","id":5999,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":921,"cls":"Fibonacci416","alias":"f"},{"type":"initial_fact","id":6001,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":923,"cls":"Fibonacci416","alias":"f1"},{"type":"not","id":922,"cls":"Fibonacci416","alias":"f"},{"type":"initial_fact","id":6003,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":928,"cls":"Result415","alias":"r"},{"type":"object","id":927,"cls":"Fibonacci415","alias":"f3"},{"type":"object","id":926,"cls":"Fibonacci415","alias":"f2"},{"type":"object","id":925,"cls":"Fibonacci415","alias":"f1"},{"type":"initial_fact","id":6005,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":932,"cls":"Fibonacci415","alias":"f"},{"type":"initial_fact","id":6007,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":934,"cls":"Fibonacci415","alias":"f1"},{"type":"not","id":933,"cls":"Fibonacci415","alias":"f"},{"type":"initial_fact","id":6009,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":939,"cls":"Result414","alias":"r"},{"type":"object","id":938,"cls":"Fibonacci414","alias":"f3"},{"type":"object","id":937,"cls":"Fibonacci414","alias":"f2"},{"type":"object","id":936,"cls":"Fibonacci414","alias":"f1"},{"type":"initial_fact","id":6011,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":943,"cls":"Fibonacci414","alias":"f"},{"type":"initial_fact","id":6013,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":945,"cls":"Fibonacci414","alias":"f1"},{"type":"not","id":944,"cls":"Fibonacci414","alias":"f"},{"type":"initial_fact","id":6015,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":950,"cls":"Result413","alias":"r"},{"type":"object","id":949,"cls":"Fibonacci413","alias":"f3"},{"type":"object","id":948,"cls":"Fibonacci413","alias":"f2"},{"type":"object","id":947,"cls":"Fibonacci413","alias":"f1"},{"type":"initial_fact","id":6017,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":954,"cls":"Fibonacci413","alias":"f"},{"type":"initial_fact","id":6019,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":956,"cls":"Fibonacci413","alias":"f1"},{"type":"not","id":955,"cls":"Fibonacci413","alias":"f"},{"type":"initial_fact","id":6021,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":961,"cls":"Result412","alias":"r"},{"type":"object","id":960,"cls":"Fibonacci412","alias":"f3"},{"type":"object","id":959,"cls":"Fibonacci412","alias":"f2"},{"type":"object","id":958,"cls":"Fibonacci412","alias":"f1"},{"type":"initial_fact","id":6023,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":965,"cls":"Fibonacci412","alias":"f"},{"type":"initial_fact","id":6025,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":967,"cls":"Fibonacci412","alias":"f1"},{"type":"not","id":966,"cls":"Fibonacci412","alias":"f"},{"type":"initial_fact","id":6027,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":972,"cls":"Result411","alias":"r"},{"type":"object","id":971,"cls":"Fibonacci411","alias":"f3"},{"type":"object","id":970,"cls":"Fibonacci411","alias":"f2"},{"type":"object","id":969,"cls":"Fibonacci411","alias":"f1"},{"type":"initial_fact","id":6029,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":976,"cls":"Fibonacci411","alias":"f"},{"type":"initial_fact","id":6031,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":978,"cls":"Fibonacci411","alias":"f1"},{"type":"not","id":977,"cls":"Fibonacci411","alias":"f"},{"type":"initial_fact","id":6033,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":983,"cls":"Result410","alias":"r"},{"type":"object","id":982,"cls":"Fibonacci410","alias":"f3"},{"type":"object","id":981,"cls":"Fibonacci410","alias":"f2"},{"type":"object","id":980,"cls":"Fibonacci410","alias":"f1"},{"type":"initial_fact","id":6035,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":987,"cls":"Fibonacci410","alias":"f"},{"type":"initial_fact","id":6037,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":989,"cls":"Fibonacci410","alias":"f1"},{"type":"not","id":988,"cls":"Fibonacci410","alias":"f"},{"type":"initial_fact","id":6039,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":994,"cls":"Result409","alias":"r"},{"type":"object","id":993,"cls":"Fibonacci409","alias":"f3"},{"type":"object","id":992,"cls":"Fibonacci409","alias":"f2"},{"type":"object","id":991,"cls":"Fibonacci409","alias":"f1"},{"type":"initial_fact","id":6041,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":998,"cls":"Fibonacci409","alias":"f"},{"type":"initial_fact","id":6043,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1000,"cls":"Fibonacci409","alias":"f1"},{"type":"not","id":999,"cls":"Fibonacci409","alias":"f"},{"type":"initial_fact","id":6045,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1005,"cls":"Result408","alias":"r"},{"type":"object","id":1004,"cls":"Fibonacci408","alias":"f3"},{"type":"object","id":1003,"cls":"Fibonacci408","alias":"f2"},{"type":"object","id":1002,"cls":"Fibonacci408","alias":"f1"},{"type":"initial_fact","id":6047,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1009,"cls":"Fibonacci408","alias":"f"},{"type":"initial_fact","id":6049,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1011,"cls":"Fibonacci408","alias":"f1"},{"type":"not","id":1010,"cls":"Fibonacci408","alias":"f"},{"type":"initial_fact","id":6051,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1016,"cls":"Result407","alias":"r"},{"type":"object","id":1015,"cls":"Fibonacci407","alias":"f3"},{"type":"object","id":1014,"cls":"Fibonacci407","alias":"f2"},{"type":"object","id":1013,"cls":"Fibonacci407","alias":"f1"},{"type":"initial_fact","id":6053,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1020,"cls":"Fibonacci407","alias":"f"},{"type":"initial_fact","id":6055,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1022,"cls":"Fibonacci407","alias":"f1"},{"type":"not","id":1021,"cls":"Fibonacci407","alias":"f"},{"type":"initial_fact","id":6057,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1027,"cls":"Result406","alias":"r"},{"type":"object","id":1026,"cls":"Fibonacci406","alias":"f3"},{"type":"object","id":1025,"cls":"Fibonacci406","alias":"f2"},{"type":"object","id":1024,"cls":"Fibonacci406","alias":"f1"},{"type":"initial_fact","id":6059,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1031,"cls":"Fibonacci406","alias":"f"},{"type":"initial_fact","id":6061,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1033,"cls":"Fibonacci406","alias":"f1"},{"type":"not","id":1032,"cls":"Fibonacci406","alias":"f"},{"type":"initial_fact","id":6063,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1038,"cls":"Result405","alias":"r"},{"type":"object","id":1037,"cls":"Fibonacci405","alias":"f3"},{"type":"object","id":1036,"cls":"Fibonacci405","alias":"f2"},{"type":"object","id":1035,"cls":"Fibonacci405","alias":"f1"},{"type":"initial_fact","id":6065,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1042,"cls":"Fibonacci405","alias":"f"},{"type":"initial_fact","id":6067,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1044,"cls":"Fibonacci405","alias":"f1"},{"type":"not","id":1043,"cls":"Fibonacci405","alias":"f"},{"type":"initial_fact","id":6069,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1049,"cls":"Result404","alias":"r"},{"type":"object","id":1048,"cls":"Fibonacci404","alias":"f3"},{"type":"object","id":1047,"cls":"Fibonacci404","alias":"f2"},{"type":"object","id":1046,"cls":"Fibonacci404","alias":"f1"},{"type":"initial_fact","id":6071,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1053,"cls":"Fibonacci404","alias":"f"},{"type":"initial_fact","id":6073,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1055,"cls":"Fibonacci404","alias":"f1"},{"type":"not","id":1054,"cls":"Fibonacci404","alias":"f"},{"type":"initial_fact","id":6075,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1060,"cls":"Result403","alias":"r"},{"type":"object","id":1059,"cls":"Fibonacci403","alias":"f3"},{"type":"object","id":1058,"cls":"Fibonacci403","alias":"f2"},{"type":"object","id":1057,"cls":"Fibonacci403","alias":"f1"},{"type":"initial_fact","id":6077,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1064,"cls":"Fibonacci403","alias":"f"},{"type":"initial_fact","id":6079,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1066,"cls":"Fibonacci403","alias":"f1"},{"type":"not","id":1065,"cls":"Fibonacci403","alias":"f"},{"type":"initial_fact","id":6081,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1071,"cls":"Result402","alias":"r"},{"type":"object","id":1070,"cls":"Fibonacci402","alias":"f3"},{"type":"object","id":1069,"cls":"Fibonacci402","alias":"f2"},{"type":"object","id":1068,"cls":"Fibonacci402","alias":"f1"},{"type":"initial_fact","id":6083,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1075,"cls":"Fibonacci402","alias":"f"},{"type":"initial_fact","id":6085,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1077,"cls":"Fibonacci402","alias":"f1"},{"type":"not","id":1076,"cls":"Fibonacci402","alias":"f"},{"type":"initial_fact","id":6087,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1082,"cls":"Result401","alias":"r"},{"type":"object","id":1081,"cls":"Fibonacci401","alias":"f3"},{"type":"object","id":1080,"cls":"Fibonacci401","alias":"f2"},{"type":"object","id":1079,"cls":"Fibonacci401","alias":"f1"},{"type":"initial_fact","id":6089,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1086,"cls":"Fibonacci401","alias":"f"},{"type":"initial_fact","id":6091,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1088,"cls":"Fibonacci401","alias":"f1"},{"type":"not","id":1087,"cls":"Fibonacci401","alias":"f"},{"type":"initial_fact","id":6093,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1093,"cls":"Result400","alias":"r"},{"type":"object","id":1092,"cls":"Fibonacci400","alias":"f3"},{"type":"object","id":1091,"cls":"Fibonacci400","alias":"f2"},{"type":"object","id":1090,"cls":"Fibonacci400","alias":"f1"},{"type":"initial_fact","id":6095,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1097,"cls":"Fibonacci400","alias":"f"},{"type":"initial_fact","id":6097,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1099,"cls":"Fibonacci400","alias":"f1"},{"type":"not","id":1098,"cls":"Fibonacci400","alias":"f"},{"type":"initial_fact","id":6099,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1104,"cls":"Result399","alias":"r"},{"type":"object","id":1103,"cls":"Fibonacci399","alias":"f3"},{"type":"object","id":1102,"cls":"Fibonacci399","alias":"f2"},{"type":"object","id":1101,"cls":"Fibonacci399","alias":"f1"},{"type":"initial_fact","id":6101,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1108,"cls":"Fibonacci399","alias":"f"},{"type":"initial_fact","id":6103,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1110,"cls":"Fibonacci399","alias":"f1"},{"type":"not","id":1109,"cls":"Fibonacci399","alias":"f"},{"type":"initial_fact","id":6105,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1115,"cls":"Result398","alias":"r"},{"type":"object","id":1114,"cls":"Fibonacci398","alias":"f3"},{"type":"object","id":1113,"cls":"Fibonacci398","alias":"f2"},{"type":"object","id":1112,"cls":"Fibonacci398","alias":"f1"},{"type":"initial_fact","id":6107,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1119,"cls":"Fibonacci398","alias":"f"},{"type":"initial_fact","id":6109,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1121,"cls":"Fibonacci398","alias":"f1"},{"type":"not","id":1120,"cls":"Fibonacci398","alias":"f"},{"type":"initial_fact","id":6111,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1126,"cls":"Result397","alias":"r"},{"type":"object","id":1125,"cls":"Fibonacci397","alias":"f3"},{"type":"object","id":1124,"cls":"Fibonacci397","alias":"f2"},{"type":"object","id":1123,"cls":"Fibonacci397","alias":"f1"},{"type":"initial_fact","id":6113,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1130,"cls":"Fibonacci397","alias":"f"},{"type":"initial_fact","id":6115,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1132,"cls":"Fibonacci397","alias":"f1"},{"type":"not","id":1131,"cls":"Fibonacci397","alias":"f"},{"type":"initial_fact","id":6117,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1137,"cls":"Result396","alias":"r"},{"type":"object","id":1136,"cls":"Fibonacci396","alias":"f3"},{"type":"object","id":1135,"cls":"Fibonacci396","alias":"f2"},{"type":"object","id":1134,"cls":"Fibonacci396","alias":"f1"},{"type":"initial_fact","id":6119,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1141,"cls":"Fibonacci396","alias":"f"},{"type":"initial_fact","id":6121,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1143,"cls":"Fibonacci396","alias":"f1"},{"type":"not","id":1142,"cls":"Fibonacci396","alias":"f"},{"type":"initial_fact","id":6123,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1148,"cls":"Result395","alias":"r"},{"type":"object","id":1147,"cls":"Fibonacci395","alias":"f3"},{"type":"object","id":1146,"cls":"Fibonacci395","alias":"f2"},{"type":"object","id":1145,"cls":"Fibonacci395","alias":"f1"},{"type":"initial_fact","id":6125,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1152,"cls":"Fibonacci395","alias":"f"},{"type":"initial_fact","id":6127,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1154,"cls":"Fibonacci395","alias":"f1"},{"type":"not","id":1153,"cls":"Fibonacci395","alias":"f"},{"type":"initial_fact","id":6129,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1159,"cls":"Result394","alias":"r"},{"type":"object","id":1158,"cls":"Fibonacci394","alias":"f3"},{"type":"object","id":1157,"cls":"Fibonacci394","alias":"f2"},{"type":"object","id":1156,"cls":"Fibonacci394","alias":"f1"},{"type":"initial_fact","id":6131,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1163,"cls":"Fibonacci394","alias":"f"},{"type":"initial_fact","id":6133,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1165,"cls":"Fibonacci394","alias":"f1"},{"type":"not","id":1164,"cls":"Fibonacci394","alias":"f"},{"type":"initial_fact","id":6135,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1170,"cls":"Result393","alias":"r"},{"type":"object","id":1169,"cls":"Fibonacci393","alias":"f3"},{"type":"object","id":1168,"cls":"Fibonacci393","alias":"f2"},{"type":"object","id":1167,"cls":"Fibonacci393","alias":"f1"},{"type":"initial_fact","id":6137,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1174,"cls":"Fibonacci393","alias":"f"},{"type":"initial_fact","id":6139,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1176,"cls":"Fibonacci393","alias":"f1"},{"type":"not","id":1175,"cls":"Fibonacci393","alias":"f"},{"type":"initial_fact","id":6141,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1181,"cls":"Result392","alias":"r"},{"type":"object","id":1180,"cls":"Fibonacci392","alias":"f3"},{"type":"object","id":1179,"cls":"Fibonacci392","alias":"f2"},{"type":"object","id":1178,"cls":"Fibonacci392","alias":"f1"},{"type":"initial_fact","id":6143,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1185,"cls":"Fibonacci392","alias":"f"},{"type":"initial_fact","id":6145,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1187,"cls":"Fibonacci392","alias":"f1"},{"type":"not","id":1186,"cls":"Fibonacci392","alias":"f"},{"type":"initial_fact","id":6147,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1192,"cls":"Result391","alias":"r"},{"type":"object","id":1191,"cls":"Fibonacci391","alias":"f3"},{"type":"object","id":1190,"cls":"Fibonacci391","alias":"f2"},{"type":"object","id":1189,"cls":"Fibonacci391","alias":"f1"},{"type":"initial_fact","id":6149,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1196,"cls":"Fibonacci391","alias":"f"},{"type":"initial_fact","id":6151,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1198,"cls":"Fibonacci391","alias":"f1"},{"type":"not","id":1197,"cls":"Fibonacci391","alias":"f"},{"type":"initial_fact","id":6153,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1203,"cls":"Result390","alias":"r"},{"type":"object","id":1202,"cls":"Fibonacci390","alias":"f3"},{"type":"object","id":1201,"cls":"Fibonacci390","alias":"f2"},{"type":"object","id":1200,"cls":"Fibonacci390","alias":"f1"},{"type":"initial_fact","id":6155,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1207,"cls":"Fibonacci390","alias":"f"},{"type":"initial_fact","id":6157,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1209,"cls":"Fibonacci390","alias":"f1"},{"type":"not","id":1208,"cls":"Fibonacci390","alias":"f"},{"type":"initial_fact","id":6159,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1214,"cls":"Result389","alias":"r"},{"type":"object","id":1213,"cls":"Fibonacci389","alias":"f3"},{"type":"object","id":1212,"cls":"Fibonacci389","alias":"f2"},{"type":"object","id":1211,"cls":"Fibonacci389","alias":"f1"},{"type":"initial_fact","id":6161,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1218,"cls":"Fibonacci389","alias":"f"},{"type":"initial_fact","id":6163,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1220,"cls":"Fibonacci389","alias":"f1"},{"type":"not","id":1219,"cls":"Fibonacci389","alias":"f"},{"type":"initial_fact","id":6165,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1225,"cls":"Result388","alias":"r"},{"type":"object","id":1224,"cls":"Fibonacci388","alias":"f3"},{"type":"object","id":1223,"cls":"Fibonacci388","alias":"f2"},{"type":"object","id":1222,"cls":"Fibonacci388","alias":"f1"},{"type":"initial_fact","id":6167,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1229,"cls":"Fibonacci388","alias":"f"},{"type":"initial_fact","id":6169,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1231,"cls":"Fibonacci388","alias":"f1"},{"type":"not","id":1230,"cls":"Fibonacci388","alias":"f"},{"type":"initial_fact","id":6171,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1236,"cls":"Result387","alias":"r"},{"type":"object","id":1235,"cls":"Fibonacci387","alias":"f3"},{"type":"object","id":1234,"cls":"Fibonacci387","alias":"f2"},{"type":"object","id":1233,"cls":"Fibonacci387","alias":"f1"},{"type":"initial_fact","id":6173,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1240,"cls":"Fibonacci387","alias":"f"},{"type":"initial_fact","id":6175,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1242,"cls":"Fibonacci387","alias":"f1"},{"type":"not","id":1241,"cls":"Fibonacci387","alias":"f"},{"type":"initial_fact","id":6177,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1247,"cls":"Result386","alias":"r"},{"type":"object","id":1246,"cls":"Fibonacci386","alias":"f3"},{"type":"object","id":1245,"cls":"Fibonacci386","alias":"f2"},{"type":"object","id":1244,"cls":"Fibonacci386","alias":"f1"},{"type":"initial_fact","id":6179,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1251,"cls":"Fibonacci386","alias":"f"},{"type":"initial_fact","id":6181,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1253,"cls":"Fibonacci386","alias":"f1"},{"type":"not","id":1252,"cls":"Fibonacci386","alias":"f"},{"type":"initial_fact","id":6183,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1258,"cls":"Result385","alias":"r"},{"type":"object","id":1257,"cls":"Fibonacci385","alias":"f3"},{"type":"object","id":1256,"cls":"Fibonacci385","alias":"f2"},{"type":"object","id":1255,"cls":"Fibonacci385","alias":"f1"},{"type":"initial_fact","id":6185,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1262,"cls":"Fibonacci385","alias":"f"},{"type":"initial_fact","id":6187,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1264,"cls":"Fibonacci385","alias":"f1"},{"type":"not","id":1263,"cls":"Fibonacci385","alias":"f"},{"type":"initial_fact","id":6189,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1269,"cls":"Result384","alias":"r"},{"type":"object","id":1268,"cls":"Fibonacci384","alias":"f3"},{"type":"object","id":1267,"cls":"Fibonacci384","alias":"f2"},{"type":"object","id":1266,"cls":"Fibonacci384","alias":"f1"},{"type":"initial_fact","id":6191,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1273,"cls":"Fibonacci384","alias":"f"},{"type":"initial_fact","id":6193,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1275,"cls":"Fibonacci384","alias":"f1"},{"type":"not","id":1274,"cls":"Fibonacci384","alias":"f"},{"type":"initial_fact","id":6195,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1280,"cls":"Result383","alias":"r"},{"type":"object","id":1279,"cls":"Fibonacci383","alias":"f3"},{"type":"object","id":1278,"cls":"Fibonacci383","alias":"f2"},{"type":"object","id":1277,"cls":"Fibonacci383","alias":"f1"},{"type":"initial_fact","id":6197,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1284,"cls":"Fibonacci383","alias":"f"},{"type":"initial_fact","id":6199,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1286,"cls":"Fibonacci383","alias":"f1"},{"type":"not","id":1285,"cls":"Fibonacci383","alias":"f"},{"type":"initial_fact","id":6201,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1291,"cls":"Result382","alias":"r"},{"type":"object","id":1290,"cls":"Fibonacci382","alias":"f3"},{"type":"object","id":1289,"cls":"Fibonacci382","alias":"f2"},{"type":"object","id":1288,"cls":"Fibonacci382","alias":"f1"},{"type":"initial_fact","id":6203,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1295,"cls":"Fibonacci382","alias":"f"},{"type":"initial_fact","id":6205,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1297,"cls":"Fibonacci382","alias":"f1"},{"type":"not","id":1296,"cls":"Fibonacci382","alias":"f"},{"type":"initial_fact","id":6207,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1302,"cls":"Result381","alias":"r"},{"type":"object","id":1301,"cls":"Fibonacci381","alias":"f3"},{"type":"object","id":1300,"cls":"Fibonacci381","alias":"f2"},{"type":"object","id":1299,"cls":"Fibonacci381","alias":"f1"},{"type":"initial_fact","id":6209,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1306,"cls":"Fibonacci381","alias":"f"},{"type":"initial_fact","id":6211,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1308,"cls":"Fibonacci381","alias":"f1"},{"type":"not","id":1307,"cls":"Fibonacci381","alias":"f"},{"type":"initial_fact","id":6213,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1313,"cls":"Result380","alias":"r"},{"type":"object","id":1312,"cls":"Fibonacci380","alias":"f3"},{"type":"object","id":1311,"cls":"Fibonacci380","alias":"f2"},{"type":"object","id":1310,"cls":"Fibonacci380","alias":"f1"},{"type":"initial_fact","id":6215,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1317,"cls":"Fibonacci380","alias":"f"},{"type":"initial_fact","id":6217,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1319,"cls":"Fibonacci380","alias":"f1"},{"type":"not","id":1318,"cls":"Fibonacci380","alias":"f"},{"type":"initial_fact","id":6219,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1324,"cls":"Result379","alias":"r"},{"type":"object","id":1323,"cls":"Fibonacci379","alias":"f3"},{"type":"object","id":1322,"cls":"Fibonacci379","alias":"f2"},{"type":"object","id":1321,"cls":"Fibonacci379","alias":"f1"},{"type":"initial_fact","id":6221,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1328,"cls":"Fibonacci379","alias":"f"},{"type":"initial_fact","id":6223,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1330,"cls":"Fibonacci379","alias":"f1"},{"type":"not","id":1329,"cls":"Fibonacci379","alias":"f"},{"type":"initial_fact","id":6225,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1335,"cls":"Result378","alias":"r"},{"type":"object","id":1334,"cls":"Fibonacci378","alias":"f3"},{"type":"object","id":1333,"cls":"Fibonacci378","alias":"f2"},{"type":"object","id":1332,"cls":"Fibonacci378","alias":"f1"},{"type":"initial_fact","id":6227,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1339,"cls":"Fibonacci378","alias":"f"},{"type":"initial_fact","id":6229,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1341,"cls":"Fibonacci378","alias":"f1"},{"type":"not","id":1340,"cls":"Fibonacci378","alias":"f"},{"type":"initial_fact","id":6231,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1346,"cls":"Result377","alias":"r"},{"type":"object","id":1345,"cls":"Fibonacci377","alias":"f3"},{"type":"object","id":1344,"cls":"Fibonacci377","alias":"f2"},{"type":"object","id":1343,"cls":"Fibonacci377","alias":"f1"},{"type":"initial_fact","id":6233,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1350,"cls":"Fibonacci377","alias":"f"},{"type":"initial_fact","id":6235,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1352,"cls":"Fibonacci377","alias":"f1"},{"type":"not","id":1351,"cls":"Fibonacci377","alias":"f"},{"type":"initial_fact","id":6237,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1357,"cls":"Result376","alias":"r"},{"type":"object","id":1356,"cls":"Fibonacci376","alias":"f3"},{"type":"object","id":1355,"cls":"Fibonacci376","alias":"f2"},{"type":"object","id":1354,"cls":"Fibonacci376","alias":"f1"},{"type":"initial_fact","id":6239,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1361,"cls":"Fibonacci376","alias":"f"},{"type":"initial_fact","id":6241,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1363,"cls":"Fibonacci376","alias":"f1"},{"type":"not","id":1362,"cls":"Fibonacci376","alias":"f"},{"type":"initial_fact","id":6243,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1368,"cls":"Result375","alias":"r"},{"type":"object","id":1367,"cls":"Fibonacci375","alias":"f3"},{"type":"object","id":1366,"cls":"Fibonacci375","alias":"f2"},{"type":"object","id":1365,"cls":"Fibonacci375","alias":"f1"},{"type":"initial_fact","id":6245,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1372,"cls":"Fibonacci375","alias":"f"},{"type":"initial_fact","id":6247,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1374,"cls":"Fibonacci375","alias":"f1"},{"type":"not","id":1373,"cls":"Fibonacci375","alias":"f"},{"type":"initial_fact","id":6249,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1379,"cls":"Result374","alias":"r"},{"type":"object","id":1378,"cls":"Fibonacci374","alias":"f3"},{"type":"object","id":1377,"cls":"Fibonacci374","alias":"f2"},{"type":"object","id":1376,"cls":"Fibonacci374","alias":"f1"},{"type":"initial_fact","id":6251,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1383,"cls":"Fibonacci374","alias":"f"},{"type":"initial_fact","id":6253,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1385,"cls":"Fibonacci374","alias":"f1"},{"type":"not","id":1384,"cls":"Fibonacci374","alias":"f"},{"type":"initial_fact","id":6255,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1390,"cls":"Result373","alias":"r"},{"type":"object","id":1389,"cls":"Fibonacci373","alias":"f3"},{"type":"object","id":1388,"cls":"Fibonacci373","alias":"f2"},{"type":"object","id":1387,"cls":"Fibonacci373","alias":"f1"},{"type":"initial_fact","id":6257,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1394,"cls":"Fibonacci373","alias":"f"},{"type":"initial_fact","id":6259,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1396,"cls":"Fibonacci373","alias":"f1"},{"type":"not","id":1395,"cls":"Fibonacci373","alias":"f"},{"type":"initial_fact","id":6261,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1401,"cls":"Result372","alias":"r"},{"type":"object","id":1400,"cls":"Fibonacci372","alias":"f3"},{"type":"object","id":1399,"cls":"Fibonacci372","alias":"f2"},{"type":"object","id":1398,"cls":"Fibonacci372","alias":"f1"},{"type":"initial_fact","id":6263,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1405,"cls":"Fibonacci372","alias":"f"},{"type":"initial_fact","id":6265,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1407,"cls":"Fibonacci372","alias":"f1"},{"type":"not","id":1406,"cls":"Fibonacci372","alias":"f"},{"type":"initial_fact","id":6267,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1412,"cls":"Result371","alias":"r"},{"type":"object","id":1411,"cls":"Fibonacci371","alias":"f3"},{"type":"object","id":1410,"cls":"Fibonacci371","alias":"f2"},{"type":"object","id":1409,"cls":"Fibonacci371","alias":"f1"},{"type":"initial_fact","id":6269,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1416,"cls":"Fibonacci371","alias":"f"},{"type":"initial_fact","id":6271,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1418,"cls":"Fibonacci371","alias":"f1"},{"type":"not","id":1417,"cls":"Fibonacci371","alias":"f"},{"type":"initial_fact","id":6273,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1423,"cls":"Result370","alias":"r"},{"type":"object","id":1422,"cls":"Fibonacci370","alias":"f3"},{"type":"object","id":1421,"cls":"Fibonacci370","alias":"f2"},{"type":"object","id":1420,"cls":"Fibonacci370","alias":"f1"},{"type":"initial_fact","id":6275,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1427,"cls":"Fibonacci370","alias":"f"},{"type":"initial_fact","id":6277,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1429,"cls":"Fibonacci370","alias":"f1"},{"type":"not","id":1428,"cls":"Fibonacci370","alias":"f"},{"type":"initial_fact","id":6279,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1434,"cls":"Result369","alias":"r"},{"type":"object","id":1433,"cls":"Fibonacci369","alias":"f3"},{"type":"object","id":1432,"cls":"Fibonacci369","alias":"f2"},{"type":"object","id":1431,"cls":"Fibonacci369","alias":"f1"},{"type":"initial_fact","id":6281,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1438,"cls":"Fibonacci369","alias":"f"},{"type":"initial_fact","id":6283,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1440,"cls":"Fibonacci369","alias":"f1"},{"type":"not","id":1439,"cls":"Fibonacci369","alias":"f"},{"type":"initial_fact","id":6285,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1445,"cls":"Result368","alias":"r"},{"type":"object","id":1444,"cls":"Fibonacci368","alias":"f3"},{"type":"object","id":1443,"cls":"Fibonacci368","alias":"f2"},{"type":"object","id":1442,"cls":"Fibonacci368","alias":"f1"},{"type":"initial_fact","id":6287,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1449,"cls":"Fibonacci368","alias":"f"},{"type":"initial_fact","id":6289,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1451,"cls":"Fibonacci368","alias":"f1"},{"type":"not","id":1450,"cls":"Fibonacci368","alias":"f"},{"type":"initial_fact","id":6291,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1456,"cls":"Result367","alias":"r"},{"type":"object","id":1455,"cls":"Fibonacci367","alias":"f3"},{"type":"object","id":1454,"cls":"Fibonacci367","alias":"f2"},{"type":"object","id":1453,"cls":"Fibonacci367","alias":"f1"},{"type":"initial_fact","id":6293,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1460,"cls":"Fibonacci367","alias":"f"},{"type":"initial_fact","id":6295,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1462,"cls":"Fibonacci367","alias":"f1"},{"type":"not","id":1461,"cls":"Fibonacci367","alias":"f"},{"type":"initial_fact","id":6297,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1467,"cls":"Result366","alias":"r"},{"type":"object","id":1466,"cls":"Fibonacci366","alias":"f3"},{"type":"object","id":1465,"cls":"Fibonacci366","alias":"f2"},{"type":"object","id":1464,"cls":"Fibonacci366","alias":"f1"},{"type":"initial_fact","id":6299,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1471,"cls":"Fibonacci366","alias":"f"},{"type":"initial_fact","id":6301,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1473,"cls":"Fibonacci366","alias":"f1"},{"type":"not","id":1472,"cls":"Fibonacci366","alias":"f"},{"type":"initial_fact","id":6303,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1478,"cls":"Result365","alias":"r"},{"type":"object","id":1477,"cls":"Fibonacci365","alias":"f3"},{"type":"object","id":1476,"cls":"Fibonacci365","alias":"f2"},{"type":"object","id":1475,"cls":"Fibonacci365","alias":"f1"},{"type":"initial_fact","id":6305,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1482,"cls":"Fibonacci365","alias":"f"},{"type":"initial_fact","id":6307,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1484,"cls":"Fibonacci365","alias":"f1"},{"type":"not","id":1483,"cls":"Fibonacci365","alias":"f"},{"type":"initial_fact","id":6309,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1489,"cls":"Result364","alias":"r"},{"type":"object","id":1488,"cls":"Fibonacci364","alias":"f3"},{"type":"object","id":1487,"cls":"Fibonacci364","alias":"f2"},{"type":"object","id":1486,"cls":"Fibonacci364","alias":"f1"},{"type":"initial_fact","id":6311,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1493,"cls":"Fibonacci364","alias":"f"},{"type":"initial_fact","id":6313,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1495,"cls":"Fibonacci364","alias":"f1"},{"type":"not","id":1494,"cls":"Fibonacci364","alias":"f"},{"type":"initial_fact","id":6315,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1500,"cls":"Result363","alias":"r"},{"type":"object","id":1499,"cls":"Fibonacci363","alias":"f3"},{"type":"object","id":1498,"cls":"Fibonacci363","alias":"f2"},{"type":"object","id":1497,"cls":"Fibonacci363","alias":"f1"},{"type":"initial_fact","id":6317,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1504,"cls":"Fibonacci363","alias":"f"},{"type":"initial_fact","id":6319,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1506,"cls":"Fibonacci363","alias":"f1"},{"type":"not","id":1505,"cls":"Fibonacci363","alias":"f"},{"type":"initial_fact","id":6321,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1511,"cls":"Result362","alias":"r"},{"type":"object","id":1510,"cls":"Fibonacci362","alias":"f3"},{"type":"object","id":1509,"cls":"Fibonacci362","alias":"f2"},{"type":"object","id":1508,"cls":"Fibonacci362","alias":"f1"},{"type":"initial_fact","id":6323,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1515,"cls":"Fibonacci362","alias":"f"},{"type":"initial_fact","id":6325,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1517,"cls":"Fibonacci362","alias":"f1"},{"type":"not","id":1516,"cls":"Fibonacci362","alias":"f"},{"type":"initial_fact","id":6327,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1522,"cls":"Result361","alias":"r"},{"type":"object","id":1521,"cls":"Fibonacci361","alias":"f3"},{"type":"object","id":1520,"cls":"Fibonacci361","alias":"f2"},{"type":"object","id":1519,"cls":"Fibonacci361","alias":"f1"},{"type":"initial_fact","id":6329,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1526,"cls":"Fibonacci361","alias":"f"},{"type":"initial_fact","id":6331,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1528,"cls":"Fibonacci361","alias":"f1"},{"type":"not","id":1527,"cls":"Fibonacci361","alias":"f"},{"type":"initial_fact","id":6333,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1533,"cls":"Result360","alias":"r"},{"type":"object","id":1532,"cls":"Fibonacci360","alias":"f3"},{"type":"object","id":1531,"cls":"Fibonacci360","alias":"f2"},{"type":"object","id":1530,"cls":"Fibonacci360","alias":"f1"},{"type":"initial_fact","id":6335,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1537,"cls":"Fibonacci360","alias":"f"},{"type":"initial_fact","id":6337,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1539,"cls":"Fibonacci360","alias":"f1"},{"type":"not","id":1538,"cls":"Fibonacci360","alias":"f"},{"type":"initial_fact","id":6339,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1544,"cls":"Result359","alias":"r"},{"type":"object","id":1543,"cls":"Fibonacci359","alias":"f3"},{"type":"object","id":1542,"cls":"Fibonacci359","alias":"f2"},{"type":"object","id":1541,"cls":"Fibonacci359","alias":"f1"},{"type":"initial_fact","id":6341,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1548,"cls":"Fibonacci359","alias":"f"},{"type":"initial_fact","id":6343,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1550,"cls":"Fibonacci359","alias":"f1"},{"type":"not","id":1549,"cls":"Fibonacci359","alias":"f"},{"type":"initial_fact","id":6345,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1555,"cls":"Result358","alias":"r"},{"type":"object","id":1554,"cls":"Fibonacci358","alias":"f3"},{"type":"object","id":1553,"cls":"Fibonacci358","alias":"f2"},{"type":"object","id":1552,"cls":"Fibonacci358","alias":"f1"},{"type":"initial_fact","id":6347,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1559,"cls":"Fibonacci358","alias":"f"},{"type":"initial_fact","id":6349,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1561,"cls":"Fibonacci358","alias":"f1"},{"type":"not","id":1560,"cls":"Fibonacci358","alias":"f"},{"type":"initial_fact","id":6351,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1566,"cls":"Result357","alias":"r"},{"type":"object","id":1565,"cls":"Fibonacci357","alias":"f3"},{"type":"object","id":1564,"cls":"Fibonacci357","alias":"f2"},{"type":"object","id":1563,"cls":"Fibonacci357","alias":"f1"},{"type":"initial_fact","id":6353,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1570,"cls":"Fibonacci357","alias":"f"},{"type":"initial_fact","id":6355,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1572,"cls":"Fibonacci357","alias":"f1"},{"type":"not","id":1571,"cls":"Fibonacci357","alias":"f"},{"type":"initial_fact","id":6357,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1577,"cls":"Result356","alias":"r"},{"type":"object","id":1576,"cls":"Fibonacci356","alias":"f3"},{"type":"object","id":1575,"cls":"Fibonacci356","alias":"f2"},{"type":"object","id":1574,"cls":"Fibonacci356","alias":"f1"},{"type":"initial_fact","id":6359,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1581,"cls":"Fibonacci356","alias":"f"},{"type":"initial_fact","id":6361,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1583,"cls":"Fibonacci356","alias":"f1"},{"type":"not","id":1582,"cls":"Fibonacci356","alias":"f"},{"type":"initial_fact","id":6363,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1588,"cls":"Result355","alias":"r"},{"type":"object","id":1587,"cls":"Fibonacci355","alias":"f3"},{"type":"object","id":1586,"cls":"Fibonacci355","alias":"f2"},{"type":"object","id":1585,"cls":"Fibonacci355","alias":"f1"},{"type":"initial_fact","id":6365,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1592,"cls":"Fibonacci355","alias":"f"},{"type":"initial_fact","id":6367,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1594,"cls":"Fibonacci355","alias":"f1"},{"type":"not","id":1593,"cls":"Fibonacci355","alias":"f"},{"type":"initial_fact","id":6369,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1599,"cls":"Result354","alias":"r"},{"type":"object","id":1598,"cls":"Fibonacci354","alias":"f3"},{"type":"object","id":1597,"cls":"Fibonacci354","alias":"f2"},{"type":"object","id":1596,"cls":"Fibonacci354","alias":"f1"},{"type":"initial_fact","id":6371,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1603,"cls":"Fibonacci354","alias":"f"},{"type":"initial_fact","id":6373,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1605,"cls":"Fibonacci354","alias":"f1"},{"type":"not","id":1604,"cls":"Fibonacci354","alias":"f"},{"type":"initial_fact","id":6375,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1610,"cls":"Result353","alias":"r"},{"type":"object","id":1609,"cls":"Fibonacci353","alias":"f3"},{"type":"object","id":1608,"cls":"Fibonacci353","alias":"f2"},{"type":"object","id":1607,"cls":"Fibonacci353","alias":"f1"},{"type":"initial_fact","id":6377,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1614,"cls":"Fibonacci353","alias":"f"},{"type":"initial_fact","id":6379,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1616,"cls":"Fibonacci353","alias":"f1"},{"type":"not","id":1615,"cls":"Fibonacci353","alias":"f"},{"type":"initial_fact","id":6381,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1621,"cls":"Result352","alias":"r"},{"type":"object","id":1620,"cls":"Fibonacci352","alias":"f3"},{"type":"object","id":1619,"cls":"Fibonacci352","alias":"f2"},{"type":"object","id":1618,"cls":"Fibonacci352","alias":"f1"},{"type":"initial_fact","id":6383,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1625,"cls":"Fibonacci352","alias":"f"},{"type":"initial_fact","id":6385,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1627,"cls":"Fibonacci352","alias":"f1"},{"type":"not","id":1626,"cls":"Fibonacci352","alias":"f"},{"type":"initial_fact","id":6387,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1632,"cls":"Result351","alias":"r"},{"type":"object","id":1631,"cls":"Fibonacci351","alias":"f3"},{"type":"object","id":1630,"cls":"Fibonacci351","alias":"f2"},{"type":"object","id":1629,"cls":"Fibonacci351","alias":"f1"},{"type":"initial_fact","id":6389,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1636,"cls":"Fibonacci351","alias":"f"},{"type":"initial_fact","id":6391,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1638,"cls":"Fibonacci351","alias":"f1"},{"type":"not","id":1637,"cls":"Fibonacci351","alias":"f"},{"type":"initial_fact","id":6393,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1643,"cls":"Result350","alias":"r"},{"type":"object","id":1642,"cls":"Fibonacci350","alias":"f3"},{"type":"object","id":1641,"cls":"Fibonacci350","alias":"f2"},{"type":"object","id":1640,"cls":"Fibonacci350","alias":"f1"},{"type":"initial_fact","id":6395,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1647,"cls":"Fibonacci350","alias":"f"},{"type":"initial_fact","id":6397,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1649,"cls":"Fibonacci350","alias":"f1"},{"type":"not","id":1648,"cls":"Fibonacci350","alias":"f"},{"type":"initial_fact","id":6399,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1654,"cls":"Result349","alias":"r"},{"type":"object","id":1653,"cls":"Fibonacci349","alias":"f3"},{"type":"object","id":1652,"cls":"Fibonacci349","alias":"f2"},{"type":"object","id":1651,"cls":"Fibonacci349","alias":"f1"},{"type":"initial_fact","id":6401,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1658,"cls":"Fibonacci349","alias":"f"},{"type":"initial_fact","id":6403,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1660,"cls":"Fibonacci349","alias":"f1"},{"type":"not","id":1659,"cls":"Fibonacci349","alias":"f"},{"type":"initial_fact","id":6405,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1665,"cls":"Result348","alias":"r"},{"type":"object","id":1664,"cls":"Fibonacci348","alias":"f3"},{"type":"object","id":1663,"cls":"Fibonacci348","alias":"f2"},{"type":"object","id":1662,"cls":"Fibonacci348","alias":"f1"},{"type":"initial_fact","id":6407,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1669,"cls":"Fibonacci348","alias":"f"},{"type":"initial_fact","id":6409,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1671,"cls":"Fibonacci348","alias":"f1"},{"type":"not","id":1670,"cls":"Fibonacci348","alias":"f"},{"type":"initial_fact","id":6411,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1676,"cls":"Result347","alias":"r"},{"type":"object","id":1675,"cls":"Fibonacci347","alias":"f3"},{"type":"object","id":1674,"cls":"Fibonacci347","alias":"f2"},{"type":"object","id":1673,"cls":"Fibonacci347","alias":"f1"},{"type":"initial_fact","id":6413,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1680,"cls":"Fibonacci347","alias":"f"},{"type":"initial_fact","id":6415,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1682,"cls":"Fibonacci347","alias":"f1"},{"type":"not","id":1681,"cls":"Fibonacci347","alias":"f"},{"type":"initial_fact","id":6417,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1687,"cls":"Result346","alias":"r"},{"type":"object","id":1686,"cls":"Fibonacci346","alias":"f3"},{"type":"object","id":1685,"cls":"Fibonacci346","alias":"f2"},{"type":"object","id":1684,"cls":"Fibonacci346","alias":"f1"},{"type":"initial_fact","id":6419,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1691,"cls":"Fibonacci346","alias":"f"},{"type":"initial_fact","id":6421,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1693,"cls":"Fibonacci346","alias":"f1"},{"type":"not","id":1692,"cls":"Fibonacci346","alias":"f"},{"type":"initial_fact","id":6423,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1698,"cls":"Result345","alias":"r"},{"type":"object","id":1697,"cls":"Fibonacci345","alias":"f3"},{"type":"object","id":1696,"cls":"Fibonacci345","alias":"f2"},{"type":"object","id":1695,"cls":"Fibonacci345","alias":"f1"},{"type":"initial_fact","id":6425,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1702,"cls":"Fibonacci345","alias":"f"},{"type":"initial_fact","id":6427,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1704,"cls":"Fibonacci345","alias":"f1"},{"type":"not","id":1703,"cls":"Fibonacci345","alias":"f"},{"type":"initial_fact","id":6429,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1709,"cls":"Result344","alias":"r"},{"type":"object","id":1708,"cls":"Fibonacci344","alias":"f3"},{"type":"object","id":1707,"cls":"Fibonacci344","alias":"f2"},{"type":"object","id":1706,"cls":"Fibonacci344","alias":"f1"},{"type":"initial_fact","id":6431,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1713,"cls":"Fibonacci344","alias":"f"},{"type":"initial_fact","id":6433,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1715,"cls":"Fibonacci344","alias":"f1"},{"type":"not","id":1714,"cls":"Fibonacci344","alias":"f"},{"type":"initial_fact","id":6435,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1720,"cls":"Result343","alias":"r"},{"type":"object","id":1719,"cls":"Fibonacci343","alias":"f3"},{"type":"object","id":1718,"cls":"Fibonacci343","alias":"f2"},{"type":"object","id":1717,"cls":"Fibonacci343","alias":"f1"},{"type":"initial_fact","id":6437,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1724,"cls":"Fibonacci343","alias":"f"},{"type":"initial_fact","id":6439,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1726,"cls":"Fibonacci343","alias":"f1"},{"type":"not","id":1725,"cls":"Fibonacci343","alias":"f"},{"type":"initial_fact","id":6441,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1731,"cls":"Result342","alias":"r"},{"type":"object","id":1730,"cls":"Fibonacci342","alias":"f3"},{"type":"object","id":1729,"cls":"Fibonacci342","alias":"f2"},{"type":"object","id":1728,"cls":"Fibonacci342","alias":"f1"},{"type":"initial_fact","id":6443,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1735,"cls":"Fibonacci342","alias":"f"},{"type":"initial_fact","id":6445,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1737,"cls":"Fibonacci342","alias":"f1"},{"type":"not","id":1736,"cls":"Fibonacci342","alias":"f"},{"type":"initial_fact","id":6447,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1742,"cls":"Result341","alias":"r"},{"type":"object","id":1741,"cls":"Fibonacci341","alias":"f3"},{"type":"object","id":1740,"cls":"Fibonacci341","alias":"f2"},{"type":"object","id":1739,"cls":"Fibonacci341","alias":"f1"},{"type":"initial_fact","id":6449,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1746,"cls":"Fibonacci341","alias":"f"},{"type":"initial_fact","id":6451,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1748,"cls":"Fibonacci341","alias":"f1"},{"type":"not","id":1747,"cls":"Fibonacci341","alias":"f"},{"type":"initial_fact","id":6453,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1753,"cls":"Result340","alias":"r"},{"type":"object","id":1752,"cls":"Fibonacci340","alias":"f3"},{"type":"object","id":1751,"cls":"Fibonacci340","alias":"f2"},{"type":"object","id":1750,"cls":"Fibonacci340","alias":"f1"},{"type":"initial_fact","id":6455,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1757,"cls":"Fibonacci340","alias":"f"},{"type":"initial_fact","id":6457,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1759,"cls":"Fibonacci340","alias":"f1"},{"type":"not","id":1758,"cls":"Fibonacci340","alias":"f"},{"type":"initial_fact","id":6459,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1764,"cls":"Result339","alias":"r"},{"type":"object","id":1763,"cls":"Fibonacci339","alias":"f3"},{"type":"object","id":1762,"cls":"Fibonacci339","alias":"f2"},{"type":"object","id":1761,"cls":"Fibonacci339","alias":"f1"},{"type":"initial_fact","id":6461,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1768,"cls":"Fibonacci339","alias":"f"},{"type":"initial_fact","id":6463,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1770,"cls":"Fibonacci339","alias":"f1"},{"type":"not","id":1769,"cls":"Fibonacci339","alias":"f"},{"type":"initial_fact","id":6465,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1775,"cls":"Result338","alias":"r"},{"type":"object","id":1774,"cls":"Fibonacci338","alias":"f3"},{"type":"object","id":1773,"cls":"Fibonacci338","alias":"f2"},{"type":"object","id":1772,"cls":"Fibonacci338","alias":"f1"},{"type":"initial_fact","id":6467,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1779,"cls":"Fibonacci338","alias":"f"},{"type":"initial_fact","id":6469,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1781,"cls":"Fibonacci338","alias":"f1"},{"type":"not","id":1780,"cls":"Fibonacci338","alias":"f"},{"type":"initial_fact","id":6471,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1786,"cls":"Result337","alias":"r"},{"type":"object","id":1785,"cls":"Fibonacci337","alias":"f3"},{"type":"object","id":1784,"cls":"Fibonacci337","alias":"f2"},{"type":"object","id":1783,"cls":"Fibonacci337","alias":"f1"},{"type":"initial_fact","id":6473,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1790,"cls":"Fibonacci337","alias":"f"},{"type":"initial_fact","id":6475,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1792,"cls":"Fibonacci337","alias":"f1"},{"type":"not","id":1791,"cls":"Fibonacci337","alias":"f"},{"type":"initial_fact","id":6477,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1797,"cls":"Result336","alias":"r"},{"type":"object","id":1796,"cls":"Fibonacci336","alias":"f3"},{"type":"object","id":1795,"cls":"Fibonacci336","alias":"f2"},{"type":"object","id":1794,"cls":"Fibonacci336","alias":"f1"},{"type":"initial_fact","id":6479,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1801,"cls":"Fibonacci336","alias":"f"},{"type":"initial_fact","id":6481,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1803,"cls":"Fibonacci336","alias":"f1"},{"type":"not","id":1802,"cls":"Fibonacci336","alias":"f"},{"type":"initial_fact","id":6483,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1808,"cls":"Result335","alias":"r"},{"type":"object","id":1807,"cls":"Fibonacci335","alias":"f3"},{"type":"object","id":1806,"cls":"Fibonacci335","alias":"f2"},{"type":"object","id":1805,"cls":"Fibonacci335","alias":"f1"},{"type":"initial_fact","id":6485,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1812,"cls":"Fibonacci335","alias":"f"},{"type":"initial_fact","id":6487,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1814,"cls":"Fibonacci335","alias":"f1"},{"type":"not","id":1813,"cls":"Fibonacci335","alias":"f"},{"type":"initial_fact","id":6489,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1819,"cls":"Result334","alias":"r"},{"type":"object","id":1818,"cls":"Fibonacci334","alias":"f3"},{"type":"object","id":1817,"cls":"Fibonacci334","alias":"f2"},{"type":"object","id":1816,"cls":"Fibonacci334","alias":"f1"},{"type":"initial_fact","id":6491,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1823,"cls":"Fibonacci334","alias":"f"},{"type":"initial_fact","id":6493,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1825,"cls":"Fibonacci334","alias":"f1"},{"type":"not","id":1824,"cls":"Fibonacci334","alias":"f"},{"type":"initial_fact","id":6495,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1830,"cls":"Result333","alias":"r"},{"type":"object","id":1829,"cls":"Fibonacci333","alias":"f3"},{"type":"object","id":1828,"cls":"Fibonacci333","alias":"f2"},{"type":"object","id":1827,"cls":"Fibonacci333","alias":"f1"},{"type":"initial_fact","id":6497,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1834,"cls":"Fibonacci333","alias":"f"},{"type":"initial_fact","id":6499,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1836,"cls":"Fibonacci333","alias":"f1"},{"type":"not","id":1835,"cls":"Fibonacci333","alias":"f"},{"type":"initial_fact","id":6501,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1841,"cls":"Result332","alias":"r"},{"type":"object","id":1840,"cls":"Fibonacci332","alias":"f3"},{"type":"object","id":1839,"cls":"Fibonacci332","alias":"f2"},{"type":"object","id":1838,"cls":"Fibonacci332","alias":"f1"},{"type":"initial_fact","id":6503,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1845,"cls":"Fibonacci332","alias":"f"},{"type":"initial_fact","id":6505,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1847,"cls":"Fibonacci332","alias":"f1"},{"type":"not","id":1846,"cls":"Fibonacci332","alias":"f"},{"type":"initial_fact","id":6507,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1852,"cls":"Result331","alias":"r"},{"type":"object","id":1851,"cls":"Fibonacci331","alias":"f3"},{"type":"object","id":1850,"cls":"Fibonacci331","alias":"f2"},{"type":"object","id":1849,"cls":"Fibonacci331","alias":"f1"},{"type":"initial_fact","id":6509,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1856,"cls":"Fibonacci331","alias":"f"},{"type":"initial_fact","id":6511,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1858,"cls":"Fibonacci331","alias":"f1"},{"type":"not","id":1857,"cls":"Fibonacci331","alias":"f"},{"type":"initial_fact","id":6513,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1863,"cls":"Result330","alias":"r"},{"type":"object","id":1862,"cls":"Fibonacci330","alias":"f3"},{"type":"object","id":1861,"cls":"Fibonacci330","alias":"f2"},{"type":"object","id":1860,"cls":"Fibonacci330","alias":"f1"},{"type":"initial_fact","id":6515,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1867,"cls":"Fibonacci330","alias":"f"},{"type":"initial_fact","id":6517,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1869,"cls":"Fibonacci330","alias":"f1"},{"type":"not","id":1868,"cls":"Fibonacci330","alias":"f"},{"type":"initial_fact","id":6519,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1874,"cls":"Result329","alias":"r"},{"type":"object","id":1873,"cls":"Fibonacci329","alias":"f3"},{"type":"object","id":1872,"cls":"Fibonacci329","alias":"f2"},{"type":"object","id":1871,"cls":"Fibonacci329","alias":"f1"},{"type":"initial_fact","id":6521,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1878,"cls":"Fibonacci329","alias":"f"},{"type":"initial_fact","id":6523,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1880,"cls":"Fibonacci329","alias":"f1"},{"type":"not","id":1879,"cls":"Fibonacci329","alias":"f"},{"type":"initial_fact","id":6525,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1885,"cls":"Result328","alias":"r"},{"type":"object","id":1884,"cls":"Fibonacci328","alias":"f3"},{"type":"object","id":1883,"cls":"Fibonacci328","alias":"f2"},{"type":"object","id":1882,"cls":"Fibonacci328","alias":"f1"},{"type":"initial_fact","id":6527,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1889,"cls":"Fibonacci328","alias":"f"},{"type":"initial_fact","id":6529,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1891,"cls":"Fibonacci328","alias":"f1"},{"type":"not","id":1890,"cls":"Fibonacci328","alias":"f"},{"type":"initial_fact","id":6531,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1896,"cls":"Result327","alias":"r"},{"type":"object","id":1895,"cls":"Fibonacci327","alias":"f3"},{"type":"object","id":1894,"cls":"Fibonacci327","alias":"f2"},{"type":"object","id":1893,"cls":"Fibonacci327","alias":"f1"},{"type":"initial_fact","id":6533,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1900,"cls":"Fibonacci327","alias":"f"},{"type":"initial_fact","id":6535,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1902,"cls":"Fibonacci327","alias":"f1"},{"type":"not","id":1901,"cls":"Fibonacci327","alias":"f"},{"type":"initial_fact","id":6537,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1907,"cls":"Result326","alias":"r"},{"type":"object","id":1906,"cls":"Fibonacci326","alias":"f3"},{"type":"object","id":1905,"cls":"Fibonacci326","alias":"f2"},{"type":"object","id":1904,"cls":"Fibonacci326","alias":"f1"},{"type":"initial_fact","id":6539,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1911,"cls":"Fibonacci326","alias":"f"},{"type":"initial_fact","id":6541,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1913,"cls":"Fibonacci326","alias":"f1"},{"type":"not","id":1912,"cls":"Fibonacci326","alias":"f"},{"type":"initial_fact","id":6543,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1918,"cls":"Result325","alias":"r"},{"type":"object","id":1917,"cls":"Fibonacci325","alias":"f3"},{"type":"object","id":1916,"cls":"Fibonacci325","alias":"f2"},{"type":"object","id":1915,"cls":"Fibonacci325","alias":"f1"},{"type":"initial_fact","id":6545,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1922,"cls":"Fibonacci325","alias":"f"},{"type":"initial_fact","id":6547,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1924,"cls":"Fibonacci325","alias":"f1"},{"type":"not","id":1923,"cls":"Fibonacci325","alias":"f"},{"type":"initial_fact","id":6549,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1929,"cls":"Result324","alias":"r"},{"type":"object","id":1928,"cls":"Fibonacci324","alias":"f3"},{"type":"object","id":1927,"cls":"Fibonacci324","alias":"f2"},{"type":"object","id":1926,"cls":"Fibonacci324","alias":"f1"},{"type":"initial_fact","id":6551,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1933,"cls":"Fibonacci324","alias":"f"},{"type":"initial_fact","id":6553,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1935,"cls":"Fibonacci324","alias":"f1"},{"type":"not","id":1934,"cls":"Fibonacci324","alias":"f"},{"type":"initial_fact","id":6555,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1940,"cls":"Result323","alias":"r"},{"type":"object","id":1939,"cls":"Fibonacci323","alias":"f3"},{"type":"object","id":1938,"cls":"Fibonacci323","alias":"f2"},{"type":"object","id":1937,"cls":"Fibonacci323","alias":"f1"},{"type":"initial_fact","id":6557,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1944,"cls":"Fibonacci323","alias":"f"},{"type":"initial_fact","id":6559,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1946,"cls":"Fibonacci323","alias":"f1"},{"type":"not","id":1945,"cls":"Fibonacci323","alias":"f"},{"type":"initial_fact","id":6561,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1951,"cls":"Result322","alias":"r"},{"type":"object","id":1950,"cls":"Fibonacci322","alias":"f3"},{"type":"object","id":1949,"cls":"Fibonacci322","alias":"f2"},{"type":"object","id":1948,"cls":"Fibonacci322","alias":"f1"},{"type":"initial_fact","id":6563,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1955,"cls":"Fibonacci322","alias":"f"},{"type":"initial_fact","id":6565,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1957,"cls":"Fibonacci322","alias":"f1"},{"type":"not","id":1956,"cls":"Fibonacci322","alias":"f"},{"type":"initial_fact","id":6567,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1962,"cls":"Result321","alias":"r"},{"type":"object","id":1961,"cls":"Fibonacci321","alias":"f3"},{"type":"object","id":1960,"cls":"Fibonacci321","alias":"f2"},{"type":"object","id":1959,"cls":"Fibonacci321","alias":"f1"},{"type":"initial_fact","id":6569,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1966,"cls":"Fibonacci321","alias":"f"},{"type":"initial_fact","id":6571,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1968,"cls":"Fibonacci321","alias":"f1"},{"type":"not","id":1967,"cls":"Fibonacci321","alias":"f"},{"type":"initial_fact","id":6573,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1973,"cls":"Result320","alias":"r"},{"type":"object","id":1972,"cls":"Fibonacci320","alias":"f3"},{"type":"object","id":1971,"cls":"Fibonacci320","alias":"f2"},{"type":"object","id":1970,"cls":"Fibonacci320","alias":"f1"},{"type":"initial_fact","id":6575,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1977,"cls":"Fibonacci320","alias":"f"},{"type":"initial_fact","id":6577,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1979,"cls":"Fibonacci320","alias":"f1"},{"type":"not","id":1978,"cls":"Fibonacci320","alias":"f"},{"type":"initial_fact","id":6579,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1984,"cls":"Result319","alias":"r"},{"type":"object","id":1983,"cls":"Fibonacci319","alias":"f3"},{"type":"object","id":1982,"cls":"Fibonacci319","alias":"f2"},{"type":"object","id":1981,"cls":"Fibonacci319","alias":"f1"},{"type":"initial_fact","id":6581,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1988,"cls":"Fibonacci319","alias":"f"},{"type":"initial_fact","id":6583,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1990,"cls":"Fibonacci319","alias":"f1"},{"type":"not","id":1989,"cls":"Fibonacci319","alias":"f"},{"type":"initial_fact","id":6585,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1995,"cls":"Result318","alias":"r"},{"type":"object","id":1994,"cls":"Fibonacci318","alias":"f3"},{"type":"object","id":1993,"cls":"Fibonacci318","alias":"f2"},{"type":"object","id":1992,"cls":"Fibonacci318","alias":"f1"},{"type":"initial_fact","id":6587,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":1999,"cls":"Fibonacci318","alias":"f"},{"type":"initial_fact","id":6589,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2001,"cls":"Fibonacci318","alias":"f1"},{"type":"not","id":2000,"cls":"Fibonacci318","alias":"f"},{"type":"initial_fact","id":6591,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2006,"cls":"Result317","alias":"r"},{"type":"object","id":2005,"cls":"Fibonacci317","alias":"f3"},{"type":"object","id":2004,"cls":"Fibonacci317","alias":"f2"},{"type":"object","id":2003,"cls":"Fibonacci317","alias":"f1"},{"type":"initial_fact","id":6593,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2010,"cls":"Fibonacci317","alias":"f"},{"type":"initial_fact","id":6595,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2012,"cls":"Fibonacci317","alias":"f1"},{"type":"not","id":2011,"cls":"Fibonacci317","alias":"f"},{"type":"initial_fact","id":6597,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2017,"cls":"Result316","alias":"r"},{"type":"object","id":2016,"cls":"Fibonacci316","alias":"f3"},{"type":"object","id":2015,"cls":"Fibonacci316","alias":"f2"},{"type":"object","id":2014,"cls":"Fibonacci316","alias":"f1"},{"type":"initial_fact","id":6599,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2021,"cls":"Fibonacci316","alias":"f"},{"type":"initial_fact","id":6601,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2023,"cls":"Fibonacci316","alias":"f1"},{"type":"not","id":2022,"cls":"Fibonacci316","alias":"f"},{"type":"initial_fact","id":6603,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2028,"cls":"Result315","alias":"r"},{"type":"object","id":2027,"cls":"Fibonacci315","alias":"f3"},{"type":"object","id":2026,"cls":"Fibonacci315","alias":"f2"},{"type":"object","id":2025,"cls":"Fibonacci315","alias":"f1"},{"type":"initial_fact","id":6605,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2032,"cls":"Fibonacci315","alias":"f"},{"type":"initial_fact","id":6607,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2034,"cls":"Fibonacci315","alias":"f1"},{"type":"not","id":2033,"cls":"Fibonacci315","alias":"f"},{"type":"initial_fact","id":6609,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2039,"cls":"Result314","alias":"r"},{"type":"object","id":2038,"cls":"Fibonacci314","alias":"f3"},{"type":"object","id":2037,"cls":"Fibonacci314","alias":"f2"},{"type":"object","id":2036,"cls":"Fibonacci314","alias":"f1"},{"type":"initial_fact","id":6611,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2043,"cls":"Fibonacci314","alias":"f"},{"type":"initial_fact","id":6613,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2045,"cls":"Fibonacci314","alias":"f1"},{"type":"not","id":2044,"cls":"Fibonacci314","alias":"f"},{"type":"initial_fact","id":6615,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2050,"cls":"Result313","alias":"r"},{"type":"object","id":2049,"cls":"Fibonacci313","alias":"f3"},{"type":"object","id":2048,"cls":"Fibonacci313","alias":"f2"},{"type":"object","id":2047,"cls":"Fibonacci313","alias":"f1"},{"type":"initial_fact","id":6617,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2054,"cls":"Fibonacci313","alias":"f"},{"type":"initial_fact","id":6619,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2056,"cls":"Fibonacci313","alias":"f1"},{"type":"not","id":2055,"cls":"Fibonacci313","alias":"f"},{"type":"initial_fact","id":6621,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2061,"cls":"Result312","alias":"r"},{"type":"object","id":2060,"cls":"Fibonacci312","alias":"f3"},{"type":"object","id":2059,"cls":"Fibonacci312","alias":"f2"},{"type":"object","id":2058,"cls":"Fibonacci312","alias":"f1"},{"type":"initial_fact","id":6623,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2065,"cls":"Fibonacci312","alias":"f"},{"type":"initial_fact","id":6625,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2067,"cls":"Fibonacci312","alias":"f1"},{"type":"not","id":2066,"cls":"Fibonacci312","alias":"f"},{"type":"initial_fact","id":6627,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2072,"cls":"Result311","alias":"r"},{"type":"object","id":2071,"cls":"Fibonacci311","alias":"f3"},{"type":"object","id":2070,"cls":"Fibonacci311","alias":"f2"},{"type":"object","id":2069,"cls":"Fibonacci311","alias":"f1"},{"type":"initial_fact","id":6629,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2076,"cls":"Fibonacci311","alias":"f"},{"type":"initial_fact","id":6631,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2078,"cls":"Fibonacci311","alias":"f1"},{"type":"not","id":2077,"cls":"Fibonacci311","alias":"f"},{"type":"initial_fact","id":6633,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2083,"cls":"Result310","alias":"r"},{"type":"object","id":2082,"cls":"Fibonacci310","alias":"f3"},{"type":"object","id":2081,"cls":"Fibonacci310","alias":"f2"},{"type":"object","id":2080,"cls":"Fibonacci310","alias":"f1"},{"type":"initial_fact","id":6635,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2087,"cls":"Fibonacci310","alias":"f"},{"type":"initial_fact","id":6637,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2089,"cls":"Fibonacci310","alias":"f1"},{"type":"not","id":2088,"cls":"Fibonacci310","alias":"f"},{"type":"initial_fact","id":6639,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2094,"cls":"Result309","alias":"r"},{"type":"object","id":2093,"cls":"Fibonacci309","alias":"f3"},{"type":"object","id":2092,"cls":"Fibonacci309","alias":"f2"},{"type":"object","id":2091,"cls":"Fibonacci309","alias":"f1"},{"type":"initial_fact","id":6641,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2098,"cls":"Fibonacci309","alias":"f"},{"type":"initial_fact","id":6643,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2100,"cls":"Fibonacci309","alias":"f1"},{"type":"not","id":2099,"cls":"Fibonacci309","alias":"f"},{"type":"initial_fact","id":6645,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2105,"cls":"Result308","alias":"r"},{"type":"object","id":2104,"cls":"Fibonacci308","alias":"f3"},{"type":"object","id":2103,"cls":"Fibonacci308","alias":"f2"},{"type":"object","id":2102,"cls":"Fibonacci308","alias":"f1"},{"type":"initial_fact","id":6647,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2109,"cls":"Fibonacci308","alias":"f"},{"type":"initial_fact","id":6649,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2111,"cls":"Fibonacci308","alias":"f1"},{"type":"not","id":2110,"cls":"Fibonacci308","alias":"f"},{"type":"initial_fact","id":6651,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2116,"cls":"Result307","alias":"r"},{"type":"object","id":2115,"cls":"Fibonacci307","alias":"f3"},{"type":"object","id":2114,"cls":"Fibonacci307","alias":"f2"},{"type":"object","id":2113,"cls":"Fibonacci307","alias":"f1"},{"type":"initial_fact","id":6653,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2120,"cls":"Fibonacci307","alias":"f"},{"type":"initial_fact","id":6655,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2122,"cls":"Fibonacci307","alias":"f1"},{"type":"not","id":2121,"cls":"Fibonacci307","alias":"f"},{"type":"initial_fact","id":6657,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2127,"cls":"Result306","alias":"r"},{"type":"object","id":2126,"cls":"Fibonacci306","alias":"f3"},{"type":"object","id":2125,"cls":"Fibonacci306","alias":"f2"},{"type":"object","id":2124,"cls":"Fibonacci306","alias":"f1"},{"type":"initial_fact","id":6659,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2131,"cls":"Fibonacci306","alias":"f"},{"type":"initial_fact","id":6661,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2133,"cls":"Fibonacci306","alias":"f1"},{"type":"not","id":2132,"cls":"Fibonacci306","alias":"f"},{"type":"initial_fact","id":6663,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2138,"cls":"Result305","alias":"r"},{"type":"object","id":2137,"cls":"Fibonacci305","alias":"f3"},{"type":"object","id":2136,"cls":"Fibonacci305","alias":"f2"},{"type":"object","id":2135,"cls":"Fibonacci305","alias":"f1"},{"type":"initial_fact","id":6665,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2142,"cls":"Fibonacci305","alias":"f"},{"type":"initial_fact","id":6667,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2144,"cls":"Fibonacci305","alias":"f1"},{"type":"not","id":2143,"cls":"Fibonacci305","alias":"f"},{"type":"initial_fact","id":6669,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2149,"cls":"Result304","alias":"r"},{"type":"object","id":2148,"cls":"Fibonacci304","alias":"f3"},{"type":"object","id":2147,"cls":"Fibonacci304","alias":"f2"},{"type":"object","id":2146,"cls":"Fibonacci304","alias":"f1"},{"type":"initial_fact","id":6671,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2153,"cls":"Fibonacci304","alias":"f"},{"type":"initial_fact","id":6673,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2155,"cls":"Fibonacci304","alias":"f1"},{"type":"not","id":2154,"cls":"Fibonacci304","alias":"f"},{"type":"initial_fact","id":6675,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2160,"cls":"Result303","alias":"r"},{"type":"object","id":2159,"cls":"Fibonacci303","alias":"f3"},{"type":"object","id":2158,"cls":"Fibonacci303","alias":"f2"},{"type":"object","id":2157,"cls":"Fibonacci303","alias":"f1"},{"type":"initial_fact","id":6677,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2164,"cls":"Fibonacci303","alias":"f"},{"type":"initial_fact","id":6679,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2166,"cls":"Fibonacci303","alias":"f1"},{"type":"not","id":2165,"cls":"Fibonacci303","alias":"f"},{"type":"initial_fact","id":6681,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2171,"cls":"Result302","alias":"r"},{"type":"object","id":2170,"cls":"Fibonacci302","alias":"f3"},{"type":"object","id":2169,"cls":"Fibonacci302","alias":"f2"},{"type":"object","id":2168,"cls":"Fibonacci302","alias":"f1"},{"type":"initial_fact","id":6683,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2175,"cls":"Fibonacci302","alias":"f"},{"type":"initial_fact","id":6685,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2177,"cls":"Fibonacci302","alias":"f1"},{"type":"not","id":2176,"cls":"Fibonacci302","alias":"f"},{"type":"initial_fact","id":6687,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2182,"cls":"Result301","alias":"r"},{"type":"object","id":2181,"cls":"Fibonacci301","alias":"f3"},{"type":"object","id":2180,"cls":"Fibonacci301","alias":"f2"},{"type":"object","id":2179,"cls":"Fibonacci301","alias":"f1"},{"type":"initial_fact","id":6689,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2186,"cls":"Fibonacci301","alias":"f"},{"type":"initial_fact","id":6691,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2188,"cls":"Fibonacci301","alias":"f1"},{"type":"not","id":2187,"cls":"Fibonacci301","alias":"f"},{"type":"initial_fact","id":6693,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2193,"cls":"Result300","alias":"r"},{"type":"object","id":2192,"cls":"Fibonacci300","alias":"f3"},{"type":"object","id":2191,"cls":"Fibonacci300","alias":"f2"},{"type":"object","id":2190,"cls":"Fibonacci300","alias":"f1"},{"type":"initial_fact","id":6695,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2197,"cls":"Fibonacci300","alias":"f"},{"type":"initial_fact","id":6697,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2199,"cls":"Fibonacci300","alias":"f1"},{"type":"not","id":2198,"cls":"Fibonacci300","alias":"f"},{"type":"initial_fact","id":6699,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2204,"cls":"Result299","alias":"r"},{"type":"object","id":2203,"cls":"Fibonacci299","alias":"f3"},{"type":"object","id":2202,"cls":"Fibonacci299","alias":"f2"},{"type":"object","id":2201,"cls":"Fibonacci299","alias":"f1"},{"type":"initial_fact","id":6701,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2208,"cls":"Fibonacci299","alias":"f"},{"type":"initial_fact","id":6703,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2210,"cls":"Fibonacci299","alias":"f1"},{"type":"not","id":2209,"cls":"Fibonacci299","alias":"f"},{"type":"initial_fact","id":6705,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2215,"cls":"Result298","alias":"r"},{"type":"object","id":2214,"cls":"Fibonacci298","alias":"f3"},{"type":"object","id":2213,"cls":"Fibonacci298","alias":"f2"},{"type":"object","id":2212,"cls":"Fibonacci298","alias":"f1"},{"type":"initial_fact","id":6707,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2219,"cls":"Fibonacci298","alias":"f"},{"type":"initial_fact","id":6709,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2221,"cls":"Fibonacci298","alias":"f1"},{"type":"not","id":2220,"cls":"Fibonacci298","alias":"f"},{"type":"initial_fact","id":6711,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2226,"cls":"Result297","alias":"r"},{"type":"object","id":2225,"cls":"Fibonacci297","alias":"f3"},{"type":"object","id":2224,"cls":"Fibonacci297","alias":"f2"},{"type":"object","id":2223,"cls":"Fibonacci297","alias":"f1"},{"type":"initial_fact","id":6713,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2230,"cls":"Fibonacci297","alias":"f"},{"type":"initial_fact","id":6715,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2232,"cls":"Fibonacci297","alias":"f1"},{"type":"not","id":2231,"cls":"Fibonacci297","alias":"f"},{"type":"initial_fact","id":6717,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2237,"cls":"Result296","alias":"r"},{"type":"object","id":2236,"cls":"Fibonacci296","alias":"f3"},{"type":"object","id":2235,"cls":"Fibonacci296","alias":"f2"},{"type":"object","id":2234,"cls":"Fibonacci296","alias":"f1"},{"type":"initial_fact","id":6719,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2241,"cls":"Fibonacci296","alias":"f"},{"type":"initial_fact","id":6721,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2243,"cls":"Fibonacci296","alias":"f1"},{"type":"not","id":2242,"cls":"Fibonacci296","alias":"f"},{"type":"initial_fact","id":6723,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2248,"cls":"Result295","alias":"r"},{"type":"object","id":2247,"cls":"Fibonacci295","alias":"f3"},{"type":"object","id":2246,"cls":"Fibonacci295","alias":"f2"},{"type":"object","id":2245,"cls":"Fibonacci295","alias":"f1"},{"type":"initial_fact","id":6725,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2252,"cls":"Fibonacci295","alias":"f"},{"type":"initial_fact","id":6727,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2254,"cls":"Fibonacci295","alias":"f1"},{"type":"not","id":2253,"cls":"Fibonacci295","alias":"f"},{"type":"initial_fact","id":6729,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2259,"cls":"Result294","alias":"r"},{"type":"object","id":2258,"cls":"Fibonacci294","alias":"f3"},{"type":"object","id":2257,"cls":"Fibonacci294","alias":"f2"},{"type":"object","id":2256,"cls":"Fibonacci294","alias":"f1"},{"type":"initial_fact","id":6731,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2263,"cls":"Fibonacci294","alias":"f"},{"type":"initial_fact","id":6733,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2265,"cls":"Fibonacci294","alias":"f1"},{"type":"not","id":2264,"cls":"Fibonacci294","alias":"f"},{"type":"initial_fact","id":6735,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2270,"cls":"Result293","alias":"r"},{"type":"object","id":2269,"cls":"Fibonacci293","alias":"f3"},{"type":"object","id":2268,"cls":"Fibonacci293","alias":"f2"},{"type":"object","id":2267,"cls":"Fibonacci293","alias":"f1"},{"type":"initial_fact","id":6737,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2274,"cls":"Fibonacci293","alias":"f"},{"type":"initial_fact","id":6739,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2276,"cls":"Fibonacci293","alias":"f1"},{"type":"not","id":2275,"cls":"Fibonacci293","alias":"f"},{"type":"initial_fact","id":6741,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2281,"cls":"Result292","alias":"r"},{"type":"object","id":2280,"cls":"Fibonacci292","alias":"f3"},{"type":"object","id":2279,"cls":"Fibonacci292","alias":"f2"},{"type":"object","id":2278,"cls":"Fibonacci292","alias":"f1"},{"type":"initial_fact","id":6743,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2285,"cls":"Fibonacci292","alias":"f"},{"type":"initial_fact","id":6745,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2287,"cls":"Fibonacci292","alias":"f1"},{"type":"not","id":2286,"cls":"Fibonacci292","alias":"f"},{"type":"initial_fact","id":6747,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2292,"cls":"Result291","alias":"r"},{"type":"object","id":2291,"cls":"Fibonacci291","alias":"f3"},{"type":"object","id":2290,"cls":"Fibonacci291","alias":"f2"},{"type":"object","id":2289,"cls":"Fibonacci291","alias":"f1"},{"type":"initial_fact","id":6749,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2296,"cls":"Fibonacci291","alias":"f"},{"type":"initial_fact","id":6751,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2298,"cls":"Fibonacci291","alias":"f1"},{"type":"not","id":2297,"cls":"Fibonacci291","alias":"f"},{"type":"initial_fact","id":6753,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2303,"cls":"Result290","alias":"r"},{"type":"object","id":2302,"cls":"Fibonacci290","alias":"f3"},{"type":"object","id":2301,"cls":"Fibonacci290","alias":"f2"},{"type":"object","id":2300,"cls":"Fibonacci290","alias":"f1"},{"type":"initial_fact","id":6755,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2307,"cls":"Fibonacci290","alias":"f"},{"type":"initial_fact","id":6757,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2309,"cls":"Fibonacci290","alias":"f1"},{"type":"not","id":2308,"cls":"Fibonacci290","alias":"f"},{"type":"initial_fact","id":6759,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2314,"cls":"Result289","alias":"r"},{"type":"object","id":2313,"cls":"Fibonacci289","alias":"f3"},{"type":"object","id":2312,"cls":"Fibonacci289","alias":"f2"},{"type":"object","id":2311,"cls":"Fibonacci289","alias":"f1"},{"type":"initial_fact","id":6761,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2318,"cls":"Fibonacci289","alias":"f"},{"type":"initial_fact","id":6763,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2320,"cls":"Fibonacci289","alias":"f1"},{"type":"not","id":2319,"cls":"Fibonacci289","alias":"f"},{"type":"initial_fact","id":6765,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2325,"cls":"Result288","alias":"r"},{"type":"object","id":2324,"cls":"Fibonacci288","alias":"f3"},{"type":"object","id":2323,"cls":"Fibonacci288","alias":"f2"},{"type":"object","id":2322,"cls":"Fibonacci288","alias":"f1"},{"type":"initial_fact","id":6767,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2329,"cls":"Fibonacci288","alias":"f"},{"type":"initial_fact","id":6769,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2331,"cls":"Fibonacci288","alias":"f1"},{"type":"not","id":2330,"cls":"Fibonacci288","alias":"f"},{"type":"initial_fact","id":6771,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2336,"cls":"Result287","alias":"r"},{"type":"object","id":2335,"cls":"Fibonacci287","alias":"f3"},{"type":"object","id":2334,"cls":"Fibonacci287","alias":"f2"},{"type":"object","id":2333,"cls":"Fibonacci287","alias":"f1"},{"type":"initial_fact","id":6773,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2340,"cls":"Fibonacci287","alias":"f"},{"type":"initial_fact","id":6775,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2342,"cls":"Fibonacci287","alias":"f1"},{"type":"not","id":2341,"cls":"Fibonacci287","alias":"f"},{"type":"initial_fact","id":6777,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2347,"cls":"Result286","alias":"r"},{"type":"object","id":2346,"cls":"Fibonacci286","alias":"f3"},{"type":"object","id":2345,"cls":"Fibonacci286","alias":"f2"},{"type":"object","id":2344,"cls":"Fibonacci286","alias":"f1"},{"type":"initial_fact","id":6779,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2351,"cls":"Fibonacci286","alias":"f"},{"type":"initial_fact","id":6781,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2353,"cls":"Fibonacci286","alias":"f1"},{"type":"not","id":2352,"cls":"Fibonacci286","alias":"f"},{"type":"initial_fact","id":6783,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2358,"cls":"Result285","alias":"r"},{"type":"object","id":2357,"cls":"Fibonacci285","alias":"f3"},{"type":"object","id":2356,"cls":"Fibonacci285","alias":"f2"},{"type":"object","id":2355,"cls":"Fibonacci285","alias":"f1"},{"type":"initial_fact","id":6785,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2362,"cls":"Fibonacci285","alias":"f"},{"type":"initial_fact","id":6787,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2364,"cls":"Fibonacci285","alias":"f1"},{"type":"not","id":2363,"cls":"Fibonacci285","alias":"f"},{"type":"initial_fact","id":6789,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2369,"cls":"Result284","alias":"r"},{"type":"object","id":2368,"cls":"Fibonacci284","alias":"f3"},{"type":"object","id":2367,"cls":"Fibonacci284","alias":"f2"},{"type":"object","id":2366,"cls":"Fibonacci284","alias":"f1"},{"type":"initial_fact","id":6791,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2373,"cls":"Fibonacci284","alias":"f"},{"type":"initial_fact","id":6793,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2375,"cls":"Fibonacci284","alias":"f1"},{"type":"not","id":2374,"cls":"Fibonacci284","alias":"f"},{"type":"initial_fact","id":6795,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2380,"cls":"Result283","alias":"r"},{"type":"object","id":2379,"cls":"Fibonacci283","alias":"f3"},{"type":"object","id":2378,"cls":"Fibonacci283","alias":"f2"},{"type":"object","id":2377,"cls":"Fibonacci283","alias":"f1"},{"type":"initial_fact","id":6797,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2384,"cls":"Fibonacci283","alias":"f"},{"type":"initial_fact","id":6799,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2386,"cls":"Fibonacci283","alias":"f1"},{"type":"not","id":2385,"cls":"Fibonacci283","alias":"f"},{"type":"initial_fact","id":6801,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2391,"cls":"Result282","alias":"r"},{"type":"object","id":2390,"cls":"Fibonacci282","alias":"f3"},{"type":"object","id":2389,"cls":"Fibonacci282","alias":"f2"},{"type":"object","id":2388,"cls":"Fibonacci282","alias":"f1"},{"type":"initial_fact","id":6803,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2395,"cls":"Fibonacci282","alias":"f"},{"type":"initial_fact","id":6805,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2397,"cls":"Fibonacci282","alias":"f1"},{"type":"not","id":2396,"cls":"Fibonacci282","alias":"f"},{"type":"initial_fact","id":6807,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2402,"cls":"Result281","alias":"r"},{"type":"object","id":2401,"cls":"Fibonacci281","alias":"f3"},{"type":"object","id":2400,"cls":"Fibonacci281","alias":"f2"},{"type":"object","id":2399,"cls":"Fibonacci281","alias":"f1"},{"type":"initial_fact","id":6809,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2406,"cls":"Fibonacci281","alias":"f"},{"type":"initial_fact","id":6811,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2408,"cls":"Fibonacci281","alias":"f1"},{"type":"not","id":2407,"cls":"Fibonacci281","alias":"f"},{"type":"initial_fact","id":6813,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2413,"cls":"Result280","alias":"r"},{"type":"object","id":2412,"cls":"Fibonacci280","alias":"f3"},{"type":"object","id":2411,"cls":"Fibonacci280","alias":"f2"},{"type":"object","id":2410,"cls":"Fibonacci280","alias":"f1"},{"type":"initial_fact","id":6815,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2417,"cls":"Fibonacci280","alias":"f"},{"type":"initial_fact","id":6817,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2419,"cls":"Fibonacci280","alias":"f1"},{"type":"not","id":2418,"cls":"Fibonacci280","alias":"f"},{"type":"initial_fact","id":6819,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2424,"cls":"Result279","alias":"r"},{"type":"object","id":2423,"cls":"Fibonacci279","alias":"f3"},{"type":"object","id":2422,"cls":"Fibonacci279","alias":"f2"},{"type":"object","id":2421,"cls":"Fibonacci279","alias":"f1"},{"type":"initial_fact","id":6821,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2428,"cls":"Fibonacci279","alias":"f"},{"type":"initial_fact","id":6823,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2430,"cls":"Fibonacci279","alias":"f1"},{"type":"not","id":2429,"cls":"Fibonacci279","alias":"f"},{"type":"initial_fact","id":6825,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2435,"cls":"Result278","alias":"r"},{"type":"object","id":2434,"cls":"Fibonacci278","alias":"f3"},{"type":"object","id":2433,"cls":"Fibonacci278","alias":"f2"},{"type":"object","id":2432,"cls":"Fibonacci278","alias":"f1"},{"type":"initial_fact","id":6827,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2439,"cls":"Fibonacci278","alias":"f"},{"type":"initial_fact","id":6829,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2441,"cls":"Fibonacci278","alias":"f1"},{"type":"not","id":2440,"cls":"Fibonacci278","alias":"f"},{"type":"initial_fact","id":6831,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2446,"cls":"Result277","alias":"r"},{"type":"object","id":2445,"cls":"Fibonacci277","alias":"f3"},{"type":"object","id":2444,"cls":"Fibonacci277","alias":"f2"},{"type":"object","id":2443,"cls":"Fibonacci277","alias":"f1"},{"type":"initial_fact","id":6833,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2450,"cls":"Fibonacci277","alias":"f"},{"type":"initial_fact","id":6835,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2452,"cls":"Fibonacci277","alias":"f1"},{"type":"not","id":2451,"cls":"Fibonacci277","alias":"f"},{"type":"initial_fact","id":6837,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2457,"cls":"Result276","alias":"r"},{"type":"object","id":2456,"cls":"Fibonacci276","alias":"f3"},{"type":"object","id":2455,"cls":"Fibonacci276","alias":"f2"},{"type":"object","id":2454,"cls":"Fibonacci276","alias":"f1"},{"type":"initial_fact","id":6839,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2461,"cls":"Fibonacci276","alias":"f"},{"type":"initial_fact","id":6841,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2463,"cls":"Fibonacci276","alias":"f1"},{"type":"not","id":2462,"cls":"Fibonacci276","alias":"f"},{"type":"initial_fact","id":6843,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2468,"cls":"Result275","alias":"r"},{"type":"object","id":2467,"cls":"Fibonacci275","alias":"f3"},{"type":"object","id":2466,"cls":"Fibonacci275","alias":"f2"},{"type":"object","id":2465,"cls":"Fibonacci275","alias":"f1"},{"type":"initial_fact","id":6845,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2472,"cls":"Fibonacci275","alias":"f"},{"type":"initial_fact","id":6847,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2474,"cls":"Fibonacci275","alias":"f1"},{"type":"not","id":2473,"cls":"Fibonacci275","alias":"f"},{"type":"initial_fact","id":6849,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2479,"cls":"Result274","alias":"r"},{"type":"object","id":2478,"cls":"Fibonacci274","alias":"f3"},{"type":"object","id":2477,"cls":"Fibonacci274","alias":"f2"},{"type":"object","id":2476,"cls":"Fibonacci274","alias":"f1"},{"type":"initial_fact","id":6851,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2483,"cls":"Fibonacci274","alias":"f"},{"type":"initial_fact","id":6853,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2485,"cls":"Fibonacci274","alias":"f1"},{"type":"not","id":2484,"cls":"Fibonacci274","alias":"f"},{"type":"initial_fact","id":6855,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2490,"cls":"Result273","alias":"r"},{"type":"object","id":2489,"cls":"Fibonacci273","alias":"f3"},{"type":"object","id":2488,"cls":"Fibonacci273","alias":"f2"},{"type":"object","id":2487,"cls":"Fibonacci273","alias":"f1"},{"type":"initial_fact","id":6857,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2494,"cls":"Fibonacci273","alias":"f"},{"type":"initial_fact","id":6859,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2496,"cls":"Fibonacci273","alias":"f1"},{"type":"not","id":2495,"cls":"Fibonacci273","alias":"f"},{"type":"initial_fact","id":6861,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2501,"cls":"Result272","alias":"r"},{"type":"object","id":2500,"cls":"Fibonacci272","alias":"f3"},{"type":"object","id":2499,"cls":"Fibonacci272","alias":"f2"},{"type":"object","id":2498,"cls":"Fibonacci272","alias":"f1"},{"type":"initial_fact","id":6863,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2505,"cls":"Fibonacci272","alias":"f"},{"type":"initial_fact","id":6865,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2507,"cls":"Fibonacci272","alias":"f1"},{"type":"not","id":2506,"cls":"Fibonacci272","alias":"f"},{"type":"initial_fact","id":6867,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2512,"cls":"Result271","alias":"r"},{"type":"object","id":2511,"cls":"Fibonacci271","alias":"f3"},{"type":"object","id":2510,"cls":"Fibonacci271","alias":"f2"},{"type":"object","id":2509,"cls":"Fibonacci271","alias":"f1"},{"type":"initial_fact","id":6869,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2516,"cls":"Fibonacci271","alias":"f"},{"type":"initial_fact","id":6871,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2518,"cls":"Fibonacci271","alias":"f1"},{"type":"not","id":2517,"cls":"Fibonacci271","alias":"f"},{"type":"initial_fact","id":6873,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2523,"cls":"Result270","alias":"r"},{"type":"object","id":2522,"cls":"Fibonacci270","alias":"f3"},{"type":"object","id":2521,"cls":"Fibonacci270","alias":"f2"},{"type":"object","id":2520,"cls":"Fibonacci270","alias":"f1"},{"type":"initial_fact","id":6875,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2527,"cls":"Fibonacci270","alias":"f"},{"type":"initial_fact","id":6877,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2529,"cls":"Fibonacci270","alias":"f1"},{"type":"not","id":2528,"cls":"Fibonacci270","alias":"f"},{"type":"initial_fact","id":6879,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2534,"cls":"Result269","alias":"r"},{"type":"object","id":2533,"cls":"Fibonacci269","alias":"f3"},{"type":"object","id":2532,"cls":"Fibonacci269","alias":"f2"},{"type":"object","id":2531,"cls":"Fibonacci269","alias":"f1"},{"type":"initial_fact","id":6881,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2538,"cls":"Fibonacci269","alias":"f"},{"type":"initial_fact","id":6883,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2540,"cls":"Fibonacci269","alias":"f1"},{"type":"not","id":2539,"cls":"Fibonacci269","alias":"f"},{"type":"initial_fact","id":6885,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2545,"cls":"Result268","alias":"r"},{"type":"object","id":2544,"cls":"Fibonacci268","alias":"f3"},{"type":"object","id":2543,"cls":"Fibonacci268","alias":"f2"},{"type":"object","id":2542,"cls":"Fibonacci268","alias":"f1"},{"type":"initial_fact","id":6887,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2549,"cls":"Fibonacci268","alias":"f"},{"type":"initial_fact","id":6889,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2551,"cls":"Fibonacci268","alias":"f1"},{"type":"not","id":2550,"cls":"Fibonacci268","alias":"f"},{"type":"initial_fact","id":6891,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2556,"cls":"Result267","alias":"r"},{"type":"object","id":2555,"cls":"Fibonacci267","alias":"f3"},{"type":"object","id":2554,"cls":"Fibonacci267","alias":"f2"},{"type":"object","id":2553,"cls":"Fibonacci267","alias":"f1"},{"type":"initial_fact","id":6893,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2560,"cls":"Fibonacci267","alias":"f"},{"type":"initial_fact","id":6895,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2562,"cls":"Fibonacci267","alias":"f1"},{"type":"not","id":2561,"cls":"Fibonacci267","alias":"f"},{"type":"initial_fact","id":6897,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2567,"cls":"Result266","alias":"r"},{"type":"object","id":2566,"cls":"Fibonacci266","alias":"f3"},{"type":"object","id":2565,"cls":"Fibonacci266","alias":"f2"},{"type":"object","id":2564,"cls":"Fibonacci266","alias":"f1"},{"type":"initial_fact","id":6899,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2571,"cls":"Fibonacci266","alias":"f"},{"type":"initial_fact","id":6901,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2573,"cls":"Fibonacci266","alias":"f1"},{"type":"not","id":2572,"cls":"Fibonacci266","alias":"f"},{"type":"initial_fact","id":6903,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2578,"cls":"Result265","alias":"r"},{"type":"object","id":2577,"cls":"Fibonacci265","alias":"f3"},{"type":"object","id":2576,"cls":"Fibonacci265","alias":"f2"},{"type":"object","id":2575,"cls":"Fibonacci265","alias":"f1"},{"type":"initial_fact","id":6905,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2582,"cls":"Fibonacci265","alias":"f"},{"type":"initial_fact","id":6907,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2584,"cls":"Fibonacci265","alias":"f1"},{"type":"not","id":2583,"cls":"Fibonacci265","alias":"f"},{"type":"initial_fact","id":6909,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2589,"cls":"Result264","alias":"r"},{"type":"object","id":2588,"cls":"Fibonacci264","alias":"f3"},{"type":"object","id":2587,"cls":"Fibonacci264","alias":"f2"},{"type":"object","id":2586,"cls":"Fibonacci264","alias":"f1"},{"type":"initial_fact","id":6911,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2593,"cls":"Fibonacci264","alias":"f"},{"type":"initial_fact","id":6913,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2595,"cls":"Fibonacci264","alias":"f1"},{"type":"not","id":2594,"cls":"Fibonacci264","alias":"f"},{"type":"initial_fact","id":6915,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2600,"cls":"Result263","alias":"r"},{"type":"object","id":2599,"cls":"Fibonacci263","alias":"f3"},{"type":"object","id":2598,"cls":"Fibonacci263","alias":"f2"},{"type":"object","id":2597,"cls":"Fibonacci263","alias":"f1"},{"type":"initial_fact","id":6917,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2604,"cls":"Fibonacci263","alias":"f"},{"type":"initial_fact","id":6919,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2606,"cls":"Fibonacci263","alias":"f1"},{"type":"not","id":2605,"cls":"Fibonacci263","alias":"f"},{"type":"initial_fact","id":6921,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2611,"cls":"Result262","alias":"r"},{"type":"object","id":2610,"cls":"Fibonacci262","alias":"f3"},{"type":"object","id":2609,"cls":"Fibonacci262","alias":"f2"},{"type":"object","id":2608,"cls":"Fibonacci262","alias":"f1"},{"type":"initial_fact","id":6923,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2615,"cls":"Fibonacci262","alias":"f"},{"type":"initial_fact","id":6925,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2617,"cls":"Fibonacci262","alias":"f1"},{"type":"not","id":2616,"cls":"Fibonacci262","alias":"f"},{"type":"initial_fact","id":6927,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2622,"cls":"Result261","alias":"r"},{"type":"object","id":2621,"cls":"Fibonacci261","alias":"f3"},{"type":"object","id":2620,"cls":"Fibonacci261","alias":"f2"},{"type":"object","id":2619,"cls":"Fibonacci261","alias":"f1"},{"type":"initial_fact","id":6929,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2626,"cls":"Fibonacci261","alias":"f"},{"type":"initial_fact","id":6931,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2628,"cls":"Fibonacci261","alias":"f1"},{"type":"not","id":2627,"cls":"Fibonacci261","alias":"f"},{"type":"initial_fact","id":6933,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2633,"cls":"Result260","alias":"r"},{"type":"object","id":2632,"cls":"Fibonacci260","alias":"f3"},{"type":"object","id":2631,"cls":"Fibonacci260","alias":"f2"},{"type":"object","id":2630,"cls":"Fibonacci260","alias":"f1"},{"type":"initial_fact","id":6935,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2637,"cls":"Fibonacci260","alias":"f"},{"type":"initial_fact","id":6937,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2639,"cls":"Fibonacci260","alias":"f1"},{"type":"not","id":2638,"cls":"Fibonacci260","alias":"f"},{"type":"initial_fact","id":6939,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2644,"cls":"Result259","alias":"r"},{"type":"object","id":2643,"cls":"Fibonacci259","alias":"f3"},{"type":"object","id":2642,"cls":"Fibonacci259","alias":"f2"},{"type":"object","id":2641,"cls":"Fibonacci259","alias":"f1"},{"type":"initial_fact","id":6941,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2648,"cls":"Fibonacci259","alias":"f"},{"type":"initial_fact","id":6943,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2650,"cls":"Fibonacci259","alias":"f1"},{"type":"not","id":2649,"cls":"Fibonacci259","alias":"f"},{"type":"initial_fact","id":6945,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2655,"cls":"Result258","alias":"r"},{"type":"object","id":2654,"cls":"Fibonacci258","alias":"f3"},{"type":"object","id":2653,"cls":"Fibonacci258","alias":"f2"},{"type":"object","id":2652,"cls":"Fibonacci258","alias":"f1"},{"type":"initial_fact","id":6947,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2659,"cls":"Fibonacci258","alias":"f"},{"type":"initial_fact","id":6949,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2661,"cls":"Fibonacci258","alias":"f1"},{"type":"not","id":2660,"cls":"Fibonacci258","alias":"f"},{"type":"initial_fact","id":6951,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2666,"cls":"Result257","alias":"r"},{"type":"object","id":2665,"cls":"Fibonacci257","alias":"f3"},{"type":"object","id":2664,"cls":"Fibonacci257","alias":"f2"},{"type":"object","id":2663,"cls":"Fibonacci257","alias":"f1"},{"type":"initial_fact","id":6953,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2670,"cls":"Fibonacci257","alias":"f"},{"type":"initial_fact","id":6955,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2672,"cls":"Fibonacci257","alias":"f1"},{"type":"not","id":2671,"cls":"Fibonacci257","alias":"f"},{"type":"initial_fact","id":6957,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2677,"cls":"Result256","alias":"r"},{"type":"object","id":2676,"cls":"Fibonacci256","alias":"f3"},{"type":"object","id":2675,"cls":"Fibonacci256","alias":"f2"},{"type":"object","id":2674,"cls":"Fibonacci256","alias":"f1"},{"type":"initial_fact","id":6959,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2681,"cls":"Fibonacci256","alias":"f"},{"type":"initial_fact","id":6961,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2683,"cls":"Fibonacci256","alias":"f1"},{"type":"not","id":2682,"cls":"Fibonacci256","alias":"f"},{"type":"initial_fact","id":6963,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2688,"cls":"Result255","alias":"r"},{"type":"object","id":2687,"cls":"Fibonacci255","alias":"f3"},{"type":"object","id":2686,"cls":"Fibonacci255","alias":"f2"},{"type":"object","id":2685,"cls":"Fibonacci255","alias":"f1"},{"type":"initial_fact","id":6965,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2692,"cls":"Fibonacci255","alias":"f"},{"type":"initial_fact","id":6967,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2694,"cls":"Fibonacci255","alias":"f1"},{"type":"not","id":2693,"cls":"Fibonacci255","alias":"f"},{"type":"initial_fact","id":6969,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2699,"cls":"Result254","alias":"r"},{"type":"object","id":2698,"cls":"Fibonacci254","alias":"f3"},{"type":"object","id":2697,"cls":"Fibonacci254","alias":"f2"},{"type":"object","id":2696,"cls":"Fibonacci254","alias":"f1"},{"type":"initial_fact","id":6971,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2703,"cls":"Fibonacci254","alias":"f"},{"type":"initial_fact","id":6973,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2705,"cls":"Fibonacci254","alias":"f1"},{"type":"not","id":2704,"cls":"Fibonacci254","alias":"f"},{"type":"initial_fact","id":6975,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2710,"cls":"Result253","alias":"r"},{"type":"object","id":2709,"cls":"Fibonacci253","alias":"f3"},{"type":"object","id":2708,"cls":"Fibonacci253","alias":"f2"},{"type":"object","id":2707,"cls":"Fibonacci253","alias":"f1"},{"type":"initial_fact","id":6977,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2714,"cls":"Fibonacci253","alias":"f"},{"type":"initial_fact","id":6979,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2716,"cls":"Fibonacci253","alias":"f1"},{"type":"not","id":2715,"cls":"Fibonacci253","alias":"f"},{"type":"initial_fact","id":6981,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2721,"cls":"Result252","alias":"r"},{"type":"object","id":2720,"cls":"Fibonacci252","alias":"f3"},{"type":"object","id":2719,"cls":"Fibonacci252","alias":"f2"},{"type":"object","id":2718,"cls":"Fibonacci252","alias":"f1"},{"type":"initial_fact","id":6983,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2725,"cls":"Fibonacci252","alias":"f"},{"type":"initial_fact","id":6985,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2727,"cls":"Fibonacci252","alias":"f1"},{"type":"not","id":2726,"cls":"Fibonacci252","alias":"f"},{"type":"initial_fact","id":6987,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2732,"cls":"Result251","alias":"r"},{"type":"object","id":2731,"cls":"Fibonacci251","alias":"f3"},{"type":"object","id":2730,"cls":"Fibonacci251","alias":"f2"},{"type":"object","id":2729,"cls":"Fibonacci251","alias":"f1"},{"type":"initial_fact","id":6989,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2736,"cls":"Fibonacci251","alias":"f"},{"type":"initial_fact","id":6991,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2738,"cls":"Fibonacci251","alias":"f1"},{"type":"not","id":2737,"cls":"Fibonacci251","alias":"f"},{"type":"initial_fact","id":6993,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2743,"cls":"Result250","alias":"r"},{"type":"object","id":2742,"cls":"Fibonacci250","alias":"f3"},{"type":"object","id":2741,"cls":"Fibonacci250","alias":"f2"},{"type":"object","id":2740,"cls":"Fibonacci250","alias":"f1"},{"type":"initial_fact","id":6995,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2747,"cls":"Fibonacci250","alias":"f"},{"type":"initial_fact","id":6997,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2749,"cls":"Fibonacci250","alias":"f1"},{"type":"not","id":2748,"cls":"Fibonacci250","alias":"f"},{"type":"initial_fact","id":6999,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2754,"cls":"Result249","alias":"r"},{"type":"object","id":2753,"cls":"Fibonacci249","alias":"f3"},{"type":"object","id":2752,"cls":"Fibonacci249","alias":"f2"},{"type":"object","id":2751,"cls":"Fibonacci249","alias":"f1"},{"type":"initial_fact","id":7001,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2758,"cls":"Fibonacci249","alias":"f"},{"type":"initial_fact","id":7003,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2760,"cls":"Fibonacci249","alias":"f1"},{"type":"not","id":2759,"cls":"Fibonacci249","alias":"f"},{"type":"initial_fact","id":7005,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2765,"cls":"Result248","alias":"r"},{"type":"object","id":2764,"cls":"Fibonacci248","alias":"f3"},{"type":"object","id":2763,"cls":"Fibonacci248","alias":"f2"},{"type":"object","id":2762,"cls":"Fibonacci248","alias":"f1"},{"type":"initial_fact","id":7007,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2769,"cls":"Fibonacci248","alias":"f"},{"type":"initial_fact","id":7009,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2771,"cls":"Fibonacci248","alias":"f1"},{"type":"not","id":2770,"cls":"Fibonacci248","alias":"f"},{"type":"initial_fact","id":7011,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2776,"cls":"Result247","alias":"r"},{"type":"object","id":2775,"cls":"Fibonacci247","alias":"f3"},{"type":"object","id":2774,"cls":"Fibonacci247","alias":"f2"},{"type":"object","id":2773,"cls":"Fibonacci247","alias":"f1"},{"type":"initial_fact","id":7013,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2780,"cls":"Fibonacci247","alias":"f"},{"type":"initial_fact","id":7015,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2782,"cls":"Fibonacci247","alias":"f1"},{"type":"not","id":2781,"cls":"Fibonacci247","alias":"f"},{"type":"initial_fact","id":7017,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2787,"cls":"Result246","alias":"r"},{"type":"object","id":2786,"cls":"Fibonacci246","alias":"f3"},{"type":"object","id":2785,"cls":"Fibonacci246","alias":"f2"},{"type":"object","id":2784,"cls":"Fibonacci246","alias":"f1"},{"type":"initial_fact","id":7019,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2791,"cls":"Fibonacci246","alias":"f"},{"type":"initial_fact","id":7021,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2793,"cls":"Fibonacci246","alias":"f1"},{"type":"not","id":2792,"cls":"Fibonacci246","alias":"f"},{"type":"initial_fact","id":7023,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2798,"cls":"Result245","alias":"r"},{"type":"object","id":2797,"cls":"Fibonacci245","alias":"f3"},{"type":"object","id":2796,"cls":"Fibonacci245","alias":"f2"},{"type":"object","id":2795,"cls":"Fibonacci245","alias":"f1"},{"type":"initial_fact","id":7025,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2802,"cls":"Fibonacci245","alias":"f"},{"type":"initial_fact","id":7027,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2804,"cls":"Fibonacci245","alias":"f1"},{"type":"not","id":2803,"cls":"Fibonacci245","alias":"f"},{"type":"initial_fact","id":7029,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2809,"cls":"Result244","alias":"r"},{"type":"object","id":2808,"cls":"Fibonacci244","alias":"f3"},{"type":"object","id":2807,"cls":"Fibonacci244","alias":"f2"},{"type":"object","id":2806,"cls":"Fibonacci244","alias":"f1"},{"type":"initial_fact","id":7031,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2813,"cls":"Fibonacci244","alias":"f"},{"type":"initial_fact","id":7033,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2815,"cls":"Fibonacci244","alias":"f1"},{"type":"not","id":2814,"cls":"Fibonacci244","alias":"f"},{"type":"initial_fact","id":7035,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2820,"cls":"Result243","alias":"r"},{"type":"object","id":2819,"cls":"Fibonacci243","alias":"f3"},{"type":"object","id":2818,"cls":"Fibonacci243","alias":"f2"},{"type":"object","id":2817,"cls":"Fibonacci243","alias":"f1"},{"type":"initial_fact","id":7037,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2824,"cls":"Fibonacci243","alias":"f"},{"type":"initial_fact","id":7039,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2826,"cls":"Fibonacci243","alias":"f1"},{"type":"not","id":2825,"cls":"Fibonacci243","alias":"f"},{"type":"initial_fact","id":7041,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2831,"cls":"Result242","alias":"r"},{"type":"object","id":2830,"cls":"Fibonacci242","alias":"f3"},{"type":"object","id":2829,"cls":"Fibonacci242","alias":"f2"},{"type":"object","id":2828,"cls":"Fibonacci242","alias":"f1"},{"type":"initial_fact","id":7043,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2835,"cls":"Fibonacci242","alias":"f"},{"type":"initial_fact","id":7045,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2837,"cls":"Fibonacci242","alias":"f1"},{"type":"not","id":2836,"cls":"Fibonacci242","alias":"f"},{"type":"initial_fact","id":7047,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2842,"cls":"Result241","alias":"r"},{"type":"object","id":2841,"cls":"Fibonacci241","alias":"f3"},{"type":"object","id":2840,"cls":"Fibonacci241","alias":"f2"},{"type":"object","id":2839,"cls":"Fibonacci241","alias":"f1"},{"type":"initial_fact","id":7049,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2846,"cls":"Fibonacci241","alias":"f"},{"type":"initial_fact","id":7051,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2848,"cls":"Fibonacci241","alias":"f1"},{"type":"not","id":2847,"cls":"Fibonacci241","alias":"f"},{"type":"initial_fact","id":7053,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2853,"cls":"Result240","alias":"r"},{"type":"object","id":2852,"cls":"Fibonacci240","alias":"f3"},{"type":"object","id":2851,"cls":"Fibonacci240","alias":"f2"},{"type":"object","id":2850,"cls":"Fibonacci240","alias":"f1"},{"type":"initial_fact","id":7055,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2857,"cls":"Fibonacci240","alias":"f"},{"type":"initial_fact","id":7057,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2859,"cls":"Fibonacci240","alias":"f1"},{"type":"not","id":2858,"cls":"Fibonacci240","alias":"f"},{"type":"initial_fact","id":7059,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2864,"cls":"Result239","alias":"r"},{"type":"object","id":2863,"cls":"Fibonacci239","alias":"f3"},{"type":"object","id":2862,"cls":"Fibonacci239","alias":"f2"},{"type":"object","id":2861,"cls":"Fibonacci239","alias":"f1"},{"type":"initial_fact","id":7061,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2868,"cls":"Fibonacci239","alias":"f"},{"type":"initial_fact","id":7063,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2870,"cls":"Fibonacci239","alias":"f1"},{"type":"not","id":2869,"cls":"Fibonacci239","alias":"f"},{"type":"initial_fact","id":7065,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2875,"cls":"Result238","alias":"r"},{"type":"object","id":2874,"cls":"Fibonacci238","alias":"f3"},{"type":"object","id":2873,"cls":"Fibonacci238","alias":"f2"},{"type":"object","id":2872,"cls":"Fibonacci238","alias":"f1"},{"type":"initial_fact","id":7067,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2879,"cls":"Fibonacci238","alias":"f"},{"type":"initial_fact","id":7069,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2881,"cls":"Fibonacci238","alias":"f1"},{"type":"not","id":2880,"cls":"Fibonacci238","alias":"f"},{"type":"initial_fact","id":7071,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2886,"cls":"Result237","alias":"r"},{"type":"object","id":2885,"cls":"Fibonacci237","alias":"f3"},{"type":"object","id":2884,"cls":"Fibonacci237","alias":"f2"},{"type":"object","id":2883,"cls":"Fibonacci237","alias":"f1"},{"type":"initial_fact","id":7073,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2890,"cls":"Fibonacci237","alias":"f"},{"type":"initial_fact","id":7075,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2892,"cls":"Fibonacci237","alias":"f1"},{"type":"not","id":2891,"cls":"Fibonacci237","alias":"f"},{"type":"initial_fact","id":7077,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2897,"cls":"Result236","alias":"r"},{"type":"object","id":2896,"cls":"Fibonacci236","alias":"f3"},{"type":"object","id":2895,"cls":"Fibonacci236","alias":"f2"},{"type":"object","id":2894,"cls":"Fibonacci236","alias":"f1"},{"type":"initial_fact","id":7079,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2901,"cls":"Fibonacci236","alias":"f"},{"type":"initial_fact","id":7081,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2903,"cls":"Fibonacci236","alias":"f1"},{"type":"not","id":2902,"cls":"Fibonacci236","alias":"f"},{"type":"initial_fact","id":7083,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2908,"cls":"Result235","alias":"r"},{"type":"object","id":2907,"cls":"Fibonacci235","alias":"f3"},{"type":"object","id":2906,"cls":"Fibonacci235","alias":"f2"},{"type":"object","id":2905,"cls":"Fibonacci235","alias":"f1"},{"type":"initial_fact","id":7085,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2912,"cls":"Fibonacci235","alias":"f"},{"type":"initial_fact","id":7087,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2914,"cls":"Fibonacci235","alias":"f1"},{"type":"not","id":2913,"cls":"Fibonacci235","alias":"f"},{"type":"initial_fact","id":7089,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2919,"cls":"Result234","alias":"r"},{"type":"object","id":2918,"cls":"Fibonacci234","alias":"f3"},{"type":"object","id":2917,"cls":"Fibonacci234","alias":"f2"},{"type":"object","id":2916,"cls":"Fibonacci234","alias":"f1"},{"type":"initial_fact","id":7091,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2923,"cls":"Fibonacci234","alias":"f"},{"type":"initial_fact","id":7093,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2925,"cls":"Fibonacci234","alias":"f1"},{"type":"not","id":2924,"cls":"Fibonacci234","alias":"f"},{"type":"initial_fact","id":7095,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2930,"cls":"Result233","alias":"r"},{"type":"object","id":2929,"cls":"Fibonacci233","alias":"f3"},{"type":"object","id":2928,"cls":"Fibonacci233","alias":"f2"},{"type":"object","id":2927,"cls":"Fibonacci233","alias":"f1"},{"type":"initial_fact","id":7097,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2934,"cls":"Fibonacci233","alias":"f"},{"type":"initial_fact","id":7099,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2936,"cls":"Fibonacci233","alias":"f1"},{"type":"not","id":2935,"cls":"Fibonacci233","alias":"f"},{"type":"initial_fact","id":7101,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2941,"cls":"Result232","alias":"r"},{"type":"object","id":2940,"cls":"Fibonacci232","alias":"f3"},{"type":"object","id":2939,"cls":"Fibonacci232","alias":"f2"},{"type":"object","id":2938,"cls":"Fibonacci232","alias":"f1"},{"type":"initial_fact","id":7103,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2945,"cls":"Fibonacci232","alias":"f"},{"type":"initial_fact","id":7105,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2947,"cls":"Fibonacci232","alias":"f1"},{"type":"not","id":2946,"cls":"Fibonacci232","alias":"f"},{"type":"initial_fact","id":7107,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2952,"cls":"Result231","alias":"r"},{"type":"object","id":2951,"cls":"Fibonacci231","alias":"f3"},{"type":"object","id":2950,"cls":"Fibonacci231","alias":"f2"},{"type":"object","id":2949,"cls":"Fibonacci231","alias":"f1"},{"type":"initial_fact","id":7109,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2956,"cls":"Fibonacci231","alias":"f"},{"type":"initial_fact","id":7111,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2958,"cls":"Fibonacci231","alias":"f1"},{"type":"not","id":2957,"cls":"Fibonacci231","alias":"f"},{"type":"initial_fact","id":7113,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2963,"cls":"Result230","alias":"r"},{"type":"object","id":2962,"cls":"Fibonacci230","alias":"f3"},{"type":"object","id":2961,"cls":"Fibonacci230","alias":"f2"},{"type":"object","id":2960,"cls":"Fibonacci230","alias":"f1"},{"type":"initial_fact","id":7115,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2967,"cls":"Fibonacci230","alias":"f"},{"type":"initial_fact","id":7117,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2969,"cls":"Fibonacci230","alias":"f1"},{"type":"not","id":2968,"cls":"Fibonacci230","alias":"f"},{"type":"initial_fact","id":7119,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2974,"cls":"Result229","alias":"r"},{"type":"object","id":2973,"cls":"Fibonacci229","alias":"f3"},{"type":"object","id":2972,"cls":"Fibonacci229","alias":"f2"},{"type":"object","id":2971,"cls":"Fibonacci229","alias":"f1"},{"type":"initial_fact","id":7121,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2978,"cls":"Fibonacci229","alias":"f"},{"type":"initial_fact","id":7123,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2980,"cls":"Fibonacci229","alias":"f1"},{"type":"not","id":2979,"cls":"Fibonacci229","alias":"f"},{"type":"initial_fact","id":7125,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2985,"cls":"Result228","alias":"r"},{"type":"object","id":2984,"cls":"Fibonacci228","alias":"f3"},{"type":"object","id":2983,"cls":"Fibonacci228","alias":"f2"},{"type":"object","id":2982,"cls":"Fibonacci228","alias":"f1"},{"type":"initial_fact","id":7127,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2989,"cls":"Fibonacci228","alias":"f"},{"type":"initial_fact","id":7129,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2991,"cls":"Fibonacci228","alias":"f1"},{"type":"not","id":2990,"cls":"Fibonacci228","alias":"f"},{"type":"initial_fact","id":7131,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":2996,"cls":"Result227","alias":"r"},{"type":"object","id":2995,"cls":"Fibonacci227","alias":"f3"},{"type":"object","id":2994,"cls":"Fibonacci227","alias":"f2"},{"type":"object","id":2993,"cls":"Fibonacci227","alias":"f1"},{"type":"initial_fact","id":7133,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3000,"cls":"Fibonacci227","alias":"f"},{"type":"initial_fact","id":7135,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3002,"cls":"Fibonacci227","alias":"f1"},{"type":"not","id":3001,"cls":"Fibonacci227","alias":"f"},{"type":"initial_fact","id":7137,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3007,"cls":"Result226","alias":"r"},{"type":"object","id":3006,"cls":"Fibonacci226","alias":"f3"},{"type":"object","id":3005,"cls":"Fibonacci226","alias":"f2"},{"type":"object","id":3004,"cls":"Fibonacci226","alias":"f1"},{"type":"initial_fact","id":7139,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3011,"cls":"Fibonacci226","alias":"f"},{"type":"initial_fact","id":7141,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3013,"cls":"Fibonacci226","alias":"f1"},{"type":"not","id":3012,"cls":"Fibonacci226","alias":"f"},{"type":"initial_fact","id":7143,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3018,"cls":"Result225","alias":"r"},{"type":"object","id":3017,"cls":"Fibonacci225","alias":"f3"},{"type":"object","id":3016,"cls":"Fibonacci225","alias":"f2"},{"type":"object","id":3015,"cls":"Fibonacci225","alias":"f1"},{"type":"initial_fact","id":7145,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3022,"cls":"Fibonacci225","alias":"f"},{"type":"initial_fact","id":7147,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3024,"cls":"Fibonacci225","alias":"f1"},{"type":"not","id":3023,"cls":"Fibonacci225","alias":"f"},{"type":"initial_fact","id":7149,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3029,"cls":"Result224","alias":"r"},{"type":"object","id":3028,"cls":"Fibonacci224","alias":"f3"},{"type":"object","id":3027,"cls":"Fibonacci224","alias":"f2"},{"type":"object","id":3026,"cls":"Fibonacci224","alias":"f1"},{"type":"initial_fact","id":7151,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3033,"cls":"Fibonacci224","alias":"f"},{"type":"initial_fact","id":7153,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3035,"cls":"Fibonacci224","alias":"f1"},{"type":"not","id":3034,"cls":"Fibonacci224","alias":"f"},{"type":"initial_fact","id":7155,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3040,"cls":"Result223","alias":"r"},{"type":"object","id":3039,"cls":"Fibonacci223","alias":"f3"},{"type":"object","id":3038,"cls":"Fibonacci223","alias":"f2"},{"type":"object","id":3037,"cls":"Fibonacci223","alias":"f1"},{"type":"initial_fact","id":7157,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3044,"cls":"Fibonacci223","alias":"f"},{"type":"initial_fact","id":7159,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3046,"cls":"Fibonacci223","alias":"f1"},{"type":"not","id":3045,"cls":"Fibonacci223","alias":"f"},{"type":"initial_fact","id":7161,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3051,"cls":"Result222","alias":"r"},{"type":"object","id":3050,"cls":"Fibonacci222","alias":"f3"},{"type":"object","id":3049,"cls":"Fibonacci222","alias":"f2"},{"type":"object","id":3048,"cls":"Fibonacci222","alias":"f1"},{"type":"initial_fact","id":7163,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3055,"cls":"Fibonacci222","alias":"f"},{"type":"initial_fact","id":7165,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3057,"cls":"Fibonacci222","alias":"f1"},{"type":"not","id":3056,"cls":"Fibonacci222","alias":"f"},{"type":"initial_fact","id":7167,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3062,"cls":"Result221","alias":"r"},{"type":"object","id":3061,"cls":"Fibonacci221","alias":"f3"},{"type":"object","id":3060,"cls":"Fibonacci221","alias":"f2"},{"type":"object","id":3059,"cls":"Fibonacci221","alias":"f1"},{"type":"initial_fact","id":7169,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3066,"cls":"Fibonacci221","alias":"f"},{"type":"initial_fact","id":7171,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3068,"cls":"Fibonacci221","alias":"f1"},{"type":"not","id":3067,"cls":"Fibonacci221","alias":"f"},{"type":"initial_fact","id":7173,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3073,"cls":"Result220","alias":"r"},{"type":"object","id":3072,"cls":"Fibonacci220","alias":"f3"},{"type":"object","id":3071,"cls":"Fibonacci220","alias":"f2"},{"type":"object","id":3070,"cls":"Fibonacci220","alias":"f1"},{"type":"initial_fact","id":7175,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3077,"cls":"Fibonacci220","alias":"f"},{"type":"initial_fact","id":7177,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3079,"cls":"Fibonacci220","alias":"f1"},{"type":"not","id":3078,"cls":"Fibonacci220","alias":"f"},{"type":"initial_fact","id":7179,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3084,"cls":"Result219","alias":"r"},{"type":"object","id":3083,"cls":"Fibonacci219","alias":"f3"},{"type":"object","id":3082,"cls":"Fibonacci219","alias":"f2"},{"type":"object","id":3081,"cls":"Fibonacci219","alias":"f1"},{"type":"initial_fact","id":7181,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3088,"cls":"Fibonacci219","alias":"f"},{"type":"initial_fact","id":7183,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3090,"cls":"Fibonacci219","alias":"f1"},{"type":"not","id":3089,"cls":"Fibonacci219","alias":"f"},{"type":"initial_fact","id":7185,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3095,"cls":"Result218","alias":"r"},{"type":"object","id":3094,"cls":"Fibonacci218","alias":"f3"},{"type":"object","id":3093,"cls":"Fibonacci218","alias":"f2"},{"type":"object","id":3092,"cls":"Fibonacci218","alias":"f1"},{"type":"initial_fact","id":7187,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3099,"cls":"Fibonacci218","alias":"f"},{"type":"initial_fact","id":7189,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3101,"cls":"Fibonacci218","alias":"f1"},{"type":"not","id":3100,"cls":"Fibonacci218","alias":"f"},{"type":"initial_fact","id":7191,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3106,"cls":"Result217","alias":"r"},{"type":"object","id":3105,"cls":"Fibonacci217","alias":"f3"},{"type":"object","id":3104,"cls":"Fibonacci217","alias":"f2"},{"type":"object","id":3103,"cls":"Fibonacci217","alias":"f1"},{"type":"initial_fact","id":7193,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3110,"cls":"Fibonacci217","alias":"f"},{"type":"initial_fact","id":7195,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3112,"cls":"Fibonacci217","alias":"f1"},{"type":"not","id":3111,"cls":"Fibonacci217","alias":"f"},{"type":"initial_fact","id":7197,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3117,"cls":"Result216","alias":"r"},{"type":"object","id":3116,"cls":"Fibonacci216","alias":"f3"},{"type":"object","id":3115,"cls":"Fibonacci216","alias":"f2"},{"type":"object","id":3114,"cls":"Fibonacci216","alias":"f1"},{"type":"initial_fact","id":7199,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3121,"cls":"Fibonacci216","alias":"f"},{"type":"initial_fact","id":7201,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3123,"cls":"Fibonacci216","alias":"f1"},{"type":"not","id":3122,"cls":"Fibonacci216","alias":"f"},{"type":"initial_fact","id":7203,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3128,"cls":"Result215","alias":"r"},{"type":"object","id":3127,"cls":"Fibonacci215","alias":"f3"},{"type":"object","id":3126,"cls":"Fibonacci215","alias":"f2"},{"type":"object","id":3125,"cls":"Fibonacci215","alias":"f1"},{"type":"initial_fact","id":7205,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3132,"cls":"Fibonacci215","alias":"f"},{"type":"initial_fact","id":7207,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3134,"cls":"Fibonacci215","alias":"f1"},{"type":"not","id":3133,"cls":"Fibonacci215","alias":"f"},{"type":"initial_fact","id":7209,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3139,"cls":"Result214","alias":"r"},{"type":"object","id":3138,"cls":"Fibonacci214","alias":"f3"},{"type":"object","id":3137,"cls":"Fibonacci214","alias":"f2"},{"type":"object","id":3136,"cls":"Fibonacci214","alias":"f1"},{"type":"initial_fact","id":7211,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3143,"cls":"Fibonacci214","alias":"f"},{"type":"initial_fact","id":7213,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3145,"cls":"Fibonacci214","alias":"f1"},{"type":"not","id":3144,"cls":"Fibonacci214","alias":"f"},{"type":"initial_fact","id":7215,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3150,"cls":"Result213","alias":"r"},{"type":"object","id":3149,"cls":"Fibonacci213","alias":"f3"},{"type":"object","id":3148,"cls":"Fibonacci213","alias":"f2"},{"type":"object","id":3147,"cls":"Fibonacci213","alias":"f1"},{"type":"initial_fact","id":7217,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3154,"cls":"Fibonacci213","alias":"f"},{"type":"initial_fact","id":7219,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3156,"cls":"Fibonacci213","alias":"f1"},{"type":"not","id":3155,"cls":"Fibonacci213","alias":"f"},{"type":"initial_fact","id":7221,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3161,"cls":"Result212","alias":"r"},{"type":"object","id":3160,"cls":"Fibonacci212","alias":"f3"},{"type":"object","id":3159,"cls":"Fibonacci212","alias":"f2"},{"type":"object","id":3158,"cls":"Fibonacci212","alias":"f1"},{"type":"initial_fact","id":7223,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3165,"cls":"Fibonacci212","alias":"f"},{"type":"initial_fact","id":7225,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3167,"cls":"Fibonacci212","alias":"f1"},{"type":"not","id":3166,"cls":"Fibonacci212","alias":"f"},{"type":"initial_fact","id":7227,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3172,"cls":"Result211","alias":"r"},{"type":"object","id":3171,"cls":"Fibonacci211","alias":"f3"},{"type":"object","id":3170,"cls":"Fibonacci211","alias":"f2"},{"type":"object","id":3169,"cls":"Fibonacci211","alias":"f1"},{"type":"initial_fact","id":7229,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3176,"cls":"Fibonacci211","alias":"f"},{"type":"initial_fact","id":7231,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3178,"cls":"Fibonacci211","alias":"f1"},{"type":"not","id":3177,"cls":"Fibonacci211","alias":"f"},{"type":"initial_fact","id":7233,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3183,"cls":"Result210","alias":"r"},{"type":"object","id":3182,"cls":"Fibonacci210","alias":"f3"},{"type":"object","id":3181,"cls":"Fibonacci210","alias":"f2"},{"type":"object","id":3180,"cls":"Fibonacci210","alias":"f1"},{"type":"initial_fact","id":7235,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3187,"cls":"Fibonacci210","alias":"f"},{"type":"initial_fact","id":7237,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3189,"cls":"Fibonacci210","alias":"f1"},{"type":"not","id":3188,"cls":"Fibonacci210","alias":"f"},{"type":"initial_fact","id":7239,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3194,"cls":"Result209","alias":"r"},{"type":"object","id":3193,"cls":"Fibonacci209","alias":"f3"},{"type":"object","id":3192,"cls":"Fibonacci209","alias":"f2"},{"type":"object","id":3191,"cls":"Fibonacci209","alias":"f1"},{"type":"initial_fact","id":7241,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3198,"cls":"Fibonacci209","alias":"f"},{"type":"initial_fact","id":7243,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3200,"cls":"Fibonacci209","alias":"f1"},{"type":"not","id":3199,"cls":"Fibonacci209","alias":"f"},{"type":"initial_fact","id":7245,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3205,"cls":"Result208","alias":"r"},{"type":"object","id":3204,"cls":"Fibonacci208","alias":"f3"},{"type":"object","id":3203,"cls":"Fibonacci208","alias":"f2"},{"type":"object","id":3202,"cls":"Fibonacci208","alias":"f1"},{"type":"initial_fact","id":7247,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3209,"cls":"Fibonacci208","alias":"f"},{"type":"initial_fact","id":7249,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3211,"cls":"Fibonacci208","alias":"f1"},{"type":"not","id":3210,"cls":"Fibonacci208","alias":"f"},{"type":"initial_fact","id":7251,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3216,"cls":"Result207","alias":"r"},{"type":"object","id":3215,"cls":"Fibonacci207","alias":"f3"},{"type":"object","id":3214,"cls":"Fibonacci207","alias":"f2"},{"type":"object","id":3213,"cls":"Fibonacci207","alias":"f1"},{"type":"initial_fact","id":7253,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3220,"cls":"Fibonacci207","alias":"f"},{"type":"initial_fact","id":7255,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3222,"cls":"Fibonacci207","alias":"f1"},{"type":"not","id":3221,"cls":"Fibonacci207","alias":"f"},{"type":"initial_fact","id":7257,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3227,"cls":"Result206","alias":"r"},{"type":"object","id":3226,"cls":"Fibonacci206","alias":"f3"},{"type":"object","id":3225,"cls":"Fibonacci206","alias":"f2"},{"type":"object","id":3224,"cls":"Fibonacci206","alias":"f1"},{"type":"initial_fact","id":7259,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3231,"cls":"Fibonacci206","alias":"f"},{"type":"initial_fact","id":7261,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3233,"cls":"Fibonacci206","alias":"f1"},{"type":"not","id":3232,"cls":"Fibonacci206","alias":"f"},{"type":"initial_fact","id":7263,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3238,"cls":"Result205","alias":"r"},{"type":"object","id":3237,"cls":"Fibonacci205","alias":"f3"},{"type":"object","id":3236,"cls":"Fibonacci205","alias":"f2"},{"type":"object","id":3235,"cls":"Fibonacci205","alias":"f1"},{"type":"initial_fact","id":7265,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3242,"cls":"Fibonacci205","alias":"f"},{"type":"initial_fact","id":7267,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3244,"cls":"Fibonacci205","alias":"f1"},{"type":"not","id":3243,"cls":"Fibonacci205","alias":"f"},{"type":"initial_fact","id":7269,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3249,"cls":"Result204","alias":"r"},{"type":"object","id":3248,"cls":"Fibonacci204","alias":"f3"},{"type":"object","id":3247,"cls":"Fibonacci204","alias":"f2"},{"type":"object","id":3246,"cls":"Fibonacci204","alias":"f1"},{"type":"initial_fact","id":7271,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3253,"cls":"Fibonacci204","alias":"f"},{"type":"initial_fact","id":7273,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3255,"cls":"Fibonacci204","alias":"f1"},{"type":"not","id":3254,"cls":"Fibonacci204","alias":"f"},{"type":"initial_fact","id":7275,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3260,"cls":"Result203","alias":"r"},{"type":"object","id":3259,"cls":"Fibonacci203","alias":"f3"},{"type":"object","id":3258,"cls":"Fibonacci203","alias":"f2"},{"type":"object","id":3257,"cls":"Fibonacci203","alias":"f1"},{"type":"initial_fact","id":7277,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3264,"cls":"Fibonacci203","alias":"f"},{"type":"initial_fact","id":7279,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3266,"cls":"Fibonacci203","alias":"f1"},{"type":"not","id":3265,"cls":"Fibonacci203","alias":"f"},{"type":"initial_fact","id":7281,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3271,"cls":"Result202","alias":"r"},{"type":"object","id":3270,"cls":"Fibonacci202","alias":"f3"},{"type":"object","id":3269,"cls":"Fibonacci202","alias":"f2"},{"type":"object","id":3268,"cls":"Fibonacci202","alias":"f1"},{"type":"initial_fact","id":7283,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3275,"cls":"Fibonacci202","alias":"f"},{"type":"initial_fact","id":7285,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3277,"cls":"Fibonacci202","alias":"f1"},{"type":"not","id":3276,"cls":"Fibonacci202","alias":"f"},{"type":"initial_fact","id":7287,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3282,"cls":"Result201","alias":"r"},{"type":"object","id":3281,"cls":"Fibonacci201","alias":"f3"},{"type":"object","id":3280,"cls":"Fibonacci201","alias":"f2"},{"type":"object","id":3279,"cls":"Fibonacci201","alias":"f1"},{"type":"initial_fact","id":7289,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3286,"cls":"Fibonacci201","alias":"f"},{"type":"initial_fact","id":7291,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3288,"cls":"Fibonacci201","alias":"f1"},{"type":"not","id":3287,"cls":"Fibonacci201","alias":"f"},{"type":"initial_fact","id":7293,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3293,"cls":"Result200","alias":"r"},{"type":"object","id":3292,"cls":"Fibonacci200","alias":"f3"},{"type":"object","id":3291,"cls":"Fibonacci200","alias":"f2"},{"type":"object","id":3290,"cls":"Fibonacci200","alias":"f1"},{"type":"initial_fact","id":7295,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3297,"cls":"Fibonacci200","alias":"f"},{"type":"initial_fact","id":7297,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3299,"cls":"Fibonacci200","alias":"f1"},{"type":"not","id":3298,"cls":"Fibonacci200","alias":"f"},{"type":"initial_fact","id":7299,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3304,"cls":"Result199","alias":"r"},{"type":"object","id":3303,"cls":"Fibonacci199","alias":"f3"},{"type":"object","id":3302,"cls":"Fibonacci199","alias":"f2"},{"type":"object","id":3301,"cls":"Fibonacci199","alias":"f1"},{"type":"initial_fact","id":7301,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3308,"cls":"Fibonacci199","alias":"f"},{"type":"initial_fact","id":7303,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3310,"cls":"Fibonacci199","alias":"f1"},{"type":"not","id":3309,"cls":"Fibonacci199","alias":"f"},{"type":"initial_fact","id":7305,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3315,"cls":"Result198","alias":"r"},{"type":"object","id":3314,"cls":"Fibonacci198","alias":"f3"},{"type":"object","id":3313,"cls":"Fibonacci198","alias":"f2"},{"type":"object","id":3312,"cls":"Fibonacci198","alias":"f1"},{"type":"initial_fact","id":7307,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3319,"cls":"Fibonacci198","alias":"f"},{"type":"initial_fact","id":7309,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3321,"cls":"Fibonacci198","alias":"f1"},{"type":"not","id":3320,"cls":"Fibonacci198","alias":"f"},{"type":"initial_fact","id":7311,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3326,"cls":"Result197","alias":"r"},{"type":"object","id":3325,"cls":"Fibonacci197","alias":"f3"},{"type":"object","id":3324,"cls":"Fibonacci197","alias":"f2"},{"type":"object","id":3323,"cls":"Fibonacci197","alias":"f1"},{"type":"initial_fact","id":7313,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3330,"cls":"Fibonacci197","alias":"f"},{"type":"initial_fact","id":7315,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3332,"cls":"Fibonacci197","alias":"f1"},{"type":"not","id":3331,"cls":"Fibonacci197","alias":"f"},{"type":"initial_fact","id":7317,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3337,"cls":"Result196","alias":"r"},{"type":"object","id":3336,"cls":"Fibonacci196","alias":"f3"},{"type":"object","id":3335,"cls":"Fibonacci196","alias":"f2"},{"type":"object","id":3334,"cls":"Fibonacci196","alias":"f1"},{"type":"initial_fact","id":7319,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3341,"cls":"Fibonacci196","alias":"f"},{"type":"initial_fact","id":7321,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3343,"cls":"Fibonacci196","alias":"f1"},{"type":"not","id":3342,"cls":"Fibonacci196","alias":"f"},{"type":"initial_fact","id":7323,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3348,"cls":"Result195","alias":"r"},{"type":"object","id":3347,"cls":"Fibonacci195","alias":"f3"},{"type":"object","id":3346,"cls":"Fibonacci195","alias":"f2"},{"type":"object","id":3345,"cls":"Fibonacci195","alias":"f1"},{"type":"initial_fact","id":7325,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3352,"cls":"Fibonacci195","alias":"f"},{"type":"initial_fact","id":7327,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3354,"cls":"Fibonacci195","alias":"f1"},{"type":"not","id":3353,"cls":"Fibonacci195","alias":"f"},{"type":"initial_fact","id":7329,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3359,"cls":"Result194","alias":"r"},{"type":"object","id":3358,"cls":"Fibonacci194","alias":"f3"},{"type":"object","id":3357,"cls":"Fibonacci194","alias":"f2"},{"type":"object","id":3356,"cls":"Fibonacci194","alias":"f1"},{"type":"initial_fact","id":7331,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3363,"cls":"Fibonacci194","alias":"f"},{"type":"initial_fact","id":7333,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3365,"cls":"Fibonacci194","alias":"f1"},{"type":"not","id":3364,"cls":"Fibonacci194","alias":"f"},{"type":"initial_fact","id":7335,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3370,"cls":"Result193","alias":"r"},{"type":"object","id":3369,"cls":"Fibonacci193","alias":"f3"},{"type":"object","id":3368,"cls":"Fibonacci193","alias":"f2"},{"type":"object","id":3367,"cls":"Fibonacci193","alias":"f1"},{"type":"initial_fact","id":7337,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3374,"cls":"Fibonacci193","alias":"f"},{"type":"initial_fact","id":7339,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3376,"cls":"Fibonacci193","alias":"f1"},{"type":"not","id":3375,"cls":"Fibonacci193","alias":"f"},{"type":"initial_fact","id":7341,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3381,"cls":"Result192","alias":"r"},{"type":"object","id":3380,"cls":"Fibonacci192","alias":"f3"},{"type":"object","id":3379,"cls":"Fibonacci192","alias":"f2"},{"type":"object","id":3378,"cls":"Fibonacci192","alias":"f1"},{"type":"initial_fact","id":7343,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3385,"cls":"Fibonacci192","alias":"f"},{"type":"initial_fact","id":7345,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3387,"cls":"Fibonacci192","alias":"f1"},{"type":"not","id":3386,"cls":"Fibonacci192","alias":"f"},{"type":"initial_fact","id":7347,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3392,"cls":"Result191","alias":"r"},{"type":"object","id":3391,"cls":"Fibonacci191","alias":"f3"},{"type":"object","id":3390,"cls":"Fibonacci191","alias":"f2"},{"type":"object","id":3389,"cls":"Fibonacci191","alias":"f1"},{"type":"initial_fact","id":7349,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3396,"cls":"Fibonacci191","alias":"f"},{"type":"initial_fact","id":7351,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3398,"cls":"Fibonacci191","alias":"f1"},{"type":"not","id":3397,"cls":"Fibonacci191","alias":"f"},{"type":"initial_fact","id":7353,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3403,"cls":"Result190","alias":"r"},{"type":"object","id":3402,"cls":"Fibonacci190","alias":"f3"},{"type":"object","id":3401,"cls":"Fibonacci190","alias":"f2"},{"type":"object","id":3400,"cls":"Fibonacci190","alias":"f1"},{"type":"initial_fact","id":7355,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3407,"cls":"Fibonacci190","alias":"f"},{"type":"initial_fact","id":7357,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3409,"cls":"Fibonacci190","alias":"f1"},{"type":"not","id":3408,"cls":"Fibonacci190","alias":"f"},{"type":"initial_fact","id":7359,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3414,"cls":"Result189","alias":"r"},{"type":"object","id":3413,"cls":"Fibonacci189","alias":"f3"},{"type":"object","id":3412,"cls":"Fibonacci189","alias":"f2"},{"type":"object","id":3411,"cls":"Fibonacci189","alias":"f1"},{"type":"initial_fact","id":7361,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3418,"cls":"Fibonacci189","alias":"f"},{"type":"initial_fact","id":7363,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3420,"cls":"Fibonacci189","alias":"f1"},{"type":"not","id":3419,"cls":"Fibonacci189","alias":"f"},{"type":"initial_fact","id":7365,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3425,"cls":"Result188","alias":"r"},{"type":"object","id":3424,"cls":"Fibonacci188","alias":"f3"},{"type":"object","id":3423,"cls":"Fibonacci188","alias":"f2"},{"type":"object","id":3422,"cls":"Fibonacci188","alias":"f1"},{"type":"initial_fact","id":7367,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3429,"cls":"Fibonacci188","alias":"f"},{"type":"initial_fact","id":7369,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3431,"cls":"Fibonacci188","alias":"f1"},{"type":"not","id":3430,"cls":"Fibonacci188","alias":"f"},{"type":"initial_fact","id":7371,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3436,"cls":"Result187","alias":"r"},{"type":"object","id":3435,"cls":"Fibonacci187","alias":"f3"},{"type":"object","id":3434,"cls":"Fibonacci187","alias":"f2"},{"type":"object","id":3433,"cls":"Fibonacci187","alias":"f1"},{"type":"initial_fact","id":7373,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3440,"cls":"Fibonacci187","alias":"f"},{"type":"initial_fact","id":7375,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3442,"cls":"Fibonacci187","alias":"f1"},{"type":"not","id":3441,"cls":"Fibonacci187","alias":"f"},{"type":"initial_fact","id":7377,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3447,"cls":"Result186","alias":"r"},{"type":"object","id":3446,"cls":"Fibonacci186","alias":"f3"},{"type":"object","id":3445,"cls":"Fibonacci186","alias":"f2"},{"type":"object","id":3444,"cls":"Fibonacci186","alias":"f1"},{"type":"initial_fact","id":7379,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3451,"cls":"Fibonacci186","alias":"f"},{"type":"initial_fact","id":7381,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3453,"cls":"Fibonacci186","alias":"f1"},{"type":"not","id":3452,"cls":"Fibonacci186","alias":"f"},{"type":"initial_fact","id":7383,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3458,"cls":"Result185","alias":"r"},{"type":"object","id":3457,"cls":"Fibonacci185","alias":"f3"},{"type":"object","id":3456,"cls":"Fibonacci185","alias":"f2"},{"type":"object","id":3455,"cls":"Fibonacci185","alias":"f1"},{"type":"initial_fact","id":7385,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3462,"cls":"Fibonacci185","alias":"f"},{"type":"initial_fact","id":7387,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3464,"cls":"Fibonacci185","alias":"f1"},{"type":"not","id":3463,"cls":"Fibonacci185","alias":"f"},{"type":"initial_fact","id":7389,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3469,"cls":"Result184","alias":"r"},{"type":"object","id":3468,"cls":"Fibonacci184","alias":"f3"},{"type":"object","id":3467,"cls":"Fibonacci184","alias":"f2"},{"type":"object","id":3466,"cls":"Fibonacci184","alias":"f1"},{"type":"initial_fact","id":7391,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3473,"cls":"Fibonacci184","alias":"f"},{"type":"initial_fact","id":7393,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3475,"cls":"Fibonacci184","alias":"f1"},{"type":"not","id":3474,"cls":"Fibonacci184","alias":"f"},{"type":"initial_fact","id":7395,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3480,"cls":"Result183","alias":"r"},{"type":"object","id":3479,"cls":"Fibonacci183","alias":"f3"},{"type":"object","id":3478,"cls":"Fibonacci183","alias":"f2"},{"type":"object","id":3477,"cls":"Fibonacci183","alias":"f1"},{"type":"initial_fact","id":7397,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3484,"cls":"Fibonacci183","alias":"f"},{"type":"initial_fact","id":7399,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3486,"cls":"Fibonacci183","alias":"f1"},{"type":"not","id":3485,"cls":"Fibonacci183","alias":"f"},{"type":"initial_fact","id":7401,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3491,"cls":"Result182","alias":"r"},{"type":"object","id":3490,"cls":"Fibonacci182","alias":"f3"},{"type":"object","id":3489,"cls":"Fibonacci182","alias":"f2"},{"type":"object","id":3488,"cls":"Fibonacci182","alias":"f1"},{"type":"initial_fact","id":7403,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3495,"cls":"Fibonacci182","alias":"f"},{"type":"initial_fact","id":7405,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3497,"cls":"Fibonacci182","alias":"f1"},{"type":"not","id":3496,"cls":"Fibonacci182","alias":"f"},{"type":"initial_fact","id":7407,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3502,"cls":"Result181","alias":"r"},{"type":"object","id":3501,"cls":"Fibonacci181","alias":"f3"},{"type":"object","id":3500,"cls":"Fibonacci181","alias":"f2"},{"type":"object","id":3499,"cls":"Fibonacci181","alias":"f1"},{"type":"initial_fact","id":7409,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3506,"cls":"Fibonacci181","alias":"f"},{"type":"initial_fact","id":7411,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3508,"cls":"Fibonacci181","alias":"f1"},{"type":"not","id":3507,"cls":"Fibonacci181","alias":"f"},{"type":"initial_fact","id":7413,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3513,"cls":"Result180","alias":"r"},{"type":"object","id":3512,"cls":"Fibonacci180","alias":"f3"},{"type":"object","id":3511,"cls":"Fibonacci180","alias":"f2"},{"type":"object","id":3510,"cls":"Fibonacci180","alias":"f1"},{"type":"initial_fact","id":7415,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3517,"cls":"Fibonacci180","alias":"f"},{"type":"initial_fact","id":7417,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3519,"cls":"Fibonacci180","alias":"f1"},{"type":"not","id":3518,"cls":"Fibonacci180","alias":"f"},{"type":"initial_fact","id":7419,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3524,"cls":"Result179","alias":"r"},{"type":"object","id":3523,"cls":"Fibonacci179","alias":"f3"},{"type":"object","id":3522,"cls":"Fibonacci179","alias":"f2"},{"type":"object","id":3521,"cls":"Fibonacci179","alias":"f1"},{"type":"initial_fact","id":7421,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3528,"cls":"Fibonacci179","alias":"f"},{"type":"initial_fact","id":7423,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3530,"cls":"Fibonacci179","alias":"f1"},{"type":"not","id":3529,"cls":"Fibonacci179","alias":"f"},{"type":"initial_fact","id":7425,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3535,"cls":"Result178","alias":"r"},{"type":"object","id":3534,"cls":"Fibonacci178","alias":"f3"},{"type":"object","id":3533,"cls":"Fibonacci178","alias":"f2"},{"type":"object","id":3532,"cls":"Fibonacci178","alias":"f1"},{"type":"initial_fact","id":7427,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3539,"cls":"Fibonacci178","alias":"f"},{"type":"initial_fact","id":7429,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3541,"cls":"Fibonacci178","alias":"f1"},{"type":"not","id":3540,"cls":"Fibonacci178","alias":"f"},{"type":"initial_fact","id":7431,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3546,"cls":"Result177","alias":"r"},{"type":"object","id":3545,"cls":"Fibonacci177","alias":"f3"},{"type":"object","id":3544,"cls":"Fibonacci177","alias":"f2"},{"type":"object","id":3543,"cls":"Fibonacci177","alias":"f1"},{"type":"initial_fact","id":7433,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3550,"cls":"Fibonacci177","alias":"f"},{"type":"initial_fact","id":7435,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3552,"cls":"Fibonacci177","alias":"f1"},{"type":"not","id":3551,"cls":"Fibonacci177","alias":"f"},{"type":"initial_fact","id":7437,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3557,"cls":"Result176","alias":"r"},{"type":"object","id":3556,"cls":"Fibonacci176","alias":"f3"},{"type":"object","id":3555,"cls":"Fibonacci176","alias":"f2"},{"type":"object","id":3554,"cls":"Fibonacci176","alias":"f1"},{"type":"initial_fact","id":7439,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3561,"cls":"Fibonacci176","alias":"f"},{"type":"initial_fact","id":7441,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3563,"cls":"Fibonacci176","alias":"f1"},{"type":"not","id":3562,"cls":"Fibonacci176","alias":"f"},{"type":"initial_fact","id":7443,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3568,"cls":"Result175","alias":"r"},{"type":"object","id":3567,"cls":"Fibonacci175","alias":"f3"},{"type":"object","id":3566,"cls":"Fibonacci175","alias":"f2"},{"type":"object","id":3565,"cls":"Fibonacci175","alias":"f1"},{"type":"initial_fact","id":7445,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3572,"cls":"Fibonacci175","alias":"f"},{"type":"initial_fact","id":7447,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3574,"cls":"Fibonacci175","alias":"f1"},{"type":"not","id":3573,"cls":"Fibonacci175","alias":"f"},{"type":"initial_fact","id":7449,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3579,"cls":"Result174","alias":"r"},{"type":"object","id":3578,"cls":"Fibonacci174","alias":"f3"},{"type":"object","id":3577,"cls":"Fibonacci174","alias":"f2"},{"type":"object","id":3576,"cls":"Fibonacci174","alias":"f1"},{"type":"initial_fact","id":7451,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3583,"cls":"Fibonacci174","alias":"f"},{"type":"initial_fact","id":7453,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3585,"cls":"Fibonacci174","alias":"f1"},{"type":"not","id":3584,"cls":"Fibonacci174","alias":"f"},{"type":"initial_fact","id":7455,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3590,"cls":"Result173","alias":"r"},{"type":"object","id":3589,"cls":"Fibonacci173","alias":"f3"},{"type":"object","id":3588,"cls":"Fibonacci173","alias":"f2"},{"type":"object","id":3587,"cls":"Fibonacci173","alias":"f1"},{"type":"initial_fact","id":7457,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3594,"cls":"Fibonacci173","alias":"f"},{"type":"initial_fact","id":7459,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3596,"cls":"Fibonacci173","alias":"f1"},{"type":"not","id":3595,"cls":"Fibonacci173","alias":"f"},{"type":"initial_fact","id":7461,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3601,"cls":"Result172","alias":"r"},{"type":"object","id":3600,"cls":"Fibonacci172","alias":"f3"},{"type":"object","id":3599,"cls":"Fibonacci172","alias":"f2"},{"type":"object","id":3598,"cls":"Fibonacci172","alias":"f1"},{"type":"initial_fact","id":7463,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3605,"cls":"Fibonacci172","alias":"f"},{"type":"initial_fact","id":7465,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3607,"cls":"Fibonacci172","alias":"f1"},{"type":"not","id":3606,"cls":"Fibonacci172","alias":"f"},{"type":"initial_fact","id":7467,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3612,"cls":"Result171","alias":"r"},{"type":"object","id":3611,"cls":"Fibonacci171","alias":"f3"},{"type":"object","id":3610,"cls":"Fibonacci171","alias":"f2"},{"type":"object","id":3609,"cls":"Fibonacci171","alias":"f1"},{"type":"initial_fact","id":7469,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3616,"cls":"Fibonacci171","alias":"f"},{"type":"initial_fact","id":7471,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3618,"cls":"Fibonacci171","alias":"f1"},{"type":"not","id":3617,"cls":"Fibonacci171","alias":"f"},{"type":"initial_fact","id":7473,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3623,"cls":"Result170","alias":"r"},{"type":"object","id":3622,"cls":"Fibonacci170","alias":"f3"},{"type":"object","id":3621,"cls":"Fibonacci170","alias":"f2"},{"type":"object","id":3620,"cls":"Fibonacci170","alias":"f1"},{"type":"initial_fact","id":7475,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3627,"cls":"Fibonacci170","alias":"f"},{"type":"initial_fact","id":7477,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3629,"cls":"Fibonacci170","alias":"f1"},{"type":"not","id":3628,"cls":"Fibonacci170","alias":"f"},{"type":"initial_fact","id":7479,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3634,"cls":"Result169","alias":"r"},{"type":"object","id":3633,"cls":"Fibonacci169","alias":"f3"},{"type":"object","id":3632,"cls":"Fibonacci169","alias":"f2"},{"type":"object","id":3631,"cls":"Fibonacci169","alias":"f1"},{"type":"initial_fact","id":7481,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3638,"cls":"Fibonacci169","alias":"f"},{"type":"initial_fact","id":7483,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3640,"cls":"Fibonacci169","alias":"f1"},{"type":"not","id":3639,"cls":"Fibonacci169","alias":"f"},{"type":"initial_fact","id":7485,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3645,"cls":"Result168","alias":"r"},{"type":"object","id":3644,"cls":"Fibonacci168","alias":"f3"},{"type":"object","id":3643,"cls":"Fibonacci168","alias":"f2"},{"type":"object","id":3642,"cls":"Fibonacci168","alias":"f1"},{"type":"initial_fact","id":7487,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3649,"cls":"Fibonacci168","alias":"f"},{"type":"initial_fact","id":7489,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3651,"cls":"Fibonacci168","alias":"f1"},{"type":"not","id":3650,"cls":"Fibonacci168","alias":"f"},{"type":"initial_fact","id":7491,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3656,"cls":"Result167","alias":"r"},{"type":"object","id":3655,"cls":"Fibonacci167","alias":"f3"},{"type":"object","id":3654,"cls":"Fibonacci167","alias":"f2"},{"type":"object","id":3653,"cls":"Fibonacci167","alias":"f1"},{"type":"initial_fact","id":7493,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3660,"cls":"Fibonacci167","alias":"f"},{"type":"initial_fact","id":7495,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3662,"cls":"Fibonacci167","alias":"f1"},{"type":"not","id":3661,"cls":"Fibonacci167","alias":"f"},{"type":"initial_fact","id":7497,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3667,"cls":"Result166","alias":"r"},{"type":"object","id":3666,"cls":"Fibonacci166","alias":"f3"},{"type":"object","id":3665,"cls":"Fibonacci166","alias":"f2"},{"type":"object","id":3664,"cls":"Fibonacci166","alias":"f1"},{"type":"initial_fact","id":7499,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3671,"cls":"Fibonacci166","alias":"f"},{"type":"initial_fact","id":7501,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3673,"cls":"Fibonacci166","alias":"f1"},{"type":"not","id":3672,"cls":"Fibonacci166","alias":"f"},{"type":"initial_fact","id":7503,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3678,"cls":"Result165","alias":"r"},{"type":"object","id":3677,"cls":"Fibonacci165","alias":"f3"},{"type":"object","id":3676,"cls":"Fibonacci165","alias":"f2"},{"type":"object","id":3675,"cls":"Fibonacci165","alias":"f1"},{"type":"initial_fact","id":7505,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3682,"cls":"Fibonacci165","alias":"f"},{"type":"initial_fact","id":7507,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3684,"cls":"Fibonacci165","alias":"f1"},{"type":"not","id":3683,"cls":"Fibonacci165","alias":"f"},{"type":"initial_fact","id":7509,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3689,"cls":"Result164","alias":"r"},{"type":"object","id":3688,"cls":"Fibonacci164","alias":"f3"},{"type":"object","id":3687,"cls":"Fibonacci164","alias":"f2"},{"type":"object","id":3686,"cls":"Fibonacci164","alias":"f1"},{"type":"initial_fact","id":7511,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3693,"cls":"Fibonacci164","alias":"f"},{"type":"initial_fact","id":7513,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3695,"cls":"Fibonacci164","alias":"f1"},{"type":"not","id":3694,"cls":"Fibonacci164","alias":"f"},{"type":"initial_fact","id":7515,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3700,"cls":"Result163","alias":"r"},{"type":"object","id":3699,"cls":"Fibonacci163","alias":"f3"},{"type":"object","id":3698,"cls":"Fibonacci163","alias":"f2"},{"type":"object","id":3697,"cls":"Fibonacci163","alias":"f1"},{"type":"initial_fact","id":7517,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3704,"cls":"Fibonacci163","alias":"f"},{"type":"initial_fact","id":7519,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3706,"cls":"Fibonacci163","alias":"f1"},{"type":"not","id":3705,"cls":"Fibonacci163","alias":"f"},{"type":"initial_fact","id":7521,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3711,"cls":"Result162","alias":"r"},{"type":"object","id":3710,"cls":"Fibonacci162","alias":"f3"},{"type":"object","id":3709,"cls":"Fibonacci162","alias":"f2"},{"type":"object","id":3708,"cls":"Fibonacci162","alias":"f1"},{"type":"initial_fact","id":7523,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3715,"cls":"Fibonacci162","alias":"f"},{"type":"initial_fact","id":7525,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3717,"cls":"Fibonacci162","alias":"f1"},{"type":"not","id":3716,"cls":"Fibonacci162","alias":"f"},{"type":"initial_fact","id":7527,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3722,"cls":"Result161","alias":"r"},{"type":"object","id":3721,"cls":"Fibonacci161","alias":"f3"},{"type":"object","id":3720,"cls":"Fibonacci161","alias":"f2"},{"type":"object","id":3719,"cls":"Fibonacci161","alias":"f1"},{"type":"initial_fact","id":7529,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3726,"cls":"Fibonacci161","alias":"f"},{"type":"initial_fact","id":7531,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3728,"cls":"Fibonacci161","alias":"f1"},{"type":"not","id":3727,"cls":"Fibonacci161","alias":"f"},{"type":"initial_fact","id":7533,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3733,"cls":"Result160","alias":"r"},{"type":"object","id":3732,"cls":"Fibonacci160","alias":"f3"},{"type":"object","id":3731,"cls":"Fibonacci160","alias":"f2"},{"type":"object","id":3730,"cls":"Fibonacci160","alias":"f1"},{"type":"initial_fact","id":7535,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3737,"cls":"Fibonacci160","alias":"f"},{"type":"initial_fact","id":7537,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3739,"cls":"Fibonacci160","alias":"f1"},{"type":"not","id":3738,"cls":"Fibonacci160","alias":"f"},{"type":"initial_fact","id":7539,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3744,"cls":"Result159","alias":"r"},{"type":"object","id":3743,"cls":"Fibonacci159","alias":"f3"},{"type":"object","id":3742,"cls":"Fibonacci159","alias":"f2"},{"type":"object","id":3741,"cls":"Fibonacci159","alias":"f1"},{"type":"initial_fact","id":7541,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3748,"cls":"Fibonacci159","alias":"f"},{"type":"initial_fact","id":7543,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3750,"cls":"Fibonacci159","alias":"f1"},{"type":"not","id":3749,"cls":"Fibonacci159","alias":"f"},{"type":"initial_fact","id":7545,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3755,"cls":"Result158","alias":"r"},{"type":"object","id":3754,"cls":"Fibonacci158","alias":"f3"},{"type":"object","id":3753,"cls":"Fibonacci158","alias":"f2"},{"type":"object","id":3752,"cls":"Fibonacci158","alias":"f1"},{"type":"initial_fact","id":7547,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3759,"cls":"Fibonacci158","alias":"f"},{"type":"initial_fact","id":7549,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3761,"cls":"Fibonacci158","alias":"f1"},{"type":"not","id":3760,"cls":"Fibonacci158","alias":"f"},{"type":"initial_fact","id":7551,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3766,"cls":"Result157","alias":"r"},{"type":"object","id":3765,"cls":"Fibonacci157","alias":"f3"},{"type":"object","id":3764,"cls":"Fibonacci157","alias":"f2"},{"type":"object","id":3763,"cls":"Fibonacci157","alias":"f1"},{"type":"initial_fact","id":7553,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3770,"cls":"Fibonacci157","alias":"f"},{"type":"initial_fact","id":7555,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3772,"cls":"Fibonacci157","alias":"f1"},{"type":"not","id":3771,"cls":"Fibonacci157","alias":"f"},{"type":"initial_fact","id":7557,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3777,"cls":"Result156","alias":"r"},{"type":"object","id":3776,"cls":"Fibonacci156","alias":"f3"},{"type":"object","id":3775,"cls":"Fibonacci156","alias":"f2"},{"type":"object","id":3774,"cls":"Fibonacci156","alias":"f1"},{"type":"initial_fact","id":7559,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3781,"cls":"Fibonacci156","alias":"f"},{"type":"initial_fact","id":7561,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3783,"cls":"Fibonacci156","alias":"f1"},{"type":"not","id":3782,"cls":"Fibonacci156","alias":"f"},{"type":"initial_fact","id":7563,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3788,"cls":"Result155","alias":"r"},{"type":"object","id":3787,"cls":"Fibonacci155","alias":"f3"},{"type":"object","id":3786,"cls":"Fibonacci155","alias":"f2"},{"type":"object","id":3785,"cls":"Fibonacci155","alias":"f1"},{"type":"initial_fact","id":7565,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3792,"cls":"Fibonacci155","alias":"f"},{"type":"initial_fact","id":7567,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3794,"cls":"Fibonacci155","alias":"f1"},{"type":"not","id":3793,"cls":"Fibonacci155","alias":"f"},{"type":"initial_fact","id":7569,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3799,"cls":"Result154","alias":"r"},{"type":"object","id":3798,"cls":"Fibonacci154","alias":"f3"},{"type":"object","id":3797,"cls":"Fibonacci154","alias":"f2"},{"type":"object","id":3796,"cls":"Fibonacci154","alias":"f1"},{"type":"initial_fact","id":7571,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3803,"cls":"Fibonacci154","alias":"f"},{"type":"initial_fact","id":7573,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3805,"cls":"Fibonacci154","alias":"f1"},{"type":"not","id":3804,"cls":"Fibonacci154","alias":"f"},{"type":"initial_fact","id":7575,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3810,"cls":"Result153","alias":"r"},{"type":"object","id":3809,"cls":"Fibonacci153","alias":"f3"},{"type":"object","id":3808,"cls":"Fibonacci153","alias":"f2"},{"type":"object","id":3807,"cls":"Fibonacci153","alias":"f1"},{"type":"initial_fact","id":7577,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3814,"cls":"Fibonacci153","alias":"f"},{"type":"initial_fact","id":7579,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3816,"cls":"Fibonacci153","alias":"f1"},{"type":"not","id":3815,"cls":"Fibonacci153","alias":"f"},{"type":"initial_fact","id":7581,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3821,"cls":"Result152","alias":"r"},{"type":"object","id":3820,"cls":"Fibonacci152","alias":"f3"},{"type":"object","id":3819,"cls":"Fibonacci152","alias":"f2"},{"type":"object","id":3818,"cls":"Fibonacci152","alias":"f1"},{"type":"initial_fact","id":7583,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3825,"cls":"Fibonacci152","alias":"f"},{"type":"initial_fact","id":7585,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3827,"cls":"Fibonacci152","alias":"f1"},{"type":"not","id":3826,"cls":"Fibonacci152","alias":"f"},{"type":"initial_fact","id":7587,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3832,"cls":"Result151","alias":"r"},{"type":"object","id":3831,"cls":"Fibonacci151","alias":"f3"},{"type":"object","id":3830,"cls":"Fibonacci151","alias":"f2"},{"type":"object","id":3829,"cls":"Fibonacci151","alias":"f1"},{"type":"initial_fact","id":7589,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3836,"cls":"Fibonacci151","alias":"f"},{"type":"initial_fact","id":7591,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3838,"cls":"Fibonacci151","alias":"f1"},{"type":"not","id":3837,"cls":"Fibonacci151","alias":"f"},{"type":"initial_fact","id":7593,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3843,"cls":"Result150","alias":"r"},{"type":"object","id":3842,"cls":"Fibonacci150","alias":"f3"},{"type":"object","id":3841,"cls":"Fibonacci150","alias":"f2"},{"type":"object","id":3840,"cls":"Fibonacci150","alias":"f1"},{"type":"initial_fact","id":7595,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3847,"cls":"Fibonacci150","alias":"f"},{"type":"initial_fact","id":7597,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3849,"cls":"Fibonacci150","alias":"f1"},{"type":"not","id":3848,"cls":"Fibonacci150","alias":"f"},{"type":"initial_fact","id":7599,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3854,"cls":"Result149","alias":"r"},{"type":"object","id":3853,"cls":"Fibonacci149","alias":"f3"},{"type":"object","id":3852,"cls":"Fibonacci149","alias":"f2"},{"type":"object","id":3851,"cls":"Fibonacci149","alias":"f1"},{"type":"initial_fact","id":7601,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3858,"cls":"Fibonacci149","alias":"f"},{"type":"initial_fact","id":7603,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3860,"cls":"Fibonacci149","alias":"f1"},{"type":"not","id":3859,"cls":"Fibonacci149","alias":"f"},{"type":"initial_fact","id":7605,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3865,"cls":"Result148","alias":"r"},{"type":"object","id":3864,"cls":"Fibonacci148","alias":"f3"},{"type":"object","id":3863,"cls":"Fibonacci148","alias":"f2"},{"type":"object","id":3862,"cls":"Fibonacci148","alias":"f1"},{"type":"initial_fact","id":7607,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3869,"cls":"Fibonacci148","alias":"f"},{"type":"initial_fact","id":7609,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3871,"cls":"Fibonacci148","alias":"f1"},{"type":"not","id":3870,"cls":"Fibonacci148","alias":"f"},{"type":"initial_fact","id":7611,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3876,"cls":"Result147","alias":"r"},{"type":"object","id":3875,"cls":"Fibonacci147","alias":"f3"},{"type":"object","id":3874,"cls":"Fibonacci147","alias":"f2"},{"type":"object","id":3873,"cls":"Fibonacci147","alias":"f1"},{"type":"initial_fact","id":7613,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3880,"cls":"Fibonacci147","alias":"f"},{"type":"initial_fact","id":7615,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3882,"cls":"Fibonacci147","alias":"f1"},{"type":"not","id":3881,"cls":"Fibonacci147","alias":"f"},{"type":"initial_fact","id":7617,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3887,"cls":"Result146","alias":"r"},{"type":"object","id":3886,"cls":"Fibonacci146","alias":"f3"},{"type":"object","id":3885,"cls":"Fibonacci146","alias":"f2"},{"type":"object","id":3884,"cls":"Fibonacci146","alias":"f1"},{"type":"initial_fact","id":7619,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3891,"cls":"Fibonacci146","alias":"f"},{"type":"initial_fact","id":7621,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3893,"cls":"Fibonacci146","alias":"f1"},{"type":"not","id":3892,"cls":"Fibonacci146","alias":"f"},{"type":"initial_fact","id":7623,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3898,"cls":"Result145","alias":"r"},{"type":"object","id":3897,"cls":"Fibonacci145","alias":"f3"},{"type":"object","id":3896,"cls":"Fibonacci145","alias":"f2"},{"type":"object","id":3895,"cls":"Fibonacci145","alias":"f1"},{"type":"initial_fact","id":7625,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3902,"cls":"Fibonacci145","alias":"f"},{"type":"initial_fact","id":7627,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3904,"cls":"Fibonacci145","alias":"f1"},{"type":"not","id":3903,"cls":"Fibonacci145","alias":"f"},{"type":"initial_fact","id":7629,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3909,"cls":"Result144","alias":"r"},{"type":"object","id":3908,"cls":"Fibonacci144","alias":"f3"},{"type":"object","id":3907,"cls":"Fibonacci144","alias":"f2"},{"type":"object","id":3906,"cls":"Fibonacci144","alias":"f1"},{"type":"initial_fact","id":7631,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3913,"cls":"Fibonacci144","alias":"f"},{"type":"initial_fact","id":7633,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3915,"cls":"Fibonacci144","alias":"f1"},{"type":"not","id":3914,"cls":"Fibonacci144","alias":"f"},{"type":"initial_fact","id":7635,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3920,"cls":"Result143","alias":"r"},{"type":"object","id":3919,"cls":"Fibonacci143","alias":"f3"},{"type":"object","id":3918,"cls":"Fibonacci143","alias":"f2"},{"type":"object","id":3917,"cls":"Fibonacci143","alias":"f1"},{"type":"initial_fact","id":7637,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3924,"cls":"Fibonacci143","alias":"f"},{"type":"initial_fact","id":7639,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3926,"cls":"Fibonacci143","alias":"f1"},{"type":"not","id":3925,"cls":"Fibonacci143","alias":"f"},{"type":"initial_fact","id":7641,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3931,"cls":"Result142","alias":"r"},{"type":"object","id":3930,"cls":"Fibonacci142","alias":"f3"},{"type":"object","id":3929,"cls":"Fibonacci142","alias":"f2"},{"type":"object","id":3928,"cls":"Fibonacci142","alias":"f1"},{"type":"initial_fact","id":7643,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3935,"cls":"Fibonacci142","alias":"f"},{"type":"initial_fact","id":7645,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3937,"cls":"Fibonacci142","alias":"f1"},{"type":"not","id":3936,"cls":"Fibonacci142","alias":"f"},{"type":"initial_fact","id":7647,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3942,"cls":"Result141","alias":"r"},{"type":"object","id":3941,"cls":"Fibonacci141","alias":"f3"},{"type":"object","id":3940,"cls":"Fibonacci141","alias":"f2"},{"type":"object","id":3939,"cls":"Fibonacci141","alias":"f1"},{"type":"initial_fact","id":7649,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3946,"cls":"Fibonacci141","alias":"f"},{"type":"initial_fact","id":7651,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3948,"cls":"Fibonacci141","alias":"f1"},{"type":"not","id":3947,"cls":"Fibonacci141","alias":"f"},{"type":"initial_fact","id":7653,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3953,"cls":"Result140","alias":"r"},{"type":"object","id":3952,"cls":"Fibonacci140","alias":"f3"},{"type":"object","id":3951,"cls":"Fibonacci140","alias":"f2"},{"type":"object","id":3950,"cls":"Fibonacci140","alias":"f1"},{"type":"initial_fact","id":7655,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3957,"cls":"Fibonacci140","alias":"f"},{"type":"initial_fact","id":7657,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3959,"cls":"Fibonacci140","alias":"f1"},{"type":"not","id":3958,"cls":"Fibonacci140","alias":"f"},{"type":"initial_fact","id":7659,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3964,"cls":"Result139","alias":"r"},{"type":"object","id":3963,"cls":"Fibonacci139","alias":"f3"},{"type":"object","id":3962,"cls":"Fibonacci139","alias":"f2"},{"type":"object","id":3961,"cls":"Fibonacci139","alias":"f1"},{"type":"initial_fact","id":7661,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3968,"cls":"Fibonacci139","alias":"f"},{"type":"initial_fact","id":7663,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3970,"cls":"Fibonacci139","alias":"f1"},{"type":"not","id":3969,"cls":"Fibonacci139","alias":"f"},{"type":"initial_fact","id":7665,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3975,"cls":"Result138","alias":"r"},{"type":"object","id":3974,"cls":"Fibonacci138","alias":"f3"},{"type":"object","id":3973,"cls":"Fibonacci138","alias":"f2"},{"type":"object","id":3972,"cls":"Fibonacci138","alias":"f1"},{"type":"initial_fact","id":7667,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3979,"cls":"Fibonacci138","alias":"f"},{"type":"initial_fact","id":7669,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3981,"cls":"Fibonacci138","alias":"f1"},{"type":"not","id":3980,"cls":"Fibonacci138","alias":"f"},{"type":"initial_fact","id":7671,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3986,"cls":"Result137","alias":"r"},{"type":"object","id":3985,"cls":"Fibonacci137","alias":"f3"},{"type":"object","id":3984,"cls":"Fibonacci137","alias":"f2"},{"type":"object","id":3983,"cls":"Fibonacci137","alias":"f1"},{"type":"initial_fact","id":7673,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3990,"cls":"Fibonacci137","alias":"f"},{"type":"initial_fact","id":7675,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3992,"cls":"Fibonacci137","alias":"f1"},{"type":"not","id":3991,"cls":"Fibonacci137","alias":"f"},{"type":"initial_fact","id":7677,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":3997,"cls":"Result136","alias":"r"},{"type":"object","id":3996,"cls":"Fibonacci136","alias":"f3"},{"type":"object","id":3995,"cls":"Fibonacci136","alias":"f2"},{"type":"object","id":3994,"cls":"Fibonacci136","alias":"f1"},{"type":"initial_fact","id":7679,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4001,"cls":"Fibonacci136","alias":"f"},{"type":"initial_fact","id":7681,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4003,"cls":"Fibonacci136","alias":"f1"},{"type":"not","id":4002,"cls":"Fibonacci136","alias":"f"},{"type":"initial_fact","id":7683,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4008,"cls":"Result135","alias":"r"},{"type":"object","id":4007,"cls":"Fibonacci135","alias":"f3"},{"type":"object","id":4006,"cls":"Fibonacci135","alias":"f2"},{"type":"object","id":4005,"cls":"Fibonacci135","alias":"f1"},{"type":"initial_fact","id":7685,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4012,"cls":"Fibonacci135","alias":"f"},{"type":"initial_fact","id":7687,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4014,"cls":"Fibonacci135","alias":"f1"},{"type":"not","id":4013,"cls":"Fibonacci135","alias":"f"},{"type":"initial_fact","id":7689,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4019,"cls":"Result134","alias":"r"},{"type":"object","id":4018,"cls":"Fibonacci134","alias":"f3"},{"type":"object","id":4017,"cls":"Fibonacci134","alias":"f2"},{"type":"object","id":4016,"cls":"Fibonacci134","alias":"f1"},{"type":"initial_fact","id":7691,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4023,"cls":"Fibonacci134","alias":"f"},{"type":"initial_fact","id":7693,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4025,"cls":"Fibonacci134","alias":"f1"},{"type":"not","id":4024,"cls":"Fibonacci134","alias":"f"},{"type":"initial_fact","id":7695,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4030,"cls":"Result133","alias":"r"},{"type":"object","id":4029,"cls":"Fibonacci133","alias":"f3"},{"type":"object","id":4028,"cls":"Fibonacci133","alias":"f2"},{"type":"object","id":4027,"cls":"Fibonacci133","alias":"f1"},{"type":"initial_fact","id":7697,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4034,"cls":"Fibonacci133","alias":"f"},{"type":"initial_fact","id":7699,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4036,"cls":"Fibonacci133","alias":"f1"},{"type":"not","id":4035,"cls":"Fibonacci133","alias":"f"},{"type":"initial_fact","id":7701,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4041,"cls":"Result132","alias":"r"},{"type":"object","id":4040,"cls":"Fibonacci132","alias":"f3"},{"type":"object","id":4039,"cls":"Fibonacci132","alias":"f2"},{"type":"object","id":4038,"cls":"Fibonacci132","alias":"f1"},{"type":"initial_fact","id":7703,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4045,"cls":"Fibonacci132","alias":"f"},{"type":"initial_fact","id":7705,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4047,"cls":"Fibonacci132","alias":"f1"},{"type":"not","id":4046,"cls":"Fibonacci132","alias":"f"},{"type":"initial_fact","id":7707,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4052,"cls":"Result131","alias":"r"},{"type":"object","id":4051,"cls":"Fibonacci131","alias":"f3"},{"type":"object","id":4050,"cls":"Fibonacci131","alias":"f2"},{"type":"object","id":4049,"cls":"Fibonacci131","alias":"f1"},{"type":"initial_fact","id":7709,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4056,"cls":"Fibonacci131","alias":"f"},{"type":"initial_fact","id":7711,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4058,"cls":"Fibonacci131","alias":"f1"},{"type":"not","id":4057,"cls":"Fibonacci131","alias":"f"},{"type":"initial_fact","id":7713,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4063,"cls":"Result130","alias":"r"},{"type":"object","id":4062,"cls":"Fibonacci130","alias":"f3"},{"type":"object","id":4061,"cls":"Fibonacci130","alias":"f2"},{"type":"object","id":4060,"cls":"Fibonacci130","alias":"f1"},{"type":"initial_fact","id":7715,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4067,"cls":"Fibonacci130","alias":"f"},{"type":"initial_fact","id":7717,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4069,"cls":"Fibonacci130","alias":"f1"},{"type":"not","id":4068,"cls":"Fibonacci130","alias":"f"},{"type":"initial_fact","id":7719,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4074,"cls":"Result129","alias":"r"},{"type":"object","id":4073,"cls":"Fibonacci129","alias":"f3"},{"type":"object","id":4072,"cls":"Fibonacci129","alias":"f2"},{"type":"object","id":4071,"cls":"Fibonacci129","alias":"f1"},{"type":"initial_fact","id":7721,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4078,"cls":"Fibonacci129","alias":"f"},{"type":"initial_fact","id":7723,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4080,"cls":"Fibonacci129","alias":"f1"},{"type":"not","id":4079,"cls":"Fibonacci129","alias":"f"},{"type":"initial_fact","id":7725,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4085,"cls":"Result128","alias":"r"},{"type":"object","id":4084,"cls":"Fibonacci128","alias":"f3"},{"type":"object","id":4083,"cls":"Fibonacci128","alias":"f2"},{"type":"object","id":4082,"cls":"Fibonacci128","alias":"f1"},{"type":"initial_fact","id":7727,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4089,"cls":"Fibonacci128","alias":"f"},{"type":"initial_fact","id":7729,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4091,"cls":"Fibonacci128","alias":"f1"},{"type":"not","id":4090,"cls":"Fibonacci128","alias":"f"},{"type":"initial_fact","id":7731,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4096,"cls":"Result127","alias":"r"},{"type":"object","id":4095,"cls":"Fibonacci127","alias":"f3"},{"type":"object","id":4094,"cls":"Fibonacci127","alias":"f2"},{"type":"object","id":4093,"cls":"Fibonacci127","alias":"f1"},{"type":"initial_fact","id":7733,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4100,"cls":"Fibonacci127","alias":"f"},{"type":"initial_fact","id":7735,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4102,"cls":"Fibonacci127","alias":"f1"},{"type":"not","id":4101,"cls":"Fibonacci127","alias":"f"},{"type":"initial_fact","id":7737,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4107,"cls":"Result126","alias":"r"},{"type":"object","id":4106,"cls":"Fibonacci126","alias":"f3"},{"type":"object","id":4105,"cls":"Fibonacci126","alias":"f2"},{"type":"object","id":4104,"cls":"Fibonacci126","alias":"f1"},{"type":"initial_fact","id":7739,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4111,"cls":"Fibonacci126","alias":"f"},{"type":"initial_fact","id":7741,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4113,"cls":"Fibonacci126","alias":"f1"},{"type":"not","id":4112,"cls":"Fibonacci126","alias":"f"},{"type":"initial_fact","id":7743,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4118,"cls":"Result125","alias":"r"},{"type":"object","id":4117,"cls":"Fibonacci125","alias":"f3"},{"type":"object","id":4116,"cls":"Fibonacci125","alias":"f2"},{"type":"object","id":4115,"cls":"Fibonacci125","alias":"f1"},{"type":"initial_fact","id":7745,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4122,"cls":"Fibonacci125","alias":"f"},{"type":"initial_fact","id":7747,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4124,"cls":"Fibonacci125","alias":"f1"},{"type":"not","id":4123,"cls":"Fibonacci125","alias":"f"},{"type":"initial_fact","id":7749,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4129,"cls":"Result124","alias":"r"},{"type":"object","id":4128,"cls":"Fibonacci124","alias":"f3"},{"type":"object","id":4127,"cls":"Fibonacci124","alias":"f2"},{"type":"object","id":4126,"cls":"Fibonacci124","alias":"f1"},{"type":"initial_fact","id":7751,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4133,"cls":"Fibonacci124","alias":"f"},{"type":"initial_fact","id":7753,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4135,"cls":"Fibonacci124","alias":"f1"},{"type":"not","id":4134,"cls":"Fibonacci124","alias":"f"},{"type":"initial_fact","id":7755,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4140,"cls":"Result123","alias":"r"},{"type":"object","id":4139,"cls":"Fibonacci123","alias":"f3"},{"type":"object","id":4138,"cls":"Fibonacci123","alias":"f2"},{"type":"object","id":4137,"cls":"Fibonacci123","alias":"f1"},{"type":"initial_fact","id":7757,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4144,"cls":"Fibonacci123","alias":"f"},{"type":"initial_fact","id":7759,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4146,"cls":"Fibonacci123","alias":"f1"},{"type":"not","id":4145,"cls":"Fibonacci123","alias":"f"},{"type":"initial_fact","id":7761,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4151,"cls":"Result122","alias":"r"},{"type":"object","id":4150,"cls":"Fibonacci122","alias":"f3"},{"type":"object","id":4149,"cls":"Fibonacci122","alias":"f2"},{"type":"object","id":4148,"cls":"Fibonacci122","alias":"f1"},{"type":"initial_fact","id":7763,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4155,"cls":"Fibonacci122","alias":"f"},{"type":"initial_fact","id":7765,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4157,"cls":"Fibonacci122","alias":"f1"},{"type":"not","id":4156,"cls":"Fibonacci122","alias":"f"},{"type":"initial_fact","id":7767,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4162,"cls":"Result121","alias":"r"},{"type":"object","id":4161,"cls":"Fibonacci121","alias":"f3"},{"type":"object","id":4160,"cls":"Fibonacci121","alias":"f2"},{"type":"object","id":4159,"cls":"Fibonacci121","alias":"f1"},{"type":"initial_fact","id":7769,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4166,"cls":"Fibonacci121","alias":"f"},{"type":"initial_fact","id":7771,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4168,"cls":"Fibonacci121","alias":"f1"},{"type":"not","id":4167,"cls":"Fibonacci121","alias":"f"},{"type":"initial_fact","id":7773,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4173,"cls":"Result120","alias":"r"},{"type":"object","id":4172,"cls":"Fibonacci120","alias":"f3"},{"type":"object","id":4171,"cls":"Fibonacci120","alias":"f2"},{"type":"object","id":4170,"cls":"Fibonacci120","alias":"f1"},{"type":"initial_fact","id":7775,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4177,"cls":"Fibonacci120","alias":"f"},{"type":"initial_fact","id":7777,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4179,"cls":"Fibonacci120","alias":"f1"},{"type":"not","id":4178,"cls":"Fibonacci120","alias":"f"},{"type":"initial_fact","id":7779,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4184,"cls":"Result119","alias":"r"},{"type":"object","id":4183,"cls":"Fibonacci119","alias":"f3"},{"type":"object","id":4182,"cls":"Fibonacci119","alias":"f2"},{"type":"object","id":4181,"cls":"Fibonacci119","alias":"f1"},{"type":"initial_fact","id":7781,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4188,"cls":"Fibonacci119","alias":"f"},{"type":"initial_fact","id":7783,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4190,"cls":"Fibonacci119","alias":"f1"},{"type":"not","id":4189,"cls":"Fibonacci119","alias":"f"},{"type":"initial_fact","id":7785,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4195,"cls":"Result118","alias":"r"},{"type":"object","id":4194,"cls":"Fibonacci118","alias":"f3"},{"type":"object","id":4193,"cls":"Fibonacci118","alias":"f2"},{"type":"object","id":4192,"cls":"Fibonacci118","alias":"f1"},{"type":"initial_fact","id":7787,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4199,"cls":"Fibonacci118","alias":"f"},{"type":"initial_fact","id":7789,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4201,"cls":"Fibonacci118","alias":"f1"},{"type":"not","id":4200,"cls":"Fibonacci118","alias":"f"},{"type":"initial_fact","id":7791,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4206,"cls":"Result117","alias":"r"},{"type":"object","id":4205,"cls":"Fibonacci117","alias":"f3"},{"type":"object","id":4204,"cls":"Fibonacci117","alias":"f2"},{"type":"object","id":4203,"cls":"Fibonacci117","alias":"f1"},{"type":"initial_fact","id":7793,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4210,"cls":"Fibonacci117","alias":"f"},{"type":"initial_fact","id":7795,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4212,"cls":"Fibonacci117","alias":"f1"},{"type":"not","id":4211,"cls":"Fibonacci117","alias":"f"},{"type":"initial_fact","id":7797,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4217,"cls":"Result116","alias":"r"},{"type":"object","id":4216,"cls":"Fibonacci116","alias":"f3"},{"type":"object","id":4215,"cls":"Fibonacci116","alias":"f2"},{"type":"object","id":4214,"cls":"Fibonacci116","alias":"f1"},{"type":"initial_fact","id":7799,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4221,"cls":"Fibonacci116","alias":"f"},{"type":"initial_fact","id":7801,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4223,"cls":"Fibonacci116","alias":"f1"},{"type":"not","id":4222,"cls":"Fibonacci116","alias":"f"},{"type":"initial_fact","id":7803,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4228,"cls":"Result115","alias":"r"},{"type":"object","id":4227,"cls":"Fibonacci115","alias":"f3"},{"type":"object","id":4226,"cls":"Fibonacci115","alias":"f2"},{"type":"object","id":4225,"cls":"Fibonacci115","alias":"f1"},{"type":"initial_fact","id":7805,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4232,"cls":"Fibonacci115","alias":"f"},{"type":"initial_fact","id":7807,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4234,"cls":"Fibonacci115","alias":"f1"},{"type":"not","id":4233,"cls":"Fibonacci115","alias":"f"},{"type":"initial_fact","id":7809,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4239,"cls":"Result114","alias":"r"},{"type":"object","id":4238,"cls":"Fibonacci114","alias":"f3"},{"type":"object","id":4237,"cls":"Fibonacci114","alias":"f2"},{"type":"object","id":4236,"cls":"Fibonacci114","alias":"f1"},{"type":"initial_fact","id":7811,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4243,"cls":"Fibonacci114","alias":"f"},{"type":"initial_fact","id":7813,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4245,"cls":"Fibonacci114","alias":"f1"},{"type":"not","id":4244,"cls":"Fibonacci114","alias":"f"},{"type":"initial_fact","id":7815,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4250,"cls":"Result113","alias":"r"},{"type":"object","id":4249,"cls":"Fibonacci113","alias":"f3"},{"type":"object","id":4248,"cls":"Fibonacci113","alias":"f2"},{"type":"object","id":4247,"cls":"Fibonacci113","alias":"f1"},{"type":"initial_fact","id":7817,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4254,"cls":"Fibonacci113","alias":"f"},{"type":"initial_fact","id":7819,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4256,"cls":"Fibonacci113","alias":"f1"},{"type":"not","id":4255,"cls":"Fibonacci113","alias":"f"},{"type":"initial_fact","id":7821,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4261,"cls":"Result112","alias":"r"},{"type":"object","id":4260,"cls":"Fibonacci112","alias":"f3"},{"type":"object","id":4259,"cls":"Fibonacci112","alias":"f2"},{"type":"object","id":4258,"cls":"Fibonacci112","alias":"f1"},{"type":"initial_fact","id":7823,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4265,"cls":"Fibonacci112","alias":"f"},{"type":"initial_fact","id":7825,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4267,"cls":"Fibonacci112","alias":"f1"},{"type":"not","id":4266,"cls":"Fibonacci112","alias":"f"},{"type":"initial_fact","id":7827,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4272,"cls":"Result111","alias":"r"},{"type":"object","id":4271,"cls":"Fibonacci111","alias":"f3"},{"type":"object","id":4270,"cls":"Fibonacci111","alias":"f2"},{"type":"object","id":4269,"cls":"Fibonacci111","alias":"f1"},{"type":"initial_fact","id":7829,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4276,"cls":"Fibonacci111","alias":"f"},{"type":"initial_fact","id":7831,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4278,"cls":"Fibonacci111","alias":"f1"},{"type":"not","id":4277,"cls":"Fibonacci111","alias":"f"},{"type":"initial_fact","id":7833,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4283,"cls":"Result110","alias":"r"},{"type":"object","id":4282,"cls":"Fibonacci110","alias":"f3"},{"type":"object","id":4281,"cls":"Fibonacci110","alias":"f2"},{"type":"object","id":4280,"cls":"Fibonacci110","alias":"f1"},{"type":"initial_fact","id":7835,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4287,"cls":"Fibonacci110","alias":"f"},{"type":"initial_fact","id":7837,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4289,"cls":"Fibonacci110","alias":"f1"},{"type":"not","id":4288,"cls":"Fibonacci110","alias":"f"},{"type":"initial_fact","id":7839,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4294,"cls":"Result109","alias":"r"},{"type":"object","id":4293,"cls":"Fibonacci109","alias":"f3"},{"type":"object","id":4292,"cls":"Fibonacci109","alias":"f2"},{"type":"object","id":4291,"cls":"Fibonacci109","alias":"f1"},{"type":"initial_fact","id":7841,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4298,"cls":"Fibonacci109","alias":"f"},{"type":"initial_fact","id":7843,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4300,"cls":"Fibonacci109","alias":"f1"},{"type":"not","id":4299,"cls":"Fibonacci109","alias":"f"},{"type":"initial_fact","id":7845,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4305,"cls":"Result108","alias":"r"},{"type":"object","id":4304,"cls":"Fibonacci108","alias":"f3"},{"type":"object","id":4303,"cls":"Fibonacci108","alias":"f2"},{"type":"object","id":4302,"cls":"Fibonacci108","alias":"f1"},{"type":"initial_fact","id":7847,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4309,"cls":"Fibonacci108","alias":"f"},{"type":"initial_fact","id":7849,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4311,"cls":"Fibonacci108","alias":"f1"},{"type":"not","id":4310,"cls":"Fibonacci108","alias":"f"},{"type":"initial_fact","id":7851,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4316,"cls":"Result107","alias":"r"},{"type":"object","id":4315,"cls":"Fibonacci107","alias":"f3"},{"type":"object","id":4314,"cls":"Fibonacci107","alias":"f2"},{"type":"object","id":4313,"cls":"Fibonacci107","alias":"f1"},{"type":"initial_fact","id":7853,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4320,"cls":"Fibonacci107","alias":"f"},{"type":"initial_fact","id":7855,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4322,"cls":"Fibonacci107","alias":"f1"},{"type":"not","id":4321,"cls":"Fibonacci107","alias":"f"},{"type":"initial_fact","id":7857,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4327,"cls":"Result106","alias":"r"},{"type":"object","id":4326,"cls":"Fibonacci106","alias":"f3"},{"type":"object","id":4325,"cls":"Fibonacci106","alias":"f2"},{"type":"object","id":4324,"cls":"Fibonacci106","alias":"f1"},{"type":"initial_fact","id":7859,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4331,"cls":"Fibonacci106","alias":"f"},{"type":"initial_fact","id":7861,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4333,"cls":"Fibonacci106","alias":"f1"},{"type":"not","id":4332,"cls":"Fibonacci106","alias":"f"},{"type":"initial_fact","id":7863,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4338,"cls":"Result105","alias":"r"},{"type":"object","id":4337,"cls":"Fibonacci105","alias":"f3"},{"type":"object","id":4336,"cls":"Fibonacci105","alias":"f2"},{"type":"object","id":4335,"cls":"Fibonacci105","alias":"f1"},{"type":"initial_fact","id":7865,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4342,"cls":"Fibonacci105","alias":"f"},{"type":"initial_fact","id":7867,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4344,"cls":"Fibonacci105","alias":"f1"},{"type":"not","id":4343,"cls":"Fibonacci105","alias":"f"},{"type":"initial_fact","id":7869,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4349,"cls":"Result104","alias":"r"},{"type":"object","id":4348,"cls":"Fibonacci104","alias":"f3"},{"type":"object","id":4347,"cls":"Fibonacci104","alias":"f2"},{"type":"object","id":4346,"cls":"Fibonacci104","alias":"f1"},{"type":"initial_fact","id":7871,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4353,"cls":"Fibonacci104","alias":"f"},{"type":"initial_fact","id":7873,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4355,"cls":"Fibonacci104","alias":"f1"},{"type":"not","id":4354,"cls":"Fibonacci104","alias":"f"},{"type":"initial_fact","id":7875,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4360,"cls":"Result103","alias":"r"},{"type":"object","id":4359,"cls":"Fibonacci103","alias":"f3"},{"type":"object","id":4358,"cls":"Fibonacci103","alias":"f2"},{"type":"object","id":4357,"cls":"Fibonacci103","alias":"f1"},{"type":"initial_fact","id":7877,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4364,"cls":"Fibonacci103","alias":"f"},{"type":"initial_fact","id":7879,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4366,"cls":"Fibonacci103","alias":"f1"},{"type":"not","id":4365,"cls":"Fibonacci103","alias":"f"},{"type":"initial_fact","id":7881,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4371,"cls":"Result102","alias":"r"},{"type":"object","id":4370,"cls":"Fibonacci102","alias":"f3"},{"type":"object","id":4369,"cls":"Fibonacci102","alias":"f2"},{"type":"object","id":4368,"cls":"Fibonacci102","alias":"f1"},{"type":"initial_fact","id":7883,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4375,"cls":"Fibonacci102","alias":"f"},{"type":"initial_fact","id":7885,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4377,"cls":"Fibonacci102","alias":"f1"},{"type":"not","id":4376,"cls":"Fibonacci102","alias":"f"},{"type":"initial_fact","id":7887,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4382,"cls":"Result101","alias":"r"},{"type":"object","id":4381,"cls":"Fibonacci101","alias":"f3"},{"type":"object","id":4380,"cls":"Fibonacci101","alias":"f2"},{"type":"object","id":4379,"cls":"Fibonacci101","alias":"f1"},{"type":"initial_fact","id":7889,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4386,"cls":"Fibonacci101","alias":"f"},{"type":"initial_fact","id":7891,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4388,"cls":"Fibonacci101","alias":"f1"},{"type":"not","id":4387,"cls":"Fibonacci101","alias":"f"},{"type":"initial_fact","id":7893,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4393,"cls":"Result100","alias":"r"},{"type":"object","id":4392,"cls":"Fibonacci100","alias":"f3"},{"type":"object","id":4391,"cls":"Fibonacci100","alias":"f2"},{"type":"object","id":4390,"cls":"Fibonacci100","alias":"f1"},{"type":"initial_fact","id":7895,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4397,"cls":"Fibonacci100","alias":"f"},{"type":"initial_fact","id":7897,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4399,"cls":"Fibonacci100","alias":"f1"},{"type":"not","id":4398,"cls":"Fibonacci100","alias":"f"},{"type":"initial_fact","id":7899,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4404,"cls":"Result99","alias":"r"},{"type":"object","id":4403,"cls":"Fibonacci99","alias":"f3"},{"type":"object","id":4402,"cls":"Fibonacci99","alias":"f2"},{"type":"object","id":4401,"cls":"Fibonacci99","alias":"f1"},{"type":"initial_fact","id":7901,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4408,"cls":"Fibonacci99","alias":"f"},{"type":"initial_fact","id":7903,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4410,"cls":"Fibonacci99","alias":"f1"},{"type":"not","id":4409,"cls":"Fibonacci99","alias":"f"},{"type":"initial_fact","id":7905,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4415,"cls":"Result98","alias":"r"},{"type":"object","id":4414,"cls":"Fibonacci98","alias":"f3"},{"type":"object","id":4413,"cls":"Fibonacci98","alias":"f2"},{"type":"object","id":4412,"cls":"Fibonacci98","alias":"f1"},{"type":"initial_fact","id":7907,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4419,"cls":"Fibonacci98","alias":"f"},{"type":"initial_fact","id":7909,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4421,"cls":"Fibonacci98","alias":"f1"},{"type":"not","id":4420,"cls":"Fibonacci98","alias":"f"},{"type":"initial_fact","id":7911,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4426,"cls":"Result97","alias":"r"},{"type":"object","id":4425,"cls":"Fibonacci97","alias":"f3"},{"type":"object","id":4424,"cls":"Fibonacci97","alias":"f2"},{"type":"object","id":4423,"cls":"Fibonacci97","alias":"f1"},{"type":"initial_fact","id":7913,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4430,"cls":"Fibonacci97","alias":"f"},{"type":"initial_fact","id":7915,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4432,"cls":"Fibonacci97","alias":"f1"},{"type":"not","id":4431,"cls":"Fibonacci97","alias":"f"},{"type":"initial_fact","id":7917,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4437,"cls":"Result96","alias":"r"},{"type":"object","id":4436,"cls":"Fibonacci96","alias":"f3"},{"type":"object","id":4435,"cls":"Fibonacci96","alias":"f2"},{"type":"object","id":4434,"cls":"Fibonacci96","alias":"f1"},{"type":"initial_fact","id":7919,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4441,"cls":"Fibonacci96","alias":"f"},{"type":"initial_fact","id":7921,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4443,"cls":"Fibonacci96","alias":"f1"},{"type":"not","id":4442,"cls":"Fibonacci96","alias":"f"},{"type":"initial_fact","id":7923,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4448,"cls":"Result95","alias":"r"},{"type":"object","id":4447,"cls":"Fibonacci95","alias":"f3"},{"type":"object","id":4446,"cls":"Fibonacci95","alias":"f2"},{"type":"object","id":4445,"cls":"Fibonacci95","alias":"f1"},{"type":"initial_fact","id":7925,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4452,"cls":"Fibonacci95","alias":"f"},{"type":"initial_fact","id":7927,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4454,"cls":"Fibonacci95","alias":"f1"},{"type":"not","id":4453,"cls":"Fibonacci95","alias":"f"},{"type":"initial_fact","id":7929,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4459,"cls":"Result94","alias":"r"},{"type":"object","id":4458,"cls":"Fibonacci94","alias":"f3"},{"type":"object","id":4457,"cls":"Fibonacci94","alias":"f2"},{"type":"object","id":4456,"cls":"Fibonacci94","alias":"f1"},{"type":"initial_fact","id":7931,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4463,"cls":"Fibonacci94","alias":"f"},{"type":"initial_fact","id":7933,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4465,"cls":"Fibonacci94","alias":"f1"},{"type":"not","id":4464,"cls":"Fibonacci94","alias":"f"},{"type":"initial_fact","id":7935,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4470,"cls":"Result93","alias":"r"},{"type":"object","id":4469,"cls":"Fibonacci93","alias":"f3"},{"type":"object","id":4468,"cls":"Fibonacci93","alias":"f2"},{"type":"object","id":4467,"cls":"Fibonacci93","alias":"f1"},{"type":"initial_fact","id":7937,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4474,"cls":"Fibonacci93","alias":"f"},{"type":"initial_fact","id":7939,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4476,"cls":"Fibonacci93","alias":"f1"},{"type":"not","id":4475,"cls":"Fibonacci93","alias":"f"},{"type":"initial_fact","id":7941,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4481,"cls":"Result92","alias":"r"},{"type":"object","id":4480,"cls":"Fibonacci92","alias":"f3"},{"type":"object","id":4479,"cls":"Fibonacci92","alias":"f2"},{"type":"object","id":4478,"cls":"Fibonacci92","alias":"f1"},{"type":"initial_fact","id":7943,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4485,"cls":"Fibonacci92","alias":"f"},{"type":"initial_fact","id":7945,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4487,"cls":"Fibonacci92","alias":"f1"},{"type":"not","id":4486,"cls":"Fibonacci92","alias":"f"},{"type":"initial_fact","id":7947,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4492,"cls":"Result91","alias":"r"},{"type":"object","id":4491,"cls":"Fibonacci91","alias":"f3"},{"type":"object","id":4490,"cls":"Fibonacci91","alias":"f2"},{"type":"object","id":4489,"cls":"Fibonacci91","alias":"f1"},{"type":"initial_fact","id":7949,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4496,"cls":"Fibonacci91","alias":"f"},{"type":"initial_fact","id":7951,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4498,"cls":"Fibonacci91","alias":"f1"},{"type":"not","id":4497,"cls":"Fibonacci91","alias":"f"},{"type":"initial_fact","id":7953,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4503,"cls":"Result90","alias":"r"},{"type":"object","id":4502,"cls":"Fibonacci90","alias":"f3"},{"type":"object","id":4501,"cls":"Fibonacci90","alias":"f2"},{"type":"object","id":4500,"cls":"Fibonacci90","alias":"f1"},{"type":"initial_fact","id":7955,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4507,"cls":"Fibonacci90","alias":"f"},{"type":"initial_fact","id":7957,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4509,"cls":"Fibonacci90","alias":"f1"},{"type":"not","id":4508,"cls":"Fibonacci90","alias":"f"},{"type":"initial_fact","id":7959,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4514,"cls":"Result89","alias":"r"},{"type":"object","id":4513,"cls":"Fibonacci89","alias":"f3"},{"type":"object","id":4512,"cls":"Fibonacci89","alias":"f2"},{"type":"object","id":4511,"cls":"Fibonacci89","alias":"f1"},{"type":"initial_fact","id":7961,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4518,"cls":"Fibonacci89","alias":"f"},{"type":"initial_fact","id":7963,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4520,"cls":"Fibonacci89","alias":"f1"},{"type":"not","id":4519,"cls":"Fibonacci89","alias":"f"},{"type":"initial_fact","id":7965,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4525,"cls":"Result88","alias":"r"},{"type":"object","id":4524,"cls":"Fibonacci88","alias":"f3"},{"type":"object","id":4523,"cls":"Fibonacci88","alias":"f2"},{"type":"object","id":4522,"cls":"Fibonacci88","alias":"f1"},{"type":"initial_fact","id":7967,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4529,"cls":"Fibonacci88","alias":"f"},{"type":"initial_fact","id":7969,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4531,"cls":"Fibonacci88","alias":"f1"},{"type":"not","id":4530,"cls":"Fibonacci88","alias":"f"},{"type":"initial_fact","id":7971,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4536,"cls":"Result87","alias":"r"},{"type":"object","id":4535,"cls":"Fibonacci87","alias":"f3"},{"type":"object","id":4534,"cls":"Fibonacci87","alias":"f2"},{"type":"object","id":4533,"cls":"Fibonacci87","alias":"f1"},{"type":"initial_fact","id":7973,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4540,"cls":"Fibonacci87","alias":"f"},{"type":"initial_fact","id":7975,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4542,"cls":"Fibonacci87","alias":"f1"},{"type":"not","id":4541,"cls":"Fibonacci87","alias":"f"},{"type":"initial_fact","id":7977,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4547,"cls":"Result86","alias":"r"},{"type":"object","id":4546,"cls":"Fibonacci86","alias":"f3"},{"type":"object","id":4545,"cls":"Fibonacci86","alias":"f2"},{"type":"object","id":4544,"cls":"Fibonacci86","alias":"f1"},{"type":"initial_fact","id":7979,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4551,"cls":"Fibonacci86","alias":"f"},{"type":"initial_fact","id":7981,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4553,"cls":"Fibonacci86","alias":"f1"},{"type":"not","id":4552,"cls":"Fibonacci86","alias":"f"},{"type":"initial_fact","id":7983,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4558,"cls":"Result85","alias":"r"},{"type":"object","id":4557,"cls":"Fibonacci85","alias":"f3"},{"type":"object","id":4556,"cls":"Fibonacci85","alias":"f2"},{"type":"object","id":4555,"cls":"Fibonacci85","alias":"f1"},{"type":"initial_fact","id":7985,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4562,"cls":"Fibonacci85","alias":"f"},{"type":"initial_fact","id":7987,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4564,"cls":"Fibonacci85","alias":"f1"},{"type":"not","id":4563,"cls":"Fibonacci85","alias":"f"},{"type":"initial_fact","id":7989,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4569,"cls":"Result84","alias":"r"},{"type":"object","id":4568,"cls":"Fibonacci84","alias":"f3"},{"type":"object","id":4567,"cls":"Fibonacci84","alias":"f2"},{"type":"object","id":4566,"cls":"Fibonacci84","alias":"f1"},{"type":"initial_fact","id":7991,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4573,"cls":"Fibonacci84","alias":"f"},{"type":"initial_fact","id":7993,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4575,"cls":"Fibonacci84","alias":"f1"},{"type":"not","id":4574,"cls":"Fibonacci84","alias":"f"},{"type":"initial_fact","id":7995,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4580,"cls":"Result83","alias":"r"},{"type":"object","id":4579,"cls":"Fibonacci83","alias":"f3"},{"type":"object","id":4578,"cls":"Fibonacci83","alias":"f2"},{"type":"object","id":4577,"cls":"Fibonacci83","alias":"f1"},{"type":"initial_fact","id":7997,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4584,"cls":"Fibonacci83","alias":"f"},{"type":"initial_fact","id":7999,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4586,"cls":"Fibonacci83","alias":"f1"},{"type":"not","id":4585,"cls":"Fibonacci83","alias":"f"},{"type":"initial_fact","id":8001,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4591,"cls":"Result82","alias":"r"},{"type":"object","id":4590,"cls":"Fibonacci82","alias":"f3"},{"type":"object","id":4589,"cls":"Fibonacci82","alias":"f2"},{"type":"object","id":4588,"cls":"Fibonacci82","alias":"f1"},{"type":"initial_fact","id":8003,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4595,"cls":"Fibonacci82","alias":"f"},{"type":"initial_fact","id":8005,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4597,"cls":"Fibonacci82","alias":"f1"},{"type":"not","id":4596,"cls":"Fibonacci82","alias":"f"},{"type":"initial_fact","id":8007,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4602,"cls":"Result81","alias":"r"},{"type":"object","id":4601,"cls":"Fibonacci81","alias":"f3"},{"type":"object","id":4600,"cls":"Fibonacci81","alias":"f2"},{"type":"object","id":4599,"cls":"Fibonacci81","alias":"f1"},{"type":"initial_fact","id":8009,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4606,"cls":"Fibonacci81","alias":"f"},{"type":"initial_fact","id":8011,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4608,"cls":"Fibonacci81","alias":"f1"},{"type":"not","id":4607,"cls":"Fibonacci81","alias":"f"},{"type":"initial_fact","id":8013,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4613,"cls":"Result80","alias":"r"},{"type":"object","id":4612,"cls":"Fibonacci80","alias":"f3"},{"type":"object","id":4611,"cls":"Fibonacci80","alias":"f2"},{"type":"object","id":4610,"cls":"Fibonacci80","alias":"f1"},{"type":"initial_fact","id":8015,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4617,"cls":"Fibonacci80","alias":"f"},{"type":"initial_fact","id":8017,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4619,"cls":"Fibonacci80","alias":"f1"},{"type":"not","id":4618,"cls":"Fibonacci80","alias":"f"},{"type":"initial_fact","id":8019,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4624,"cls":"Result79","alias":"r"},{"type":"object","id":4623,"cls":"Fibonacci79","alias":"f3"},{"type":"object","id":4622,"cls":"Fibonacci79","alias":"f2"},{"type":"object","id":4621,"cls":"Fibonacci79","alias":"f1"},{"type":"initial_fact","id":8021,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4628,"cls":"Fibonacci79","alias":"f"},{"type":"initial_fact","id":8023,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4630,"cls":"Fibonacci79","alias":"f1"},{"type":"not","id":4629,"cls":"Fibonacci79","alias":"f"},{"type":"initial_fact","id":8025,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4635,"cls":"Result78","alias":"r"},{"type":"object","id":4634,"cls":"Fibonacci78","alias":"f3"},{"type":"object","id":4633,"cls":"Fibonacci78","alias":"f2"},{"type":"object","id":4632,"cls":"Fibonacci78","alias":"f1"},{"type":"initial_fact","id":8027,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4639,"cls":"Fibonacci78","alias":"f"},{"type":"initial_fact","id":8029,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4641,"cls":"Fibonacci78","alias":"f1"},{"type":"not","id":4640,"cls":"Fibonacci78","alias":"f"},{"type":"initial_fact","id":8031,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4646,"cls":"Result77","alias":"r"},{"type":"object","id":4645,"cls":"Fibonacci77","alias":"f3"},{"type":"object","id":4644,"cls":"Fibonacci77","alias":"f2"},{"type":"object","id":4643,"cls":"Fibonacci77","alias":"f1"},{"type":"initial_fact","id":8033,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4650,"cls":"Fibonacci77","alias":"f"},{"type":"initial_fact","id":8035,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4652,"cls":"Fibonacci77","alias":"f1"},{"type":"not","id":4651,"cls":"Fibonacci77","alias":"f"},{"type":"initial_fact","id":8037,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4657,"cls":"Result76","alias":"r"},{"type":"object","id":4656,"cls":"Fibonacci76","alias":"f3"},{"type":"object","id":4655,"cls":"Fibonacci76","alias":"f2"},{"type":"object","id":4654,"cls":"Fibonacci76","alias":"f1"},{"type":"initial_fact","id":8039,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4661,"cls":"Fibonacci76","alias":"f"},{"type":"initial_fact","id":8041,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4663,"cls":"Fibonacci76","alias":"f1"},{"type":"not","id":4662,"cls":"Fibonacci76","alias":"f"},{"type":"initial_fact","id":8043,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4668,"cls":"Result75","alias":"r"},{"type":"object","id":4667,"cls":"Fibonacci75","alias":"f3"},{"type":"object","id":4666,"cls":"Fibonacci75","alias":"f2"},{"type":"object","id":4665,"cls":"Fibonacci75","alias":"f1"},{"type":"initial_fact","id":8045,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4672,"cls":"Fibonacci75","alias":"f"},{"type":"initial_fact","id":8047,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4674,"cls":"Fibonacci75","alias":"f1"},{"type":"not","id":4673,"cls":"Fibonacci75","alias":"f"},{"type":"initial_fact","id":8049,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4679,"cls":"Result74","alias":"r"},{"type":"object","id":4678,"cls":"Fibonacci74","alias":"f3"},{"type":"object","id":4677,"cls":"Fibonacci74","alias":"f2"},{"type":"object","id":4676,"cls":"Fibonacci74","alias":"f1"},{"type":"initial_fact","id":8051,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4683,"cls":"Fibonacci74","alias":"f"},{"type":"initial_fact","id":8053,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4685,"cls":"Fibonacci74","alias":"f1"},{"type":"not","id":4684,"cls":"Fibonacci74","alias":"f"},{"type":"initial_fact","id":8055,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4690,"cls":"Result73","alias":"r"},{"type":"object","id":4689,"cls":"Fibonacci73","alias":"f3"},{"type":"object","id":4688,"cls":"Fibonacci73","alias":"f2"},{"type":"object","id":4687,"cls":"Fibonacci73","alias":"f1"},{"type":"initial_fact","id":8057,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4694,"cls":"Fibonacci73","alias":"f"},{"type":"initial_fact","id":8059,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4696,"cls":"Fibonacci73","alias":"f1"},{"type":"not","id":4695,"cls":"Fibonacci73","alias":"f"},{"type":"initial_fact","id":8061,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4701,"cls":"Result72","alias":"r"},{"type":"object","id":4700,"cls":"Fibonacci72","alias":"f3"},{"type":"object","id":4699,"cls":"Fibonacci72","alias":"f2"},{"type":"object","id":4698,"cls":"Fibonacci72","alias":"f1"},{"type":"initial_fact","id":8063,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4705,"cls":"Fibonacci72","alias":"f"},{"type":"initial_fact","id":8065,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4707,"cls":"Fibonacci72","alias":"f1"},{"type":"not","id":4706,"cls":"Fibonacci72","alias":"f"},{"type":"initial_fact","id":8067,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4712,"cls":"Result71","alias":"r"},{"type":"object","id":4711,"cls":"Fibonacci71","alias":"f3"},{"type":"object","id":4710,"cls":"Fibonacci71","alias":"f2"},{"type":"object","id":4709,"cls":"Fibonacci71","alias":"f1"},{"type":"initial_fact","id":8069,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4716,"cls":"Fibonacci71","alias":"f"},{"type":"initial_fact","id":8071,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4718,"cls":"Fibonacci71","alias":"f1"},{"type":"not","id":4717,"cls":"Fibonacci71","alias":"f"},{"type":"initial_fact","id":8073,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4723,"cls":"Result70","alias":"r"},{"type":"object","id":4722,"cls":"Fibonacci70","alias":"f3"},{"type":"object","id":4721,"cls":"Fibonacci70","alias":"f2"},{"type":"object","id":4720,"cls":"Fibonacci70","alias":"f1"},{"type":"initial_fact","id":8075,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4727,"cls":"Fibonacci70","alias":"f"},{"type":"initial_fact","id":8077,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4729,"cls":"Fibonacci70","alias":"f1"},{"type":"not","id":4728,"cls":"Fibonacci70","alias":"f"},{"type":"initial_fact","id":8079,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4734,"cls":"Result69","alias":"r"},{"type":"object","id":4733,"cls":"Fibonacci69","alias":"f3"},{"type":"object","id":4732,"cls":"Fibonacci69","alias":"f2"},{"type":"object","id":4731,"cls":"Fibonacci69","alias":"f1"},{"type":"initial_fact","id":8081,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4738,"cls":"Fibonacci69","alias":"f"},{"type":"initial_fact","id":8083,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4740,"cls":"Fibonacci69","alias":"f1"},{"type":"not","id":4739,"cls":"Fibonacci69","alias":"f"},{"type":"initial_fact","id":8085,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4745,"cls":"Result68","alias":"r"},{"type":"object","id":4744,"cls":"Fibonacci68","alias":"f3"},{"type":"object","id":4743,"cls":"Fibonacci68","alias":"f2"},{"type":"object","id":4742,"cls":"Fibonacci68","alias":"f1"},{"type":"initial_fact","id":8087,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4749,"cls":"Fibonacci68","alias":"f"},{"type":"initial_fact","id":8089,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4751,"cls":"Fibonacci68","alias":"f1"},{"type":"not","id":4750,"cls":"Fibonacci68","alias":"f"},{"type":"initial_fact","id":8091,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4756,"cls":"Result67","alias":"r"},{"type":"object","id":4755,"cls":"Fibonacci67","alias":"f3"},{"type":"object","id":4754,"cls":"Fibonacci67","alias":"f2"},{"type":"object","id":4753,"cls":"Fibonacci67","alias":"f1"},{"type":"initial_fact","id":8093,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4760,"cls":"Fibonacci67","alias":"f"},{"type":"initial_fact","id":8095,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4762,"cls":"Fibonacci67","alias":"f1"},{"type":"not","id":4761,"cls":"Fibonacci67","alias":"f"},{"type":"initial_fact","id":8097,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4767,"cls":"Result66","alias":"r"},{"type":"object","id":4766,"cls":"Fibonacci66","alias":"f3"},{"type":"object","id":4765,"cls":"Fibonacci66","alias":"f2"},{"type":"object","id":4764,"cls":"Fibonacci66","alias":"f1"},{"type":"initial_fact","id":8099,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4771,"cls":"Fibonacci66","alias":"f"},{"type":"initial_fact","id":8101,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4773,"cls":"Fibonacci66","alias":"f1"},{"type":"not","id":4772,"cls":"Fibonacci66","alias":"f"},{"type":"initial_fact","id":8103,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4778,"cls":"Result65","alias":"r"},{"type":"object","id":4777,"cls":"Fibonacci65","alias":"f3"},{"type":"object","id":4776,"cls":"Fibonacci65","alias":"f2"},{"type":"object","id":4775,"cls":"Fibonacci65","alias":"f1"},{"type":"initial_fact","id":8105,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4782,"cls":"Fibonacci65","alias":"f"},{"type":"initial_fact","id":8107,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4784,"cls":"Fibonacci65","alias":"f1"},{"type":"not","id":4783,"cls":"Fibonacci65","alias":"f"},{"type":"initial_fact","id":8109,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4789,"cls":"Result64","alias":"r"},{"type":"object","id":4788,"cls":"Fibonacci64","alias":"f3"},{"type":"object","id":4787,"cls":"Fibonacci64","alias":"f2"},{"type":"object","id":4786,"cls":"Fibonacci64","alias":"f1"},{"type":"initial_fact","id":8111,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4793,"cls":"Fibonacci64","alias":"f"},{"type":"initial_fact","id":8113,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4795,"cls":"Fibonacci64","alias":"f1"},{"type":"not","id":4794,"cls":"Fibonacci64","alias":"f"},{"type":"initial_fact","id":8115,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4800,"cls":"Result63","alias":"r"},{"type":"object","id":4799,"cls":"Fibonacci63","alias":"f3"},{"type":"object","id":4798,"cls":"Fibonacci63","alias":"f2"},{"type":"object","id":4797,"cls":"Fibonacci63","alias":"f1"},{"type":"initial_fact","id":8117,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4804,"cls":"Fibonacci63","alias":"f"},{"type":"initial_fact","id":8119,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4806,"cls":"Fibonacci63","alias":"f1"},{"type":"not","id":4805,"cls":"Fibonacci63","alias":"f"},{"type":"initial_fact","id":8121,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4811,"cls":"Result62","alias":"r"},{"type":"object","id":4810,"cls":"Fibonacci62","alias":"f3"},{"type":"object","id":4809,"cls":"Fibonacci62","alias":"f2"},{"type":"object","id":4808,"cls":"Fibonacci62","alias":"f1"},{"type":"initial_fact","id":8123,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4815,"cls":"Fibonacci62","alias":"f"},{"type":"initial_fact","id":8125,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4817,"cls":"Fibonacci62","alias":"f1"},{"type":"not","id":4816,"cls":"Fibonacci62","alias":"f"},{"type":"initial_fact","id":8127,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4822,"cls":"Result61","alias":"r"},{"type":"object","id":4821,"cls":"Fibonacci61","alias":"f3"},{"type":"object","id":4820,"cls":"Fibonacci61","alias":"f2"},{"type":"object","id":4819,"cls":"Fibonacci61","alias":"f1"},{"type":"initial_fact","id":8129,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4826,"cls":"Fibonacci61","alias":"f"},{"type":"initial_fact","id":8131,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4828,"cls":"Fibonacci61","alias":"f1"},{"type":"not","id":4827,"cls":"Fibonacci61","alias":"f"},{"type":"initial_fact","id":8133,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4833,"cls":"Result60","alias":"r"},{"type":"object","id":4832,"cls":"Fibonacci60","alias":"f3"},{"type":"object","id":4831,"cls":"Fibonacci60","alias":"f2"},{"type":"object","id":4830,"cls":"Fibonacci60","alias":"f1"},{"type":"initial_fact","id":8135,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4837,"cls":"Fibonacci60","alias":"f"},{"type":"initial_fact","id":8137,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4839,"cls":"Fibonacci60","alias":"f1"},{"type":"not","id":4838,"cls":"Fibonacci60","alias":"f"},{"type":"initial_fact","id":8139,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4844,"cls":"Result59","alias":"r"},{"type":"object","id":4843,"cls":"Fibonacci59","alias":"f3"},{"type":"object","id":4842,"cls":"Fibonacci59","alias":"f2"},{"type":"object","id":4841,"cls":"Fibonacci59","alias":"f1"},{"type":"initial_fact","id":8141,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4848,"cls":"Fibonacci59","alias":"f"},{"type":"initial_fact","id":8143,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4850,"cls":"Fibonacci59","alias":"f1"},{"type":"not","id":4849,"cls":"Fibonacci59","alias":"f"},{"type":"initial_fact","id":8145,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4855,"cls":"Result58","alias":"r"},{"type":"object","id":4854,"cls":"Fibonacci58","alias":"f3"},{"type":"object","id":4853,"cls":"Fibonacci58","alias":"f2"},{"type":"object","id":4852,"cls":"Fibonacci58","alias":"f1"},{"type":"initial_fact","id":8147,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4859,"cls":"Fibonacci58","alias":"f"},{"type":"initial_fact","id":8149,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4861,"cls":"Fibonacci58","alias":"f1"},{"type":"not","id":4860,"cls":"Fibonacci58","alias":"f"},{"type":"initial_fact","id":8151,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4866,"cls":"Result57","alias":"r"},{"type":"object","id":4865,"cls":"Fibonacci57","alias":"f3"},{"type":"object","id":4864,"cls":"Fibonacci57","alias":"f2"},{"type":"object","id":4863,"cls":"Fibonacci57","alias":"f1"},{"type":"initial_fact","id":8153,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4870,"cls":"Fibonacci57","alias":"f"},{"type":"initial_fact","id":8155,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4872,"cls":"Fibonacci57","alias":"f1"},{"type":"not","id":4871,"cls":"Fibonacci57","alias":"f"},{"type":"initial_fact","id":8157,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4877,"cls":"Result56","alias":"r"},{"type":"object","id":4876,"cls":"Fibonacci56","alias":"f3"},{"type":"object","id":4875,"cls":"Fibonacci56","alias":"f2"},{"type":"object","id":4874,"cls":"Fibonacci56","alias":"f1"},{"type":"initial_fact","id":8159,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4881,"cls":"Fibonacci56","alias":"f"},{"type":"initial_fact","id":8161,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4883,"cls":"Fibonacci56","alias":"f1"},{"type":"not","id":4882,"cls":"Fibonacci56","alias":"f"},{"type":"initial_fact","id":8163,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4888,"cls":"Result55","alias":"r"},{"type":"object","id":4887,"cls":"Fibonacci55","alias":"f3"},{"type":"object","id":4886,"cls":"Fibonacci55","alias":"f2"},{"type":"object","id":4885,"cls":"Fibonacci55","alias":"f1"},{"type":"initial_fact","id":8165,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4892,"cls":"Fibonacci55","alias":"f"},{"type":"initial_fact","id":8167,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4894,"cls":"Fibonacci55","alias":"f1"},{"type":"not","id":4893,"cls":"Fibonacci55","alias":"f"},{"type":"initial_fact","id":8169,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4899,"cls":"Result54","alias":"r"},{"type":"object","id":4898,"cls":"Fibonacci54","alias":"f3"},{"type":"object","id":4897,"cls":"Fibonacci54","alias":"f2"},{"type":"object","id":4896,"cls":"Fibonacci54","alias":"f1"},{"type":"initial_fact","id":8171,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4903,"cls":"Fibonacci54","alias":"f"},{"type":"initial_fact","id":8173,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4905,"cls":"Fibonacci54","alias":"f1"},{"type":"not","id":4904,"cls":"Fibonacci54","alias":"f"},{"type":"initial_fact","id":8175,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4910,"cls":"Result53","alias":"r"},{"type":"object","id":4909,"cls":"Fibonacci53","alias":"f3"},{"type":"object","id":4908,"cls":"Fibonacci53","alias":"f2"},{"type":"object","id":4907,"cls":"Fibonacci53","alias":"f1"},{"type":"initial_fact","id":8177,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4914,"cls":"Fibonacci53","alias":"f"},{"type":"initial_fact","id":8179,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4916,"cls":"Fibonacci53","alias":"f1"},{"type":"not","id":4915,"cls":"Fibonacci53","alias":"f"},{"type":"initial_fact","id":8181,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4921,"cls":"Result52","alias":"r"},{"type":"object","id":4920,"cls":"Fibonacci52","alias":"f3"},{"type":"object","id":4919,"cls":"Fibonacci52","alias":"f2"},{"type":"object","id":4918,"cls":"Fibonacci52","alias":"f1"},{"type":"initial_fact","id":8183,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4925,"cls":"Fibonacci52","alias":"f"},{"type":"initial_fact","id":8185,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4927,"cls":"Fibonacci52","alias":"f1"},{"type":"not","id":4926,"cls":"Fibonacci52","alias":"f"},{"type":"initial_fact","id":8187,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4932,"cls":"Result51","alias":"r"},{"type":"object","id":4931,"cls":"Fibonacci51","alias":"f3"},{"type":"object","id":4930,"cls":"Fibonacci51","alias":"f2"},{"type":"object","id":4929,"cls":"Fibonacci51","alias":"f1"},{"type":"initial_fact","id":8189,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4936,"cls":"Fibonacci51","alias":"f"},{"type":"initial_fact","id":8191,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4938,"cls":"Fibonacci51","alias":"f1"},{"type":"not","id":4937,"cls":"Fibonacci51","alias":"f"},{"type":"initial_fact","id":8193,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4943,"cls":"Result50","alias":"r"},{"type":"object","id":4942,"cls":"Fibonacci50","alias":"f3"},{"type":"object","id":4941,"cls":"Fibonacci50","alias":"f2"},{"type":"object","id":4940,"cls":"Fibonacci50","alias":"f1"},{"type":"initial_fact","id":8195,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4947,"cls":"Fibonacci50","alias":"f"},{"type":"initial_fact","id":8197,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4949,"cls":"Fibonacci50","alias":"f1"},{"type":"not","id":4948,"cls":"Fibonacci50","alias":"f"},{"type":"initial_fact","id":8199,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4954,"cls":"Result49","alias":"r"},{"type":"object","id":4953,"cls":"Fibonacci49","alias":"f3"},{"type":"object","id":4952,"cls":"Fibonacci49","alias":"f2"},{"type":"object","id":4951,"cls":"Fibonacci49","alias":"f1"},{"type":"initial_fact","id":8201,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4958,"cls":"Fibonacci49","alias":"f"},{"type":"initial_fact","id":8203,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4960,"cls":"Fibonacci49","alias":"f1"},{"type":"not","id":4959,"cls":"Fibonacci49","alias":"f"},{"type":"initial_fact","id":8205,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4965,"cls":"Result48","alias":"r"},{"type":"object","id":4964,"cls":"Fibonacci48","alias":"f3"},{"type":"object","id":4963,"cls":"Fibonacci48","alias":"f2"},{"type":"object","id":4962,"cls":"Fibonacci48","alias":"f1"},{"type":"initial_fact","id":8207,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4969,"cls":"Fibonacci48","alias":"f"},{"type":"initial_fact","id":8209,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4971,"cls":"Fibonacci48","alias":"f1"},{"type":"not","id":4970,"cls":"Fibonacci48","alias":"f"},{"type":"initial_fact","id":8211,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4976,"cls":"Result47","alias":"r"},{"type":"object","id":4975,"cls":"Fibonacci47","alias":"f3"},{"type":"object","id":4974,"cls":"Fibonacci47","alias":"f2"},{"type":"object","id":4973,"cls":"Fibonacci47","alias":"f1"},{"type":"initial_fact","id":8213,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4980,"cls":"Fibonacci47","alias":"f"},{"type":"initial_fact","id":8215,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4982,"cls":"Fibonacci47","alias":"f1"},{"type":"not","id":4981,"cls":"Fibonacci47","alias":"f"},{"type":"initial_fact","id":8217,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4987,"cls":"Result46","alias":"r"},{"type":"object","id":4986,"cls":"Fibonacci46","alias":"f3"},{"type":"object","id":4985,"cls":"Fibonacci46","alias":"f2"},{"type":"object","id":4984,"cls":"Fibonacci46","alias":"f1"},{"type":"initial_fact","id":8219,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4991,"cls":"Fibonacci46","alias":"f"},{"type":"initial_fact","id":8221,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4993,"cls":"Fibonacci46","alias":"f1"},{"type":"not","id":4992,"cls":"Fibonacci46","alias":"f"},{"type":"initial_fact","id":8223,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":4998,"cls":"Result45","alias":"r"},{"type":"object","id":4997,"cls":"Fibonacci45","alias":"f3"},{"type":"object","id":4996,"cls":"Fibonacci45","alias":"f2"},{"type":"object","id":4995,"cls":"Fibonacci45","alias":"f1"},{"type":"initial_fact","id":8225,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5002,"cls":"Fibonacci45","alias":"f"},{"type":"initial_fact","id":8227,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5004,"cls":"Fibonacci45","alias":"f1"},{"type":"not","id":5003,"cls":"Fibonacci45","alias":"f"},{"type":"initial_fact","id":8229,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5009,"cls":"Result44","alias":"r"},{"type":"object","id":5008,"cls":"Fibonacci44","alias":"f3"},{"type":"object","id":5007,"cls":"Fibonacci44","alias":"f2"},{"type":"object","id":5006,"cls":"Fibonacci44","alias":"f1"},{"type":"initial_fact","id":8231,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5013,"cls":"Fibonacci44","alias":"f"},{"type":"initial_fact","id":8233,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5015,"cls":"Fibonacci44","alias":"f1"},{"type":"not","id":5014,"cls":"Fibonacci44","alias":"f"},{"type":"initial_fact","id":8235,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5020,"cls":"Result43","alias":"r"},{"type":"object","id":5019,"cls":"Fibonacci43","alias":"f3"},{"type":"object","id":5018,"cls":"Fibonacci43","alias":"f2"},{"type":"object","id":5017,"cls":"Fibonacci43","alias":"f1"},{"type":"initial_fact","id":8237,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5024,"cls":"Fibonacci43","alias":"f"},{"type":"initial_fact","id":8239,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5026,"cls":"Fibonacci43","alias":"f1"},{"type":"not","id":5025,"cls":"Fibonacci43","alias":"f"},{"type":"initial_fact","id":8241,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5031,"cls":"Result42","alias":"r"},{"type":"object","id":5030,"cls":"Fibonacci42","alias":"f3"},{"type":"object","id":5029,"cls":"Fibonacci42","alias":"f2"},{"type":"object","id":5028,"cls":"Fibonacci42","alias":"f1"},{"type":"initial_fact","id":8243,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5035,"cls":"Fibonacci42","alias":"f"},{"type":"initial_fact","id":8245,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5037,"cls":"Fibonacci42","alias":"f1"},{"type":"not","id":5036,"cls":"Fibonacci42","alias":"f"},{"type":"initial_fact","id":8247,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5042,"cls":"Result41","alias":"r"},{"type":"object","id":5041,"cls":"Fibonacci41","alias":"f3"},{"type":"object","id":5040,"cls":"Fibonacci41","alias":"f2"},{"type":"object","id":5039,"cls":"Fibonacci41","alias":"f1"},{"type":"initial_fact","id":8249,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5046,"cls":"Fibonacci41","alias":"f"},{"type":"initial_fact","id":8251,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5048,"cls":"Fibonacci41","alias":"f1"},{"type":"not","id":5047,"cls":"Fibonacci41","alias":"f"},{"type":"initial_fact","id":8253,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5053,"cls":"Result40","alias":"r"},{"type":"object","id":5052,"cls":"Fibonacci40","alias":"f3"},{"type":"object","id":5051,"cls":"Fibonacci40","alias":"f2"},{"type":"object","id":5050,"cls":"Fibonacci40","alias":"f1"},{"type":"initial_fact","id":8255,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5057,"cls":"Fibonacci40","alias":"f"},{"type":"initial_fact","id":8257,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5059,"cls":"Fibonacci40","alias":"f1"},{"type":"not","id":5058,"cls":"Fibonacci40","alias":"f"},{"type":"initial_fact","id":8259,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5064,"cls":"Result39","alias":"r"},{"type":"object","id":5063,"cls":"Fibonacci39","alias":"f3"},{"type":"object","id":5062,"cls":"Fibonacci39","alias":"f2"},{"type":"object","id":5061,"cls":"Fibonacci39","alias":"f1"},{"type":"initial_fact","id":8261,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5068,"cls":"Fibonacci39","alias":"f"},{"type":"initial_fact","id":8263,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5070,"cls":"Fibonacci39","alias":"f1"},{"type":"not","id":5069,"cls":"Fibonacci39","alias":"f"},{"type":"initial_fact","id":8265,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5075,"cls":"Result38","alias":"r"},{"type":"object","id":5074,"cls":"Fibonacci38","alias":"f3"},{"type":"object","id":5073,"cls":"Fibonacci38","alias":"f2"},{"type":"object","id":5072,"cls":"Fibonacci38","alias":"f1"},{"type":"initial_fact","id":8267,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5079,"cls":"Fibonacci38","alias":"f"},{"type":"initial_fact","id":8269,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5081,"cls":"Fibonacci38","alias":"f1"},{"type":"not","id":5080,"cls":"Fibonacci38","alias":"f"},{"type":"initial_fact","id":8271,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5086,"cls":"Result37","alias":"r"},{"type":"object","id":5085,"cls":"Fibonacci37","alias":"f3"},{"type":"object","id":5084,"cls":"Fibonacci37","alias":"f2"},{"type":"object","id":5083,"cls":"Fibonacci37","alias":"f1"},{"type":"initial_fact","id":8273,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5090,"cls":"Fibonacci37","alias":"f"},{"type":"initial_fact","id":8275,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5092,"cls":"Fibonacci37","alias":"f1"},{"type":"not","id":5091,"cls":"Fibonacci37","alias":"f"},{"type":"initial_fact","id":8277,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5097,"cls":"Result36","alias":"r"},{"type":"object","id":5096,"cls":"Fibonacci36","alias":"f3"},{"type":"object","id":5095,"cls":"Fibonacci36","alias":"f2"},{"type":"object","id":5094,"cls":"Fibonacci36","alias":"f1"},{"type":"initial_fact","id":8279,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5101,"cls":"Fibonacci36","alias":"f"},{"type":"initial_fact","id":8281,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5103,"cls":"Fibonacci36","alias":"f1"},{"type":"not","id":5102,"cls":"Fibonacci36","alias":"f"},{"type":"initial_fact","id":8283,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5108,"cls":"Result35","alias":"r"},{"type":"object","id":5107,"cls":"Fibonacci35","alias":"f3"},{"type":"object","id":5106,"cls":"Fibonacci35","alias":"f2"},{"type":"object","id":5105,"cls":"Fibonacci35","alias":"f1"},{"type":"initial_fact","id":8285,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5112,"cls":"Fibonacci35","alias":"f"},{"type":"initial_fact","id":8287,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5114,"cls":"Fibonacci35","alias":"f1"},{"type":"not","id":5113,"cls":"Fibonacci35","alias":"f"},{"type":"initial_fact","id":8289,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5119,"cls":"Result34","alias":"r"},{"type":"object","id":5118,"cls":"Fibonacci34","alias":"f3"},{"type":"object","id":5117,"cls":"Fibonacci34","alias":"f2"},{"type":"object","id":5116,"cls":"Fibonacci34","alias":"f1"},{"type":"initial_fact","id":8291,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5123,"cls":"Fibonacci34","alias":"f"},{"type":"initial_fact","id":8293,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5125,"cls":"Fibonacci34","alias":"f1"},{"type":"not","id":5124,"cls":"Fibonacci34","alias":"f"},{"type":"initial_fact","id":8295,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5130,"cls":"Result33","alias":"r"},{"type":"object","id":5129,"cls":"Fibonacci33","alias":"f3"},{"type":"object","id":5128,"cls":"Fibonacci33","alias":"f2"},{"type":"object","id":5127,"cls":"Fibonacci33","alias":"f1"},{"type":"initial_fact","id":8297,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5134,"cls":"Fibonacci33","alias":"f"},{"type":"initial_fact","id":8299,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5136,"cls":"Fibonacci33","alias":"f1"},{"type":"not","id":5135,"cls":"Fibonacci33","alias":"f"},{"type":"initial_fact","id":8301,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5141,"cls":"Result32","alias":"r"},{"type":"object","id":5140,"cls":"Fibonacci32","alias":"f3"},{"type":"object","id":5139,"cls":"Fibonacci32","alias":"f2"},{"type":"object","id":5138,"cls":"Fibonacci32","alias":"f1"},{"type":"initial_fact","id":8303,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5145,"cls":"Fibonacci32","alias":"f"},{"type":"initial_fact","id":8305,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5147,"cls":"Fibonacci32","alias":"f1"},{"type":"not","id":5146,"cls":"Fibonacci32","alias":"f"},{"type":"initial_fact","id":8307,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5152,"cls":"Result31","alias":"r"},{"type":"object","id":5151,"cls":"Fibonacci31","alias":"f3"},{"type":"object","id":5150,"cls":"Fibonacci31","alias":"f2"},{"type":"object","id":5149,"cls":"Fibonacci31","alias":"f1"},{"type":"initial_fact","id":8309,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5156,"cls":"Fibonacci31","alias":"f"},{"type":"initial_fact","id":8311,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5158,"cls":"Fibonacci31","alias":"f1"},{"type":"not","id":5157,"cls":"Fibonacci31","alias":"f"},{"type":"initial_fact","id":8313,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5163,"cls":"Result30","alias":"r"},{"type":"object","id":5162,"cls":"Fibonacci30","alias":"f3"},{"type":"object","id":5161,"cls":"Fibonacci30","alias":"f2"},{"type":"object","id":5160,"cls":"Fibonacci30","alias":"f1"},{"type":"initial_fact","id":8315,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5167,"cls":"Fibonacci30","alias":"f"},{"type":"initial_fact","id":8317,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5169,"cls":"Fibonacci30","alias":"f1"},{"type":"not","id":5168,"cls":"Fibonacci30","alias":"f"},{"type":"initial_fact","id":8319,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5174,"cls":"Result29","alias":"r"},{"type":"object","id":5173,"cls":"Fibonacci29","alias":"f3"},{"type":"object","id":5172,"cls":"Fibonacci29","alias":"f2"},{"type":"object","id":5171,"cls":"Fibonacci29","alias":"f1"},{"type":"initial_fact","id":8321,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5178,"cls":"Fibonacci29","alias":"f"},{"type":"initial_fact","id":8323,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5180,"cls":"Fibonacci29","alias":"f1"},{"type":"not","id":5179,"cls":"Fibonacci29","alias":"f"},{"type":"initial_fact","id":8325,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5185,"cls":"Result28","alias":"r"},{"type":"object","id":5184,"cls":"Fibonacci28","alias":"f3"},{"type":"object","id":5183,"cls":"Fibonacci28","alias":"f2"},{"type":"object","id":5182,"cls":"Fibonacci28","alias":"f1"},{"type":"initial_fact","id":8327,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5189,"cls":"Fibonacci28","alias":"f"},{"type":"initial_fact","id":8329,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5191,"cls":"Fibonacci28","alias":"f1"},{"type":"not","id":5190,"cls":"Fibonacci28","alias":"f"},{"type":"initial_fact","id":8331,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5196,"cls":"Result27","alias":"r"},{"type":"object","id":5195,"cls":"Fibonacci27","alias":"f3"},{"type":"object","id":5194,"cls":"Fibonacci27","alias":"f2"},{"type":"object","id":5193,"cls":"Fibonacci27","alias":"f1"},{"type":"initial_fact","id":8333,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5200,"cls":"Fibonacci27","alias":"f"},{"type":"initial_fact","id":8335,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5202,"cls":"Fibonacci27","alias":"f1"},{"type":"not","id":5201,"cls":"Fibonacci27","alias":"f"},{"type":"initial_fact","id":8337,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5207,"cls":"Result26","alias":"r"},{"type":"object","id":5206,"cls":"Fibonacci26","alias":"f3"},{"type":"object","id":5205,"cls":"Fibonacci26","alias":"f2"},{"type":"object","id":5204,"cls":"Fibonacci26","alias":"f1"},{"type":"initial_fact","id":8339,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5211,"cls":"Fibonacci26","alias":"f"},{"type":"initial_fact","id":8341,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5213,"cls":"Fibonacci26","alias":"f1"},{"type":"not","id":5212,"cls":"Fibonacci26","alias":"f"},{"type":"initial_fact","id":8343,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5218,"cls":"Result25","alias":"r"},{"type":"object","id":5217,"cls":"Fibonacci25","alias":"f3"},{"type":"object","id":5216,"cls":"Fibonacci25","alias":"f2"},{"type":"object","id":5215,"cls":"Fibonacci25","alias":"f1"},{"type":"initial_fact","id":8345,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5222,"cls":"Fibonacci25","alias":"f"},{"type":"initial_fact","id":8347,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5224,"cls":"Fibonacci25","alias":"f1"},{"type":"not","id":5223,"cls":"Fibonacci25","alias":"f"},{"type":"initial_fact","id":8349,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5229,"cls":"Result24","alias":"r"},{"type":"object","id":5228,"cls":"Fibonacci24","alias":"f3"},{"type":"object","id":5227,"cls":"Fibonacci24","alias":"f2"},{"type":"object","id":5226,"cls":"Fibonacci24","alias":"f1"},{"type":"initial_fact","id":8351,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5233,"cls":"Fibonacci24","alias":"f"},{"type":"initial_fact","id":8353,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5235,"cls":"Fibonacci24","alias":"f1"},{"type":"not","id":5234,"cls":"Fibonacci24","alias":"f"},{"type":"initial_fact","id":8355,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5240,"cls":"Result23","alias":"r"},{"type":"object","id":5239,"cls":"Fibonacci23","alias":"f3"},{"type":"object","id":5238,"cls":"Fibonacci23","alias":"f2"},{"type":"object","id":5237,"cls":"Fibonacci23","alias":"f1"},{"type":"initial_fact","id":8357,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5244,"cls":"Fibonacci23","alias":"f"},{"type":"initial_fact","id":8359,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5246,"cls":"Fibonacci23","alias":"f1"},{"type":"not","id":5245,"cls":"Fibonacci23","alias":"f"},{"type":"initial_fact","id":8361,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5251,"cls":"Result22","alias":"r"},{"type":"object","id":5250,"cls":"Fibonacci22","alias":"f3"},{"type":"object","id":5249,"cls":"Fibonacci22","alias":"f2"},{"type":"object","id":5248,"cls":"Fibonacci22","alias":"f1"},{"type":"initial_fact","id":8363,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5255,"cls":"Fibonacci22","alias":"f"},{"type":"initial_fact","id":8365,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5257,"cls":"Fibonacci22","alias":"f1"},{"type":"not","id":5256,"cls":"Fibonacci22","alias":"f"},{"type":"initial_fact","id":8367,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5262,"cls":"Result21","alias":"r"},{"type":"object","id":5261,"cls":"Fibonacci21","alias":"f3"},{"type":"object","id":5260,"cls":"Fibonacci21","alias":"f2"},{"type":"object","id":5259,"cls":"Fibonacci21","alias":"f1"},{"type":"initial_fact","id":8369,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5266,"cls":"Fibonacci21","alias":"f"},{"type":"initial_fact","id":8371,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5268,"cls":"Fibonacci21","alias":"f1"},{"type":"not","id":5267,"cls":"Fibonacci21","alias":"f"},{"type":"initial_fact","id":8373,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5273,"cls":"Result20","alias":"r"},{"type":"object","id":5272,"cls":"Fibonacci20","alias":"f3"},{"type":"object","id":5271,"cls":"Fibonacci20","alias":"f2"},{"type":"object","id":5270,"cls":"Fibonacci20","alias":"f1"},{"type":"initial_fact","id":8375,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5277,"cls":"Fibonacci20","alias":"f"},{"type":"initial_fact","id":8377,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5279,"cls":"Fibonacci20","alias":"f1"},{"type":"not","id":5278,"cls":"Fibonacci20","alias":"f"},{"type":"initial_fact","id":8379,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5284,"cls":"Result19","alias":"r"},{"type":"object","id":5283,"cls":"Fibonacci19","alias":"f3"},{"type":"object","id":5282,"cls":"Fibonacci19","alias":"f2"},{"type":"object","id":5281,"cls":"Fibonacci19","alias":"f1"},{"type":"initial_fact","id":8381,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5288,"cls":"Fibonacci19","alias":"f"},{"type":"initial_fact","id":8383,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5290,"cls":"Fibonacci19","alias":"f1"},{"type":"not","id":5289,"cls":"Fibonacci19","alias":"f"},{"type":"initial_fact","id":8385,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5295,"cls":"Result18","alias":"r"},{"type":"object","id":5294,"cls":"Fibonacci18","alias":"f3"},{"type":"object","id":5293,"cls":"Fibonacci18","alias":"f2"},{"type":"object","id":5292,"cls":"Fibonacci18","alias":"f1"},{"type":"initial_fact","id":8387,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5299,"cls":"Fibonacci18","alias":"f"},{"type":"initial_fact","id":8389,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5301,"cls":"Fibonacci18","alias":"f1"},{"type":"not","id":5300,"cls":"Fibonacci18","alias":"f"},{"type":"initial_fact","id":8391,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5306,"cls":"Result17","alias":"r"},{"type":"object","id":5305,"cls":"Fibonacci17","alias":"f3"},{"type":"object","id":5304,"cls":"Fibonacci17","alias":"f2"},{"type":"object","id":5303,"cls":"Fibonacci17","alias":"f1"},{"type":"initial_fact","id":8393,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5310,"cls":"Fibonacci17","alias":"f"},{"type":"initial_fact","id":8395,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5312,"cls":"Fibonacci17","alias":"f1"},{"type":"not","id":5311,"cls":"Fibonacci17","alias":"f"},{"type":"initial_fact","id":8397,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5317,"cls":"Result16","alias":"r"},{"type":"object","id":5316,"cls":"Fibonacci16","alias":"f3"},{"type":"object","id":5315,"cls":"Fibonacci16","alias":"f2"},{"type":"object","id":5314,"cls":"Fibonacci16","alias":"f1"},{"type":"initial_fact","id":8399,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5321,"cls":"Fibonacci16","alias":"f"},{"type":"initial_fact","id":8401,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5323,"cls":"Fibonacci16","alias":"f1"},{"type":"not","id":5322,"cls":"Fibonacci16","alias":"f"},{"type":"initial_fact","id":8403,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5328,"cls":"Result15","alias":"r"},{"type":"object","id":5327,"cls":"Fibonacci15","alias":"f3"},{"type":"object","id":5326,"cls":"Fibonacci15","alias":"f2"},{"type":"object","id":5325,"cls":"Fibonacci15","alias":"f1"},{"type":"initial_fact","id":8405,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5332,"cls":"Fibonacci15","alias":"f"},{"type":"initial_fact","id":8407,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5334,"cls":"Fibonacci15","alias":"f1"},{"type":"not","id":5333,"cls":"Fibonacci15","alias":"f"},{"type":"initial_fact","id":8409,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5339,"cls":"Result14","alias":"r"},{"type":"object","id":5338,"cls":"Fibonacci14","alias":"f3"},{"type":"object","id":5337,"cls":"Fibonacci14","alias":"f2"},{"type":"object","id":5336,"cls":"Fibonacci14","alias":"f1"},{"type":"initial_fact","id":8411,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5343,"cls":"Fibonacci14","alias":"f"},{"type":"initial_fact","id":8413,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5345,"cls":"Fibonacci14","alias":"f1"},{"type":"not","id":5344,"cls":"Fibonacci14","alias":"f"},{"type":"initial_fact","id":8415,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5350,"cls":"Result13","alias":"r"},{"type":"object","id":5349,"cls":"Fibonacci13","alias":"f3"},{"type":"object","id":5348,"cls":"Fibonacci13","alias":"f2"},{"type":"object","id":5347,"cls":"Fibonacci13","alias":"f1"},{"type":"initial_fact","id":8417,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5354,"cls":"Fibonacci13","alias":"f"},{"type":"initial_fact","id":8419,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5356,"cls":"Fibonacci13","alias":"f1"},{"type":"not","id":5355,"cls":"Fibonacci13","alias":"f"},{"type":"initial_fact","id":8421,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5361,"cls":"Result12","alias":"r"},{"type":"object","id":5360,"cls":"Fibonacci12","alias":"f3"},{"type":"object","id":5359,"cls":"Fibonacci12","alias":"f2"},{"type":"object","id":5358,"cls":"Fibonacci12","alias":"f1"},{"type":"initial_fact","id":8423,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5365,"cls":"Fibonacci12","alias":"f"},{"type":"initial_fact","id":8425,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5367,"cls":"Fibonacci12","alias":"f1"},{"type":"not","id":5366,"cls":"Fibonacci12","alias":"f"},{"type":"initial_fact","id":8427,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5372,"cls":"Result11","alias":"r"},{"type":"object","id":5371,"cls":"Fibonacci11","alias":"f3"},{"type":"object","id":5370,"cls":"Fibonacci11","alias":"f2"},{"type":"object","id":5369,"cls":"Fibonacci11","alias":"f1"},{"type":"initial_fact","id":8429,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5376,"cls":"Fibonacci11","alias":"f"},{"type":"initial_fact","id":8431,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5378,"cls":"Fibonacci11","alias":"f1"},{"type":"not","id":5377,"cls":"Fibonacci11","alias":"f"},{"type":"initial_fact","id":8433,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5383,"cls":"Result10","alias":"r"},{"type":"object","id":5382,"cls":"Fibonacci10","alias":"f3"},{"type":"object","id":5381,"cls":"Fibonacci10","alias":"f2"},{"type":"object","id":5380,"cls":"Fibonacci10","alias":"f1"},{"type":"initial_fact","id":8435,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5387,"cls":"Fibonacci10","alias":"f"},{"type":"initial_fact","id":8437,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5389,"cls":"Fibonacci10","alias":"f1"},{"type":"not","id":5388,"cls":"Fibonacci10","alias":"f"},{"type":"initial_fact","id":8439,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5394,"cls":"Result9","alias":"r"},{"type":"object","id":5393,"cls":"Fibonacci9","alias":"f3"},{"type":"object","id":5392,"cls":"Fibonacci9","alias":"f2"},{"type":"object","id":5391,"cls":"Fibonacci9","alias":"f1"},{"type":"initial_fact","id":8441,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5398,"cls":"Fibonacci9","alias":"f"},{"type":"initial_fact","id":8443,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5400,"cls":"Fibonacci9","alias":"f1"},{"type":"not","id":5399,"cls":"Fibonacci9","alias":"f"},{"type":"initial_fact","id":8445,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5405,"cls":"Result8","alias":"r"},{"type":"object","id":5404,"cls":"Fibonacci8","alias":"f3"},{"type":"object","id":5403,"cls":"Fibonacci8","alias":"f2"},{"type":"object","id":5402,"cls":"Fibonacci8","alias":"f1"},{"type":"initial_fact","id":8447,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5409,"cls":"Fibonacci8","alias":"f"},{"type":"initial_fact","id":8449,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5411,"cls":"Fibonacci8","alias":"f1"},{"type":"not","id":5410,"cls":"Fibonacci8","alias":"f"},{"type":"initial_fact","id":8451,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5416,"cls":"Result7","alias":"r"},{"type":"object","id":5415,"cls":"Fibonacci7","alias":"f3"},{"type":"object","id":5414,"cls":"Fibonacci7","alias":"f2"},{"type":"object","id":5413,"cls":"Fibonacci7","alias":"f1"},{"type":"initial_fact","id":8453,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5420,"cls":"Fibonacci7","alias":"f"},{"type":"initial_fact","id":8455,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5422,"cls":"Fibonacci7","alias":"f1"},{"type":"not","id":5421,"cls":"Fibonacci7","alias":"f"},{"type":"initial_fact","id":8457,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5427,"cls":"Result6","alias":"r"},{"type":"object","id":5426,"cls":"Fibonacci6","alias":"f3"},{"type":"object","id":5425,"cls":"Fibonacci6","alias":"f2"},{"type":"object","id":5424,"cls":"Fibonacci6","alias":"f1"},{"type":"initial_fact","id":8459,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5431,"cls":"Fibonacci6","alias":"f"},{"type":"initial_fact","id":8461,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5433,"cls":"Fibonacci6","alias":"f1"},{"type":"not","id":5432,"cls":"Fibonacci6","alias":"f"},{"type":"initial_fact","id":8463,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5438,"cls":"Result5","alias":"r"},{"type":"object","id":5437,"cls":"Fibonacci5","alias":"f3"},{"type":"object","id":5436,"cls":"Fibonacci5","alias":"f2"},{"type":"object","id":5435,"cls":"Fibonacci5","alias":"f1"},{"type":"initial_fact","id":8465,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5442,"cls":"Fibonacci5","alias":"f"},{"type":"initial_fact","id":8467,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5444,"cls":"Fibonacci5","alias":"f1"},{"type":"not","id":5443,"cls":"Fibonacci5","alias":"f"},{"type":"initial_fact","id":8469,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5449,"cls":"Result4","alias":"r"},{"type":"object","id":5448,"cls":"Fibonacci4","alias":"f3"},{"type":"object","id":5447,"cls":"Fibonacci4","alias":"f2"},{"type":"object","id":5446,"cls":"Fibonacci4","alias":"f1"},{"type":"initial_fact","id":8471,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5453,"cls":"Fibonacci4","alias":"f"},{"type":"initial_fact","id":8473,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5455,"cls":"Fibonacci4","alias":"f1"},{"type":"not","id":5454,"cls":"Fibonacci4","alias":"f"},{"type":"initial_fact","id":8475,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5460,"cls":"Result3","alias":"r"},{"type":"object","id":5459,"cls":"Fibonacci3","alias":"f3"},{"type":"object","id":5458,"cls":"Fibonacci3","alias":"f2"},{"type":"object","id":5457,"cls":"Fibonacci3","alias":"f1"},{"type":"initial_fact","id":8477,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5464,"cls":"Fibonacci3","alias":"f"},{"type":"initial_fact","id":8479,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5466,"cls":"Fibonacci3","alias":"f1"},{"type":"not","id":5465,"cls":"Fibonacci3","alias":"f"},{"type":"initial_fact","id":8481,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5471,"cls":"Result2","alias":"r"},{"type":"object","id":5470,"cls":"Fibonacci2","alias":"f3"},{"type":"object","id":5469,"cls":"Fibonacci2","alias":"f2"},{"type":"object","id":5468,"cls":"Fibonacci2","alias":"f1"},{"type":"initial_fact","id":8483,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5475,"cls":"Fibonacci2","alias":"f"},{"type":"initial_fact","id":8485,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5477,"cls":"Fibonacci2","alias":"f1"},{"type":"not","id":5476,"cls":"Fibonacci2","alias":"f"},{"type":"initial_fact","id":8487,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5482,"cls":"Result1","alias":"r"},{"type":"object","id":5481,"cls":"Fibonacci1","alias":"f3"},{"type":"object","id":5480,"cls":"Fibonacci1","alias":"f2"},{"type":"object","id":5479,"cls":"Fibonacci1","alias":"f1"},{"type":"initial_fact","id":8489,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5486,"cls":"Fibonacci1","alias":"f"},{"type":"initial_fact","id":8491,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5488,"cls":"Fibonacci1","alias":"f1"},{"type":"not","id":5487,"cls":"Fibonacci1","alias":"f"},{"type":"initial_fact","id":8493,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5493,"cls":"Result0","alias":"r"},{"type":"object","id":5492,"cls":"Fibonacci0","alias":"f3"},{"type":"object","id":5491,"cls":"Fibonacci0","alias":"f2"},{"type":"object","id":5490,"cls":"Fibonacci0","alias":"f1"},{"type":"initial_fact","id":8495,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5497,"cls":"Fibonacci0","alias":"f"},{"type":"initial_fact","id":8497,"cls":"InitialFact","alias":"__i__"},{"type":"object","id":5499,"cls":"Fibonacci0","alias":"f1"},{"type":"not","id":5498,"cls":"Fibonacci0","alias":"f"},{"type":"initial_fact","id":8499,"cls":"InitialFact","alias":"__i__"}],"terminalNodes":[0,28,35,44,59,63,70,85,89,96,111,115,122,137,141,148,163,167,174,189,193,200,215,219,226,241,245,252,267,271,278,293,297,304,319,323,330,345,349,356,371,375,382,397,401,408,423,427,434,449,453,460,475,479,486,501,505,512,527,531,538,553,557,564,579,583,590,605,609,616,631,635,642,657,661,668,683,687,694,709,713,720,735,739,746,761,765,772,787,791,798,813,817,824,839,843,850,865,869,876,891,895,902,917,921,928,943,947,954,969,973,980,995,999,1006,1021,1025,1032,1047,1051,1058,1073,1077,1084,1099,1103,1110,1125,1129,1136,1151,1155,1162,1177,1181,1188,1203,1207,1214,1229,1233,1240,1255,1259,1266,1281,1285,1292,1307,1311,1318,1333,1337,1344,1359,1363,1370,1385,1389,1396,1411,1415,1422,1437,1441,1448,1463,1467,1474,1489,1493,1500,1515,1519,1526,1541,1545,1552,1567,1571,1578,1593,1597,1604,1619,1623,1630,1645,1649,1656,1671,1675,1682,1697,1701,1708,1723,1727,1734,1749,1753,1760,1775,1779,1786,1801,1805,1812,1827,1831,1838,1853,1857,1864,1879,1883,1890,1905,1909,1916,1931,1935,1942,1957,1961,1968,1983,1987,1994,2009,2013,2020,2035,2039,2046,2061,2065,2072,2087,2091,2098,2113,2117,2124,2139,2143,2150,2165,2169,2176,2191,2195,2202,2217,2221,2228,2243,2247,2254,2269,2273,2280,2295,2299,2306,2321,2325,2332,2347,2351,2358,2373,2377,2384,2399,2403,2410,2425,2429,2436,2451,2455,2462,2477,2481,2488,2503,2507,2514,2529,2533,2540,2555,2559,2566,2581,2585,2592,2607,2611,2618,2633,2637,2644,2659,2663,2670,2685,2689,2696,2711,2715,2722,2737,2741,2748,2763,2767,2774,2789,2793,2800,2815,2819,2826,2841,2845,2852,2867,2871,2878,2893,2897,2904,2919,2923,2930,2945,2949,2956,2971,2975,2982,2997,3001,3008,3023,3027,3034,3049,3053,3060,3075,3079,3086,3101,3105,3112,3127,3131,3138,3153,3157,3164,3179,3183,3190,3205,3209,3216,3231,3235,3242,3257,3261,3268,3283,3287,3294,3309,3313,3320,3335,3339,3346,3361,3365,3372,3387,3391,3398,3413,3417,3424,3439,3443,3450,3465,3469,3476,3491,3495,3502,3517,3521,3528,3543,3547,3554,3569,3573,3580,3595,3599,3606,3621,3625,3632,3647,3651,3658,3673,3677,3684,3699,3703,3710,3725,3729,3736,3751,3755,3762,3777,3781,3788,3803,3807,3814,3829,3833,3840,3855,3859,3866,3881,3885,3892,3907,3911,3918,3933,3937,3944,3959,3963,3970,3985,3989,3996,4011,4015,4022,4037,4041,4048,4063,4067,4074,4089,4093,4100,4115,4119,4126,4141,4145,4152,4167,4171,4178,4193,4197,4204,4219,4223,4230,4245,4249,4256,4271,4275,4282,4297,4301,4308,4323,4327,4334,4349,4353,4360,4375,4379,4386,4401,4405,4412,4427,4431,4438,4453,4457,4464,4479,4483,4490,4505,4509,4516,4531,4535,4542,4557,4561,4568,4583,4587,4594,4609,4613,4620,4635,4639,4646,4661,4665,4672,4687,4691,4698,4713,4717,4724,4739,4743,4750,4765,4769,4776,4791,4795,4802,4817,4821,4828,4843,4847,4854,4869,4873,4880,4895,4899,4906,4921,4925,4932,4947,4951,4958,4973,4977,4984,4999,5003,5010,5025,5029,5036,5051,5055,5062,5077,5081,5088,5103,5107,5114,5129,5133,5140,5155,5159,5166,5181,5185,5192,5207,5211,5218,5233,5237,5244,5259,5263,5270,5285,5289,5296,5311,5315,5322,5337,5341,5348,5363,5367,5374,5389,5393,5400,5415,5419,5426,5441,5445,5452,5467,5471,5478,5493,5497,5504,5519,5523,5530,5545,5549,5556,5571,5575,5582,5597,5601,5608,5623,5627,5634,5649,5653,5660,5675,5679,5686,5701,5705,5712,5727,5731,5738,5753,5757,5764,5779,5783,5790,5805,5809,5816,5831,5835,5842,5857,5861,5868,5883,5887,5894,5909,5913,5920,5935,5939,5946,5961,5965,5972,5987,5991,5998,6013,6017,6024,6039,6043,6050,6065,6069,6076,6091,6095,6102,6117,6121,6128,6143,6147,6154,6169,6173,6180,6195,6199,6206,6221,6225,6232,6247,6251,6258,6273,6277,6284,6299,6303,6310,6325,6329,6336,6351,6355,6362,6377,6381,6388,6403,6407,6414,6429,6433,6440,6455,6459,6466,6481,6485,6492,6507,6511,6518,6533,6537,6544,6559,6563,6570,6585,6589,6596,6611,6615,6622,6637,6641,6648,6663,6667,6674,6689,6693,6700,6715,6719,6726,6741,6745,6752,6767,6771,6778,6793,6797,6804,6819,6823,6830,6845,6849,6856,6871,6875,6882,6897,6901,6908,6923,6927,6934,6949,6953,6960,6975,6979,6986,7001,7005,7012,7027,7031,7038,7053,7057,7064,7079,7083,7090,7105,7109,7116,7131,7135,7142,7157,7161,7168,7183,7187,7194,7209,7213,7220,7235,7239,7246,7261,7265,7272,7287,7291,7298,7313,7317,7324,7339,7343,7350,7365,7369,7376,7391,7395,7402,7417,7421,7428,7443,7447,7454,7469,7473,7480,7495,7499,7506,7521,7525,7532,7547,7551,7558,7573,7577,7584,7599,7603,7610,7625,7629,7636,7651,7655,7662,7677,7681,7688,7703,7707,7714,7729,7733,7740,7755,7759,7766,7781,7785,7792,7807,7811,7818,7833,7837,7844,7859,7863,7870,7885,7889,7896,7911,7915,7922,7937,7941,7948,7963,7967,7974,7989,7993,8000,8015,8019,8026,8041,8045,8052,8067,8071,8078,8093,8097,8104,8119,8123,8130,8145,8149,8156,8171,8175,8182,8197,8201,8208,8223,8227,8234,8249,8253,8260,8275,8279,8286,8301,8305,8312,8327,8331,8338,8353,8357,8364,8379,8383,8390,8405,8409,8416,8431,8435,8442,8457,8461,8468,8483,8487,8494,8509,8513,8520,8535,8539,8546,8561,8565,8572,8587,8591,8598,8613,8617,8624,8639,8643,8650,8665,8669,8676,8691,8695,8702,8717,8721,8728,8743,8747,8754,8769,8773,8780,8795,8799,8806,8821,8825,8832,8847,8851,8858,8873,8877,8884,8899,8903,8910,8925,8929,8936,8951,8955,8962,8977,8981,8988,9003,9007,9014,9029,9033,9040,9055,9059,9066,9081,9085,9092,9107,9111,9118,9133,9137,9144,9159,9163,9170,9185,9189,9196,9211,9215,9222,9237,9241,9248,9263,9267,9274,9289,9293,9300,9315,9319,9326,9341,9345,9352,9367,9371,9378,9393,9397,9404,9419,9423,9430,9445,9449,9456,9471,9475,9482,9497,9501,9508,9523,9527,9534,9549,9553,9560,9575,9579,9586,9601,9605,9612,9627,9631,9638,9653,9657,9664,9679,9683,9690,9705,9709,9716,9731,9735,9742,9757,9761,9768,9783,9787,9794,9809,9813,9820,9835,9839,9846,9861,9865,9872,9887,9891,9898,9913,9917,9924,9939,9943,9950,9965,9969,9976,9991,9995,10002,10017,10021,10028,10043,10047,10054,10069,10073,10080,10095,10099,10106,10121,10125,10132,10147,10151,10158,10173,10177,10184,10199,10203,10210,10225,10229,10236,10251,10255,10262,10277,10281,10288,10303,10307,10314,10329,10333,10340,10355,10359,10366,10381,10385,10392,10407,10411,10418,10433,10437,10444,10459,10463,10470,10485,10489,10496,10511,10515,10522,10537,10541,10548,10563,10567,10574,10589,10593,10600,10615,10619,10626,10641,10645,10652,10667,10671,10678,10693,10697,10704,10719,10723,10730,10745,10749,10756,10771,10775,10782,10797,10801,10808,10823,10827,10834,10849,10853,10860,10875,10879,10886,10901,10905,10912,10927,10931,10938,10953,10957,10964,10979,10983,10990,11005,11009,11016,11031,11035,11042,11057,11061,11068,11083,11087,11094,11109,11113,11120,11135,11139,11146,11161,11165,11172,11187,11191,11198,11213,11217,11224,11239,11243,11250,11265,11269,11276,11291,11295,11302,11317,11321,11328,11343,11347,11354,11369,11373,11380,11395,11399,11406,11421,11425,11432,11447,11451,11458,11473,11477,11484,11499,11503,11510,11525,11529,11536,11551,11555,11562,11577,11581,11588,11603,11607,11614,11629,11633,11640,11655,11659,11666,11681,11685,11692,11707,11711,11718,11733,11737,11744,11759,11763,11770,11785,11789,11796,11811,11815,11822,11837,11841,11848,11863,11867,11874,11889,11893,11900,11915,11919,11926,11941,11945,11952,11967,11971,11978,11993,11997,12004,12019,12023,12030,12045,12049,12056,12071,12075,12082,12097,12101,12108,12123,12127,12134,12149,12153,12160,12175,12179,12186,12201,12205,12212,12227,12231,12238,12253,12257,12264,12279,12283,12290,12305,12309,12316,12331,12335,12342,12357,12361,12368,12383,12387,12394,12409,12413,12420,12435,12439,12446,12461,12465,12472,12487,12491,12498,12513,12517,12524,12539,12543,12550,12565,12569,12576,12591,12595,12602,12617,12621,12628,12643,12647,12654,12669,12673,12680,12695,12699,12706,12721,12725,12732,12747,12751,12758,12773,12777,12784,12799,12803,12810,12825,12829,12836,12851,12855,12862,12877,12881,12888,12903,12907,12914,12929,12933,12940,12955,12959,12966,12981,12985,12992,13007,13011],"joinNodes":[1,6,12,18,29,36,45,48,52,55,60,64,71,74,78,81,86,90,97,100,104,107,112,116,123,126,130,133,138,142,149,152,156,159,164,168,175,178,182,185,190,194,201,204,208,211,216,220,227,230,234,237,242,246,253,256,260,263,268,272,279,282,286,289,294,298,305,308,312,315,320,324,331,334,338,341,346,350,357,360,364,367,372,376,383,386,390,393,398,402,409,412,416,419,424,428,435,438,442,445,450,454,461,464,468,471,476,480,487,490,494,497,502,506,513,516,520,523,528,532,539,542,546,549,554,558,565,568,572,575,580,584,591,594,598,601,606,610,617,620,624,627,632,636,643,646,650,653,658,662,669,672,676,679,684,688,695,698,702,705,710,714,721,724,728,731,736,740,747,750,754,757,762,766,773,776,780,783,788,792,799,802,806,809,814,818,825,828,832,835,840,844,851,854,858,861,866,870,877,880,884,887,892,896,903,906,910,913,918,922,929,932,936,939,944,948,955,958,962,965,970,974,981,984,988,991,996,1000,1007,1010,1014,1017,1022,1026,1033,1036,1040,1043,1048,1052,1059,1062,1066,1069,1074,1078,1085,1088,1092,1095,1100,1104,1111,1114,1118,1121,1126,1130,1137,1140,1144,1147,1152,1156,1163,1166,1170,1173,1178,1182,1189,1192,1196,1199,1204,1208,1215,1218,1222,1225,1230,1234,1241,1244,1248,1251,1256,1260,1267,1270,1274,1277,1282,1286,1293,1296,1300,1303,1308,1312,1319,1322,1326,1329,1334,1338,1345,1348,1352,1355,1360,1364,1371,1374,1378,1381,1386,1390,1397,1400,1404,1407,1412,1416,1423,1426,1430,1433,1438,1442,1449,1452,1456,1459,1464,1468,1475,1478,1482,1485,1490,1494,1501,1504,1508,1511,1516,1520,1527,1530,1534,1537,1542,1546,1553,1556,1560,1563,1568,1572,1579,1582,1586,1589,1594,1598,1605,1608,1612,1615,1620,1624,1631,1634,1638,1641,1646,1650,1657,1660,1664,1667,1672,1676,1683,1686,1690,1693,1698,1702,1709,1712,1716,1719,1724,1728,1735,1738,1742,1745,1750,1754,1761,1764,1768,1771,1776,1780,1787,1790,1794,1797,1802,1806,1813,1816,1820,1823,1828,1832,1839,1842,1846,1849,1854,1858,1865,1868,1872,1875,1880,1884,1891,1894,1898,1901,1906,1910,1917,1920,1924,1927,1932,1936,1943,1946,1950,1953,1958,1962,1969,1972,1976,1979,1984,1988,1995,1998,2002,2005,2010,2014,2021,2024,2028,2031,2036,2040,2047,2050,2054,2057,2062,2066,2073,2076,2080,2083,2088,2092,2099,2102,2106,2109,2114,2118,2125,2128,2132,2135,2140,2144,2151,2154,2158,2161,2166,2170,2177,2180,2184,2187,2192,2196,2203,2206,2210,2213,2218,2222,2229,2232,2236,2239,2244,2248,2255,2258,2262,2265,2270,2274,2281,2284,2288,2291,2296,2300,2307,2310,2314,2317,2322,2326,2333,2336,2340,2343,2348,2352,2359,2362,2366,2369,2374,2378,2385,2388,2392,2395,2400,2404,2411,2414,2418,2421,2426,2430,2437,2440,2444,2447,2452,2456,2463,2466,2470,2473,2478,2482,2489,2492,2496,2499,2504,2508,2515,2518,2522,2525,2530,2534,2541,2544,2548,2551,2556,2560,2567,2570,2574,2577,2582,2586,2593,2596,2600,2603,2608,2612,2619,2622,2626,2629,2634,2638,2645,2648,2652,2655,2660,2664,2671,2674,2678,2681,2686,2690,2697,2700,2704,2707,2712,2716,2723,2726,2730,2733,2738,2742,2749,2752,2756,2759,2764,2768,2775,2778,2782,2785,2790,2794,2801,2804,2808,2811,2816,2820,2827,2830,2834,2837,2842,2846,2853,2856,2860,2863,2868,2872,2879,2882,2886,2889,2894,2898,2905,2908,2912,2915,2920,2924,2931,2934,2938,2941,2946,2950,2957,2960,2964,2967,2972,2976,2983,2986,2990,2993,2998,3002,3009,3012,3016,3019,3024,3028,3035,3038,3042,3045,3050,3054,3061,3064,3068,3071,3076,3080,3087,3090,3094,3097,3102,3106,3113,3116,3120,3123,3128,3132,3139,3142,3146,3149,3154,3158,3165,3168,3172,3175,3180,3184,3191,3194,3198,3201,3206,3210,3217,3220,3224,3227,3232,3236,3243,3246,3250,3253,3258,3262,3269,3272,3276,3279,3284,3288,3295,3298,3302,3305,3310,3314,3321,3324,3328,3331,3336,3340,3347,3350,3354,3357,3362,3366,3373,3376,3380,3383,3388,3392,3399,3402,3406,3409,3414,3418,3425,3428,3432,3435,3440,3444,3451,3454,3458,3461,3466,3470,3477,3480,3484,3487,3492,3496,3503,3506,3510,3513,3518,3522,3529,3532,3536,3539,3544,3548,3555,3558,3562,3565,3570,3574,3581,3584,3588,3591,3596,3600,3607,3610,3614,3617,3622,3626,3633,3636,3640,3643,3648,3652,3659,3662,3666,3669,3674,3678,3685,3688,3692,3695,3700,3704,3711,3714,3718,3721,3726,3730,3737,3740,3744,3747,3752,3756,3763,3766,3770,3773,3778,3782,3789,3792,3796,3799,3804,3808,3815,3818,3822,3825,3830,3834,3841,3844,3848,3851,3856,3860,3867,3870,3874,3877,3882,3886,3893,3896,3900,3903,3908,3912,3919,3922,3926,3929,3934,3938,3945,3948,3952,3955,3960,3964,3971,3974,3978,3981,3986,3990,3997,4000,4004,4007,4012,4016,4023,4026,4030,4033,4038,4042,4049,4052,4056,4059,4064,4068,4075,4078,4082,4085,4090,4094,4101,4104,4108,4111,4116,4120,4127,4130,4134,4137,4142,4146,4153,4156,4160,4163,4168,4172,4179,4182,4186,4189,4194,4198,4205,4208,4212,4215,4220,4224,4231,4234,4238,4241,4246,4250,4257,4260,4264,4267,4272,4276,4283,4286,4290,4293,4298,4302,4309,4312,4316,4319,4324,4328,4335,4338,4342,4345,4350,4354,4361,4364,4368,4371,4376,4380,4387,4390,4394,4397,4402,4406,4413,4416,4420,4423,4428,4432,4439,4442,4446,4449,4454,4458,4465,4468,4472,4475,4480,4484,4491,4494,4498,4501,4506,4510,4517,4520,4524,4527,4532,4536,4543,4546,4550,4553,4558,4562,4569,4572,4576,4579,4584,4588,4595,4598,4602,4605,4610,4614,4621,4624,4628,4631,4636,4640,4647,4650,4654,4657,4662,4666,4673,4676,4680,4683,4688,4692,4699,4702,4706,4709,4714,4718,4725,4728,4732,4735,4740,4744,4751,4754,4758,4761,4766,4770,4777,4780,4784,4787,4792,4796,4803,4806,4810,4813,4818,4822,4829,4832,4836,4839,4844,4848,4855,4858,4862,4865,4870,4874,4881,4884,4888,4891,4896,4900,4907,4910,4914,4917,4922,4926,4933,4936,4940,4943,4948,4952,4959,4962,4966,4969,4974,4978,4985,4988,4992,4995,5000,5004,5011,5014,5018,5021,5026,5030,5037,5040,5044,5047,5052,5056,5063,5066,5070,5073,5078,5082,5089,5092,5096,5099,5104,5108,5115,5118,5122,5125,5130,5134,5141,5144,5148,5151,5156,5160,5167,5170,5174,5177,5182,5186,5193,5196,5200,5203,5208,5212,5219,5222,5226,5229,5234,5238,5245,5248,5252,5255,5260,5264,5271,5274,5278,5281,5286,5290,5297,5300,5304,5307,5312,5316,5323,5326,5330,5333,5338,5342,5349,5352,5356,5359,5364,5368,5375,5378,5382,5385,5390,5394,5401,5404,5408,5411,5416,5420,5427,5430,5434,5437,5442,5446,5453,5456,5460,5463,5468,5472,5479,5482,5486,5489,5494,5498,5505,5508,5512,5515,5520,5524,5531,5534,5538,5541,5546,5550,5557,5560,5564,5567,5572,5576,5583,5586,5590,5593,5598,5602,5609,5612,5616,5619,5624,5628,5635,5638,5642,5645,5650,5654,5661,5664,5668,5671,5676,5680,5687,5690,5694,5697,5702,5706,5713,5716,5720,5723,5728,5732,5739,5742,5746,5749,5754,5758,5765,5768,5772,5775,5780,5784,5791,5794,5798,5801,5806,5810,5817,5820,5824,5827,5832,5836,5843,5846,5850,5853,5858,5862,5869,5872,5876,5879,5884,5888,5895,5898,5902,5905,5910,5914,5921,5924,5928,5931,5936,5940,5947,5950,5954,5957,5962,5966,5973,5976,5980,5983,5988,5992,5999,6002,6006,6009,6014,6018,6025,6028,6032,6035,6040,6044,6051,6054,6058,6061,6066,6070,6077,6080,6084,6087,6092,6096,6103,6106,6110,6113,6118,6122,6129,6132,6136,6139,6144,6148,6155,6158,6162,6165,6170,6174,6181,6184,6188,6191,6196,6200,6207,6210,6214,6217,6222,6226,6233,6236,6240,6243,6248,6252,6259,6262,6266,6269,6274,6278,6285,6288,6292,6295,6300,6304,6311,6314,6318,6321,6326,6330,6337,6340,6344,6347,6352,6356,6363,6366,6370,6373,6378,6382,6389,6392,6396,6399,6404,6408,6415,6418,6422,6425,6430,6434,6441,6444,6448,6451,6456,6460,6467,6470,6474,6477,6482,6486,6493,6496,6500,6503,6508,6512,6519,6522,6526,6529,6534,6538,6545,6548,6552,6555,6560,6564,6571,6574,6578,6581,6586,6590,6597,6600,6604,6607,6612,6616,6623,6626,6630,6633,6638,6642,6649,6652,6656,6659,6664,6668,6675,6678,6682,6685,6690,6694,6701,6704,6708,6711,6716,6720,6727,6730,6734,6737,6742,6746,6753,6756,6760,6763,6768,6772,6779,6782,6786,6789,6794,6798,6805,6808,6812,6815,6820,6824,6831,6834,6838,6841,6846,6850,6857,6860,6864,6867,6872,6876,6883,6886,6890,6893,6898,6902,6909,6912,6916,6919,6924,6928,6935,6938,6942,6945,6950,6954,6961,6964,6968,6971,6976,6980,6987,6990,6994,6997,7002,7006,7013,7016,7020,7023,7028,7032,7039,7042,7046,7049,7054,7058,7065,7068,7072,7075,7080,7084,7091,7094,7098,7101,7106,7110,7117,7120,7124,7127,7132,7136,7143,7146,7150,7153,7158,7162,7169,7172,7176,7179,7184,7188,7195,7198,7202,7205,7210,7214,7221,7224,7228,7231,7236,7240,7247,7250,7254,7257,7262,7266,7273,7276,7280,7283,7288,7292,7299,7302,7306,7309,7314,7318,7325,7328,7332,7335,7340,7344,7351,7354,7358,7361,7366,7370,7377,7380,7384,7387,7392,7396,7403,7406,7410,7413,7418,7422,7429,7432,7436,7439,7444,7448,7455,7458,7462,7465,7470,7474,7481,7484,7488,7491,7496,7500,7507,7510,7514,7517,7522,7526,7533,7536,7540,7543,7548,7552,7559,7562,7566,7569,7574,7578,7585,7588,7592,7595,7600,7604,7611,7614,7618,7621,7626,7630,7637,7640,7644,7647,7652,7656,7663,7666,7670,7673,7678,7682,7689,7692,7696,7699,7704,7708,7715,7718,7722,7725,7730,7734,7741,7744,7748,7751,7756,7760,7767,7770,7774,7777,7782,7786,7793,7796,7800,7803,7808,7812,7819,7822,7826,7829,7834,7838,7845,7848,7852,7855,7860,7864,7871,7874,7878,7881,7886,7890,7897,7900,7904,7907,7912,7916,7923,7926,7930,7933,7938,7942,7949,7952,7956,7959,7964,7968,7975,7978,7982,7985,7990,7994,8001,8004,8008,8011,8016,8020,8027,8030,8034,8037,8042,8046,8053,8056,8060,8063,8068,8072,8079,8082,8086,8089,8094,8098,8105,8108,8112,8115,8120,8124,8131,8134,8138,8141,8146,8150,8157,8160,8164,8167,8172,8176,8183,8186,8190,8193,8198,8202,8209,8212,8216,8219,8224,8228,8235,8238,8242,8245,8250,8254,8261,8264,8268,8271,8276,8280,8287,8290,8294,8297,8302,8306,8313,8316,8320,8323,8328,8332,8339,8342,8346,8349,8354,8358,8365,8368,8372,8375,8380,8384,8391,8394,8398,8401,8406,8410,8417,8420,8424,8427,8432,8436,8443,8446,8450,8453,8458,8462,8469,8472,8476,8479,8484,8488,8495,8498,8502,8505,8510,8514,8521,8524,8528,8531,8536,8540,8547,8550,8554,8557,8562,8566,8573,8576,8580,8583,8588,8592,8599,8602,8606,8609,8614,8618,8625,8628,8632,8635,8640,8644,8651,8654,8658,8661,8666,8670,8677,8680,8684,8687,8692,8696,8703,8706,8710,8713,8718,8722,8729,8732,8736,8739,8744,8748,8755,8758,8762,8765,8770,8774,8781,8784,8788,8791,8796,8800,8807,8810,8814,8817,8822,8826,8833,8836,8840,8843,8848,8852,8859,8862,8866,8869,8874,8878,8885,8888,8892,8895,8900,8904,8911,8914,8918,8921,8926,8930,8937,8940,8944,8947,8952,8956,8963,8966,8970,8973,8978,8982,8989,8992,8996,8999,9004,9008,9015,9018,9022,9025,9030,9034,9041,9044,9048,9051,9056,9060,9067,9070,9074,9077,9082,9086,9093,9096,9100,9103,9108,9112,9119,9122,9126,9129,9134,9138,9145,9148,9152,9155,9160,9164,9171,9174,9178,9181,9186,9190,9197,9200,9204,9207,9212,9216,9223,9226,9230,9233,9238,9242,9249,9252,9256,9259,9264,9268,9275,9278,9282,9285,9290,9294,9301,9304,9308,9311,9316,9320,9327,9330,9334,9337,9342,9346,9353,9356,9360,9363,9368,9372,9379,9382,9386,9389,9394,9398,9405,9408,9412,9415,9420,9424,9431,9434,9438,9441,9446,9450,9457,9460,9464,9467,9472,9476,9483,9486,9490,9493,9498,9502,9509,9512,9516,9519,9524,9528,9535,9538,9542,9545,9550,9554,9561,9564,9568,9571,9576,9580,9587,9590,9594,9597,9602,9606,9613,9616,9620,9623,9628,9632,9639,9642,9646,9649,9654,9658,9665,9668,9672,9675,9680,9684,9691,9694,9698,9701,9706,9710,9717,9720,9724,9727,9732,9736,9743,9746,9750,9753,9758,9762,9769,9772,9776,9779,9784,9788,9795,9798,9802,9805,9810,9814,9821,9824,9828,9831,9836,9840,9847,9850,9854,9857,9862,9866,9873,9876,9880,9883,9888,9892,9899,9902,9906,9909,9914,9918,9925,9928,9932,9935,9940,9944,9951,9954,9958,9961,9966,9970,9977,9980,9984,9987,9992,9996,10003,10006,10010,10013,10018,10022,10029,10032,10036,10039,10044,10048,10055,10058,10062,10065,10070,10074,10081,10084,10088,10091,10096,10100,10107,10110,10114,10117,10122,10126,10133,10136,10140,10143,10148,10152,10159,10162,10166,10169,10174,10178,10185,10188,10192,10195,10200,10204,10211,10214,10218,10221,10226,10230,10237,10240,10244,10247,10252,10256,10263,10266,10270,10273,10278,10282,10289,10292,10296,10299,10304,10308,10315,10318,10322,10325,10330,10334,10341,10344,10348,10351,10356,10360,10367,10370,10374,10377,10382,10386,10393,10396,10400,10403,10408,10412,10419,10422,10426,10429,10434,10438,10445,10448,10452,10455,10460,10464,10471,10474,10478,10481,10486,10490,10497,10500,10504,10507,10512,10516,10523,10526,10530,10533,10538,10542,10549,10552,10556,10559,10564,10568,10575,10578,10582,10585,10590,10594,10601,10604,10608,10611,10616,10620,10627,10630,10634,10637,10642,10646,10653,10656,10660,10663,10668,10672,10679,10682,10686,10689,10694,10698,10705,10708,10712,10715,10720,10724,10731,10734,10738,10741,10746,10750,10757,10760,10764,10767,10772,10776,10783,10786,10790,10793,10798,10802,10809,10812,10816,10819,10824,10828,10835,10838,10842,10845,10850,10854,10861,10864,10868,10871,10876,10880,10887,10890,10894,10897,10902,10906,10913,10916,10920,10923,10928,10932,10939,10942,10946,10949,10954,10958,10965,10968,10972,10975,10980,10984,10991,10994,10998,11001,11006,11010,11017,11020,11024,11027,11032,11036,11043,11046,11050,11053,11058,11062,11069,11072,11076,11079,11084,11088,11095,11098,11102,11105,11110,11114,11121,11124,11128,11131,11136,11140,11147,11150,11154,11157,11162,11166,11173,11176,11180,11183,11188,11192,11199,11202,11206,11209,11214,11218,11225,11228,11232,11235,11240,11244,11251,11254,11258,11261,11266,11270,11277,11280,11284,11287,11292,11296,11303,11306,11310,11313,11318,11322,11329,11332,11336,11339,11344,11348,11355,11358,11362,11365,11370,11374,11381,11384,11388,11391,11396,11400,11407,11410,11414,11417,11422,11426,11433,11436,11440,11443,11448,11452,11459,11462,11466,11469,11474,11478,11485,11488,11492,11495,11500,11504,11511,11514,11518,11521,11526,11530,11537,11540,11544,11547,11552,11556,11563,11566,11570,11573,11578,11582,11589,11592,11596,11599,11604,11608,11615,11618,11622,11625,11630,11634,11641,11644,11648,11651,11656,11660,11667,11670,11674,11677,11682,11686,11693,11696,11700,11703,11708,11712,11719,11722,11726,11729,11734,11738,11745,11748,11752,11755,11760,11764,11771,11774,11778,11781,11786,11790,11797,11800,11804,11807,11812,11816,11823,11826,11830,11833,11838,11842,11849,11852,11856,11859,11864,11868,11875,11878,11882,11885,11890,11894,11901,11904,11908,11911,11916,11920,11927,11930,11934,11937,11942,11946,11953,11956,11960,11963,11968,11972,11979,11982,11986,11989,11994,11998,12005,12008,12012,12015,12020,12024,12031,12034,12038,12041,12046,12050,12057,12060,12064,12067,12072,12076,12083,12086,12090,12093,12098,12102,12109,12112,12116,12119,12124,12128,12135,12138,12142,12145,12150,12154,12161,12164,12168,12171,12176,12180,12187,12190,12194,12197,12202,12206,12213,12216,12220,12223,12228,12232,12239,12242,12246,12249,12254,12258,12265,12268,12272,12275,12280,12284,12291,12294,12298,12301,12306,12310,12317,12320,12324,12327,12332,12336,12343,12346,12350,12353,12358,12362,12369,12372,12376,12379,12384,12388,12395,12398,12402,12405,12410,12414,12421,12424,12428,12431,12436,12440,12447,12450,12454,12457,12462,12466,12473,12476,12480,12483,12488,12492,12499,12502,12506,12509,12514,12518,12525,12528,12532,12535,12540,12544,12551,12554,12558,12561,12566,12570,12577,12580,12584,12587,12592,12596,12603,12606,12610,12613,12618,12622,12629,12632,12636,12639,12644,12648,12655,12658,12662,12665,12670,12674,12681,12684,12688,12691,12696,12700,12707,12710,12714,12717,12722,12726,12733,12736,12740,12743,12748,12752,12759,12762,12766,12769,12774,12778,12785,12788,12792,12795,12800,12804,12811,12814,12818,12821,12826,12830,12837,12840,12844,12847,12852,12856,12863,12866,12870,12873,12878,12882,12889,12892,12896,12899,12904,12908,12915,12918,12922,12925,12930,12934,12941,12944,12948,12951,12956,12960,12967,12970,12974,12977,12982,12986,12993,12996,13000,13003,13008,13012],"alphaNodes":[3,4,9,10,14,15,16,20,21,22,25,26,30,31,32,37,41],"typeNodes":[2,8,24,46,50,72,76,98,102,124,128,150,154,176,180,202,206,228,232,254,258,280,284,306,310,332,336,358,362,384,388,410,414,436,440,462,466,488,492,514,518,540,544,566,570,592,596,618,622,644,648,670,674,696,700,722,726,748,752,774,778,800,804,826,830,852,856,878,882,904,908,930,934,956,960,982,986,1008,1012,1034,1038,1060,1064,1086,1090,1112,1116,1138,1142,1164,1168,1190,1194,1216,1220,1242,1246,1268,1272,1294,1298,1320,1324,1346,1350,1372,1376,1398,1402,1424,1428,1450,1454,1476,1480,1502,1506,1528,1532,1554,1558,1580,1584,1606,1610,1632,1636,1658,1662,1684,1688,1710,1714,1736,1740,1762,1766,1788,1792,1814,1818,1840,1844,1866,1870,1892,1896,1918,1922,1944,1948,1970,1974,1996,2000,2022,2026,2048,2052,2074,2078,2100,2104,2126,2130,2152,2156,2178,2182,2204,2208,2230,2234,2256,2260,2282,2286,2308,2312,2334,2338,2360,2364,2386,2390,2412,2416,2438,2442,2464,2468,2490,2494,2516,2520,2542,2546,2568,2572,2594,2598,2620,2624,2646,2650,2672,2676,2698,2702,2724,2728,2750,2754,2776,2780,2802,2806,2828,2832,2854,2858,2880,2884,2906,2910,2932,2936,2958,2962,2984,2988,3010,3014,3036,3040,3062,3066,3088,3092,3114,3118,3140,3144,3166,3170,3192,3196,3218,3222,3244,3248,3270,3274,3296,3300,3322,3326,3348,3352,3374,3378,3400,3404,3426,3430,3452,3456,3478,3482,3504,3508,3530,3534,3556,3560,3582,3586,3608,3612,3634,3638,3660,3664,3686,3690,3712,3716,3738,3742,3764,3768,3790,3794,3816,3820,3842,3846,3868,3872,3894,3898,3920,3924,3946,3950,3972,3976,3998,4002,4024,4028,4050,4054,4076,4080,4102,4106,4128,4132,4154,4158,4180,4184,4206,4210,4232,4236,4258,4262,4284,4288,4310,4314,4336,4340,4362,4366,4388,4392,4414,4418,4440,4444,4466,4470,4492,4496,4518,4522,4544,4548,4570,4574,4596,4600,4622,4626,4648,4652,4674,4678,4700,4704,4726,4730,4752,4756,4778,4782,4804,4808,4830,4834,4856,4860,4882,4886,4908,4912,4934,4938,4960,4964,4986,4990,5012,5016,5038,5042,5064,5068,5090,5094,5116,5120,5142,5146,5168,5172,5194,5198,5220,5224,5246,5250,5272,5276,5298,5302,5324,5328,5350,5354,5376,5380,5402,5406,5428,5432,5454,5458,5480,5484,5506,5510,5532,5536,5558,5562,5584,5588,5610,5614,5636,5640,5662,5666,5688,5692,5714,5718,5740,5744,5766,5770,5792,5796,5818,5822,5844,5848,5870,5874,5896,5900,5922,5926,5948,5952,5974,5978,6000,6004,6026,6030,6052,6056,6078,6082,6104,6108,6130,6134,6156,6160,6182,6186,6208,6212,6234,6238,6260,6264,6286,6290,6312,6316,6338,6342,6364,6368,6390,6394,6416,6420,6442,6446,6468,6472,6494,6498,6520,6524,6546,6550,6572,6576,6598,6602,6624,6628,6650,6654,6676,6680,6702,6706,6728,6732,6754,6758,6780,6784,6806,6810,6832,6836,6858,6862,6884,6888,6910,6914,6936,6940,6962,6966,6988,6992,7014,7018,7040,7044,7066,7070,7092,7096,7118,7122,7144,7148,7170,7174,7196,7200,7222,7226,7248,7252,7274,7278,7300,7304,7326,7330,7352,7356,7378,7382,7404,7408,7430,7434,7456,7460,7482,7486,7508,7512,7534,7538,7560,7564,7586,7590,7612,7616,7638,7642,7664,7668,7690,7694,7716,7720,7742,7746,7768,7772,7794,7798,7820,7824,7846,7850,7872,7876,7898,7902,7924,7928,7950,7954,7976,7980,8002,8006,8028,8032,8054,8058,8080,8084,8106,8110,8132,8136,8158,8162,8184,8188,8210,8214,8236,8240,8262,8266,8288,8292,8314,8318,8340,8344,8366,8370,8392,8396,8418,8422,8444,8448,8470,8474,8496,8500,8522,8526,8548,8552,8574,8578,8600,8604,8626,8630,8652,8656,8678,8682,8704,8708,8730,8734,8756,8760,8782,8786,8808,8812,8834,8838,8860,8864,8886,8890,8912,8916,8938,8942,8964,8968,8990,8994,9016,9020,9042,9046,9068,9072,9094,9098,9120,9124,9146,9150,9172,9176,9198,9202,9224,9228,9250,9254,9276,9280,9302,9306,9328,9332,9354,9358,9380,9384,9406,9410,9432,9436,9458,9462,9484,9488,9510,9514,9536,9540,9562,9566,9588,9592,9614,9618,9640,9644,9666,9670,9692,9696,9718,9722,9744,9748,9770,9774,9796,9800,9822,9826,9848,9852,9874,9878,9900,9904,9926,9930,9952,9956,9978,9982,10004,10008,10030,10034,10056,10060,10082,10086,10108,10112,10134,10138,10160,10164,10186,10190,10212,10216,10238,10242,10264,10268,10290,10294,10316,10320,10342,10346,10368,10372,10394,10398,10420,10424,10446,10450,10472,10476,10498,10502,10524,10528,10550,10554,10576,10580,10602,10606,10628,10632,10654,10658,10680,10684,10706,10710,10732,10736,10758,10762,10784,10788,10810,10814,10836,10840,10862,10866,10888,10892,10914,10918,10940,10944,10966,10970,10992,10996,11018,11022,11044,11048,11070,11074,11096,11100,11122,11126,11148,11152,11174,11178,11200,11204,11226,11230,11252,11256,11278,11282,11304,11308,11330,11334,11356,11360,11382,11386,11408,11412,11434,11438,11460,11464,11486,11490,11512,11516,11538,11542,11564,11568,11590,11594,11616,11620,11642,11646,11668,11672,11694,11698,11720,11724,11746,11750,11772,11776,11798,11802,11824,11828,11850,11854,11876,11880,11902,11906,11928,11932,11954,11958,11980,11984,12006,12010,12032,12036,12058,12062,12084,12088,12110,12114,12136,12140,12162,12166,12188,12192,12214,12218,12240,12244,12266,12270,12292,12296,12318,12322,12344,12348,12370,12374,12396,12400,12422,12426,12448,12452,12474,12478,12500,12504,12526,12530,12552,12556,12578,12582,12604,12608,12630,12634,12656,12660,12682,12686,12708,12712,12734,12738,12760,12764,12786,12790,12812,12816,12838,12842,12864,12868,12890,12894,12916,12920,12942,12946,12968,12972,12994,12998],"bucket":{"counter":0,"recency":0}}}